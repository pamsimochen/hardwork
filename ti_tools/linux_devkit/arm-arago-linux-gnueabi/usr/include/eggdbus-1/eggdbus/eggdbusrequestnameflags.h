
/* File: eggdbusrequestnameflags.h
 *
 * Generated by eggdbus-binding-tool 0.6. Do not edit.
 */

#ifndef __EGG_DBUS_REQUEST_NAME_FLAGS_H
#define __EGG_DBUS_REQUEST_NAME_FLAGS_H

#include <glib-object.h>
#include <gio/gio.h>
#include <eggdbus/eggdbustypes.h>
#include <eggdbus/eggdbusinterface.h>
#include <eggdbus/eggdbusinterfaceproxy.h>
#include <eggdbus/eggdbusrequestnameflags.h>
#include <eggdbus/eggdbusrequestnamereply.h>
#include <eggdbus/eggdbusreleasenamereply.h>
#include <eggdbus/eggdbusstartservicebynamereply.h>

G_BEGIN_DECLS

GType egg_dbus_request_name_flags_get_type (void) G_GNUC_CONST;

#define EGG_DBUS_TYPE_REQUEST_NAME_FLAGS (egg_dbus_request_name_flags_get_type ())

/**
 * EggDBusRequestNameFlags:
 * @EGG_DBUS_REQUEST_NAME_FLAGS_NONE: No flags set.
 * @EGG_DBUS_REQUEST_NAME_FLAGS_ALLOW_REPLACEMENT: If an application A specifies this flag and succeeds in becoming the owner of the name, and another application B later calls egg_dbus_bus_request_name() with the %EGG_DBUS_REQUEST_NAME_FLAGS_REPLACE_EXISTING flag, then application A will lose ownership and receive a #EggDBusBus::name-lost signal, and application B will become the new owner. If %EGG_DBUS_REQUEST_NAME_FLAGS_ALLOW_REPLACEMENT is not specified by application A, or %EGG_DBUS_REQUEST_NAME_FLAGS_REPLACE_EXISTING is not specified by application B, then application B will not replace application A as the owner.
 * @EGG_DBUS_REQUEST_NAME_FLAGS_REPLACE_EXISTING: Try to replace the current owner if there is one. If this flag is not set the application will only become the owner of the name if there is no current owner. If this flag is set, the application will replace the current owner if the current owner specified %EGG_DBUS_REQUEST_NAME_FLAGS_ALLOW_REPLACEMENT.
 * @EGG_DBUS_REQUEST_NAME_FLAGS_DO_NOT_QUEUE: Without this flag, if an application requests a name that is already owned, the application will be placed in a queue to own the name when the current owner gives it up. If this flag is given, the application will not be placed in the queue, the request for the name will simply fail. This flag also affects behavior when an application is replaced as name owner; by default the application moves back into the waiting queue, unless this flag was provided when the application became the name owner.
 *
 * Flags used in the egg_dbus_bus_request_name() method.
 */
typedef enum
{
  EGG_DBUS_REQUEST_NAME_FLAGS_NONE = 0x0000, /*< nick=none >*/
  EGG_DBUS_REQUEST_NAME_FLAGS_ALLOW_REPLACEMENT = 0x0001,
  EGG_DBUS_REQUEST_NAME_FLAGS_REPLACE_EXISTING = 0x0002,
  EGG_DBUS_REQUEST_NAME_FLAGS_DO_NOT_QUEUE = 0x0004,
} EggDBusRequestNameFlags;

G_END_DECLS

#endif /* __EGG_DBUS_REQUEST_NAME_FLAGS_H */


/* File: eggdbusreleasenamereply.h
 *
 * Generated by eggdbus-binding-tool 0.6. Do not edit.
 */

#ifndef __EGG_DBUS_RELEASE_NAME_REPLY_H
#define __EGG_DBUS_RELEASE_NAME_REPLY_H

#include <glib-object.h>
#include <gio/gio.h>
#include <eggdbus/eggdbustypes.h>
#include <eggdbus/eggdbusinterface.h>
#include <eggdbus/eggdbusinterfaceproxy.h>
#include <eggdbus/eggdbusrequestnameflags.h>
#include <eggdbus/eggdbusrequestnamereply.h>
#include <eggdbus/eggdbusreleasenamereply.h>
#include <eggdbus/eggdbusstartservicebynamereply.h>

G_BEGIN_DECLS

GType egg_dbus_release_name_reply_get_type (void) G_GNUC_CONST;

#define EGG_DBUS_TYPE_RELEASE_NAME_REPLY (egg_dbus_release_name_reply_get_type ())

/**
 * EggDBusReleaseNameReply:
 * @EGG_DBUS_RELEASE_NAME_REPLY_RELEASED: The caller has released his claim on the given name. Either the caller was the primary owner of the name, and the name is now unused or taken by somebody waiting in the queue for the name, or the caller was waiting in the queue for the name and has now been removed from the queue.
 * @EGG_DBUS_RELEASE_NAME_REPLY_NON_EXISTANT: The given name does not exist on this bus.
 * @EGG_DBUS_RELEASE_NAME_REPLY_NOT_OWNER: The caller was not the primary owner of this name, and was also not waiting in the queue to own this name.
 *
 * Return values for the egg_dbus_bus_release_name() method.
 */
typedef enum
{
  EGG_DBUS_RELEASE_NAME_REPLY_RELEASED = 1,
  EGG_DBUS_RELEASE_NAME_REPLY_NON_EXISTANT = 2,
  EGG_DBUS_RELEASE_NAME_REPLY_NOT_OWNER = 3,
} EggDBusReleaseNameReply;

G_END_DECLS

#endif /* __EGG_DBUS_RELEASE_NAME_REPLY_H */

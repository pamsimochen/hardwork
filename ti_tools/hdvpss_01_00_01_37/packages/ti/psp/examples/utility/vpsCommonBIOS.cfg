
var CurrentPlatform = java.lang.System.getenv("PLATFORM");

xdc.print("# !!! Current build platform is [" + CurrentPlatform + "] !!!" );
/* Move BIOS to release build. This is to reduce link time */
xdc.loadPackage ("ti.sysbios").profile="release";
/* use modules */
var Task        = xdc.useModule("ti.sysbios.knl.Task");
var Idle        = xdc.useModule("ti.sysbios.knl.Idle");
var BIOS        = xdc.useModule("ti.sysbios.BIOS");
var Startup     = xdc.useModule("xdc.runtime.Startup");
var SysStd      = xdc.useModule("xdc.runtime.SysStd");
var System      = xdc.useModule("xdc.runtime.System");
var Log         = xdc.useModule("xdc.runtime.Log");
var Assert      = xdc.useModule("xdc.runtime.Assert");
var Main        = xdc.useModule("xdc.runtime.Main");
var Memory      = xdc.useModule("xdc.runtime.Memory");
var Program     = xdc.useModule("xdc.cfg.Program");
var Diags       = xdc.useModule("xdc.runtime.Diags");
var Semaphore   = xdc.useModule("ti.sysbios.knl.Semaphore");
var HeapMem     = xdc.useModule("ti.sysbios.heaps.HeapMem");
var HeapBuf     = xdc.useModule("ti.sysbios.heaps.HeapBuf");
var Clock       = xdc.useModule("ti.sysbios.knl.Clock");
var Timer       = xdc.useModule("ti.sysbios.timers.dmtimer.Timer");
var Timestamp   = xdc.useModule("xdc.runtime.Timestamp");
var Core        = xdc.useModule("ti.sysbios.family.arm.ducati.Core");
var HwiM3       = xdc.useModule('ti.sysbios.family.arm.m3.Hwi');
var Load        = xdc.useModule('ti.sysbios.utils.Load');
var Hwi         = xdc.useModule('ti.sysbios.hal.Hwi');
var Queue       = xdc.useModule('ti.sysbios.knl.Queue');
var SyncSem     = xdc.useModule('ti.sysbios.syncs.SyncSem');
var Cache       = xdc.useModule('ti.sysbios.hal.Cache');
var GateDualCore = xdc.useModule('ti.sysbios.family.arm.ducati.GateDualCore');

if (CurrentPlatform == "ti814x-evm")
{
    GateDualCore.initGates = true;
}
/* load calculation related settings */
Load.swiEnabled   = true;
Load.hwiEnabled   = true;
Load.taskEnabled  = true;
Load.updateInIdle = true;
Load.windowInMs   = 500;
Load.postUpdate   = '&VpsUtils_prfLoadUpdate';

/* enable print of exception handing info */
HwiM3.enableException = true;
/* Bios lib instrumentation */
BIOS.libType = BIOS.LibType_Custom;


Core.id             = 1; /* HDVPSS M3 is core1 in Ducati subsystem  */

/* Clock tick in microseconds */
Clock.tickPeriod    = 1000;

/* Stack size when NULL is passed as stack during TSK create    */
Task.defaultStackSize   = 0x4000;

Memory.defaultHeapSize  = 0x15000;

/* ISR/SWI stack        */
Program.stack           = 0x4000;

/* Heap used when creating semaphore's, TSK's or malloc() ... */
Program.heap            = 0x15000;

/* section mapping over-ride with respect to default    */
if(0)
{
    Program.sectMap[".bss:extMemNonCache:heap"]               = "OCMC0_RAM";
    Program.sectMap[".bss:extMemNonCache:remoteDebugCoreShm"] = "OCMC0_RAM";
}
else
{
    Program.sectMap[".bss:extMemNonCache:heap"]               = "HDVPSS_DESC_MEM";
    Program.sectMap[".bss:extMemNonCache:remoteDebugCoreShm"] = "HDVPSS_DESC_MEM";
}

Program.sectMap[".bss:extMemNonCache:notify"]  ="HOST_VPSS_NOITFYMEM";

Program.sectMap[".bss:frameBuffer"]            = "FRAME_BUFFER_MEM";
Program.sectMap[".bss:tilerBuffer"]            = "TILER_8BIT_MEM";
Program.sectMap[".text"]                       = "DSS_M3_CODE_MEM";
Program.sectMap[".const"]                      = "DSS_M3_CODE_MEM";
Program.sectMap[".plt"]                        = "DSS_M3_CODE_MEM";

/* Slave loading from Linux fails if below is not defined. This is because
 * Framebuffer and tiler sections are too huge in size and are in .bss section.
 * slave loader tries to memfill it to 0x0. Slaveloader is not able to
 * get large virtual address space and it fails.
 */
Program.sectMap[".bss:extMemNonCache:notify"]  = new Program.SectionSpec();
Program.sectMap[".bss:extMemNonCache:notify"].loadSegment   = "HOST_VPSS_NOITFYMEM";
Program.sectMap[".bss:extMemNonCache:notify"].type          = "NOLOAD";

Program.sectMap[".bss:frameBuffer"]                         = new Program.SectionSpec();
Program.sectMap[".bss:frameBuffer"].loadSegment             = "FRAME_BUFFER_MEM";
Program.sectMap[".bss:frameBuffer"].type                    = "NOLOAD";

Program.sectMap[".bss:tilerBuffer"]                         = new Program.SectionSpec();
Program.sectMap[".bss:tilerBuffer"].loadSegment             = "TILER_8BIT_MEM";
Program.sectMap[".bss:tilerBuffer"].type                    = "NOLOAD";


Main.common$.diags_ASSERT   = Diags.ALWAYS_ON;
Main.common$.diags_INTERNAL = Diags.ALWAYS_ON;

/* To suppress the file name in BIOS compilation*/
var SourceDir = xdc.useModule('xdc.cfg.SourceDir');
SourceDir.verbose = 1;



/*
Set the proxy for System module. This enables print statements at runtime in
the application
*/
System.SupportProxy                     = SysStd;

if (CurrentPlatform == "ti816x-evm")
{
    xdc.loadCapsule("ti/psp/examples/utility/vpsCommonSYSLINK_AMMU_ti816x.cfg");
}

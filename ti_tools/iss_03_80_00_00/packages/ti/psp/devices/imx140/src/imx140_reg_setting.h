#ifndef _IMX140_REG_SETTING_H_
#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */
#define _IMX140_REG_SETTING_H_

/*
About current setting:is1080p fullhd,60fps
1>This setting is from Sony .xlsx
2>0x**,which are need be changed based on the readout mode we use,see details in datasheet
*/

#define IMX140_60fps

#ifndef IMX140_60fps
#define IMX140_FRSEL 2
//#define IMX140_HMAX_LOW 0x30
//#define IMX140_HMAX_HIGH 0x11
#else
#define IMX140_FRSEL 1
//#define IMX140_HMAX_LOW 0x98
//#define IMX140_HMAX_HIGH 0x08
#endif



const unsigned short IMX140_SETTING_ID2[]={

0x0200,0x01,
0x0201,0x00,
0x0202,0x00,//master mode stop first,correct it from 0x01,based on datasheet Page74
0x0203,0x00,
0x0204,0x10,
0x0205,0x01,
0x0206,0x00,
0x0207,0x10,//0x**,1080p
0x0208,0x10,
0x0209,IMX140_FRSEL, //0x01,//0x**,4lane,60fps
0x020a,0xf0,//0x**,blacklevel by default,8 LSBs
0x020b,0x00,//0x**,blacklevel by default,1msb
0x020c,0x00,
0x020d,0x20,
0x020e,0x01,
0x020f,0x01,
0x0210,0x01,
0x0211,0x00,
0x0212,0xf0,
0x0213,0x00,
0x0214,0x3c,//0x**,GAIN
0x0215,0x00,//0x**,GAIN
0x0216,0x08,
0x0217,0x00,
0x0218,0x65,//0x**,VMAX[7:0]
0x0219,0x04,//0x**,VMAX[15:8]
0x021a,0x00,//0x**,VMAX[16]
0x021b,0x4a,//0x**,HMAX[7:0]
0x021c,0x04,//0x**,HMAX[15:8]
0x021d,0x26,
0x021e,0x02,
0x021f,0x00,
0x0220,0x00,//0x**,SHS1[7:0]
0x0221,0x02,//0x**,SHS1[15:8]
0x0222,0x00,
0x0223,0x00,
0x0224,0x00,
0x0225,0x00,
0x0226,0x00,
0x0227,0x00,
0x0228,0x00,
0x0229,0x00,
0x022a,0x00,
0x022b,0x00,
0x022c,0x00,
0x022d,0x00,
0x022e,0x00,
0x022f,0x00,
0x0230,0x00,
0x0231,0x00,
0x0232,0x00,
0x0233,0x00,
0x0234,0x00,
0x0235,0x00,
0x0236,0x0c,
0x0237,0x00,
0x0238,0x38,//0x**,//from 0x38 to 0x3f,they are only for window cropping mode,set these regs by default in datasheet
0x0239,0x00,//0x**,
0x023a,0x50,//0x**,
0x023b,0x04,//0x**,
0x023c,0x00,//0x**,
0x023d,0x00,//0x**,
0x023e,0x9c,//0x**,
0x023f,0x07,//0x**,
0x0240,0x01,
0x0241,0x00,
0x0242,0x01,
0x0243,0x00,
0x0244,0xe5,
0x0245,0x01,
0x0246,0x00,//0x**,XVS pulse width setting,0:1H
0x0247,0x00,//0x**,XHS pulse width setting,0:16 clocks
0x0248,0x33,
0x0249,0x0a,
0x024a,0x00,
0x024b,0x00,
0x024c,0x00,
0x024d,0x00,
0x024e,0x00,
0x024f,0x00,
0x0250,0x16,
0x0251,0x00,
0x0252,0x01,
0x0253,0x00,
0x0254,0x12,
0x0255,0x00,
0x0256,0xc9,
0x0257,0x64,
0x0258,0x00,
0x0259,0x00,
0x025a,0x00,
0x025b,0x00,
0x025c,0x30,
0x025d,0x04,//0x**,INCLK 0x04 for 37.125MHz
0x025e,0x00,
0x025f,0x00,
0x0260,0x50,
0x0261,0x30,
0x0262,0x18,
0x0263,0xe8,
0x0264,0x00,
0x0265,0x20,
0x0266,0x00,
0x0267,0x01,
0x0268,0x00,
0x0269,0x0c,
0x026a,0x19,
0x026b,0x00,
0x026c,0x00,
0x026d,0x64,
0x026e,0x00,
0x026f,0x00,
0x0270,0x01,
0x0271,0x00,
0x0272,0x00,
0x0273,0x00,
0x0274,0x00,
0x0275,0x00,
0x0276,0x00,
0x0277,0x00,
0x0278,0x00,
0x0279,0x00,
0x027a,0x00,
0x027b,0x00,
0x027c,0x00,
0x027d,0x00,
0x027e,0x00,
0x027f,0x00,
0x0280,0x00,
0x0281,0x00,
0x0282,0x00,
0x0283,0x00,
0x0284,0x0c,
0x0285,0x0c,
0x0286,0x01,
0x0287,0x00,
0x0288,0x02,
0x0289,0xff,
0x028a,0x00,
0x028b,0x00,
0x028c,0x02,
0x028d,0x00,
0x028e,0x00,
0x028f,0x01,
0x0290,0x00,
0x0291,0x00,
0x0292,0x00,
0x0293,0x01,
0x0294,0x01,
0x0295,0x01,
0x0296,0x00,
0x0297,0x00,
0x0298,0x00,
0x0299,0x00,
0x029a,0x00,
0x029b,0x00,
0x029c,0x00,
0x029d,0x40,
0x029e,0x71,
0x029f,0x05,
0x02a0,0x00,
0x02a1,0x24,
0x02a2,0x23,
0x02a3,0x02,
0x02a4,0x2a,
0x02a5,0x00,
0x02a6,0x00,
0x02a7,0x00,
0x02a8,0x00,
0x02a9,0x10,
0x02aa,0x00,
0x02ab,0x10,
0x02ac,0x00,
0x02ad,0x10,
0x02ae,0x00,
0x02af,0x10,
0x02b0,0x00,
0x02b1,0xff,
0x02b2,0x00,
0x02b3,0x41,
0x02b4,0x00,
0x02b5,0x60,
0x02b6,0x82,
0x02b7,0x13,
0x02b8,0x0f,
0x02b9,0x00,
0x02ba,0x00,
0x02bb,0x00,
0x02bc,0x00,
0x02bd,0x00,
0x02be,0x00,
0x02bf,0x10,
0x02c0,0x00,
0x02c1,0x00,
0x02c2,0x00,
0x02c3,0x00,
0x02c4,0x00,
0x02c5,0x20,
0x02c6,0x30,
0x02c7,0x20,
0x02c8,0x40,
0x02c9,0x21,
0x02ca,0x00,
0x02cb,0x00,
0x02cc,0x21,
0x02cd,0x1e,
0x02ce,0x00,
0x02cf,0xd1,
0x02d0,0x1b,
0x02d1,0x00,
0x02d2,0x5f,
0x02d3,0x00,
0x02d4,0x00,
0x02d5,0x00,
0x02d6,0x00,
0x02d7,0x00,
0x02d8,0x00,
0x02d9,0x00,
0x02da,0x00,
0x02db,0x00,
0x02dc,0x00,
0x02dd,0x00,
0x02de,0x00,
0x02df,0x00,
0x02e0,0x00,
0x02e1,0xff,
0x02e2,0xff,
0x02e3,0xff,
0x02e4,0xff,
0x02e5,0xff,
0x02e6,0xff,
0x02e7,0x02,
0x02e8,0x01,
0x02e9,0x04,
0x02ea,0x04,
0x02eb,0x01,
0x02ec,0x02,
0x02ed,0x42,
0x02ee,0x44,
0x02ef,0x00,
0x02f0,0xf0,
0x02f1,0x00,
0x02f2,0x00,
0x02f3,0x00,
0x02f4,0xf0,
0x02f5,0x00,
0x02f6,0x00,
0x02f7,0x00,
0x02f8,0xf0,
0x02f9,0x00,
0x02fa,0x00,
0x02fb,0x00,
0x02fc,0x00,
0x02fd,0x00,
0x02fe,0x00

};
const unsigned short IMX140_SETTING_ID3[]={

0x0300,0x00,//editing
0x0301,0x00,
0x0302,0x70,
0x0303,0x33,
0x0304,0x00,
0x0305,0x00,
0x0306,0x00,
0x0307,0x00,
0x0308,0x00,
0x0309,0x00,
0x030a,0x00,
0x030b,0x00,
0x030c,0x00,
0x030d,0x00,
0x030e,0x00,
0x030f,0x0e,
0x0310,0x00,
0x0311,0x00,
0x0312,0x00,
0x0313,0x00,
0x0314,0x00,
0x0315,0x00,
0x0316,0x02,
0x0317,0x22,
0x0318,0x02,
0x0319,0x02,
0x031a,0x00,
0x031b,0x00,
0x031c,0x00,
0x031d,0x08,
0x031e,0x03,
0x031f,0x04,
0x0320,0x10,
0x0321,0x00,
0x0322,0x00,
0x0323,0x0f,
0x0324,0x03,
0x0325,0xfe,
0x0326,0x03,
0x0327,0xfe,
0x0328,0x05,
0x0329,0x00,
0x032a,0x00,
0x032b,0x00,
0x032c,0x0f,
0x032d,0x00,
0x032e,0x00,
0x032f,0x00,
0x0330,0x00,
0x0331,0x01,
0x0332,0x00,
0x0333,0x00,
0x0334,0x06,
0x0335,0x00,
0x0336,0x00,
0x0337,0x00,
0x0338,0x00,
0x0339,0x00,
0x033a,0x00,
0x033b,0x00,
0x033c,0x00,
0x033d,0x00,
0x033e,0x01,
0x033f,0x00,
0x0340,0x00,
0x0341,0x00,
0x0342,0x50,
0x0343,0x00,
0x0344,0x00,
0x0345,0x00,
0x0346,0x02,
0x0347,0x41,
0x0348,0x0f,
0x0349,0x00,
0x034a,0x00,
0x034b,0x00,
0x034c,0x00,
0x034d,0x00,
0x034e,0x00,
0x034f,0x00,
0x0350,0x00,
0x0351,0x00,
0x0352,0x00,
0x0353,0x00,
0x0354,0x00,
0x0355,0x0b,
0x0356,0x60,
0x0357,0x01,
0x0358,0x21,
0x0359,0x00,
0x035a,0x00,
0x035b,0x00,
0x035c,0x12,
0x035d,0x80,
0x035e,0x00,
0x035f,0x00,
0x0360,0x00,
0x0361,0x00,
0x0362,0x00,
0x0363,0x10,
0x0364,0x00,
0x0365,0x00,
0x0366,0x80,
0x0367,0x00,
0x0368,0x00,
0x0369,0x00,
0x036a,0x00,
0x036b,0x00,
0x036c,0x00,
0x036d,0x00,
0x036e,0x00,
0x036f,0xff,
0x0370,0x01,
0x0371,0xe2,
0x0372,0x00,
0x0373,0x00,
0x0374,0x00,
0x0375,0x00,
0x0376,0x00,
0x0377,0x00,
0x0378,0x00,
0x0379,0x00,
0x037a,0x00,
0x037b,0x00,
0x037c,0x00,
0x037d,0x0c,
0x037e,0x00,
0x037f,0x00,
0x0380,0x00,
0x0381,0x00,
0x0382,0x00,
0x0383,0x24,
0x0384,0x03,
0x0385,0x00,
0x0386,0x0e,
0x0387,0x00,
0x0388,0x27,
0x0389,0x00,
0x038a,0xee,
0x038b,0x04,
0x038c,0xed,
0x038d,0x04,
0x038e,0xee,
0x038f,0x04,
0x0390,0x04,
0x0391,0xf6,
0x0392,0x00,
0x0393,0x02,
0x0394,0x04,
0x0395,0x14,
0x0396,0x1c,
0x0397,0x00,
0x0398,0x3c,
0x0399,0x00,
0x039a,0xd2,
0x039b,0x07,
0x039c,0x7d,
0x039d,0x0c,
0x039e,0xa5,
0x039f,0x50,
0x03a0,0x00,
0x03a1,0x30,
0x03a2,0x03,
0x03a3,0x09,
0x03a4,0x00,
0x03a5,0xef,
0x03a6,0x01,
0x03a7,0xf3,
0x03a8,0x01,
0x03a9,0x00,
0x03aa,0x05,
0x03ab,0x04,
0x03ac,0x00,
0x03ad,0x50,
0x03ae,0x00,
0x03af,0x02,
0x03b0,0x01,
0x03b1,0x00,
0x03b2,0x00,
0x03b3,0x00,
0x03b4,0x00,
0x03b5,0x00,
0x03b6,0x00,
0x03b7,0x00,
0x03b8,0x00,
0x03b9,0x00,
0x03ba,0x00,
0x03bb,0x00,
0x03bc,0x14,
0x03bd,0x25,
0x03be,0x51,
0x03bf,0x00,
0x03c0,0x00,
0x03c1,0x3f,
0x03c2,0x7f,
0x03c3,0x0e,
0x03c4,0x16,/*prohibited to read and write to these regs
0x03c5,0xxx,
0x03c6,0xxx,
0x03c7,0xxx,
0x03c8,0xxx,
0x03c9,0xxx,
0x03ca,0xxx,
0x03cb,0xxx,
0x03cc,0xxx,
0x03cd,0xxx,
0x03ce,0xxx,
0x03cf,0xxx,
0x03d0,0xxx,
0x03d1,0xxx,
0x03d2,0xxx,
0x03d3,0xxx,
0x03d4,0xxx,*/
0x03d5,0x00,
0x03d6,0x00,
0x03d7,0x00,
0x03d8,0x00,
0x03d9,0x00,
0x03da,0x00,
0x03db,0x00,
0x03dc,0x00,
0x03dd,0x00,
0x03de,0x00,
0x03df,0x00,
0x03e0,0x48,
0x03e1,0xee,
0x03e2,0x48,
0x03e3,0xee,
0x03e4,0xee,
0x03e5,0xee,
0x03e6,0xee,
0x03e7,0xee,
0x03e8,0x4a,
0x03e9,0xdf,
0x03ea,0x4a,
0x03eb,0xdf,
0x03ec,0xdf,
0x03ed,0xdf,
0x03ee,0xdf,
0x03ef,0xdf,
0x03f0,0x00,
0x03f1,0x00,
0x03f2,0x00,
0x03f3,0x00,
0x03f4,0x00,
0x03f5,0x00,
0x03f6,0x00,
0x03f7,0x00,
0x03f8,0x00,
0x03f9,0x00,
0x03fa,0x00,
0x03fb,0x00,
0x03fc,0x00,
0x03fd,0x00,
0x03fe,0x00

};
const unsigned short IMX140_SETTING_ID4[]={

0x0400,0x00,//editing
0x0401,0x00,
0x0402,0x00,
0x0403,0x04,
0x0404,0x01,
0x0405,0x42,
0x0406,0x00,
0x0407,0xda,
0x0408,0x01,
0x0409,0x44,
0x040a,0x01,
0x040b,0x00,
0x040c,0x00,
0x040d,0x00,
0x040e,0x00,
0x040f,0x01,
0x0410,0x00,
0x0411,0x04,
0x0412,0x32,
0x0413,0x02,
0x0414,0x30,
0x0415,0x00,
0x0416,0x00,
0x0417,0x09,
0x0418,0x00,
0x0419,0xff,
0x041a,0x0f,
0x041b,0x04,
0x041c,0x0f,
0x041d,0x32,
0x041e,0x0a,
0x041f,0xb0,
0x0420,0x00,
0x0421,0x00,
0x0422,0x05,
0x0423,0x10,
0x0424,0x00,
0x0425,0x00,
0x0426,0x00,
0x0427,0x00,
0x0428,0x00,
0x0429,0x03,
0x042a,0x45,
0x042b,0x30,
0x042c,0x07,
0x042d,0x15,
0x042e,0xc1,
0x042f,0x13,
0x0430,0x00,
0x0431,0xeb,
0x0432,0x71,
0x0433,0x21,
0x0434,0x00,
0x0435,0x15,
0x0436,0x71,
0x0437,0x13,
0x0438,0x00,
0x0439,0xf1,
0x043a,0x31,
0x043b,0x21,
0x043c,0x00,
0x043d,0x16,
0x043e,0x61,
0x043f,0x13,
0x0440,0x00,
0x0441,0xf2,
0x0442,0x21,
0x0443,0x21,
0x0444,0x00,
0x0445,0x16,
0x0446,0x61,
0x0447,0x13,
0x0448,0xf2,
0x0449,0x21,
0x044a,0x21,
0x044b,0x00,
0x044c,0x37,
0x044d,0xb1,
0x044e,0x13,
0x044f,0x0e,
0x0450,0x22,
0x0451,0x21,
0x0452,0x01,
0x0453,0x15,
0x0454,0xb1,
0x0455,0x1e,
0x0456,0x00,
0x0457,0x3c,
0x0458,0x51,
0x0459,0x11,
0x045a,0x00,
0x045b,0x44,
0x045c,0x60,
0x045d,0x0d,
0x045e,0x00,
0x045f,0x03,
0x0460,0x00,
0x0461,0x00,
0x0462,0x00,
0x0463,0x00,
0x0464,0xde,
0x0465,0xb0,
0x0466,0x0d,
0x0467,0x1d,
0x0468,0xa1,
0x0469,0x11,
0x046a,0x00,
0x046b,0xbc,
0x046c,0x40,
0x046d,0x04,
0x046e,0x00,
0x046f,0x44,
0x0470,0x90,
0x0471,0x0b,
0x0472,0x00,
0x0473,0x44,
0x0474,0x70,
0x0475,0x0b,
0x0476,0x00,
0x0477,0x44,
0x0478,0x70,
0x0479,0x0b,
0x047a,0x00,
0x047b,0x15,
0x047c,0x71,
0x047d,0x21,
0x047e,0x00,
0x047f,0x47,
0x0480,0x40,
0x0481,0x04,
0x0482,0x00,
0x0483,0xd8,
0x0484,0x60,
0x0485,0x0d,
0x0486,0x00,
0x0487,0x18,
0x0488,0x51,
0x0489,0x11,
0x048a,0x00,
0x048b,0x01,
0x048c,0xc0,
0x048d,0x07,
0x048e,0x00,
0x048f,0xf2,
0x0490,0x80,
0x0491,0x10,
0x0492,0x72,
0x0493,0xe1,
0x0494,0x1d,
0x0495,0x00,
0x0496,0xfa,
0x0497,0x00,
0x0498,0x11,
0x0499,0x7a,
0x049a,0x61,
0x049b,0x1e,
0x049c,0x00,
0x049d,0xf6,
0x049e,0x40,
0x049f,0x11,
0x04a0,0x76,
0x04a1,0xa1,
0x04a2,0x1e,
0x04a3,0x00,
0x04a4,0x54,
0x04a5,0xa0,
0x04a6,0x05,
0x04a7,0x00,
0x04a8,0x3c,
0x04a9,0xc0,
0x04aa,0x04,
0x04ab,0x1d,
0x04ac,0xd1,
0x04ad,0x12,
0x04ae,0x00,
0x04af,0x3d,
0x04b0,0xd0,
0x04b1,0x04,
0x04b2,0x1e,
0x04b3,0xe1,
0x04b4,0x12,
0x04b5,0x00,
0x04b6,0x44,
0x04b7,0xc0,
0x04b8,0x05,
0x04b9,0x25,
0x04ba,0x51,
0x04bb,0x13,
0x04bc,0x00,
0x04bd,0x45,
0x04be,0xd0,
0x04bf,0x05,
0x04c0,0x26,
0x04c1,0x61,
0x04c2,0x13,
0x04c3,0x00,
0x04c4,0x4e,
0x04c5,0x20,
0x04c6,0x05,
0x04c7,0x2f,
0x04c8,0x31,
0x04c9,0x13,
0x04ca,0x00,
0x04cb,0x46,
0x04cc,0xa0,
0x04cd,0x04,
0x04ce,0x27,
0x04cf,0xb1,
0x04d0,0x12,
0x04d1,0x00,
0x04d2,0x46,
0x04d3,0xa0,
0x04d4,0x04,
0x04d5,0x27,
0x04d6,0xb1,
0x04d7,0x12,
0x04d8,0x00,
0x04d9,0x54,
0x04da,0xa0,
0x04db,0x05,
0x04dc,0x00,
0x04dd,0x10,
0x04de,0x21,
0x04df,0x11,
0x04e0,0x00,
0x04e1,0x01,
0x04e2,0x50,
0x04e3,0x00,
0x04e4,0x00,
0x04e5,0x07,
0x04e6,0xb0,
0x04e7,0x00,
0x04e8,0x00,
0x04e9,0x78,
0x04ea,0xc1,
0x04eb,0x1e,
0x04ec,0x00,
0x04ed,0x1e,
0x04ee,0x0f,
0x04ef,0x08,
0x04f0,0x02,
0x04f1,0x02,
0x04f2,0x02,
0x04f3,0x02,
0x04f4,0xc4,
0x04f5,0x40,
0x04f6,0x04,
0x04f7,0x00,
0x04f8,0x27,
0x04f9,0x82,
0x04fa,0x3e,
0x04fb,0x00,
0x04fc,0x00,
0x04fd,0x00,
0x04fe,0x00

};
const unsigned short IMX140_SETTING_ID5[]={

0x0500,0x11,//editing
0x0501,0x11,
0x0502,0x00,
0x0503,0x00,//0x**,repetition for what?
0x0504,0x00,
0x0505,0x03,
0x0506,0x00,
0x0507,0x00,
0x0508,0x00,
0x0509,0x00,
0x050a,0x00,
0x050b,0x00,
0x050c,0x00,
0x050d,0x00,
0x050e,0x00,
0x050f,0x0f,
0x0510,0x20,
0x0511,0x00,
0x0512,0x10,
0x0513,0x01,
0x0514,0x08,//0x**,OB line number designation
0x0515,0x02,//0x**,NULL0 number designation
0x0516,0x05,//0x**,NULL1 number designation
0x0517,0x04,//0x**,NULL2 number designation
0x0518,0x48,//0x**,pixel number designation[7:0]
0x0519,0x04,//0x**,pixel number designation[3:0]
0x051a,0x01,
0x051b,0x00,
0x051c,0x40,
0x051d,0x00,
0x051e,0x00,
0x051f,0x00,
0x0520,0x00,
0x0521,0x00,
0x0522,0x00,
0x0523,0x00,
0x0524,0x00,
0x0525,0x00,
0x0526,0x14,
0x0527,0x00,
0x0528,0x00,
0x0529,0x00,
0x052a,0x00,
0x052b,0x00,
0x052c,0x3f,//0x**,Global Timing Setting
0x052d,0x1f,//0x**,
0x052e,0x03,
0x052f,0x00,
0x0530,0x00,
0x0531,0x00,
0x0532,0x00,
0x0533,0x00,
0x0534,0x00,
0x0535,0x1c,
0x0536,0x00,
0x0537,0x00,
0x0538,0x00,
0x0539,0x00,
0x053a,0x00,
0x053b,0x00,
0x053c,0x00,
0x053d,0x02,
0x053e,0x0c,
0x053f,0x0c,
0x0540,0x03,//0x**,CSI_LANE_MODE,4Lane
0x0541,0x20,//0x**,INCKFREQ1[7:0]
0x0542,0x25,//0x**,INCKFREQ1[15:8]
0x0543,0x67,//0x**,TCLK_POST
0x0544,0x44,//0x**,THS_PREPARE
0x0545,0x3f,//0x**,THS_ZERO_MIN
0x0546,0x27,//0x**,THS_TRAIL
0x0547,0x1f,//0x**,THS_TRAIL_MIN
0x0548,0x17,//0x**,TCLK_PREPARE
0x0549,0x77,//0x**,TCLK_ZERO
0x054a,0x27,//0x**,TLPX
0x054b,0x30,
0x054c,0x30,
0x054d,0x30,
0x054e,0x25,//0x**,INCK_FREQ2
0x054f,0x00,
0x0550,0x5d,//0x**,INCK_FREQ3
0x0551,0x00,
0x0552,0x00,
0x0553,0x00,
0x0554,0x00,
0x0555,0x00,
0x0556,0x00,
0x0557,0x00,
0x0558,0x00,
0x0559,0x00,
0x055a,0x00,
0x055b,0x00,
0x055c,0x00,
0x055d,0x00,
0x055e,0x00,
0x055f,0x00,
0x0560,0x34,
0x0561,0x18,
0x0562,0x08,
0x0563,0x08,
0x0564,0x01,
0x0565,0x00,
0x0566,0x00,
0x0567,0x00,
0x0568,0x00,
0x0569,0x00,
0x056a,0x00,
0x056b,0x00,
0x056c,0x00,
0x056d,0x00,
0x056e,0x00,
0x056f,0x00,
0x0570,0x00,
0x0571,0x00,
0x0572,0x00,
0x0573,0x00,
0x0574,0x00,
0x0575,0x00,
0x0576,0x00,
0x0577,0x00,
0x0578,0x00,
0x0579,0x00,
0x057a,0x00,
0x057b,0x00,
0x057c,0x00,
0x057d,0x00,
0x057e,0x00,
0x057f,0x00,
0x0580,0x00,
0x0581,0x00,
0x0582,0x00,
0x0583,0x00,
0x0584,0x40,
0x0585,0x01,
0x0586,0x01,
0x0587,0x01,
0x0588,0x00,
0x0589,0x03,
0x058a,0xf0,
0x058b,0x00,
0x058c,0x0c,
0x058d,0x0c,
0x058e,0x00,
0x058f,0x00,
0x0590,0x00,
0x0591,0xf0,
0x0592,0x00,
0x0593,0x01,
0x0594,0x00,
0x0595,0x00,
0x0596,0x00,
0x0597,0x00,
0x0598,0xf0,
0x0599,0x00,
0x059a,0x01,
0x059b,0x00,
0x059c,0xf0,
0x059d,0x00,
0x059e,0x00,
0x059f,0x00,
0x05a0,0x00,
0x05a1,0x00,
0x05a2,0x00,
0x05a3,0x00,
0x05a4,0x00,
0x05a5,0x00,
0x05a6,0x00,
0x05a7,0x00,
0x05a8,0x00,
0x05a9,0x00,
0x05aa,0x00,
0x05ab,0x00,
0x05ac,0x00,
0x05ad,0x00,
0x05ae,0x00,
0x05af,0x00,
0x05b0,0x00,
0x05b1,0x00,
0x05b2,0x00,
0x05b3,0x00,
0x05b4,0x65,
0x05b5,0x04,
0x05b6,0x00,
0x05b7,0x4c,
0x05b8,0x04,
0x05b9,0x00,
0x05ba,0x00,
0x05bb,0x3c,
0x05bc,0x00,
0x05bd,0x9b,
0x05be,0x07,
0x05bf,0x8b,
0x05c0,0x04,
0x05c1,0x9c,
0x05c2,0x07,
0x05c3,0x50,
0x05c4,0x04,
0x05c5,0x00,
0x05c6,0x00,
0x05c7,0x00,
0x05c8,0x00,
0x05c9,0x00,
0x05ca,0x00,
0x05cb,0x9b,
0x05cc,0x07,
0x05cd,0xc7,
0x05ce,0x04,
0x05cf,0x7c,
0x05d0,0x01,
0x05d1,0x38,
0x05d2,0x01,
0x05d3,0x9c,
0x05d4,0x07,
0x05d5,0xc8,
0x05d6,0x04,
0x05d7,0x01,
0x05d8,0x03,
0x05d9,0x00,
0x05da,0x00,
0x05db,0x0b,
0x05dc,0x00,
0x05dd,0x0c,
0x05de,0x00,
0x05df,0x00,
0x05e0,0x00,
0x05e1,0x0b,
0x05e2,0x00,
0x05e3,0x08,
0x05e4,0x00,
0x05e5,0x0c,
0x05e6,0x00,
0x05e7,0x00,
0x05e8,0x00,
0x05e9,0x00,
0x05ea,0x00,
0x05eb,0x00,
0x05ec,0x00,
0x05ed,0x00,
0x05ee,0x00,
0x05ef,0x00,
0x05f0,0x00,
0x05f1,0x00,
0x05f2,0x00,
0x05f3,0x00,
0x05f4,0x00,
0x05f5,0x00,
0x05f6,0x00,
0x05f7,0x00,
0x05f8,0x00,
0x05f9,0x00,
0x05fa,0x00,
0x05fb,0x00,
0x05fc,0x00,
0x05fd,0x00,
0x05fe,0x00

};
#endif

/** ==================================================================
 *  @file   usb_otghs_8_cred.h                                                  
 *                                                                    
 *  @path   /ti/psp/iss/hal/cred_cram/cred/inc/cortexm3_sys_ape/                                                  
 *                                                                    
 *  @desc   This  File contains.                                      
 * ===================================================================
 *  Copyright (c) Texas Instruments Inc 2011, 2012                    
 *                                                                    
 *  Use of this software is controlled by the terms and conditions found
 *  in the license agreement under which this software has been supplied
 * ===================================================================*/

/* ============================================================================ 
 * TEXAS INSTRUMENTS INCORPORATED PROPRIETARY INFORMATION Property of Texas
 * Instruments For Unrestricted Internal Use Only Unauthorized reproduction
 * and/or distribution is strictly prohibited.  This product is protected
 * under copyright law and trade secret law as an unpublished work.  Created
 * 2008, (C) Copyright 2008 Texas Instruments.  All rights reserved. */

/**
 *  @Component:   USB_OTGHS_8
 *
 *  @Filename:    usb_otghs_8_cred.h
 *
 * *  @Description: This component represents the USB_OTGHS registers (8bit 
 *                registers) except ENDPOINT0 indexed registers 
 *
 *  Generated by: Socrates CRED generator prototype
 *
    *//* ====================================================================== */

#ifndef __USB_OTGHS_8_CRED_H
#define __USB_OTGHS_8_CRED_H

#ifdef __cplusplus
extern "C" {
#endif

    /* 
     * Instance USB_OTGHS_8 of component USB_OTGHS_8 mapped in USB_OTGHS_8 at address 0x0
     */

                                                                              /*-------------------------------------------------------------------------*//**
 * @DEFINITION   BITFIELD
 *
 * @BRIEF        The bitfield must be defined according to register width
 *               of the component - 64/32/16/8
 *
    *//*------------------------------------------------------------------------ */
#undef BITFIELD
#define BITFIELD BITFIELD_8

    /* 
     *  List of Register arrays for component USB_OTGHS_8
     *
     */

    /* 
     *  List of bundle arrays for component USB_OTGHS_8
     *
     */
                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__TADDR_EPN
 *
 * @BRIEF        Bundle description is not available
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__TADDR_EPN                             0x80ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__TADDR_EPN__ELSIZE
 *
 * @BRIEF        TADDR_EPN bundle array element size in Bytes
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__TADDR_EPN__ELSIZE                     0x8ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__TADDR_EPN__NELEMS
 *
 * @BRIEF        TADDR_EPN bundle array number of elements
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__TADDR_EPN__NELEMS                     16

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__CSR_EPN
 *
 * @BRIEF        Bundle description is not available
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__CSR_EPN                               0x11Aul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__CSR_EPN__ELSIZE
 *
 * @BRIEF        CSR_EPN bundle array element size in Bytes
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__CSR_EPN__ELSIZE                       0x10ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__CSR_EPN__NELEMS
 *
 * @BRIEF        CSR_EPN bundle array number of elements
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__CSR_EPN__NELEMS                       15

    /* 
     *  List of bundles for component USB_OTGHS_8
     *
     */

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__TXFUNCADDR__OFFSET
 *
 * @BRIEF        Register TXFUNCADDR offset in bundle TADDR_EPN 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__TXFUNCADDR__OFFSET                    0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__TX_HUBADDR__OFFSET
 *
 * @BRIEF        Register TX_HUBADDR offset in bundle TADDR_EPN 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__TX_HUBADDR__OFFSET                    0x2ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__TX_HUBPORT__OFFSET
 *
 * @BRIEF        Register TX_HUBPORT offset in bundle TADDR_EPN 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__TX_HUBPORT__OFFSET                    0x3ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__RXFUNCADDR__OFFSET
 *
 * @BRIEF        Register RXFUNCADDR offset in bundle TADDR_EPN 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__RXFUNCADDR__OFFSET                    0x4ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__RX_HUBADDR__OFFSET
 *
 * @BRIEF        Register RX_HUBADDR offset in bundle TADDR_EPN 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__RX_HUBADDR__OFFSET                    0x6ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__RX_HUBPORT__OFFSET
 *
 * @BRIEF        Register RX_HUBPORT offset in bundle TADDR_EPN 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__RX_HUBPORT__OFFSET                    0x7ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__DYN_CSR_EPN
 *
 * @BRIEF        Bundle description is not available
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__DYN_CSR_EPN                           0x1Aul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__DYN_TXTYPE__OFFSET
 *
 * @BRIEF        Register DYN_TXTYPE offset in bundle DYN_CSR_EPN 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__DYN_TXTYPE__OFFSET                    0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__DYN_TXINTERVAL__OFFSET
 *
 * @BRIEF        Register DYN_TXINTERVAL offset in bundle DYN_CSR_EPN 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__DYN_TXINTERVAL__OFFSET                0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__DYN_RXTYPE__OFFSET
 *
 * @BRIEF        Register DYN_RXTYPE offset in bundle DYN_CSR_EPN 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__DYN_RXTYPE__OFFSET                    0x2ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__DYN_RXINTERVAL__OFFSET
 *
 * @BRIEF        Register DYN_RXINTERVAL offset in bundle DYN_CSR_EPN 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__DYN_RXINTERVAL__OFFSET                0x3ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__DYN_FIFOSIZE__OFFSET
 *
 * @BRIEF        Register DYN_FIFOSIZE offset in bundle DYN_CSR_EPN 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__DYN_FIFOSIZE__OFFSET                  0x5ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__CSR_EP0
 *
 * @BRIEF        Bundle description is not available
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__CSR_EP0                               0x10Aul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__TYPE0__OFFSET
 *
 * @BRIEF        Register TYPE0 offset in bundle CSR_EP0 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__TYPE0__OFFSET                         0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__NAKLIMIT0__OFFSET
 *
 * @BRIEF        Register NAKLIMIT0 offset in bundle CSR_EP0 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__NAKLIMIT0__OFFSET                     0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__CONFIGDATA0__OFFSET
 *
 * @BRIEF        Register CONFIGDATA0 offset in bundle CSR_EP0 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__CONFIGDATA0__OFFSET                   0x5ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__TXTYPE__OFFSET
 *
 * @BRIEF        Register TXTYPE offset in bundle CSR_EPN 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__TXTYPE__OFFSET                        0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__TXINTERVAL__OFFSET
 *
 * @BRIEF        Register TXINTERVAL offset in bundle CSR_EPN 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__TXINTERVAL__OFFSET                    0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__RXTYPE__OFFSET
 *
 * @BRIEF        Register RXTYPE offset in bundle CSR_EPN 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__RXTYPE__OFFSET                        0x2ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__RXINTERVAL__OFFSET
 *
 * @BRIEF        Register RXINTERVAL offset in bundle CSR_EPN 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__RXINTERVAL__OFFSET                    0x3ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__FIFOSIZE__OFFSET
 *
 * @BRIEF        Register FIFOSIZE offset in bundle CSR_EPN 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__FIFOSIZE__OFFSET                      0x5ul

    /* 
     * List of registers for component USB_OTGHS_8
     *
     */

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__FADDR
 *
 * @BRIEF        PERIPHERAL MODE ONLY REGISTER 
 *               7-bit USB address of the device when in peripheral mode. The 
 *               address received from a SET_ADDRESS control request should 
 *               be written to this register. (peripheral mode only, ignored 
 *               in host mode) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__FADDR                                 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__POWER
 *
 * @BRIEF        Control of Suspend and Resume signaling, plus other basic 
 *               operations. 
 *               ACCESS TO BITFIELDS OF THIS REGISTER DIFFERS IN PERIPHERAL 
 *               AND HOST MODE 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__POWER                                 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__INTRUSB
 *
 * @BRIEF        Interrupt status for general USB interrupts. Status is 
 *               cleared on read. 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__INTRUSB                               0xAul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__INTRUSBE
 *
 * @BRIEF        Interrupt enables for general USB interrupts. 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__INTRUSBE                              0xBul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__INDEX
 *
 * @BRIEF        Frame number received in the last-seen Start-Of-[micro]Frame 
 *               (SOF) token on the USB bus. 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__INDEX                                 0xEul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__TESTMODE
 *
 * @BRIEF        Frame number received in the last-seen Start-Of-[micro]Frame 
 *               (SOF) token on the USB bus. 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__TESTMODE                              0xFul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__DYN_TXTYPE
 *
 * @BRIEF        HOST MODE ONLY REGISTER 
 *               TX endpoint configuration 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__DYN_TXTYPE                            0x1Aul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__DYN_TXINTERVAL
 *
 * @BRIEF        HOST MODE ONLY REGISTER 
 *               For Interrupt and Isochronous transfers, defines the polling 
 *               interval for the currently-selected 
 *               TX endpoint. For Bulk endpoints, this register sets the 
 *               number of frames/microframes after which the endpoint should 
 *               timeout 
 *               on receiving a stream of NAK responses. 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__DYN_TXINTERVAL                        0x1Bul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__DYN_RXTYPE
 *
 * @BRIEF        HOST MODE ONLY REGISTER 
 *               RX endpoint configuration 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__DYN_RXTYPE                            0x1Cul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__DYN_RXINTERVAL
 *
 * @BRIEF        NOTE: HOST mode only 
 *               For Interrupt and Isochronous transfers, defines the polling 
 *               interval for the currently-selected 
 *               RX endpoint. For Bulk endpoints, this register sets the 
 *               number of frames/microframes after which the endpoint should 
 *               timeout 
 *               on receiving a stream of NAK responses. 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__DYN_RXINTERVAL                        0x1Dul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__DYN_FIFOSIZE
 *
 * @BRIEF        Returns the sizes of the FIFOs associated with the selected 
 *               additional TX/Rx endpoints. 
 *               The lower nibble encodes the size of the selected TX 
 *               endpoint FIFO; the upper nibble encodes the size of the 
 *               selected Rx endpoint 
 *               FIFO. Values of 3 to 13 correspond to a FIFO size of 2 raise 
 *               to n bytes (8 to 8192 bytes). If an endpoint has not been 
 *               configured, a value of 0 
 *               will be displayed. Where the TX and Rx endpoints share the 
 *               same FIFO, the Rx FIFO size will be encoded as 0xF. 
 *               Note: The register only has this interpretation when the 
 *               Index register is set to select one of Endpoints 1 to 15 and 
 *               Dynamic Sizing is not selected. It has a special 
 *               interpretation when the Index register is set to select 
 *               Endpoint 0. 
 *               while the result returned is not valid where Dynamic FIFO 
 *               sizing is used. 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__DYN_FIFOSIZE                          0x1Ful

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__DEVCTL
 *
 * @BRIEF        Select between USB peripheral or USB host mode for the 
 *               device, and monitor the USB lines accordingly. 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__DEVCTL                                0x60ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__MISC
 *
 * @BRIEF        The MISC Register is an 8-bit register that contain various 
 *               common configuration bits. These bits include the Rx/TX 
 *               Early DMA enable bits. 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__MISC                                  0x61ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__TXFIFOSZ
 *
 * @BRIEF        Size of Tx FIFO of endpoint indexed by register field 
 *               INDEX.sel_endpoint 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__TXFIFOSZ                              0x62ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__RXFIFOSZ
 *
 * @BRIEF        Size of Rx FIFO of endpoint indexed by register field 
 *               INDEX.sel_endpoint 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__RXFIFOSZ                              0x63ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__ULPIVBUSCONTROL
 *
 * @BRIEF        Allows selection of external charge pump to generate 
 *               VBus.Also allows the chargepump selection to be displayed 
 *               via an external VBus indicator 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__ULPIVBUSCONTROL                       0x70ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__ULPICARKITCONTROL
 *
 * @BRIEF        Provides basic control needed by the ULPI-compatible PHYs 
 *               when interfacing to incar Carkit systems. 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__ULPICARKITCONTROL                     0x71ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__ULPIINTMASK
 *
 * @BRIEF        Enables the assertion of MC_NINT in response to the possible 
 *               interrupt sources. 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__ULPIINTMASK                           0x72ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__ULPIINTSRC
 *
 * @BRIEF        The register shows the unmasked values of the possible 
 *               sources of interrupt. 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__ULPIINTSRC                            0x73ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__ULPIREGDATA
 *
 * @BRIEF        Contains the Data associated with register reads/writes 
 *               conducted thru the ULPI interface. 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__ULPIREGDATA                           0x74ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__ULPIREGADDR
 *
 * @BRIEF        Contains the address of the register being read/written thru 
 *               the ULPI interface. 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__ULPIREGADDR                           0x75ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__ULPIREGCONTROL
 *
 * @BRIEF        Contains the control and status bits relating to the 
 *               register being read/written thru the ULPI interface 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__ULPIREGCONTROL                        0x76ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__ULPIRAWDATA
 *
 * @BRIEF        Used in asynchronous mode to sample the ULPI bus and in 
 *               synchronous mode to store the last RXCmd. 
 *               The below bit encoding is for asynchronous mode. 
 *               In synchronous mode, all the 8 bits resemble the RXCmd. 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__ULPIRAWDATA                           0x77ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__EPINFO
 *
 * @BRIEF        Allows read-back of the no.of Tx and Rx endpoints included 
 *               in the design. 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__EPINFO                                0x78ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__RAMINFO
 *
 * @BRIEF        Provides the information about the width of the RAM and the 
 *               no of DMA channels 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__RAMINFO                               0x79ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__LINKINFO
 *
 * @BRIEF        Allows some delays to be specified 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__LINKINFO                              0x7Aul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__VPLEN
 *
 * @BRIEF        Sets the duration of VBus pulsing charge 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__VPLEN                                 0x7Bul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__HS_EOF1
 *
 * @BRIEF        Sets the minimum time gap that is to be allowed between the 
 *               start of the last transaction and the EOF 
 *               for High-speed transactions. 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__HS_EOF1                               0x7Cul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__FS_EOF1
 *
 * @BRIEF        Sets the minimum time gap that is to be allowed between the 
 *               start of the last transaction and the EOF 
 *               for Full-speed transactions. 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__FS_EOF1                               0x7Dul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__LS_EOF1
 *
 * @BRIEF        Sets the minimum time gap that is to be allowed between the 
 *               start of the last transaction and the EOF 
 *               for Low-speed transactions. 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__LS_EOF1                               0x7Eul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__SOFT_RST
 *
 * @BRIEF        The software reset bits, NRST & NRSTX, in this 8-bit 
 *               register is used to reset the CLK and XCLK domain logic 
 *               respectively within Mentor USB OTG core. This register is 
 *               self clearing. 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__SOFT_RST                              0x7Ful

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__TXFUNCADDR
 *
 * @BRIEF        HOST MODE ONLY REGISTER 
 *               USB address of the peripheral supporting Tx endpoint #N 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__TXFUNCADDR                            0x80ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__TX_HUBADDR
 *
 * @BRIEF        HOST MODE ONLY REGISTER 
 *               Properties of the high-speed hub through which the 
 *               full/low-speed Tx endpoint #N is accessed and where the 
 *               high-speed split transactions are translated to 
 *               full/low-speed ones. 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__TX_HUBADDR                            0x82ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__TX_HUBPORT
 *
 * @BRIEF        HOST MODE ONLY REGISTER 
 *               Number of the full/low-speed port of the high-speed hub 
 *               through which full/low-speed Tx endpoint #N is accessed 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__TX_HUBPORT                            0x83ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__RXFUNCADDR
 *
 * @BRIEF        HOST MODE ONLY REGISTER 
 *               USB address of the peripheral supporting Rx endpoint #N 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__RXFUNCADDR                            0x84ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__RX_HUBADDR
 *
 * @BRIEF        HOST MODE ONLY REGISTER 
 *               Properties of the high-speed hub through which the 
 *               full/low-speed Rx endpoint #N is accessed and where the 
 *               high-speed split transactions are translated to 
 *               full/low-speed ones. 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__RX_HUBADDR                            0x86ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__RX_HUBPORT
 *
 * @BRIEF        HOST MODE ONLY REGISTER 
 *               Number of the full/low-speed port of the high-speed hub 
 *               through which full/low-speed Rx endpoint #N is accessed 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__RX_HUBPORT                            0x87ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__TYPE0
 *
 * @BRIEF        HOST MODE ONLY REGISTER 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__TYPE0                                 0x10Aul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__NAKLIMIT0
 *
 * @BRIEF        HOST MODE ONLY REGISTER 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__NAKLIMIT0                             0x10Bul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__CONFIGDATA0
 *
 * @BRIEF        Register description is not available
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__CONFIGDATA0                           0x10Ful

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__TXTYPE
 *
 * @BRIEF        HOST MODE ONLY REGISTER 
 *               TX endpoint configuration 
 *               NOTE: REGISTER INSTANCE 0 CORRESPONDS TO ENDPOINT 1 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__TXTYPE                                0x11Aul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__TXINTERVAL
 *
 * @BRIEF        HOST MODE ONLY REGISTER 
 *               For Interrupt and Isochronous transfers, defines the polling 
 *               interval for the currently-selected 
 *               TX endpoint. For Bulk endpoints, this register sets the 
 *               number of frames/microframes after which the endpoint should 
 *               timeout 
 *               on receiving a stream of NAK responses. 
 *               NOTE: REGISTER INSTANCE 0 CORRESPONDS TO ENDPOINT 1 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__TXINTERVAL                            0x11Bul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__RXTYPE
 *
 * @BRIEF        HOST MODE ONLY REGISTER 
 *               RX endpoint configuration 
 *               NOTE: REGISTER INSTANCE 0 CORRESPONDS TO ENDPOINT 1 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__RXTYPE                                0x11Cul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__RXINTERVAL
 *
 * @BRIEF        HOST MODE ONLY REGISTER 
 *               For Interrupt and Isochronous transfers, defines the polling 
 *               interval for the currently-selected 
 *               RX endpoint. For Bulk endpoints, this register sets the 
 *               number of frames/microframes after which the endpoint should 
 *               timeout on receiving a stream of NAK responses. 
 *               NOTE: REGISTER INSTANCE 0 CORRESPONDS TO ENDPOINT 1 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__RXINTERVAL                            0x11Dul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__FIFOSIZE
 *
 * @BRIEF        Returns the sizes of the FIFOs associated with the selected 
 *               additional TX/Rx endpoints . 
 *               The lower nibble encodes the size of the selected TX 
 *               endpoint FIFO; the upper nibble encodes the size of the 
 *               selected Rx endpoint 
 *               FIFO. Values of 3 to 13 correspond to a FIFO size of 2 raise 
 *               to n bytes (8 to 8192 bytes). If the endpoint has not been 
 *               configured, a value of 0 
 *               will be displayed. Where the TX and Rx endpoints share the 
 *               same FIFO, the Rx FIFO size will be encoded as 0xF. 
 *               NOTE: The reset value of for endpoint0 is 0xDE. Endpoints 1 
 *               and 2 have reset value of 0x55 rest of the enpoints have 
 *               reset value of 0x33 
 *               NOTE: REGISTER INSTANCE 0 CORRESPONDS TO ENDPOINT 1 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__FIFOSIZE                              0x11Ful

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__DMA_INTR
 *
 * @BRIEF        DMA Interrupt Register. Cleared on read. 
 *               This 8-bit register provides an interrupt for each DMA 
 *               channel. This interrupt register is cleared when read. When 
 *               any bit of this register is set, the output DMA_NINT is 
 *               asserted low. Bits in this register will only be set if the 
 *               DMA Interrupt Enable bit for the corresponding channel is 
 *               enabled (register DMA_CNTL.D3). 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__DMA_INTR                              0x200ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__C_T_HSBT
 *
 * @BRIEF        The value added to the minimum High Speed Timeout period 
 *               (736 bit times) in increments of 64 
 *               High Speed bit times. This allows the turn around timeout 
 *               period to be set to 16 possible values 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__C_T_HSBT                              0x348ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__LPM_CNTRL
 *
 * @BRIEF        This register is used to control LPM Feature in. 
 *               The defination of bitfields is different for Host mode and 
 *               Peripheral mode. 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__LPM_CNTRL                             0x362ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__LPM_INTREN
 *
 * @BRIEF        Provides enable bits for the interrupts in the LPM_INTR 
 *               register. If a bit in this 
 *               register is set to 1, MC_INT will be asserted (high) when 
 *               the corresponding interrupt in the LPM_INTR register is set. 
 *               If a bit 
 *               in this register is set to 0, the corresponding register in 
 *               LPM_INTR is still set but MC_INT will not be asserted 
 *               (high). On reset, 
 *               all bits in this register are reset to 0. 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__LPM_INTREN                            0x363ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__LPM_INTR
 *
 * @BRIEF        provides status of the LPM Power state. When a bit is set to 
 *               1, if the corresponding 
 *               enable bit is also set to 1 the output MC_INT is asserted 
 *               (high). If the corresponding enable bit is set to 0, then 
 *               the output 
 *               MC_INT is not asserted. On reset, all bits in this register 
 *               are reset to 0. This register is clear on read. 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__LPM_INTR                              0x364ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__LPM_FADDR
 *
 * @BRIEF        The LPM_FADDR is the function address that will be placed in 
 *               the LPM payload. 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__LPM_FADDR                             0x365ul

    /* 
     * List of register bitfields for component USB_OTGHS_8
     *
     */

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__FADDR__AD   
 *
 * @BRIEF        device address - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__FADDR__AD                        BITFIELD(6, 0)
#define USB_OTGHS_8__FADDR__AD__POS                   0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__POWER__ISO_UPDATE   
 *
 * @BRIEF        PERIPHERAL MODE: When set, device will wait for a SOF token 
 *               from the time TxPktRdy is set before sending the packet. If 
 *               an IN token is received before an SOF token, then a zero 
 *               length data packet will be sent. (Peripheral mode only). 
 *               HOST MODE: not accessible - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__POWER__ISO_UPDATE                BITFIELD(7, 7)
#define USB_OTGHS_8__POWER__ISO_UPDATE__POS           7

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__POWER__SOFT_CONN   
 *
 * @BRIEF        PERIPHERAL MODE: Software control of the peripheral's 
 *               connection to the USB bus 
 *               HOST MODE: not accessible - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__POWER__SOFT_CONN                 BITFIELD(6, 6)
#define USB_OTGHS_8__POWER__SOFT_CONN__POS            6

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__POWER__HS_ENAB   
 *
 * @BRIEF        Enables the negotiation of high-speed mode during reset. 
 *               Device will stay in full-speed mode if the negociation 
 *               fails, i.e. if the opposite side is not high-speed capable. 
 *               - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__POWER__HS_ENAB                   BITFIELD(5, 5)
#define USB_OTGHS_8__POWER__HS_ENAB__POS              5

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__POWER__HS_MODE   
 *
 * @BRIEF        Indicates that High-speed mode was successfully negotiated 
 *               during USB reset. 
 *               PERIPHERAL MODE: becomes valid when USB reset completes (as 
 *               indicated by USB reset interrupt).  
 *               HOST MODE: becomes valid when bit H_Reset is cleared. 
 *               Remains valid for the duration of the session. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__POWER__HS_MODE                   BITFIELD(4, 4)
#define USB_OTGHS_8__POWER__HS_MODE__POS              4

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__POWER__RESET   
 *
 * @BRIEF        PERIPHERAL MODE: Status of USB reset on the bus (read-only)  
 *               HOST MODE: Control of USB reset on the bus - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__POWER__RESET                     BITFIELD(3, 3)
#define USB_OTGHS_8__POWER__RESET__POS                3

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__POWER__RESUME   
 *
 * @BRIEF        Drives USB resume signalling. Bit should be cleared 
 *               accordind to USB protocol timing rules to end resume. In 
 *               host mode, bit is also automatically set by remote-wakeup 
 *               (i.e. a resume initiated by the peripheral) when USB is 
 *               suspended. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__POWER__RESUME                    BITFIELD(2, 2)
#define USB_OTGHS_8__POWER__RESUME__POS               2

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__POWER__SUSPEND_MODE   
 *
 * @BRIEF        HOST MODE: Control for the suspension of the USB bus 
 *               PERIPHERAL MODE: Status of the USB bus suspension: Set upon 
 *               periph suspension, cleared either upon read (of 1) in 
 *               IntrUSB.resume, or write of 1 to Resume bit in the current 
 *               register - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__POWER__SUSPEND_MODE              BITFIELD(1, 1)
#define USB_OTGHS_8__POWER__SUSPEND_MODE__POS         1

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__POWER__ENABLE_SUSPENDM   
 *
 * @BRIEF        Enable the suspension of USB PHY (i.e. to lower-power mode) 
 *               when USB bus is in suspend. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__POWER__ENABLE_SUSPENDM           BITFIELD(0, 0)
#define USB_OTGHS_8__POWER__ENABLE_SUSPENDM__POS      0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__INTRUSB__VBUS_ERROR   
 *
 * @BRIEF        Vbus voltage has dropped below the Vbus-valid threshold 
 *               during a session (A-device mode only). - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__INTRUSB__VBUS_ERROR              BITFIELD(7, 7)
#define USB_OTGHS_8__INTRUSB__VBUS_ERROR__POS         7

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__INTRUSB__SESS_REQ   
 *
 * @BRIEF        Session request from opposite B-device (aka SRP) detected on 
 *               USB lines (A-device mode only) - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__INTRUSB__SESS_REQ                BITFIELD(6, 6)
#define USB_OTGHS_8__INTRUSB__SESS_REQ__POS           6

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__INTRUSB__DISCON   
 *
 * @BRIEF        Host mode: Peripheral disconnection detected 
 *               Periph mode: end of session detected - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__INTRUSB__DISCON                  BITFIELD(5, 5)
#define USB_OTGHS_8__INTRUSB__DISCON__POS             5

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__INTRUSB__CONN   
 *
 * @BRIEF        HOST MODE: Peripheral connection detected 
 *               PERIPH MODE: not accessible - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__INTRUSB__CONN                    BITFIELD(4, 4)
#define USB_OTGHS_8__INTRUSB__CONN__POS               4

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__INTRUSB__SOF   
 *
 * @BRIEF        Start-Of-Frame - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__INTRUSB__SOF                     BITFIELD(3, 3)
#define USB_OTGHS_8__INTRUSB__SOF__POS                3

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__INTRUSB__RESET_BABBLE   
 *
 * @BRIEF        PERIPH MODE: USB reset detected on bus 
 *               HOST MODE: Peripheral babble is detected - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__INTRUSB__RESET_BABBLE            BITFIELD(2, 2)
#define USB_OTGHS_8__INTRUSB__RESET_BABBLE__POS       2

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__INTRUSB__RESUME   
 *
 * @BRIEF        USB resume signalling detected while the device is 
 *               suspended. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__INTRUSB__RESUME                  BITFIELD(1, 1)
#define USB_OTGHS_8__INTRUSB__RESUME__POS             1

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__INTRUSB__SUSPEND   
 *
 * @BRIEF        PERIPH MODE: Peripheral goes into suspend following bus 
 *               inactivity 
 *               HOST MODE: not accessible - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__INTRUSB__SUSPEND                 BITFIELD(0, 0)
#define USB_OTGHS_8__INTRUSB__SUSPEND__POS            0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__INTRUSBE__VBUS_ERROR_E   
 *
 * @BRIEF        Bitfield description is not available - (RW)
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__INTRUSBE__VBUS_ERROR_E           BITFIELD(7, 7)
#define USB_OTGHS_8__INTRUSBE__VBUS_ERROR_E__POS      7

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__INTRUSBE__SESS_REQ_E   
 *
 * @BRIEF        Bitfield description is not available - (RW)
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__INTRUSBE__SESS_REQ_E             BITFIELD(6, 6)
#define USB_OTGHS_8__INTRUSBE__SESS_REQ_E__POS        6

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__INTRUSBE__DISCON_E   
 *
 * @BRIEF        Bitfield description is not available - (RW)
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__INTRUSBE__DISCON_E               BITFIELD(5, 5)
#define USB_OTGHS_8__INTRUSBE__DISCON_E__POS          5

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__INTRUSBE__CONN_E   
 *
 * @BRIEF        Bitfield description is not available - (RW)
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__INTRUSBE__CONN_E                 BITFIELD(4, 4)
#define USB_OTGHS_8__INTRUSBE__CONN_E__POS            4

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__INTRUSBE__SOF_E   
 *
 * @BRIEF        Bitfield description is not available - (RW)
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__INTRUSBE__SOF_E                  BITFIELD(3, 3)
#define USB_OTGHS_8__INTRUSBE__SOF_E__POS             3

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__INTRUSBE__RESET_BABBLE_E   
 *
 * @BRIEF        Bitfield description is not available - (RW)
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__INTRUSBE__RESET_BABBLE_E         BITFIELD(2, 2)
#define USB_OTGHS_8__INTRUSBE__RESET_BABBLE_E__POS    2

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__INTRUSBE__RESUME_E   
 *
 * @BRIEF        Bitfield description is not available - (RW)
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__INTRUSBE__RESUME_E               BITFIELD(1, 1)
#define USB_OTGHS_8__INTRUSBE__RESUME_E__POS          1

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__INTRUSBE__SUSPEND_E   
 *
 * @BRIEF        Bitfield description is not available - (RW)
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__INTRUSBE__SUSPEND_E              BITFIELD(0, 0)
#define USB_OTGHS_8__INTRUSBE__SUSPEND_E__POS         0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__INDEX__SEL_EP   
 *
 * @BRIEF        Selected EndPoint (0-15) - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__INDEX__SEL_EP                    BITFIELD(3, 0)
#define USB_OTGHS_8__INDEX__SEL_EP__POS               0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__TESTMODE__FORCE_HOST   
 *
 * @BRIEF        Forces the device to enter host mode, regardless of 
 *               connection status. The operating speed is set by the 2-bit 
 *               "Force" field. 
 *               Device remains in Host mode until the Session bit is 
 *               cleared, and re-enter Host mode the next time the Session 
 *               bit is set. While in this mode, connection status can be 
 *               read in register DevCtl.B_device - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__TESTMODE__FORCE_HOST             BITFIELD(7, 7)
#define USB_OTGHS_8__TESTMODE__FORCE_HOST__POS        7

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__TESTMODE__FIFO_ACCESS   
 *
 * @BRIEF        Set this bit to transfer the packet in the Endpoint 0 Tx 
 *               FIFO to the Endpoint 0 Rx FIFO. Cleared automatically. - 
 *               (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__TESTMODE__FIFO_ACCESS            BITFIELD(6, 6)
#define USB_OTGHS_8__TESTMODE__FIFO_ACCESS__POS       6

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__TESTMODE__FORCE   
 *
 * @BRIEF        Force a different mode (High-, Full- or Low-speed) when 
 *               device receives a USB reset.  - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__TESTMODE__FORCE                  BITFIELD(5, 4)
#define USB_OTGHS_8__TESTMODE__FORCE__POS             4

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__TESTMODE__TEST_PACKET   
 *
 * @BRIEF        Device repetitively transmits a 53-byte test packet (defined 
 *               in USB spec 2.0 chapter 7.1.20) that should have been loaded 
 *               beforehand in Endpoint 0 Tx FIFO (high-speed mode). - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__TESTMODE__TEST_PACKET            BITFIELD(3, 3)
#define USB_OTGHS_8__TESTMODE__TEST_PACKET__POS       3

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__TESTMODE__TEST_K   
 *
 * @BRIEF        Device drives a continuous K on the bus (high-speed). - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__TESTMODE__TEST_K                 BITFIELD(2, 2)
#define USB_OTGHS_8__TESTMODE__TEST_K__POS            2

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__TESTMODE__TEST_J   
 *
 * @BRIEF        Device drives a continuous J on the bus (high-speed). - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__TESTMODE__TEST_J                 BITFIELD(1, 1)
#define USB_OTGHS_8__TESTMODE__TEST_J__POS            1

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__TESTMODE__TEST_SE0_NAK   
 *
 * @BRIEF        Device remains in High-speed mode but responds to any valid 
 *               IN token with a NAK - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__TESTMODE__TEST_SE0_NAK           BITFIELD(0, 0)
#define USB_OTGHS_8__TESTMODE__TEST_SE0_NAK__POS      0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__DYN_TXTYPE__SPEED   
 *
 * @BRIEF        Operating speed of the target device when the core is 
 *               configured with the multipoint option: 
 *               00: Unused (Note: If selected, the target will be assumed to 
 *               be using the same connection speed as the core.) 
 *               01: High 
 *               10: Full 
 *               11: Low 
 *               When the core is not configured with the multipoint option 
 *               these bits should not be accessed. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__DYN_TXTYPE__SPEED                BITFIELD(7, 6)
#define USB_OTGHS_8__DYN_TXTYPE__SPEED__POS           6

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__DYN_TXTYPE__PROTOCOL   
 *
 * @BRIEF        The CPU should set this to select the required protocol for 
 *               the TX endpoint: 
 *               00: Control 
 *               01: Isochronous 
 *               10: Bulk 
 *               11: Interrupt - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__DYN_TXTYPE__PROTOCOL             BITFIELD(5, 4)
#define USB_OTGHS_8__DYN_TXTYPE__PROTOCOL__POS        4

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__DYN_TXTYPE__EP_NUMBER   
 *
 * @BRIEF        The CPU should set this value to the endpoint number 
 *               contained in the TX endpoint descriptor 
 *               returned to the USBOTGHS during device enumeration. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__DYN_TXTYPE__EP_NUMBER            BITFIELD(3, 0)
#define USB_OTGHS_8__DYN_TXTYPE__EP_NUMBER__POS       0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__DYN_TXINTERVAL__M   
 *
 * @BRIEF        There is a TxInterval register for each configured TX 
 *               endpoint (except Endpoint 0). In each case the value that is 
 *               set defines a 
 *               number of frames/microframes (High Speed transfers), as 
 *               follows: 
 *               Transfer Type Speed Valid values (m) Interpretation 
 *               Low Speed or Full Speed 1 \u2013 255 Polling interval is m 
 *               framesInterrupt . 
 *               High Speed 1 \u2013 16 Polling interval is 2(m-1) 
 *               microframes. 
 *               Isochronous Full Speed or High Speed 1 \u2013 16 Polling 
 *               interval is 2(m-1) frames/microframes. 
 *               Bulk Full Speed or High Speed 2 \u2013 16 NAK Limit is 
 *               2(m-1) frames/microframes. Note: A value of 
 *               0 or 1 disables the NAK timeout function. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__DYN_TXINTERVAL__M                BITFIELD(7, 0)
#define USB_OTGHS_8__DYN_TXINTERVAL__M__POS           0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__DYN_RXTYPE__SPEED   
 *
 * @BRIEF        Operating speed of the target device when the core is 
 *               configured with the multipoint option: 
 *               00: Unused (Note: If selected, the target will be assumed to 
 *               be using the same connection speed as the core.) 
 *               01: High 
 *               10: Full 
 *               11: Low 
 *               When the core is not configured with the multipoint option 
 *               these bits should not be accessed. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__DYN_RXTYPE__SPEED                BITFIELD(7, 6)
#define USB_OTGHS_8__DYN_RXTYPE__SPEED__POS           6

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__DYN_RXTYPE__PROTOCOL   
 *
 * @BRIEF        The CPU should set this to select the required protocol for 
 *               the TX endpoint: 
 *               00: Control 
 *               01: Isochronous 
 *               10: Bulk 
 *               11: Interrupt - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__DYN_RXTYPE__PROTOCOL             BITFIELD(5, 4)
#define USB_OTGHS_8__DYN_RXTYPE__PROTOCOL__POS        4

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__DYN_RXTYPE__EP_NUMBER   
 *
 * @BRIEF        The CPU should set this value to the endpoint number 
 *               contained in the TX endpoint descriptor 
 *               returned to the USBOTGHS during device enumeration. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__DYN_RXTYPE__EP_NUMBER            BITFIELD(3, 0)
#define USB_OTGHS_8__DYN_RXTYPE__EP_NUMBER__POS       0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__DYN_RXINTERVAL__M   
 *
 * @BRIEF        There is a TxInterval register for each configured TX 
 *               endpoint (except Endpoint 0). In each case the value that is 
 *               set defines a 
 *               number of frames/microframes (High Speed transfers), as 
 *               follows: 
 *               Transfer Type Speed Valid values (m) Interpretation 
 *               Low Speed or Full Speed 1 \u2013 255 Polling interval is m 
 *               framesInterrupt . 
 *               High Speed 1 \u2013 16 Polling interval is 2(m-1) 
 *               microframes. 
 *               Isochronous Full Speed or High Speed 1 \u2013 16 Polling 
 *               interval is 2(m-1) frames/microframes. 
 *               Bulk Full Speed or High Speed 2 \u2013 16 NAK Limit is 
 *               2(m-1) frames/microframes. Note: A value of 
 *               0 or 1 disables the NAK timeout function. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__DYN_RXINTERVAL__M                BITFIELD(7, 0)
#define USB_OTGHS_8__DYN_RXINTERVAL__M__POS           0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__DYN_FIFOSIZE__RXFIFOSIZE   
 *
 * @BRIEF        Encodes the size of the selected RX endpoint FIFO. 
 *               Values of 3 \u2013 13 correspond to a FIFO size of 2n bytes 
 *               (8 \u2013 8192 bytes). If an endpoint has not been 
 *               configured, a value of 0 
 *               will be displayed. Where the TX and Rx endpoints share the 
 *               same FIFO, the Rx FIFO size will be encoded as 0xF. 
 *               Note: The register only has this interpretation when the 
 *               Index register is set to select one of Endpoints 1 \u2013 15 
 *               and Dynamic - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__DYN_FIFOSIZE__RXFIFOSIZE         BITFIELD(7, 4)
#define USB_OTGHS_8__DYN_FIFOSIZE__RXFIFOSIZE__POS    4

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__DYN_FIFOSIZE__TXFIFOSIZE   
 *
 * @BRIEF        Encodes the size of the selected TX endpoint FIFO. 
 *               Values of 3 \u2013 13 correspond to a FIFO size of 2n bytes 
 *               (8 \u2013 8192 bytes). If an endpoint has not been 
 *               configured, a value of 0 
 *               will be displayed. Where the TX and Rx endpoints share the 
 *               same FIFO, the Rx FIFO size will be encoded as 0xF. 
 *               Note: The register only has this interpretation when the 
 *               Index register is set to select one of Endpoints 1 \u2013 15 
 *               and Dynamic - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__DYN_FIFOSIZE__TXFIFOSIZE         BITFIELD(3, 0)
#define USB_OTGHS_8__DYN_FIFOSIZE__TXFIFOSIZE__POS    0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__DEVCTL__B_DEVICE   
 *
 * @BRIEF        Indicates if the device is operating as an A-device or a 
 *               B-device. Only valid when a session is in progress. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__DEVCTL__B_DEVICE                 BITFIELD(7, 7)
#define USB_OTGHS_8__DEVCTL__B_DEVICE__POS            7

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__DEVCTL__FSDEV   
 *
 * @BRIEF        HOST MODE: A full/high-speed peripheral connection was 
 *               detected on the port (by a D+ pullup).  
 *               PERIPH MODE: not accessible - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__DEVCTL__FSDEV                    BITFIELD(6, 6)
#define USB_OTGHS_8__DEVCTL__FSDEV__POS               6

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__DEVCTL__LSDEV   
 *
 * @BRIEF        HOST MODE: A low-speed peripheral connection was detected on 
 *               the port (by a D- pullup). 
 *               PERIPH MODE: not accessible - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__DEVCTL__LSDEV                    BITFIELD(5, 5)
#define USB_OTGHS_8__DEVCTL__LSDEV__POS               5

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__DEVCTL__VBUS   
 *
 * @BRIEF        Vbus USB power supply voltage sense - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__DEVCTL__VBUS                     BITFIELD(4, 3)
#define USB_OTGHS_8__DEVCTL__VBUS__POS                3

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__DEVCTL__HOSTMODE   
 *
 * @BRIEF        Status bit indicating that device is operating in host mode 
 *               - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__DEVCTL__HOSTMODE                 BITFIELD(2, 2)
#define USB_OTGHS_8__DEVCTL__HOSTMODE__POS            2

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__DEVCTL__HOSTREQ   
 *
 * @BRIEF        B-DEVICE MODE: OTG request to get host role on the bus by 
 *               HNP protocol 
 *               A-DEVICE MODE: not accessible - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__DEVCTL__HOSTREQ                  BITFIELD(1, 1)
#define USB_OTGHS_8__DEVCTL__HOSTREQ__POS             1

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__DEVCTL__SESSION   
 *
 * @BRIEF        A DEVICE MODE: Session status control 
 *               B DEVICE MODE: Session status control 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__DEVCTL__SESSION                  BITFIELD(0, 0)
#define USB_OTGHS_8__DEVCTL__SESSION__POS             0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__MISC__TX_EDMA   
 *
 * @BRIEF        1?b0: DMA_REQ signal for all IN Endpoints will be 
 *               de-asserted when MAXP bytes have been written to an 
 *               endpoint. This is late mode. 
 *               1?b1: DMA_REQ signal for all IN Endpoints will be 
 *               de-asserted when MAXP-8 bytes have been written to an 
 *               endpoint. This is early mode. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__MISC__TX_EDMA                    BITFIELD(1, 1)
#define USB_OTGHS_8__MISC__TX_EDMA__POS               1

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__MISC__RX_EDMA   
 *
 * @BRIEF        1?b0: DMA_REQ signal for all OUT Endpoints will be 
 *               de-asserted when MAXP bytes have been read to an endpoint. 
 *               This is late mode. 
 *               1?b1: DMA_REQ signal for all OUT Endpoints will be 
 *               de-asserted when MAXP-8 bytes have been read to an endpoint. 
 *               This is early mode. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__MISC__RX_EDMA                    BITFIELD(0, 0)
#define USB_OTGHS_8__MISC__RX_EDMA__POS               0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__TXFIFOSZ__DPB_TX   
 *
 * @BRIEF        Double Packet Buffering enable.  
 *               Note: Setting this bit doubles the size of the FIFO defined 
 *               in the "size" field. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__TXFIFOSZ__DPB_TX                 BITFIELD(4, 4)
#define USB_OTGHS_8__TXFIFOSZ__DPB_TX__POS            4

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__TXFIFOSZ__SIZE_TX   
 *
 * @BRIEF        Endpoint FIFO size = max packet size - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__TXFIFOSZ__SIZE_TX                BITFIELD(3, 0)
#define USB_OTGHS_8__TXFIFOSZ__SIZE_TX__POS           0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__RXFIFOSZ__DPB_RX   
 *
 * @BRIEF        Double Packet Buffering enable. 
 *               Note: Setting this bit doubles the size of the FIFO defined 
 *               in the "size" field. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__RXFIFOSZ__DPB_RX                 BITFIELD(4, 4)
#define USB_OTGHS_8__RXFIFOSZ__DPB_RX__POS            4

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__RXFIFOSZ__SIZE_RX   
 *
 * @BRIEF        Endpoint FIFO size = max packet size - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__RXFIFOSZ__SIZE_RX                BITFIELD(3, 0)
#define USB_OTGHS_8__RXFIFOSZ__SIZE_RX__POS           0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__ULPIVBUSCONTROL__USEEXTVBUSIND   
 *
 * @BRIEF        Enables the use of an external VBus indicator - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__ULPIVBUSCONTROL__USEEXTVBUSIND   BITFIELD(1, 1)
#define USB_OTGHS_8__ULPIVBUSCONTROL__USEEXTVBUSIND__POS 1

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__ULPIVBUSCONTROL__USEEXTVBUS   
 *
 * @BRIEF        Enables the use of external charge pump - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__ULPIVBUSCONTROL__USEEXTVBUS      BITFIELD(0, 0)
#define USB_OTGHS_8__ULPIVBUSCONTROL__USEEXTVBUS__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__ULPICARKITCONTROL__CARKITACTIVEEND   
 *
 * @BRIEF        Set by the link when CarkitActive is cleared.Software to 
 *               write a '0' to clear this bit.Signifies that the 
 *               core's(synchronous) USB mode has been entered. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__ULPICARKITCONTROL__CARKITACTIVEEND BITFIELD(5, 5)
#define USB_OTGHS_8__ULPICARKITCONTROL__CARKITACTIVEEND__POS 5

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__ULPICARKITCONTROL__RXCMDEVENT   
 *
 * @BRIEF        Set by link when a RxCmd has been latched.This bit must be 
 *               cleared by software. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__ULPICARKITCONTROL__RXCMDEVENT    BITFIELD(4, 4)
#define USB_OTGHS_8__ULPICARKITCONTROL__RXCMDEVENT__POS 4

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__ULPICARKITCONTROL__CANCELCARKIT   
 *
 * @BRIEF        Set by software to abort Carkit mode and wakeup the PHY. 
 *               This bit will auto-clear when the PHY has entered 
 *               synchronous mode. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__ULPICARKITCONTROL__CANCELCARKIT  BITFIELD(3, 3)
#define USB_OTGHS_8__ULPICARKITCONTROL__CANCELCARKIT__POS 3

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__ULPICARKITCONTROL__ALTINTEVENT   
 *
 * @BRIEF        Set by link when an alt_int event occurs. This bit must be 
 *               cleared by software. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__ULPICARKITCONTROL__ALTINTEVENT   BITFIELD(2, 2)
#define USB_OTGHS_8__ULPICARKITCONTROL__ALTINTEVENT__POS 2

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__ULPICARKITCONTROL__CARKITACTIVE   
 *
 * @BRIEF        Set by link when the (asynchronous) Carkit mode is entered 
 *               after DIR goes high. It is cleared on falling edge of DIR. - 
 *               (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__ULPICARKITCONTROL__CARKITACTIVE  BITFIELD(1, 1)
#define USB_OTGHS_8__ULPICARKITCONTROL__CARKITACTIVE__POS 1

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__ULPICARKITCONTROL__DISABLEUTMI   
 *
 * @BRIEF        Set and cleared by software to de-couple the reconstituted 
 *               UTMI signals from the USB controller prior to entering 
 *               Carkit mode. Note: Cannot be cleared while 
 *               ULPICarkitControl.CarkitActive is set. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__ULPICARKITCONTROL__DISABLEUTMI   BITFIELD(0, 0)
#define USB_OTGHS_8__ULPICARKITCONTROL__DISABLEUTMI__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__ULPIINTMASK__RXCMDINTEN   
 *
 * @BRIEF        Assert MC_NINT if ULPIIntSrc.RxCmdInt is set.To clear 
 *               MC_NINT, the software must clear 
 *               ULPICarkitControl.RxCmdEvent. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__ULPIINTMASK__RXCMDINTEN          BITFIELD(3, 3)
#define USB_OTGHS_8__ULPIINTMASK__RXCMDINTEN__POS     3

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__ULPIINTMASK__ACTIVEENDINTEN   
 *
 * @BRIEF        Assert MC_NINT if ULPIIntSrc.ActiveRndInt is set.  
 *               Note: To clear MC_NINT, the software must clear 
 *               ULPICarkitControl.CarkitActiveEnd. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__ULPIINTMASK__ACTIVEENDINTEN      BITFIELD(2, 2)
#define USB_OTGHS_8__ULPIINTMASK__ACTIVEENDINTEN__POS 2

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__ULPIINTMASK__ALTINTEN   
 *
 * @BRIEF        Assert MC_NINT if ULPIIntSrc.AltInt is set. To clear 
 *               MC_NINT, the software must clear 
 *               ULPICarkitControl.AltIntEvent - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__ULPIINTMASK__ALTINTEN            BITFIELD(1, 1)
#define USB_OTGHS_8__ULPIINTMASK__ALTINTEN__POS       1

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__ULPIINTMASK__REGINTEN   
 *
 * @BRIEF        Assert MC_NINT if ULPIIntSrc.RegInt is set. To clear 
 *               MC_NINT,the software must clear 
 *               ULPICarkitControl.ULPIRegCmplt. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__ULPIINTMASK__REGINTEN            BITFIELD(0, 0)
#define USB_OTGHS_8__ULPIINTMASK__REGINTEN__POS       0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__ULPIINTSRC__RXCMDINT   
 *
 * @BRIEF        Asserted if ULPICarkitControl.RxCmdEvent is set. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__ULPIINTSRC__RXCMDINT             BITFIELD(3, 3)
#define USB_OTGHS_8__ULPIINTSRC__RXCMDINT__POS        3

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__ULPIINTSRC__ACTIVEENDINT   
 *
 * @BRIEF        Asserted if ULPICarkitControl.CarkitActiveEnd is set. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__ULPIINTSRC__ACTIVEENDINT         BITFIELD(2, 2)
#define USB_OTGHS_8__ULPIINTSRC__ACTIVEENDINT__POS    2

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__ULPIINTSRC__ALTINT   
 *
 * @BRIEF        Asserted if ULPICarkitControl.AltIntEvent is set. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__ULPIINTSRC__ALTINT               BITFIELD(1, 1)
#define USB_OTGHS_8__ULPIINTSRC__ALTINT__POS          1

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__ULPIINTSRC__REGINT   
 *
 * @BRIEF        Asserted if ULPIRegControl.ULPIRegCmplt is set. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__ULPIINTSRC__REGINT               BITFIELD(0, 0)
#define USB_OTGHS_8__ULPIINTSRC__REGINT__POS          0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__ULPIREGDATA__DATA   
 *
 * @BRIEF        Register Data for PHY register access. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__ULPIREGDATA__DATA                BITFIELD(7, 0)
#define USB_OTGHS_8__ULPIREGDATA__DATA__POS           0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__ULPIREGADDR__ADDR   
 *
 * @BRIEF        Address for PHY Register access. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__ULPIREGADDR__ADDR                BITFIELD(7, 0)
#define USB_OTGHS_8__ULPIREGADDR__ADDR__POS           0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__ULPIREGCONTROL__ULPIRDNWR   
 *
 * @BRIEF        Set by software for register read access. Cleared by 
 *               software for register write access - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__ULPIREGCONTROL__ULPIRDNWR        BITFIELD(2, 2)
#define USB_OTGHS_8__ULPIREGCONTROL__ULPIRDNWR__POS   2

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__ULPIREGCONTROL__ULPIREGCOMPLT   
 *
 * @BRIEF        Set by link when register access is complete. This bit must 
 *               be cleared by SW. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__ULPIREGCONTROL__ULPIREGCOMPLT    BITFIELD(1, 1)
#define USB_OTGHS_8__ULPIREGCONTROL__ULPIREGCOMPLT__POS 1

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__ULPIREGCONTROL__ULPIREGREQ   
 *
 * @BRIEF        Set by software to initiate register access. This is cleared 
 *               when ULPIRegCmplt goes true. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__ULPIREGCONTROL__ULPIREGREQ       BITFIELD(0, 0)
#define USB_OTGHS_8__ULPIREGCONTROL__ULPIREGREQ__POS  0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__ULPIRAWDATA__DATA_3   
 *
 * @BRIEF        Active high interrupt indication(int) - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__ULPIRAWDATA__DATA_3              BITFIELD(3, 3)
#define USB_OTGHS_8__ULPIRAWDATA__DATA_3__POS         3

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__ULPIRAWDATA__DATA_2   
 *
 * @BRIEF        Single-ended zero(se0) - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__ULPIRAWDATA__DATA_2              BITFIELD(2, 2)
#define USB_OTGHS_8__ULPIRAWDATA__DATA_2__POS         2

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__ULPIRAWDATA__DATA_1   
 *
 * @BRIEF        Differential data(dat) - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__ULPIRAWDATA__DATA_1              BITFIELD(1, 1)
#define USB_OTGHS_8__ULPIRAWDATA__DATA_1__POS         1

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__ULPIRAWDATA__DATA_0   
 *
 * @BRIEF        Active high transmit enable(tx_enable) - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__ULPIRAWDATA__DATA_0              BITFIELD(0, 0)
#define USB_OTGHS_8__ULPIRAWDATA__DATA_0__POS         0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__EPINFO__RXENDPOINTS   
 *
 * @BRIEF        No of Rx Endpoints implemented in the design - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__EPINFO__RXENDPOINTS              BITFIELD(7, 4)
#define USB_OTGHS_8__EPINFO__RXENDPOINTS__POS         4

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__EPINFO__TXENDPOINTS   
 *
 * @BRIEF        No of Tx Endpoints implemented in the design - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__EPINFO__TXENDPOINTS              BITFIELD(3, 0)
#define USB_OTGHS_8__EPINFO__TXENDPOINTS__POS         0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__RAMINFO__DMACHANS   
 *
 * @BRIEF        Noof DMA channels implemented in the design. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__RAMINFO__DMACHANS                BITFIELD(7, 4)
#define USB_OTGHS_8__RAMINFO__DMACHANS__POS           4

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__RAMINFO__RAMBITS   
 *
 * @BRIEF        Width of the RAM address bus - 1. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__RAMINFO__RAMBITS                 BITFIELD(3, 0)
#define USB_OTGHS_8__RAMINFO__RAMBITS__POS            0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__LINKINFO__WTCON   
 *
 * @BRIEF        Sets the wait to be applied to allow for the user's 
 *               connect/disconnect filter in units of 533.3ns(Default 
 *               setting corresponds to 2.667us). - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__LINKINFO__WTCON                  BITFIELD(7, 4)
#define USB_OTGHS_8__LINKINFO__WTCON__POS             4

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__LINKINFO__WTID   
 *
 * @BRIEF        Sets the delays to be applied from IDPULLUP being asserted 
 *               to IDDIG being considered valid in units of 4.369ms(The 
 *               default setting corresponds to 52.43ms). - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__LINKINFO__WTID                   BITFIELD(3, 0)
#define USB_OTGHS_8__LINKINFO__WTID__POS              0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__VPLEN__VPLEN   
 *
 * @BRIEF        Sets the durationof VBus pulsing charge in 546.1us.(The 
 *               default setting corresponds to 32.77ms) - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__VPLEN__VPLEN                     BITFIELD(7, 0)
#define USB_OTGHS_8__VPLEN__VPLEN__POS                0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__HS_EOF1__HS_EOF1   
 *
 * @BRIEF        Sets for High-speed transactions the time before EOF to stop 
 *               beginning new 
 *               transactions, in units of 133.3ns. (The default setting 
 *               corresponds to 17.07?s.) - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__HS_EOF1__HS_EOF1                 BITFIELD(7, 0)
#define USB_OTGHS_8__HS_EOF1__HS_EOF1__POS            0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__FS_EOF1__FS_EOF1   
 *
 * @BRIEF        Sets for Full-speed transactions the time before EOF to stop 
 *               beginning new 
 *               transactions, in units of 533.3ns. (The default setting 
 *               corresponds to 63.46?s.) - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__FS_EOF1__FS_EOF1                 BITFIELD(7, 0)
#define USB_OTGHS_8__FS_EOF1__FS_EOF1__POS            0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__LS_EOF1__LS_EOF1   
 *
 * @BRIEF        Sets for Low-speed transactions the time before EOF to stop 
 *               beginning new 
 *               transactions, in units of 1.067?s. (The default setting 
 *               corresponds to 121.6?s.) - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__LS_EOF1__LS_EOF1                 BITFIELD(7, 0)
#define USB_OTGHS_8__LS_EOF1__LS_EOF1__POS            0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__SOFT_RST__NRSTX   
 *
 * @BRIEF        The default value of this bit is 1?b0; When a 1 is written 
 *               to this bit, the logic corresponding to XCLK domain within 
 *               Mentor USB OTG core will be reset within a minimum delay of 
 *               7 cycles of the XCLK. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__SOFT_RST__NRSTX                  BITFIELD(1, 1)
#define USB_OTGHS_8__SOFT_RST__NRSTX__POS             1

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__SOFT_RST__NRST   
 *
 * @BRIEF        The default value of this bit is 1?b0; When a 1 is written 
 *               to this bit, the logic corresponding to CLK domain within 
 *               Mentor USB OTG core will be reset within a minimum delay of 
 *               7 cycles of the CLK.  - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__SOFT_RST__NRST                   BITFIELD(0, 0)
#define USB_OTGHS_8__SOFT_RST__NRST__POS              0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__TXFUNCADDR__ADD   
 *
 * @BRIEF        7-bit USB address - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__TXFUNCADDR__ADD                  BITFIELD(6, 0)
#define USB_OTGHS_8__TXFUNCADDR__ADD__POS             0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__TX_HUBADDR__MULTI_TT   
 *
 * @BRIEF        number of transaction translators (TT) of the high-speed hub 
 *               - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__TX_HUBADDR__MULTI_TT             BITFIELD(7, 7)
#define USB_OTGHS_8__TX_HUBADDR__MULTI_TT__POS        7

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__TX_HUBADDR__ADD_H   
 *
 * @BRIEF        7-bit USB address of the high-speed hub - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__TX_HUBADDR__ADD_H                BITFIELD(6, 0)
#define USB_OTGHS_8__TX_HUBADDR__ADD_H__POS           0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__TX_HUBPORT__PORTNR   
 *
 * @BRIEF        7-bit hub (downstream) port number - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__TX_HUBPORT__PORTNR               BITFIELD(6, 0)
#define USB_OTGHS_8__TX_HUBPORT__PORTNR__POS          0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__RXFUNCADDR__ADD   
 *
 * @BRIEF        7-bit USB address - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__RXFUNCADDR__ADD                  BITFIELD(6, 0)
#define USB_OTGHS_8__RXFUNCADDR__ADD__POS             0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__RX_HUBADDR__MULTI_TT   
 *
 * @BRIEF        number of transaction translators (TT) of the high-speed hub 
 *               - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__RX_HUBADDR__MULTI_TT             BITFIELD(7, 7)
#define USB_OTGHS_8__RX_HUBADDR__MULTI_TT__POS        7

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__RX_HUBADDR__ADD_H   
 *
 * @BRIEF        7-bit USB address of the high-speed hub - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__RX_HUBADDR__ADD_H                BITFIELD(6, 0)
#define USB_OTGHS_8__RX_HUBADDR__ADD_H__POS           0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__RX_HUBPORT__PORTNR   
 *
 * @BRIEF        7-bit hub (downstream) port number - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__RX_HUBPORT__PORTNR               BITFIELD(6, 0)
#define USB_OTGHS_8__RX_HUBPORT__PORTNR__POS          0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__TYPE0__SPEED   
 *
 * @BRIEF        Bitfield description is not available - (RW)
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__TYPE0__SPEED                     BITFIELD(7, 6)
#define USB_OTGHS_8__TYPE0__SPEED__POS                6

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__NAKLIMIT0__FRAME_NUMS_FOR_NAK   
 *
 * @BRIEF        Bitfield description is not available - (RW)
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__NAKLIMIT0__FRAME_NUMS_FOR_NAK    BITFIELD(4, 0)
#define USB_OTGHS_8__NAKLIMIT0__FRAME_NUMS_FOR_NAK__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__CONFIGDATA0__MPRXE   
 *
 * @BRIEF        Bitfield description is not available - (RO)
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__CONFIGDATA0__MPRXE               BITFIELD(7, 7)
#define USB_OTGHS_8__CONFIGDATA0__MPRXE__POS          7

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__CONFIGDATA0__MPTXE   
 *
 * @BRIEF        Bitfield description is not available - (RO)
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__CONFIGDATA0__MPTXE               BITFIELD(6, 6)
#define USB_OTGHS_8__CONFIGDATA0__MPTXE__POS          6

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__CONFIGDATA0__BIGENDIAN   
 *
 * @BRIEF        Bitfield description is not available - (RO)
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__CONFIGDATA0__BIGENDIAN           BITFIELD(5, 5)
#define USB_OTGHS_8__CONFIGDATA0__BIGENDIAN__POS      5

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__CONFIGDATA0__HBRXE   
 *
 * @BRIEF        Bitfield description is not available - (RO)
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__CONFIGDATA0__HBRXE               BITFIELD(4, 4)
#define USB_OTGHS_8__CONFIGDATA0__HBRXE__POS          4

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__CONFIGDATA0__HBTXE   
 *
 * @BRIEF        Bitfield description is not available - (RO)
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__CONFIGDATA0__HBTXE               BITFIELD(3, 3)
#define USB_OTGHS_8__CONFIGDATA0__HBTXE__POS          3

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__CONFIGDATA0__DYNFIFOSIZING   
 *
 * @BRIEF        Bitfield description is not available - (RO)
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__CONFIGDATA0__DYNFIFOSIZING       BITFIELD(2, 2)
#define USB_OTGHS_8__CONFIGDATA0__DYNFIFOSIZING__POS  2

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__CONFIGDATA0__SOFTCONE   
 *
 * @BRIEF        Bitfield description is not available - (RO)
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__CONFIGDATA0__SOFTCONE            BITFIELD(1, 1)
#define USB_OTGHS_8__CONFIGDATA0__SOFTCONE__POS       1

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__CONFIGDATA0__UTMI_DATAWIDTH   
 *
 * @BRIEF        Bitfield description is not available - (RO)
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__CONFIGDATA0__UTMI_DATAWIDTH      BITFIELD(0, 0)
#define USB_OTGHS_8__CONFIGDATA0__UTMI_DATAWIDTH__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__TXTYPE__SPEED   
 *
 * @BRIEF        Operating speed of the target device when the core is 
 *               configured with the multipoint option: 
 *               00: Unused (Note: If selected, the target will be assumed to 
 *               be using the same connection speed as the core.) 
 *               01: High 
 *               10: Full 
 *               11: Low 
 *               When the core is not configured with the multipoint option 
 *               these bits should not be accessed. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__TXTYPE__SPEED                    BITFIELD(7, 6)
#define USB_OTGHS_8__TXTYPE__SPEED__POS               6

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__TXTYPE__PROTOCOL   
 *
 * @BRIEF        The CPU should set this to select the required protocol for 
 *               the TX endpoint: 
 *               00: Control 
 *               01: Isochronous 
 *               10: Bulk 
 *               11: Interrupt - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__TXTYPE__PROTOCOL                 BITFIELD(5, 4)
#define USB_OTGHS_8__TXTYPE__PROTOCOL__POS            4

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__TXTYPE__EP_NUMBER   
 *
 * @BRIEF        The CPU should set this value to the endpoint number 
 *               contained in the TX endpoint descriptor 
 *               returned to the USBOTGHS during device enumeration. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__TXTYPE__EP_NUMBER                BITFIELD(3, 0)
#define USB_OTGHS_8__TXTYPE__EP_NUMBER__POS           0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__TXINTERVAL__M   
 *
 * @BRIEF        There is a TxInterval register for each configured TX 
 *               endpoint (except Endpoint 0). In each case the value that is 
 *               set defines a 
 *               number of frames/microframes (High Speed transfers), as 
 *               follows: 
 *               Transfer Type Speed Valid values (m) Interpretation 
 *               Low Speed or Full Speed 1 \u2013 255 Polling interval is m 
 *               framesInterrupt . 
 *               High Speed 1 \u2013 16 Polling interval is 2(m-1) 
 *               microframes. 
 *               Isochronous Full Speed or High Speed 1 \u2013 16 Polling 
 *               interval is 2(m-1) frames/microframes. 
 *               Bulk Full Speed or High Speed 2 \u2013 16 NAK Limit is 
 *               2(m-1) frames/microframes. Note: A value of 
 *               0 or 1 disables the NAK timeout function. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__TXINTERVAL__M                    BITFIELD(7, 0)
#define USB_OTGHS_8__TXINTERVAL__M__POS               0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__RXTYPE__SPEED   
 *
 * @BRIEF        Operating speed of the target device when the core is 
 *               configured with the multipoint option: 
 *               00: Unused (Note: If selected, the target will be assumed to 
 *               be using the same connection speed as the core.) 
 *               01: High 
 *               10: Full 
 *               11: Low 
 *               When the core is not configured with the multipoint option 
 *               these bits should not be accessed. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__RXTYPE__SPEED                    BITFIELD(7, 6)
#define USB_OTGHS_8__RXTYPE__SPEED__POS               6

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__RXTYPE__PROTOCOL   
 *
 * @BRIEF        The CPU should set this to select the required protocol for 
 *               the TX endpoint: 
 *               00: Control 
 *               01: Isochronous 
 *               10: Bulk 
 *               11: Interrupt - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__RXTYPE__PROTOCOL                 BITFIELD(5, 4)
#define USB_OTGHS_8__RXTYPE__PROTOCOL__POS            4

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__RXTYPE__EP_NUMBER   
 *
 * @BRIEF        The CPU should set this value to the endpoint number 
 *               contained in the TX endpoint descriptor 
 *               returned to the USBOTGHS during device enumeration. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__RXTYPE__EP_NUMBER                BITFIELD(3, 0)
#define USB_OTGHS_8__RXTYPE__EP_NUMBER__POS           0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__RXINTERVAL__M   
 *
 * @BRIEF        There is a TxInterval register for each configured TX 
 *               endpoint (except Endpoint 0). In each case the value that is 
 *               set defines a 
 *               number of frames/microframes (High Speed transfers), as 
 *               follows: 
 *               Transfer Type Speed Valid values (m) Interpretation 
 *               Low Speed or Full Speed 1 \u2013 255 Polling interval is m 
 *               framesInterrupt . 
 *               High Speed 1 \u2013 16 Polling interval is 2(m-1) 
 *               microframes. 
 *               Isochronous Full Speed or High Speed 1 \u2013 16 Polling 
 *               interval is 2(m-1) frames/microframes. 
 *               Bulk Full Speed or High Speed 2 \u2013 16 NAK Limit is 
 *               2(m-1) frames/microframes. Note: A value of 
 *               0 or 1 disables the NAK timeout function. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__RXINTERVAL__M                    BITFIELD(7, 0)
#define USB_OTGHS_8__RXINTERVAL__M__POS               0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__FIFOSIZE__RXFIFOSIZE   
 *
 * @BRIEF        Encodes the size of the selected RX endpoint FIFO. 
 *               Values of 3 \u2013 13 correspond to a FIFO size of 2n bytes 
 *               (8 \u2013 8192 bytes). If an endpoint has not been 
 *               configured, a value of 0 
 *               will be displayed. Where the TX and Rx endpoints share the 
 *               same FIFO, the Rx FIFO size will be encoded as 0xF. 
 *               Note: The register only has this interpretation when the 
 *               Index register is set to select one of Endpoints 1 \u2013 15 
 *               and Dynamic - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__FIFOSIZE__RXFIFOSIZE             BITFIELD(7, 4)
#define USB_OTGHS_8__FIFOSIZE__RXFIFOSIZE__POS        4

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__FIFOSIZE__TXFIFOSIZE   
 *
 * @BRIEF        Encodes the size of the selected TX endpoint FIFO. 
 *               Values of 3 \u2013 13 correspond to a FIFO size of 2n bytes 
 *               (8 \u2013 8192 bytes). If an endpoint has not been 
 *               configured, a value of 0 
 *               will be displayed. Where the TX and Rx endpoints share the 
 *               same FIFO, the Rx FIFO size will be encoded as 0xF. 
 *               Note: The register only has this interpretation when the 
 *               Index register is set to select one of Endpoints 1 \u2013 15 
 *               and Dynamic - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__FIFOSIZE__TXFIFOSIZE             BITFIELD(3, 0)
#define USB_OTGHS_8__FIFOSIZE__TXFIFOSIZE__POS        0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__DMA_INTR__CH8_DMA_INTR   
 *
 * @BRIEF        Channel 8 DMA Interrupt - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__DMA_INTR__CH8_DMA_INTR           BITFIELD(7, 7)
#define USB_OTGHS_8__DMA_INTR__CH8_DMA_INTR__POS      7

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__DMA_INTR__CH7_DMA_INTR   
 *
 * @BRIEF        Channel 7 DMA Interrupt - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__DMA_INTR__CH7_DMA_INTR           BITFIELD(6, 6)
#define USB_OTGHS_8__DMA_INTR__CH7_DMA_INTR__POS      6

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__DMA_INTR__CH6_DMA_INTR   
 *
 * @BRIEF        Channel 6 DMA Interrupt - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__DMA_INTR__CH6_DMA_INTR           BITFIELD(5, 5)
#define USB_OTGHS_8__DMA_INTR__CH6_DMA_INTR__POS      5

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__DMA_INTR__CH5_DMA_INTR   
 *
 * @BRIEF        Channel 5 DMA Interrupt - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__DMA_INTR__CH5_DMA_INTR           BITFIELD(4, 4)
#define USB_OTGHS_8__DMA_INTR__CH5_DMA_INTR__POS      4

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__DMA_INTR__CH4_DMA_INTR   
 *
 * @BRIEF        Channel 4 DMA Interrupt - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__DMA_INTR__CH4_DMA_INTR           BITFIELD(3, 3)
#define USB_OTGHS_8__DMA_INTR__CH4_DMA_INTR__POS      3

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__DMA_INTR__CH3_DMA_INTR   
 *
 * @BRIEF        Channel 3 DMA Interrupt - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__DMA_INTR__CH3_DMA_INTR           BITFIELD(2, 2)
#define USB_OTGHS_8__DMA_INTR__CH3_DMA_INTR__POS      2

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__DMA_INTR__CH2_DMA_INTR   
 *
 * @BRIEF        Channel 2 DMA Interrupt - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__DMA_INTR__CH2_DMA_INTR           BITFIELD(1, 1)
#define USB_OTGHS_8__DMA_INTR__CH2_DMA_INTR__POS      1

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__DMA_INTR__CH1_DMA_INTR   
 *
 * @BRIEF        Channel 1 DMA Interrupt - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__DMA_INTR__CH1_DMA_INTR           BITFIELD(0, 0)
#define USB_OTGHS_8__DMA_INTR__CH1_DMA_INTR__POS      0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__C_T_HSBT__C_T_HSBT   
 *
 * @BRIEF        The value added to the minimum High Speed Timeout period 
 *               (736 bit times) in increments of 64 
 *               High Speed bit times. This allows the turn around timeout 
 *               period to be set to 16 possible values. 
 *               0 represents 736 bit times and 0xF represent 1696 bit times. 
 *               Intermediate values are distributed uniformly with offset of 
 *               64 bit times offset - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__C_T_HSBT__C_T_HSBT               BITFIELD(3, 0)
#define USB_OTGHS_8__C_T_HSBT__C_T_HSBT__POS          0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__LPM_CNTRL__LPMNAK   
 *
 * @BRIEF        DEVICE Mode: 
 *               This bit is used to place all end points in a state such 
 *               that the response to all transactions 
 *               other then an LPM transaction will be a NAK. This bit will 
 *               only take effect after the 
 *               USBOTGHS has been LPM suspended. In this case, the USBOTGHS 
 *               will continue 
 *               to NAK until this bit has been cleared by software. 
 *               HOST Mode: 
 *                Reserved - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__LPM_CNTRL__LPMNAK                BITFIELD(4, 4)
#define USB_OTGHS_8__LPM_CNTRL__LPMNAK__POS           4

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__LPM_CNTRL__LPMEN   
 *
 * @BRIEF        DEVICE Mode: 
 *               This register is used to enable LPM in the USBOTGHS. There 
 *               are three levels in 
 *               which LPM can be enabled which will determine the response 
 *               of the USBOTGHS to 
 *               LPM transactions. The three levels are: 
 *               # - LPM and Extended transactions are not supported. In this 
 *               case, 
 *               the USBOTGHS will not respond to LPM transactions and the 
 *               transaction 
 *               will timeout. 
 *               # LPM is not supported but extended transactions are 
 *               supported. In this 
 *               case, the USBOTGHS will respond to an LPM transaction with a 
 *               STALL. 
 *               # The USBOTGHS supports LPM extended transactions. In this 
 *               case, 
 *               the USBOTGHS will respond with a NYET or an ACK as 
 *               determined by the 
 *               value of LPMXMT and other conditions. 
 *               HOST Mode: 
 *               Reserved - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__LPM_CNTRL__LPMEN                 BITFIELD(3, 2)
#define USB_OTGHS_8__LPM_CNTRL__LPMEN__POS            2

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__LPM_CNTRL__LPMRES   
 *
 * @BRIEF        DEVICE Mode: 
 *               This bit is used by software to initiate resume (remote 
 *               wakeup). This bit differs from the 
 *               classic RESUME bit in the POWER register (address 0x01.2) in 
 *               that the RESUME signal 
 *               timing is controlled by hardware. When software writes this 
 *               bit, resume signaling will be 
 *               asserted for 50us. This bit is self clearing. 
 *               HOST Mode: 
 *               This bit is used by software to initiate a RESUME from the 
 *               L1 State. This bit differs from 
 *               the classic RESUME bit in the POWER register (address 
 *               0x01.2) in that the RESUME 
 *               signal timing is controlled by hardware. When software 
 *               writes this bit, resume signaling 
 *               will be asserted for a time specified by the HIRD field in 
 *               the LPM_ATTR register. This 
 *               bit is self clearing. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__LPM_CNTRL__LPMRES                BITFIELD(1, 1)
#define USB_OTGHS_8__LPM_CNTRL__LPMRES__POS           1

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__LPM_CNTRL__LPMXMT   
 *
 * @BRIEF        DEVICE MODE: 
 *               This bit is set by software to instruct the USBOTGHS to 
 *               transition to the L1 state 
 *               upon the receipt of the next LPM transaction. This bit is 
 *               only effective if LPMEN is set 
 *               to 2'b11. This bit can be set in the same cycle as LPMEN. If 
 *               this bit is set to 1'b1 and 
 *               LPMEN = 2'11, the USBOTGHS can respond in the following 
 *               ways: If no data is pending (All TX FIFOs are empty), the 
 *               USBOTGHS will 
 *               respond with an ACK. In this case this bit will self clear 
 *               and a software interrupt 
 *               will be generated. 
 *                If data is pending (Data resides in at least one TX FIFO), 
 *               the USBOTGHS 
 *               will respond with a NYET. In this case, this bit will NOT 
 *               self clear however a 
 *               software interrupt will be generated. 
 *               HOST MODE: 
 *               Software should set this bit to transmit an LPM transaction. 
 *               This bit is self clearing. This 
 *               bit will be immediately cleared upon receipt of any Token or 
 *               three timeouts have occurred. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__LPM_CNTRL__LPMXMT                BITFIELD(0, 0)
#define USB_OTGHS_8__LPM_CNTRL__LPMXMT__POS           0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__LPM_INTREN__LPMERREN   
 *
 * @BRIEF        1'b0 : Disable the LPMERR interrupt 
 *               1'b1 : Enable the LPMERR interrupt b - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__LPM_INTREN__LPMERREN             BITFIELD(5, 5)
#define USB_OTGHS_8__LPM_INTREN__LPMERREN__POS        5

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__LPM_INTREN__LPMRESEN   
 *
 * @BRIEF        1'b0 : Disable the LPMRES interrupt 
 *               1'b1 : Enable the LPMRES interrupt b - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__LPM_INTREN__LPMRESEN             BITFIELD(4, 4)
#define USB_OTGHS_8__LPM_INTREN__LPMRESEN__POS        4

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__LPM_INTREN__LPMNCEN   
 *
 * @BRIEF        1'b0 : Disable the LPMNC interrupt 
 *               1'b1 : Enable the LPMNC interrupt b - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__LPM_INTREN__LPMNCEN              BITFIELD(3, 3)
#define USB_OTGHS_8__LPM_INTREN__LPMNCEN__POS         3

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__LPM_INTREN__LPMACKEN   
 *
 * @BRIEF        1'b0 : Disable the LPMACK interrupt 
 *               1'b1 : Enable the LPMACK interrupt b - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__LPM_INTREN__LPMACKEN             BITFIELD(2, 2)
#define USB_OTGHS_8__LPM_INTREN__LPMACKEN__POS        2

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__LPM_INTREN__LPMNYEN   
 *
 * @BRIEF        1'b0 : Disable the LPMNY interrupt 
 *               1'b1 : Enable the LPMNY interrupt b - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__LPM_INTREN__LPMNYEN              BITFIELD(1, 1)
#define USB_OTGHS_8__LPM_INTREN__LPMNYEN__POS         1

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__LPM_INTREN__LPMSTEN   
 *
 * @BRIEF        1'b0 : Disable the LPMST interrupt 
 *               1'b1 : Enable the LPMST interrupt b - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__LPM_INTREN__LPMSTEN              BITFIELD(0, 0)
#define USB_OTGHS_8__LPM_INTREN__LPMSTEN__POS         0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__LPM_INTR__LPMERR   
 *
 * @BRIEF        DEVICE Mode: 
 *               This bit is set if an LPM transaction is received that has a 
 *               LinkState field that is not 
 *               supported. In this case, the response to the transaction 
 *               will be a STALL. However, the 
 *               LPM_ATTR register will be updated so that software can 
 *               observe the non compliant LPM 
 *               packet payload. 
 *               HOST Mode: 
 *               This bit is set if a response to the LPM transaction is 
 *               received with a Bit Stuff error or a 
 *               PID error. In this case, no suspend occurs and the state of 
 *               the device is now unknown. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__LPM_INTR__LPMERR                 BITFIELD(5, 5)
#define USB_OTGHS_8__LPM_INTR__LPMERR__POS            5

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__LPM_INTR__LPMRES   
 *
 * @BRIEF        DEVICE Mode: 
 *               This bit is set if the USBOTGHS has been resumed for any 
 *               reason. This bit is mutually 
 *               exclusive from the RESUME bit in the Power register (address 
 *               0x01).  
 *               HOST Mode: 
 *               This bit is set when the USBOTGHS has been resumed for any 
 *               reason. This bit is 
 *               mutually exclusive from the RESUME bit in the Power register 
 *               (address 0x01). - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__LPM_INTR__LPMRES                 BITFIELD(4, 4)
#define USB_OTGHS_8__LPM_INTR__LPMRES__POS            4

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__LPM_INTR__LPMNC   
 *
 * @BRIEF        DEVICE Mode: 
 *               This bit is set when an LPM transaction is received and the 
 *               USBOTGHS responds with 
 *               a NYET due to data pending in the RX FIFOs. This can only 
 *               occur under following 
 *               condition: 
 *                The LPMRESP field in the LMRESP register is set to 2'b11, 
 *               the LPMXMT field 
 *               is set to 1'b1 and there was data pending in the USBOTGHS TX 
 *               FIFOs. 
 *               HOST Mode: 
 *               This bit is set when an LPM transaction has been transmitted 
 *               and has failed to complete. 
 *               The transaction will have failed because a timeout occurred 
 *               or there were bit errors in the 
 *               response for three attempts - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__LPM_INTR__LPMNC                  BITFIELD(3, 3)
#define USB_OTGHS_8__LPM_INTR__LPMNC__POS             3

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__LPM_INTR__LPMACK   
 *
 * @BRIEF        DEVICE Mode: 
 *               This bit is set when an LPM transaction is received and the 
 *               USBOTGHS responds with 
 *               an ACK. This can only occur under the following condition: 
 *                The LPMRESP field in the LMRESP register is set to 2'b11, 
 *               the LPMXMT field 
 *               is set to 1'b1 and there was no data pending in the USBOTGHS 
 *               TX FIFOs. 
 *               HOST Mode: 
 *               This bit is set when an LPM transaction is transmitted and 
 *               the device responds with an 
 *               ACK. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__LPM_INTR__LPMACK                 BITFIELD(2, 2)
#define USB_OTGHS_8__LPM_INTR__LPMACK__POS            2

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__LPM_INTR__LPMNY   
 *
 * @BRIEF        DEVICE Mode: 
 *               This bit is set when an LPM transaction is received and the 
 *               USBOTGHS responds with 
 *               a NYET. This can only occur under the following conditions: 
 *                The LPMRESP field in the LMRESP register is set to 2'b11 
 *               and the LPMXMT 
 *               field is set to 1'b0. 
 *               HOST Mode: 
 *               This bit is set when an LPM transaction is transmitted and 
 *               the device responds with a 
 *               NYET - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__LPM_INTR__LPMNY                  BITFIELD(1, 1)
#define USB_OTGHS_8__LPM_INTR__LPMNY__POS             1

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__LPM_INTR__LPMST   
 *
 * @BRIEF        DEVICE Mode: 
 *               This bit is set when an LPM transaction is received and the 
 *               USBOTGHS responds with 
 *               a STALL. This can only occur under the following condition: 
 *               The LPMRESP field in the LMRESP register is set to 2'b01. 
 *               HOST Mode: 
 *               This bit is set when an LPM transaction is transmitted and 
 *               the device responds with a 
 *               STALL.n - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__LPM_INTR__LPMST                  BITFIELD(0, 0)
#define USB_OTGHS_8__LPM_INTR__LPMST__POS             0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__LPM_FADDR__LPM_FADDR   
 *
 * @BRIEF        The LPM function address function address.e - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__LPM_FADDR__LPM_FADDR             BITFIELD(6, 0)
#define USB_OTGHS_8__LPM_FADDR__LPM_FADDR__POS        0

    /* 
     * List of register bitfields values for component USB_OTGHS_8
     *
     */

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__FADDR__AD__FUNCADDR
 *
 * @BRIEF        The function address. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__FADDR__AD__FUNCADDR              0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__POWER__ISO_UPDATE__DISABLE
 *
 * @BRIEF        Disabled - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__POWER__ISO_UPDATE__DISABLE       0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__POWER__ISO_UPDATE__ENABLE
 *
 * @BRIEF        Enabled - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__POWER__ISO_UPDATE__ENABLE        0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__POWER__SOFT_CONN__DISCONNECTED
 *
 * @BRIEF        Peripheral is electrically disconnected - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__POWER__SOFT_CONN__DISCONNECTED   0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__POWER__SOFT_CONN__CONNECTED
 *
 * @BRIEF        Peripheral is connected and visible by opposite host - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__POWER__SOFT_CONN__CONNECTED      0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__POWER__HS_ENAB__DISABLE
 *
 * @BRIEF        Device remains in full-speed mode regardless - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__POWER__HS_ENAB__DISABLE          0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__POWER__HS_ENAB__ENABLE
 *
 * @BRIEF        Device negociates for high-speed mode - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__POWER__HS_ENAB__ENABLE           0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__POWER__HS_MODE__DISABLE
 *
 * @BRIEF        No effect - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__POWER__HS_MODE__DISABLE          0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__POWER__HS_MODE__ENABLE
 *
 * @BRIEF        High-speed mode successfully negotiated during USB reset. - 
 *               (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__POWER__HS_MODE__ENABLE           0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__POWER__RESET__NORESET
 *
 * @BRIEF        No action - (Write) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__POWER__RESET__NORESET            0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__POWER__RESET__RST_INACTIVE
 *
 * @BRIEF        No USB reset detected on the bus (peripheral mode only) - 
 *               (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__POWER__RESET__RST_INACTIVE       0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__POWER__RESET__RST_ACTIVE
 *
 * @BRIEF        USB reset detected on the bus - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__POWER__RESET__RST_ACTIVE         0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__POWER__RESET__DRIVE_RESET
 *
 * @BRIEF        Drive USB reset (SE0) on the bus - (Write) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__POWER__RESET__DRIVE_RESET        0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__POWER__RESUME__NO_RESUME
 *
 * @BRIEF        no action - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__POWER__RESUME__NO_RESUME         0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__POWER__RESUME__RESUME
 *
 * @BRIEF        drive resume signalling - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__POWER__RESUME__RESUME            0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__POWER__SUSPEND_MODE__ISNOTSUSPENDED
 *
 * @BRIEF        USB bus is active / resume has been detected - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__POWER__SUSPEND_MODE__ISNOTSUSPENDED 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__POWER__SUSPEND_MODE__SUSPEND
 *
 * @BRIEF        Suspend control/status of the USB bus - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__POWER__SUSPEND_MODE__SUSPEND     0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__POWER__ENABLE_SUSPENDM__DISABLE
 *
 * @BRIEF        PHY is always on - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__POWER__ENABLE_SUSPENDM__DISABLE  0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__POWER__ENABLE_SUSPENDM__ENABLE
 *
 * @BRIEF        PHY goes into suspend when USB does - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__POWER__ENABLE_SUSPENDM__ENABLE   0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__INTRUSB__VBUS_ERROR__NONACTIVE
 *
 * @BRIEF        Interrupt not active - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__INTRUSB__VBUS_ERROR__NONACTIVE   0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__INTRUSB__VBUS_ERROR__ACTIVE
 *
 * @BRIEF        Interrupt active - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__INTRUSB__VBUS_ERROR__ACTIVE      0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__INTRUSB__SESS_REQ__NONACTIVE
 *
 * @BRIEF        Interrupt not active - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__INTRUSB__SESS_REQ__NONACTIVE     0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__INTRUSB__SESS_REQ__ACTIVE
 *
 * @BRIEF        Interrupt active - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__INTRUSB__SESS_REQ__ACTIVE        0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__INTRUSB__DISCON__NONACTIVE
 *
 * @BRIEF        Interrupt not active - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__INTRUSB__DISCON__NONACTIVE       0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__INTRUSB__DISCON__ACTIVE
 *
 * @BRIEF        Interrupt active - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__INTRUSB__DISCON__ACTIVE          0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__INTRUSB__CONN__NONACTIVE
 *
 * @BRIEF        Interrupt not active - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__INTRUSB__CONN__NONACTIVE         0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__INTRUSB__CONN__ACTIVE
 *
 * @BRIEF        Interrupt active - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__INTRUSB__CONN__ACTIVE            0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__INTRUSB__SOF__NONACTIVE
 *
 * @BRIEF        Interrupt not active - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__INTRUSB__SOF__NONACTIVE          0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__INTRUSB__SOF__ACTIVE
 *
 * @BRIEF        Interrupt active - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__INTRUSB__SOF__ACTIVE             0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__INTRUSB__RESET_BABBLE__NONACTIVE
 *
 * @BRIEF        Interrupt not active - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__INTRUSB__RESET_BABBLE__NONACTIVE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__INTRUSB__RESET_BABBLE__ACTIVE
 *
 * @BRIEF        Interrupt active - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__INTRUSB__RESET_BABBLE__ACTIVE    0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__INTRUSB__RESUME__NONACTIVE
 *
 * @BRIEF        Interrupt not active - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__INTRUSB__RESUME__NONACTIVE       0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__INTRUSB__RESUME__ACTIVE
 *
 * @BRIEF        Interrupt active - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__INTRUSB__RESUME__ACTIVE          0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__INTRUSB__SUSPEND__NONACTIVE
 *
 * @BRIEF        Interrupt not active - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__INTRUSB__SUSPEND__NONACTIVE      0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__INTRUSB__SUSPEND__ACTIVE
 *
 * @BRIEF        Interrupt active - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__INTRUSB__SUSPEND__ACTIVE         0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__INTRUSBE__VBUS_ERROR_E__DISABLE
 *
 * @BRIEF        Enumeration value description is not available - (RW)
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__INTRUSBE__VBUS_ERROR_E__DISABLE  0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__INTRUSBE__VBUS_ERROR_E__ENABLE
 *
 * @BRIEF        Enumeration value description is not available - (RW)
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__INTRUSBE__VBUS_ERROR_E__ENABLE   0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__INTRUSBE__SESS_REQ_E__DISABLE
 *
 * @BRIEF        Enumeration value description is not available - (RW)
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__INTRUSBE__SESS_REQ_E__DISABLE    0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__INTRUSBE__SESS_REQ_E__ENABLE
 *
 * @BRIEF        Enumeration value description is not available - (RW)
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__INTRUSBE__SESS_REQ_E__ENABLE     0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__INTRUSBE__DISCON_E__DISABLE
 *
 * @BRIEF        Enumeration value description is not available - (RW)
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__INTRUSBE__DISCON_E__DISABLE      0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__INTRUSBE__DISCON_E__ENABLE
 *
 * @BRIEF        Enumeration value description is not available - (RW)
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__INTRUSBE__DISCON_E__ENABLE       0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__INTRUSBE__CONN_E__DISABLE
 *
 * @BRIEF        Enumeration value description is not available - (RW)
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__INTRUSBE__CONN_E__DISABLE        0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__INTRUSBE__CONN_E__ENABLE
 *
 * @BRIEF        Enumeration value description is not available - (RW)
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__INTRUSBE__CONN_E__ENABLE         0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__INTRUSBE__SOF_E__DISABLE
 *
 * @BRIEF        Enumeration value description is not available - (RW)
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__INTRUSBE__SOF_E__DISABLE         0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__INTRUSBE__SOF_E__ENABLE
 *
 * @BRIEF        Enumeration value description is not available - (RW)
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__INTRUSBE__SOF_E__ENABLE          0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__INTRUSBE__RESET_BABBLE_E__DISABLE
 *
 * @BRIEF        Enumeration value description is not available - (RW)
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__INTRUSBE__RESET_BABBLE_E__DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__INTRUSBE__RESET_BABBLE_E__ENABLE
 *
 * @BRIEF        Enumeration value description is not available - (RW)
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__INTRUSBE__RESET_BABBLE_E__ENABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__INTRUSBE__RESUME_E__DISABLE
 *
 * @BRIEF        Enumeration value description is not available - (RW)
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__INTRUSBE__RESUME_E__DISABLE      0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__INTRUSBE__RESUME_E__ENABLE
 *
 * @BRIEF        Enumeration value description is not available - (RW)
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__INTRUSBE__RESUME_E__ENABLE       0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__INTRUSBE__SUSPEND_E__DISABLE
 *
 * @BRIEF        Enumeration value description is not available - (RW)
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__INTRUSBE__SUSPEND_E__DISABLE     0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__INTRUSBE__SUSPEND_E__ENABLE
 *
 * @BRIEF        Enumeration value description is not available - (RW)
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__INTRUSBE__SUSPEND_E__ENABLE      0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__TESTMODE__FORCE_HOST__CLEAR
 *
 * @BRIEF        No effect - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__TESTMODE__FORCE_HOST__CLEAR      0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__TESTMODE__FORCE_HOST__SET
 *
 * @BRIEF        Force the core to enter HOST mode when the session bit is 
 *               set. Remains in HOST mode until the session bit is cleared. 
 *               - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__TESTMODE__FORCE_HOST__SET        0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__TESTMODE__FIFO_ACCESS__NO_ACTION
 *
 * @BRIEF        no action - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__TESTMODE__FIFO_ACCESS__NO_ACTION 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__TESTMODE__FIFO_ACCESS__SET
 *
 * @BRIEF        Enumeration value description is not available - (Write)
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__TESTMODE__FIFO_ACCESS__SET       0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__TESTMODE__FORCE__LOW_SPEED
 *
 * @BRIEF        Set Low speed - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__TESTMODE__FORCE__LOW_SPEED       0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__TESTMODE__FORCE__HIGH_SPEED
 *
 * @BRIEF        Set High speed - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__TESTMODE__FORCE__HIGH_SPEED      0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__TESTMODE__FORCE__FULL_SPEED
 *
 * @BRIEF        Set Full speed - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__TESTMODE__FORCE__FULL_SPEED      0x2ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__TESTMODE__FORCE__UNDEFINED
 *
 * @BRIEF        undefined - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__TESTMODE__FORCE__UNDEFINED       0x3ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__TESTMODE__TEST_PACKET__CLEAR
 *
 * @BRIEF        No effect - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__TESTMODE__TEST_PACKET__CLEAR     0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__TESTMODE__TEST_PACKET__SET
 *
 * @BRIEF        Enter the Test_Packet test mode. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__TESTMODE__TEST_PACKET__SET       0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__TESTMODE__TEST_K__CLEAR
 *
 * @BRIEF        No effect - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__TESTMODE__TEST_K__CLEAR          0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__TESTMODE__TEST_K__SET
 *
 * @BRIEF        Enters the Test_K test mode. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__TESTMODE__TEST_K__SET            0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__TESTMODE__TEST_J__CLEAR
 *
 * @BRIEF        No effect - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__TESTMODE__TEST_J__CLEAR          0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__TESTMODE__TEST_J__SET
 *
 * @BRIEF        Entesr the Test_J test mode. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__TESTMODE__TEST_J__SET            0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__TESTMODE__TEST_SE0_NAK__CLEAR
 *
 * @BRIEF        No effect - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__TESTMODE__TEST_SE0_NAK__CLEAR    0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__TESTMODE__TEST_SE0_NAK__SET
 *
 * @BRIEF        Enters the Test_SE0_NAK test mode. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__TESTMODE__TEST_SE0_NAK__SET      0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__DEVCTL__B_DEVICE__OTG_A
 *
 * @BRIEF        device A-device (host by default, VBUS provider) - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__DEVCTL__B_DEVICE__OTG_A          0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__DEVCTL__B_DEVICE__OTG_B
 *
 * @BRIEF        device is B-device (periph by default) - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__DEVCTL__B_DEVICE__OTG_B          0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__DEVCTL__VBUS__SESS_END
 *
 * @BRIEF        Vbus below "session end" - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__DEVCTL__VBUS__SESS_END           0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__DEVCTL__VBUS__A_SESS_NOT_VALID
 *
 * @BRIEF        Vbus above "session end", below "A-session valid" - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__DEVCTL__VBUS__A_SESS_NOT_VALID   0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__DEVCTL__VBUS__A_SESS_VALID
 *
 * @BRIEF        Vbus above "A-session valid", below "vbus valid" - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__DEVCTL__VBUS__A_SESS_VALID       0x2ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__DEVCTL__VBUS__VBUS_VALID
 *
 * @BRIEF        Vbus above "vbus valid" - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__DEVCTL__VBUS__VBUS_VALID         0x3ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__DEVCTL__SESSION__B_SESS_NOT_VALID
 *
 * @BRIEF        B DEVICE MODE: Vbus is below "B-session valid" - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__DEVCTL__SESSION__B_SESS_NOT_VALID 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__DEVCTL__SESSION__A_NOSESSION_B_DISCONNECT
 *
 * @BRIEF        A DEVICE MODE: Power down Vbus to end a session.  
 *               B DEVICE MODE: Request software disconnect when B session is 
 *               valid - (Write) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__DEVCTL__SESSION__A_NOSESSION_B_DISCONNECT 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__DEVCTL__SESSION__A_SESSION_B_SRP
 *
 * @BRIEF        A DEVICE MODE: Powerup Vbus to start a session. B DEVICE 
 *               MODE: Request session (SRP) when B session is not valid - 
 *               (Write) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__DEVCTL__SESSION__A_SESSION_B_SRP 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__DEVCTL__SESSION__B_SESS_VALID
 *
 * @BRIEF        B DEVICE MODE: Vbus is above "B-session valid" - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__DEVCTL__SESSION__B_SESS_VALID    0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__TXFIFOSZ__SIZE_TX__SZ_8B
 *
 * @BRIEF        max packet size is 8 bytes - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__TXFIFOSZ__SIZE_TX__SZ_8B         0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__TXFIFOSZ__SIZE_TX__SZ_16B
 *
 * @BRIEF        max packet size is 16 bytes - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__TXFIFOSZ__SIZE_TX__SZ_16B        0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__TXFIFOSZ__SIZE_TX__SZ_32B
 *
 * @BRIEF        max packet size is 32 bytes - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__TXFIFOSZ__SIZE_TX__SZ_32B        0x2ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__TXFIFOSZ__SIZE_TX__SZ_64B
 *
 * @BRIEF        max packet size is 64 bytes - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__TXFIFOSZ__SIZE_TX__SZ_64B        0x3ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__TXFIFOSZ__SIZE_TX__SZ_128B
 *
 * @BRIEF        max packet size is 128 bytes - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__TXFIFOSZ__SIZE_TX__SZ_128B       0x4ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__TXFIFOSZ__SIZE_TX__SZ_256B
 *
 * @BRIEF        max packet size is 256 bytes - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__TXFIFOSZ__SIZE_TX__SZ_256B       0x5ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__TXFIFOSZ__SIZE_TX__SZ_512B
 *
 * @BRIEF        max packet size is 512 bytes - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__TXFIFOSZ__SIZE_TX__SZ_512B       0x6ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__TXFIFOSZ__SIZE_TX__SZ_1024B
 *
 * @BRIEF        max packet size is 1024 bytes - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__TXFIFOSZ__SIZE_TX__SZ_1024B      0x7ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__TXFIFOSZ__SIZE_TX__SZ_2048B
 *
 * @BRIEF        max packet size is 2048 bytes - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__TXFIFOSZ__SIZE_TX__SZ_2048B      0x8ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__TXFIFOSZ__SIZE_TX__SZ_4096B
 *
 * @BRIEF        max packet size is 4096 bytes - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__TXFIFOSZ__SIZE_TX__SZ_4096B      0x9ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__RXFIFOSZ__SIZE_RX__SZ_8B
 *
 * @BRIEF        max packet size is 8 bytes - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__RXFIFOSZ__SIZE_RX__SZ_8B         0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__RXFIFOSZ__SIZE_RX__SZ_16B
 *
 * @BRIEF        max packet size is 16 bytes - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__RXFIFOSZ__SIZE_RX__SZ_16B        0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__RXFIFOSZ__SIZE_RX__SZ_32B
 *
 * @BRIEF        max packet size is 32 bytes - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__RXFIFOSZ__SIZE_RX__SZ_32B        0x2ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__RXFIFOSZ__SIZE_RX__SZ_64B
 *
 * @BRIEF        max packet size is 64 bytes - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__RXFIFOSZ__SIZE_RX__SZ_64B        0x3ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__RXFIFOSZ__SIZE_RX__SZ_128B
 *
 * @BRIEF        max packet size is 128 bytes - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__RXFIFOSZ__SIZE_RX__SZ_128B       0x4ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__RXFIFOSZ__SIZE_RX__SZ_256B
 *
 * @BRIEF        max packet size is 256 bytes - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__RXFIFOSZ__SIZE_RX__SZ_256B       0x5ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__RXFIFOSZ__SIZE_RX__SZ_512B
 *
 * @BRIEF        max packet size is 512 bytes - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__RXFIFOSZ__SIZE_RX__SZ_512B       0x6ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__RXFIFOSZ__SIZE_RX__SZ_1024B
 *
 * @BRIEF        max packet size is 1024 bytes - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__RXFIFOSZ__SIZE_RX__SZ_1024B      0x7ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__RXFIFOSZ__SIZE_RX__SZ_2048B
 *
 * @BRIEF        max packet size is 2048 bytes - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__RXFIFOSZ__SIZE_RX__SZ_2048B      0x8ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__RXFIFOSZ__SIZE_RX__SZ_4096B
 *
 * @BRIEF        max packet size is 4096 bytes - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__RXFIFOSZ__SIZE_RX__SZ_4096B      0x9ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__ULPIVBUSCONTROL__USEEXTVBUSIND__NON_ACTIVE
 *
 * @BRIEF        No external VBus indicator - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__ULPIVBUSCONTROL__USEEXTVBUSIND__NON_ACTIVE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__ULPIVBUSCONTROL__USEEXTVBUSIND__ACTIVE
 *
 * @BRIEF        External VBus indicator - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__ULPIVBUSCONTROL__USEEXTVBUSIND__ACTIVE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__ULPIVBUSCONTROL__USEEXTVBUS__NON_ACTIVE
 *
 * @BRIEF        Internal charge pump - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__ULPIVBUSCONTROL__USEEXTVBUS__NON_ACTIVE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__ULPIVBUSCONTROL__USEEXTVBUS__ACTIVE
 *
 * @BRIEF        external charge pump - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__ULPIVBUSCONTROL__USEEXTVBUS__ACTIVE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__ULPIINTMASK__RXCMDINTEN__DISABLE
 *
 * @BRIEF        Enumeration value description is not available - (RW)
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__ULPIINTMASK__RXCMDINTEN__DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__ULPIINTMASK__RXCMDINTEN__ENABLE
 *
 * @BRIEF        Enumeration value description is not available - (RW)
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__ULPIINTMASK__RXCMDINTEN__ENABLE  0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__ULPIINTMASK__ACTIVEENDINTEN__DISABLE
 *
 * @BRIEF        Enumeration value description is not available - (RW)
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__ULPIINTMASK__ACTIVEENDINTEN__DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__ULPIINTMASK__ACTIVEENDINTEN__ENABLE
 *
 * @BRIEF        Enumeration value description is not available - (RW)
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__ULPIINTMASK__ACTIVEENDINTEN__ENABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__ULPIINTMASK__ALTINTEN__DISABLE
 *
 * @BRIEF        Enumeration value description is not available - (RW)
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__ULPIINTMASK__ALTINTEN__DISABLE   0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__ULPIINTMASK__ALTINTEN__ENABLE
 *
 * @BRIEF        Enumeration value description is not available - (RW)
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__ULPIINTMASK__ALTINTEN__ENABLE    0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__ULPIINTMASK__REGINTEN__DISABLE
 *
 * @BRIEF        Enumeration value description is not available - (RW)
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__ULPIINTMASK__REGINTEN__DISABLE   0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__ULPIINTMASK__REGINTEN__ENABLE
 *
 * @BRIEF        Enumeration value description is not available - (RW)
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__ULPIINTMASK__REGINTEN__ENABLE    0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__TX_HUBADDR__MULTI_TT__SINGLE
 *
 * @BRIEF        HS hub has a single TT - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__TX_HUBADDR__MULTI_TT__SINGLE     0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__TX_HUBADDR__MULTI_TT__MULTIPLE
 *
 * @BRIEF        HS hub has several TTs - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__TX_HUBADDR__MULTI_TT__MULTIPLE   0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__RX_HUBADDR__MULTI_TT__SINGLE
 *
 * @BRIEF        HS hub has a single TT - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__RX_HUBADDR__MULTI_TT__SINGLE     0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   USB_OTGHS_8__RX_HUBADDR__MULTI_TT__MULTIPLE
 *
 * @BRIEF        HS hub has several TTs - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define USB_OTGHS_8__RX_HUBADDR__MULTI_TT__MULTIPLE   0x1ul

#ifdef __cplusplus
}
#endif
#endif                                                     /* __USB_OTGHS_8_CRED_H 
                                                            */

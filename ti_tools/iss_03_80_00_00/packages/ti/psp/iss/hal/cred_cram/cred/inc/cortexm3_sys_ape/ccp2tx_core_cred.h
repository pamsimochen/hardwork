/** ==================================================================
 *  @file   ccp2tx_core_cred.h                                                  
 *                                                                    
 *  @path   /ti/psp/iss/hal/cred_cram/cred/inc/cortexm3_sys_ape/                                                  
 *                                                                    
 *  @desc   This  File contains.                                      
 * ===================================================================
 *  Copyright (c) Texas Instruments Inc 2011, 2012                    
 *                                                                    
 *  Use of this software is controlled by the terms and conditions found
 *  in the license agreement under which this software has been supplied
 * ===================================================================*/

/* ============================================================================ 
 * TEXAS INSTRUMENTS INCORPORATED PROPRIETARY INFORMATION Property of Texas
 * Instruments For Unrestricted Internal Use Only Unauthorized reproduction
 * and/or distribution is strictly prohibited.  This product is protected
 * under copyright law and trade secret law as an unpublished work.  Created
 * 2008, (C) Copyright 2008 Texas Instruments.  All rights reserved. */

/**
 *  @Component:   CCP2TX_CORE
 *
 *  @Filename:    ccp2tx_core_cred.h
 *
 *  @Description: Component description is not available
 *
 *  Generated by: Socrates CRED generator prototype
 *
    *//* ====================================================================== */

#ifndef __CCP2TX_CORE_CRED_H
#define __CCP2TX_CORE_CRED_H

#ifdef __cplusplus
extern "C" {
#endif

    /* 
     * Instance CCP2TX_CORE of component CCP2TX_CORE mapped in MONICA at address 0x4A0F2000
     */

                                                                              /*-------------------------------------------------------------------------*//**
 * @DEFINITION   BITFIELD
 *
 * @BRIEF        The bitfield must be defined according to register width
 *               of the component - 64/32/16/8
 *
    *//*------------------------------------------------------------------------ */
#undef BITFIELD
#define BITFIELD BITFIELD_32

    /* 
     *  List of Register arrays for component CCP2TX_CORE
     *
     */

    /* 
     *  List of bundle arrays for component CCP2TX_CORE
     *
     */

    /* 
     *  List of bundles for component CCP2TX_CORE
     *
     */

    /* 
     * List of registers for component CCP2TX_CORE
     *
     */

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2TX_CORE__CCPT_REVISION
 *
 * @BRIEF        MODULE REVISION 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2TX_CORE__CCPT_REVISION                         0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2TX_CORE__CCPT_CONFIG
 *
 * @BRIEF        CONFIG REGISTER 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2TX_CORE__CCPT_CONFIG                           0x4ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2TX_CORE__CCPT_CODE
 *
 * @BRIEF        CODE REGSITER 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2TX_CORE__CCPT_CODE                             0x8ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2TX_CORE__CCPT_INTMASK
 *
 * @BRIEF        INTERRUPT ENABLE REGISTER 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2TX_CORE__CCPT_INTMASK                          0xCul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2TX_CORE__CCPT_INTSTATUS
 *
 * @BRIEF        INTERRUPT STATUS REGISTER 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2TX_CORE__CCPT_INTSTATUS                        0x10ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2TX_CORE__CCPT_CONTROL
 *
 * @BRIEF        CONTROL REGISTER 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2TX_CORE__CCPT_CONTROL                          0x14ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2TX_CORE__CCPT_STATUS
 *
 * @BRIEF        STATUS REGISTER 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2TX_CORE__CCPT_STATUS                           0x18ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2TX_CORE__CCPT_LINE_ADDRESS0
 *
 * @BRIEF        LINE ADDRESS FOR DMA CHANNEL 0 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2TX_CORE__CCPT_LINE_ADDRESS0                    0x1Cul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2TX_CORE__CCPT_LINE_AINC0
 *
 * @BRIEF        LINE ADDRESS INCREMENT FOR DMA CHANNEL 0 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2TX_CORE__CCPT_LINE_AINC0                       0x20ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2TX_CORE__CCPT_LINE_BYTESIZE
 *
 * @BRIEF        LINE BYTE SIZE REGISTER 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2TX_CORE__CCPT_LINE_BYTESIZE                    0x24ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2TX_CORE__CCPT_LINE_NUMBER
 *
 * @BRIEF        LINE NUMBER REGISTER 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2TX_CORE__CCPT_LINE_NUMBER                      0x28ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2TX_CORE__CCPT_BLANKING_LENGTH
 *
 * @BRIEF        BLANKING LENGTH 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2TX_CORE__CCPT_BLANKING_LENGTH                  0x2Cul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2TX_CORE__CCPT_BLANKING_PAD
 *
 * @BRIEF        BLANKING PADDING DATA 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2TX_CORE__CCPT_BLANKING_PAD                     0x30ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2TX_CORE__CCPT_FIFO_STATUS
 *
 * @BRIEF        FIFO STATUS REGISTER 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2TX_CORE__CCPT_FIFO_STATUS                      0x34ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2TX_CORE__CCPT_PAD
 *
 * @BRIEF        PADDING DATA 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2TX_CORE__CCPT_PAD                              0x38ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2TX_CORE__CCPT_YUV2RGB_CTRL
 *
 * @BRIEF        YUV422 TO RGB888 CONVERSION CONTROL 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2TX_CORE__CCPT_YUV2RGB_CTRL                     0x3Cul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2TX_CORE__CCPT_YUV2RGB_MATRIX1
 *
 * @BRIEF        YUV422 TO RGB888 CONVERSION MATRIX1 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2TX_CORE__CCPT_YUV2RGB_MATRIX1                  0x40ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2TX_CORE__CCPT_YUV2RGB_MATRIX2
 *
 * @BRIEF        YUV422 TO RGB888 CONVERSION MATRIX2 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2TX_CORE__CCPT_YUV2RGB_MATRIX2                  0x44ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2TX_CORE__CCPT_YUV2RGB_MATRIX3
 *
 * @BRIEF        YUV422 TO RGB888 CONVERSION MATRIX3 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2TX_CORE__CCPT_YUV2RGB_MATRIX3                  0x48ul

    /* 
     * List of register bitfields for component CCP2TX_CORE
     *
     */

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2TX_CORE__CCPT_REVISION__REV   
 *
 * @BRIEF        IP Version :  [7:4] - Major revision , [3:0] - Minor 
 *               revision - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2TX_CORE__CCPT_REVISION__REV               BITFIELD(7, 0)
#define CCP2TX_CORE__CCPT_REVISION__REV__POS          0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2TX_CORE__CCPT_CONFIG__POLY   
 *
 * @BRIEF        Set Polynomial of CRC16. 
 *                The default value 1021h means X^16 + X^12 + X^5 + 1 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2TX_CORE__CCPT_CONFIG__POLY                BITFIELD(31, 16)
#define CCP2TX_CORE__CCPT_CONFIG__POLY__POS           16

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2TX_CORE__CCPT_CONFIG__IDLEACKMODE   
 *
 * @BRIEF        PM protocol idle ack mode configuration 
 *                00: force idle, 
 *                01: no idle, 
 *                10 : smart idle , 
 *                11: smart idle wakeup modes - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2TX_CORE__CCPT_CONFIG__IDLEACKMODE         BITFIELD(15, 14)
#define CCP2TX_CORE__CCPT_CONFIG__IDLEACKMODE__POS    14

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2TX_CORE__CCPT_CONFIG__MSTANDBYMODE   
 *
 * @BRIEF        PM protocol standbymode configuration : 
 *                00 : force standby, 
 *                01: no standby, 
 *                10 : smart standby, 
 *                11: smart standby wakeup modes - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2TX_CORE__CCPT_CONFIG__MSTANDBYMODE        BITFIELD(13, 12)
#define CCP2TX_CORE__CCPT_CONFIG__MSTANDBYMODE__POS   12

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2TX_CORE__CCPT_CONFIG__BIT_SEL   
 *
 * @BRIEF        Bit position select for RAW 2byte/pixel. 
 *                 0000: LSB to bit0 in 2 byte. 
 *                 0001: LSB to bit 1 in 2byte. 
 *               ... 
 *                 1000 : LSB to bit8 in 2 byte. 
 *                others : Reserved . 
 *                When RAW8-DPCM or RAW10 output format, this field is less 
 *               than 7. 
 *                When RAW12 output format, this field is less than 5 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2TX_CORE__CCPT_CONFIG__BIT_SEL             BITFIELD(11, 8)
#define CCP2TX_CORE__CCPT_CONFIG__BIT_SEL__POS        8

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2TX_CORE__CCPT_CONFIG__BURST_LENGTH   
 *
 * @BRIEF        00: burstlength of 4 words, 
 *                01: burstlength of 8 words, 
 *                10: burstlength of 16 words, 
 *                11: NA and undefined behavior - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2TX_CORE__CCPT_CONFIG__BURST_LENGTH        BITFIELD(7, 6)
#define CCP2TX_CORE__CCPT_CONFIG__BURST_LENGTH__POS   6

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2TX_CORE__CCPT_CONFIG__RESERVED_2   
 *
 * @BRIEF        Not used - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2TX_CORE__CCPT_CONFIG__RESERVED_2          BITFIELD(4, 4)
#define CCP2TX_CORE__CCPT_CONFIG__RESERVED_2__POS     4

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2TX_CORE__CCPT_CONFIG__RESERVED_1   
 *
 * @BRIEF        Not used - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2TX_CORE__CCPT_CONFIG__RESERVED_1          BITFIELD(3, 3)
#define CCP2TX_CORE__CCPT_CONFIG__RESERVED_1__POS     3

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2TX_CORE__CCPT_CONFIG__CLK_STRB   
 *
 * @BRIEF        Select a signal for ccpt_clk. 
 *                  0: strobe as CCP2. 
 *                  1: clock as CCP1  - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2TX_CORE__CCPT_CONFIG__CLK_STRB            BITFIELD(2, 2)
#define CCP2TX_CORE__CCPT_CONFIG__CLK_STRB__POS       2

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2TX_CORE__CCPT_CONFIG__AUTO_IDLE   
 *
 * @BRIEF        0: auto idle disabled.  
 *               1: auto idle enabled. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2TX_CORE__CCPT_CONFIG__AUTO_IDLE           BITFIELD(1, 1)
#define CCP2TX_CORE__CCPT_CONFIG__AUTO_IDLE__POS      1

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2TX_CORE__CCPT_CONFIG__RESET   
 *
 * @BRIEF        Synchronously reset regsiters and internal states .   0: 
 *               NOP, 1: activate reset.Auto idle to be disabled before 
 *               making config_reset 1. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2TX_CORE__CCPT_CONFIG__RESET               BITFIELD(0, 0)
#define CCP2TX_CORE__CCPT_CONFIG__RESET__POS          0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2TX_CORE__CCPT_CODE__FSPC   
 *
 * @BRIEF        Inserted FSP code - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2TX_CORE__CCPT_CODE__FSPC                  BITFIELD(23, 16)
#define CCP2TX_CORE__CCPT_CODE__FSPC__POS             16

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2TX_CORE__CCPT_CODE__FEC   
 *
 * @BRIEF        Frame end Sync code ID - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2TX_CORE__CCPT_CODE__FEC                   BITFIELD(15, 12)
#define CCP2TX_CORE__CCPT_CODE__FEC__POS              12

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2TX_CORE__CCPT_CODE__FSC   
 *
 * @BRIEF        Frame start Sync code ID - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2TX_CORE__CCPT_CODE__FSC                   BITFIELD(11, 8)
#define CCP2TX_CORE__CCPT_CODE__FSC__POS              8

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2TX_CORE__CCPT_CODE__LEC   
 *
 * @BRIEF        Line end sync code ID - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2TX_CORE__CCPT_CODE__LEC                   BITFIELD(7, 4)
#define CCP2TX_CORE__CCPT_CODE__LEC__POS              4

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2TX_CORE__CCPT_CODE__LSC   
 *
 * @BRIEF        Line start sync end ID - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2TX_CORE__CCPT_CODE__LSC                   BITFIELD(3, 0)
#define CCP2TX_CORE__CCPT_CODE__LSC__POS              0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2TX_CORE__CCPT_INTMASK__CE_DMA   
 *
 * @BRIEF        Mask interrupt event for CCP2 end 
 *                0: unmask, the DMA request event is enabled. 
 *                1: mask, the DMA request event is disabled  - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2TX_CORE__CCPT_INTMASK__CE_DMA             BITFIELD(7, 7)
#define CCP2TX_CORE__CCPT_INTMASK__CE_DMA__POS        7

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2TX_CORE__CCPT_INTMASK__FIFO_UNF_DMA   
 *
 * @BRIEF        Mask DMA request event for FIFO underflow. 
 *                0: unmask, the DMA request event is enabled. 
 *                1: mask, the DMA request event is disabled  - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2TX_CORE__CCPT_INTMASK__FIFO_UNF_DMA       BITFIELD(6, 6)
#define CCP2TX_CORE__CCPT_INTMASK__FIFO_UNF_DMA__POS  6

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2TX_CORE__CCPT_INTMASK__DMA_END_DMA   
 *
 * @BRIEF        Mask DMA request event for DMA end. 
 *                0: unmask, the DMA request event is enabled. 
 *                1: mask, the DMA request event is disabled  - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2TX_CORE__CCPT_INTMASK__DMA_END_DMA        BITFIELD(5, 5)
#define CCP2TX_CORE__CCPT_INTMASK__DMA_END_DMA__POS   5

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2TX_CORE__CCPT_INTMASK__AE_DMA   
 *
 * @BRIEF        Mask DMA request event for All end. 
 *                0: unmask, the DMA request event is enabled. 
 *                1: mask, the DMA request event is disabled  - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2TX_CORE__CCPT_INTMASK__AE_DMA             BITFIELD(4, 4)
#define CCP2TX_CORE__CCPT_INTMASK__AE_DMA__POS        4

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2TX_CORE__CCPT_INTMASK__CE   
 *
 * @BRIEF        Mask interrupt event for CCP2 end 
 *                0: unmask, the interrupt event is enabled. 
 *                1: mask, the interrupt event is disabled  - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2TX_CORE__CCPT_INTMASK__CE                 BITFIELD(3, 3)
#define CCP2TX_CORE__CCPT_INTMASK__CE__POS            3

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2TX_CORE__CCPT_INTMASK__FIFO_UNF   
 *
 * @BRIEF        Mask interrupt event for FIFO underflow.  
 *                0: unmask, the interrupt event is enabled. 
 *                1: mask, the interrupt event is disabled - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2TX_CORE__CCPT_INTMASK__FIFO_UNF           BITFIELD(2, 2)
#define CCP2TX_CORE__CCPT_INTMASK__FIFO_UNF__POS      2

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2TX_CORE__CCPT_INTMASK__DMA_END   
 *
 * @BRIEF        Mask interrupt event for DMA end. 
 *                0: unmask, the interrupt event is enabled. 
 *                1: mask, the interrupt event is disabled - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2TX_CORE__CCPT_INTMASK__DMA_END            BITFIELD(1, 1)
#define CCP2TX_CORE__CCPT_INTMASK__DMA_END__POS       1

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2TX_CORE__CCPT_INTMASK__AE   
 *
 * @BRIEF        Mask interrupt event for All end.  
 *                0: unmask, the interrupt event is enabled. 
 *                1: mask, the interrupt event is disabled - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2TX_CORE__CCPT_INTMASK__AE                 BITFIELD(0, 0)
#define CCP2TX_CORE__CCPT_INTMASK__AE__POS            0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2TX_CORE__CCPT_INTSTATUS__CE_DMA   
 *
 * @BRIEF        DMA request (to SDMA) event status for CCP2 end. This is 
 *               generated at the end of each line transmission. 
 *               READ:  
 *               0 : Event did not occur 
 *               1:  Event occurred. 
 *                WRITE:  
 *                0: status bit unchanged 
 *               1: status bit reset to 0 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2TX_CORE__CCPT_INTSTATUS__CE_DMA           BITFIELD(7, 7)
#define CCP2TX_CORE__CCPT_INTSTATUS__CE_DMA__POS      7

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2TX_CORE__CCPT_INTSTATUS__FIFO_UNF_DMA   
 *
 * @BRIEF        DMA request event status for FIFO underflow. 
 *               READ: 
 *               0 : Event did not occur 
 *               1:  Event occurred. 
 *               WRITE: 
 *               0: status bit unchanged 
 *               1: status bit reset to 0 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2TX_CORE__CCPT_INTSTATUS__FIFO_UNF_DMA     BITFIELD(6, 6)
#define CCP2TX_CORE__CCPT_INTSTATUS__FIFO_UNF_DMA__POS 6

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2TX_CORE__CCPT_INTSTATUS__DMA_END_DMA   
 *
 * @BRIEF        DMA request event status for DMA end. This is generated 
 *               after reading all the bytes needed for the current line 
 *               transmission. 
 *               READ: 
 *               0 : Event did not occur 
 *               1:  Event occurred. 
 *               WRITE: 
 *               0: status bit unchanged 
 *               1: status bit reset to 0 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2TX_CORE__CCPT_INTSTATUS__DMA_END_DMA      BITFIELD(5, 5)
#define CCP2TX_CORE__CCPT_INTSTATUS__DMA_END_DMA__POS 5

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2TX_CORE__CCPT_INTSTATUS__AE_DMA   
 *
 * @BRIEF        DMA request event status for All end. This is generated at 
 *               the end of frame transmission (all lines). 
 *               READ: 
 *               0 : Event did not occur 
 *               1:  Event occurred. 
 *               WRITE: 
 *               0: status bit unchanged 
 *               1: status bit reset to 0 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2TX_CORE__CCPT_INTSTATUS__AE_DMA           BITFIELD(4, 4)
#define CCP2TX_CORE__CCPT_INTSTATUS__AE_DMA__POS      4

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2TX_CORE__CCPT_INTSTATUS__CE   
 *
 * @BRIEF        Interrupt status for CCP2 end. This is generated at the end 
 *               of each line transmission. 
 *               READ: 
 *               0 : Event did not occur 
 *               1:  Event occurred. 
 *               WRITE: 
 *               0: status bit unchanged 
 *               1: status bit reset to 0 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2TX_CORE__CCPT_INTSTATUS__CE               BITFIELD(3, 3)
#define CCP2TX_CORE__CCPT_INTSTATUS__CE__POS          3

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2TX_CORE__CCPT_INTSTATUS__FIFO_UNF   
 *
 * @BRIEF        Interrupt status for FIFO underflow. 
 *               READ: 
 *               0 : Event did not occur 
 *               1:  Event occurred. 
 *               WRITE: 
 *               0: status bit unchanged 
 *               1: status bit reset to 0 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2TX_CORE__CCPT_INTSTATUS__FIFO_UNF         BITFIELD(2, 2)
#define CCP2TX_CORE__CCPT_INTSTATUS__FIFO_UNF__POS    2

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2TX_CORE__CCPT_INTSTATUS__DMA_END   
 *
 * @BRIEF        Interrupt status for DMA end. This is generated after 
 *               reading all the bytes needed for the current line 
 *               transmission. 
 *               READ: 
 *               0 : Event did not occur 
 *               1:  Event occurred. 
 *               WRITE: 
 *               0: status bit unchanged 
 *               1: status bit reset to 0 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2TX_CORE__CCPT_INTSTATUS__DMA_END          BITFIELD(1, 1)
#define CCP2TX_CORE__CCPT_INTSTATUS__DMA_END__POS     1

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2TX_CORE__CCPT_INTSTATUS__AE   
 *
 * @BRIEF        Interrupt status for All end. This is generated at the end 
 *               of frame transmission (all lines). 
 *               READ: 
 *               0 : Event did not occur 
 *               1:  Event occurred. 
 *                WRITE: 
 *                0: status bit unchanged 
 *               1: status bit reset to 0 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2TX_CORE__CCPT_INTSTATUS__AE               BITFIELD(0, 0)
#define CCP2TX_CORE__CCPT_INTSTATUS__AE__POS          0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2TX_CORE__CCPT_CONTROL__SUSPEND_SELECT   
 *
 * @BRIEF        1: Suspends transmission on Fifo underflow condition. 
 *                0: Does not suspend transmission on Fifo underflow. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2TX_CORE__CCPT_CONTROL__SUSPEND_SELECT     BITFIELD(29, 29)
#define CCP2TX_CORE__CCPT_CONTROL__SUSPEND_SELECT__POS 29

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2TX_CORE__CCPT_CONTROL__POLARITY0   
 *
 * @BRIEF        Specifies the polarity for differential signals of lane0 
 *               0: DX0=DP, DY0=DN 
 *               1: DY0=DP, DX0=DN 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2TX_CORE__CCPT_CONTROL__POLARITY0          BITFIELD(28, 28)
#define CCP2TX_CORE__CCPT_CONTROL__POLARITY0__POS     28

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2TX_CORE__CCPT_CONTROL__POLARITY1   
 *
 * @BRIEF        Specifies the polarity for differential signals of lane1 
 *               0: DX1=DP, DY1=DN 
 *               1: DY1=DP, DX1=DN 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2TX_CORE__CCPT_CONTROL__POLARITY1          BITFIELD(27, 27)
#define CCP2TX_CORE__CCPT_CONTROL__POLARITY1__POS     27

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2TX_CORE__CCPT_CONTROL__PHASESHIFT0   
 *
 * @BRIEF        Specifies the edge for resampling in PHY of lane0 
 *               0: Positive edge 
 *               1: Negative edge 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2TX_CORE__CCPT_CONTROL__PHASESHIFT0        BITFIELD(26, 26)
#define CCP2TX_CORE__CCPT_CONTROL__PHASESHIFT0__POS   26

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2TX_CORE__CCPT_CONTROL__PHASESHIFT1   
 *
 * @BRIEF        Specifies the edge for resampling in PHY of lane1 
 *               0: Positive edge 
 *               1: Negative edge 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2TX_CORE__CCPT_CONTROL__PHASESHIFT1        BITFIELD(25, 25)
#define CCP2TX_CORE__CCPT_CONTROL__PHASESHIFT1__POS   25

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2TX_CORE__CCPT_CONTROL__LANEENABLE0   
 *
 * @BRIEF        Enables/Disables the lane 0. 
 *               1: Enables the SUBLVDS driver of lane 0 if ENABLE input to 
 *               PHY =1  
 *               0: Tristates the SUBLVDS driver 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2TX_CORE__CCPT_CONTROL__LANEENABLE0        BITFIELD(24, 24)
#define CCP2TX_CORE__CCPT_CONTROL__LANEENABLE0__POS   24

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2TX_CORE__CCPT_CONTROL__LANEENABLE1   
 *
 * @BRIEF        Enables/Disables the Lane 1. 
 *               1: Enables the SUBLVDS driver of lane1 if ENABLE input to 
 *               PHY =1  
 *               0: Tristates the SUBLVDS driver 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2TX_CORE__CCPT_CONTROL__LANEENABLE1        BITFIELD(23, 23)
#define CCP2TX_CORE__CCPT_CONTROL__LANEENABLE1__POS   23

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2TX_CORE__CCPT_CONTROL__LPMODE   
 *
 * @BRIEF        Enables/disables the termination resistors 
 *               1: Disables termination resistor of PHY transmitters 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2TX_CORE__CCPT_CONTROL__LPMODE             BITFIELD(22, 22)
#define CCP2TX_CORE__CCPT_CONTROL__LPMODE__POS        22

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2TX_CORE__CCPT_CONTROL__ENABLESDR   
 *
 * @BRIEF        Specifies the mode of data transfer. 
 *               1: Data to be transmitted in SDR mode out of the PHY 
 *               0: Data to be transmitted in STROBE mode out of the PHY 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2TX_CORE__CCPT_CONTROL__ENABLESDR          BITFIELD(21, 21)
#define CCP2TX_CORE__CCPT_CONTROL__ENABLESDR__POS     21

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2TX_CORE__CCPT_CONTROL__LC   
 *
 * @BRIEF        Specifies the CCP2 Logical Channel code that is inserted in 
 *               the Line/Frame sync codes - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2TX_CORE__CCPT_CONTROL__LC                 BITFIELD(19, 16)
#define CCP2TX_CORE__CCPT_CONTROL__LC__POS            16

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2TX_CORE__CCPT_CONTROL__FORMAT_O   
 *
 * @BRIEF        Select CCP2 output format. 
 *                  0000 : YUV422, 
 *                  0001 : Reserved, 
 *                  0010 : RGB888, 
 *                  0011 : RGB565, 
 *                  0100 : RGB444, 
 *                  0101 : RAW8, 
 *                  0110 : RAW8-DPCM, 
 *                  0110 : RAW10, 
 *                  1000: RAW12, 
 *                  1001 : JPEG8, 
 *                  1010 : EDATA, 
 *                  others : Reserved - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2TX_CORE__CCPT_CONTROL__FORMAT_O           BITFIELD(15, 12)
#define CCP2TX_CORE__CCPT_CONTROL__FORMAT_O__POS      12

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2TX_CORE__CCPT_CONTROL__FORMAT_I   
 *
 * @BRIEF        Select DMA input format. 
 *                  0000 : YUV422, 
 *                  0001: RAW 1byte/pixel, 
 *                  0010 : RAW 2byte/pixel, 
 *                  0011 : JPEG8, 
 *                  0100 : EDATA, 
 *                  others : Reserved - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2TX_CORE__CCPT_CONTROL__FORMAT_I           BITFIELD(11, 8)
#define CCP2TX_CORE__CCPT_CONTROL__FORMAT_I__POS      8

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2TX_CORE__CCPT_CONTROL__FE   
 *
 * @BRIEF        Control to enable/disable Frame end sync code insertion. 
 *               0: Fame end sync code is not inserted. 
 *               1: Insert Frame end code at the end of the last line. 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2TX_CORE__CCPT_CONTROL__FE                 BITFIELD(7, 7)
#define CCP2TX_CORE__CCPT_CONTROL__FE__POS            7

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2TX_CORE__CCPT_CONTROL__FS   
 *
 * @BRIEF        Control to enable/disable Frame start sync code insertion. 
 *               0: Fame start sync code is not inserted. 
 *               1: Insert Frame start code at the start of the first line . 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2TX_CORE__CCPT_CONTROL__FS                 BITFIELD(6, 6)
#define CCP2TX_CORE__CCPT_CONTROL__FS__POS            6

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2TX_CORE__CCPT_CONTROL__LE   
 *
 * @BRIEF        Control to enable/disable Line end sync code insertion. 
 *               0: Line end sync code is not inserted. 
 *               1: Insert Line end code at the end of the line 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2TX_CORE__CCPT_CONTROL__LE                 BITFIELD(5, 5)
#define CCP2TX_CORE__CCPT_CONTROL__LE__POS            5

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2TX_CORE__CCPT_CONTROL__LS   
 *
 * @BRIEF        Control to enable/disable Line start sync code insertion. 
 *               0: Line start sync code is not inserted. 
 *               1: Insert Line start code at the start of the line 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2TX_CORE__CCPT_CONTROL__LS                 BITFIELD(4, 4)
#define CCP2TX_CORE__CCPT_CONTROL__LS__POS            4

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2TX_CORE__CCPT_CONTROL__RESERVED_1   
 *
 * @BRIEF        Not used - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2TX_CORE__CCPT_CONTROL__RESERVED_1         BITFIELD(2, 2)
#define CCP2TX_CORE__CCPT_CONTROL__RESERVED_1__POS    2

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2TX_CORE__CCPT_CONTROL__DMACH   
 *
 * @BRIEF        Select a channel of DMA master interface   
 *               0: channel0, 
 *                1: Channel 1. (Used for test purpose only. Pattern 
 *               generator loads the fifo.) - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2TX_CORE__CCPT_CONTROL__DMACH              BITFIELD(1, 1)
#define CCP2TX_CORE__CCPT_CONTROL__DMACH__POS         1

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2TX_CORE__CCPT_CONTROL__START   
 *
 * @BRIEF        READ : CCP2 interface status 
 *               0: Ready to transmit 
 *               1: CCP2 interface is active 
 *               WRITE: 
 *               0: SW should not write '0' to this bit.  CCPT_CONFIG.RESET 
 *               can be  used to stop CCP2 transmission.. 
 *               1: Start transmitting data through CCP2 interface. 
 *                When the transmission completes, this bit is automatically 
 *               cleared to 0 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2TX_CORE__CCPT_CONTROL__START              BITFIELD(0, 0)
#define CCP2TX_CORE__CCPT_CONTROL__START__POS         0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2TX_CORE__CCPT_STATUS__JPEGCONT   
 *
 * @BRIEF        JPEG line continue flag.(Valid for JPEG formats only) 
 *               0: JPEG data completed. 
 *               1: Indicates waiting for mode JPEG data when 
 *               CCPT_CONTROL.START is read as '0'. 
 *                - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2TX_CORE__CCPT_STATUS__JPEGCONT            BITFIELD(0, 0)
#define CCP2TX_CORE__CCPT_STATUS__JPEGCONT__POS       0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2TX_CORE__CCPT_LINE_ADDRESS0__ADDRESS   
 *
 * @BRIEF        Start address of the first line for DMA master interface 
 *               channel 0. 
 *               DMA master interface will increment the address by 
 *               CCPT_LINE_AINC value for start address of subsequent lines. 
 *               The Address configured is the byte address and the least 2 
 *               significant bits should be zeros. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2TX_CORE__CCPT_LINE_ADDRESS0__ADDRESS      BITFIELD(31, 0)
#define CCP2TX_CORE__CCPT_LINE_ADDRESS0__ADDRESS__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2TX_CORE__CCPT_LINE_AINC0__AINC   
 *
 * @BRIEF        Specifies the address increment value, in terms of bytes, to 
 *               calculate next line address for the DMA master interface 
 *               channel 0. 
 *               The least 2 significant bits should be zero. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2TX_CORE__CCPT_LINE_AINC0__AINC            BITFIELD(23, 0)
#define CCP2TX_CORE__CCPT_LINE_AINC0__AINC__POS       0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2TX_CORE__CCPT_LINE_BYTESIZE__BYTESIZE   
 *
 * @BRIEF        Specifies the number of data bytes of one line. 
 *                Should be in multiples of 32 bits. 
 *                Note: When JPEG8 transferring without FE code, BYTESIZE 
 *               should be an exact multiple of the configured ocp burst 
 *               length, BURST_LENGTH. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2TX_CORE__CCPT_LINE_BYTESIZE__BYTESIZE     BITFIELD(23, 0)
#define CCP2TX_CORE__CCPT_LINE_BYTESIZE__BYTESIZE__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2TX_CORE__CCPT_LINE_NUMBER__LINE   
 *
 * @BRIEF        Set the number of lines to send through the CCP2 interface. 
 *               This value will be set to '1' for JPEG format - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2TX_CORE__CCPT_LINE_NUMBER__LINE           BITFIELD(15, 0)
#define CCP2TX_CORE__CCPT_LINE_NUMBER__LINE__POS      0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2TX_CORE__CCPT_BLANKING_LENGTH__LENGTH   
 *
 * @BRIEF        Set a blanking frame which is LENGTH * 4 Bytes. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2TX_CORE__CCPT_BLANKING_LENGTH__LENGTH     BITFIELD(15, 0)
#define CCP2TX_CORE__CCPT_BLANKING_LENGTH__LENGTH__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2TX_CORE__CCPT_BLANKING_PAD__DATA   
 *
 * @BRIEF        Set the padding data for a blanking period - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2TX_CORE__CCPT_BLANKING_PAD__DATA          BITFIELD(31, 0)
#define CCP2TX_CORE__CCPT_BLANKING_PAD__DATA__POS     0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2TX_CORE__CCPT_FIFO_STATUS__STATUS   
 *
 * @BRIEF        Provides the status of the FIFO. 
 *               00: Fifo empty 
 *               01: Fifo contains data, but not full 
 *               10: Fifo full 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2TX_CORE__CCPT_FIFO_STATUS__STATUS         BITFIELD(1, 0)
#define CCP2TX_CORE__CCPT_FIFO_STATUS__STATUS__POS    0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2TX_CORE__CCPT_PAD__THRESHOLD_READ   
 *
 * @BRIEF        Threshold limit for DMA FIFO read. This field specifies the 
 *               number of bytes that needs to be filled in the internal FIFO 
 *               before beginning transmission. 
 *                Limit = (THRESHOLD_READ * 16) + 8 bytes. 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2TX_CORE__CCPT_PAD__THRESHOLD_READ         BITFIELD(20, 16)
#define CCP2TX_CORE__CCPT_PAD__THRESHOLD_READ__POS    16

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2TX_CORE__CCPT_PAD__PADCRC   
 *
 * @BRIEF        padding data used for CRC16 and 32 bit alignment - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2TX_CORE__CCPT_PAD__PADCRC                 BITFIELD(15, 8)
#define CCP2TX_CORE__CCPT_PAD__PADCRC__POS            8

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2TX_CORE__CCPT_PAD__PADJPEG   
 *
 * @BRIEF        padding data used for JPEG8 and 32bit alignment - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2TX_CORE__CCPT_PAD__PADJPEG                BITFIELD(7, 0)
#define CCP2TX_CORE__CCPT_PAD__PADJPEG__POS           0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2TX_CORE__CCPT_YUV2RGB_CTRL__VDMD   
 *
 * @BRIEF        0: output YUV with attenuation control. 1: output RGB - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2TX_CORE__CCPT_YUV2RGB_CTRL__VDMD          BITFIELD(1, 1)
#define CCP2TX_CORE__CCPT_YUV2RGB_CTRL__VDMD__POS     1

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2TX_CORE__CCPT_YUV2RGB_CTRL__ATT   
 *
 * @BRIEF        input video data attenuation control.                        
 *                                        0: No attenuation                   
 *                                                                            
 *                 1: 0-255 -> BT. 601 specified level     - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2TX_CORE__CCPT_YUV2RGB_CTRL__ATT           BITFIELD(0, 0)
#define CCP2TX_CORE__CCPT_YUV2RGB_CTRL__ATT__POS      0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2TX_CORE__CCPT_YUV2RGB_MATRIX1__GY   
 *
 * @BRIEF        GY element of YUV2RGB matrix - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2TX_CORE__CCPT_YUV2RGB_MATRIX1__GY         BITFIELD(26, 16)
#define CCP2TX_CORE__CCPT_YUV2RGB_MATRIX1__GY__POS    16

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2TX_CORE__CCPT_YUV2RGB_MATRIX1__RV   
 *
 * @BRIEF        RV element of YUV2RGB matrix - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2TX_CORE__CCPT_YUV2RGB_MATRIX1__RV         BITFIELD(10, 0)
#define CCP2TX_CORE__CCPT_YUV2RGB_MATRIX1__RV__POS    0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2TX_CORE__CCPT_YUV2RGB_MATRIX2__GU   
 *
 * @BRIEF        GU element of YUV2RGB matrix - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2TX_CORE__CCPT_YUV2RGB_MATRIX2__GU         BITFIELD(26, 16)
#define CCP2TX_CORE__CCPT_YUV2RGB_MATRIX2__GU__POS    16

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2TX_CORE__CCPT_YUV2RGB_MATRIX2__GV   
 *
 * @BRIEF        GV element of YUV4RGB matrix - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2TX_CORE__CCPT_YUV2RGB_MATRIX2__GV         BITFIELD(10, 0)
#define CCP2TX_CORE__CCPT_YUV2RGB_MATRIX2__GV__POS    0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2TX_CORE__CCPT_YUV2RGB_MATRIX3__BL   
 *
 * @BRIEF        Offset level for RGB output. The offset specified by this 
 *               register can be added to RGB converted from YUV - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2TX_CORE__CCPT_YUV2RGB_MATRIX3__BL         BITFIELD(31, 24)
#define CCP2TX_CORE__CCPT_YUV2RGB_MATRIX3__BL__POS    24

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2TX_CORE__CCPT_YUV2RGB_MATRIX3__WC   
 *
 * @BRIEF        Upper clip level of RGB output. Clipping is done after BL 
 *               offset addition - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2TX_CORE__CCPT_YUV2RGB_MATRIX3__WC         BITFIELD(23, 16)
#define CCP2TX_CORE__CCPT_YUV2RGB_MATRIX3__WC__POS    16

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2TX_CORE__CCPT_YUV2RGB_MATRIX3__BU   
 *
 * @BRIEF        BU element of YUV2RGB matrix - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2TX_CORE__CCPT_YUV2RGB_MATRIX3__BU         BITFIELD(10, 0)
#define CCP2TX_CORE__CCPT_YUV2RGB_MATRIX3__BU__POS    0

    /* 
     * List of register bitfields values for component CCP2TX_CORE
     *
     */

#ifdef __cplusplus
}
#endif
#endif                                                     /* __CCP2TX_CORE_CRED_H 
                                                            */

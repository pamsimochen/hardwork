/** ==================================================================
 *  @file   emif4d_cred.h                                                  
 *                                                                    
 *  @path   /ti/psp/iss/hal/cred_cram/cred/inc/cortexm3_sys_ape/                                                  
 *                                                                    
 *  @desc   This  File contains.                                      
 * ===================================================================
 *  Copyright (c) Texas Instruments Inc 2011, 2012                    
 *                                                                    
 *  Use of this software is controlled by the terms and conditions found
 *  in the license agreement under which this software has been supplied
 * ===================================================================*/

/* ============================================================================ 
 * TEXAS INSTRUMENTS INCORPORATED PROPRIETARY INFORMATION Property of Texas
 * Instruments For Unrestricted Internal Use Only Unauthorized reproduction
 * and/or distribution is strictly prohibited.  This product is protected
 * under copyright law and trade secret law as an unpublished work.  Created
 * 2008, (C) Copyright 2008 Texas Instruments.  All rights reserved. */

/**
 *  @Component:   EMIF4D
 *
 *  @Filename:    emif4d_cred.h
 *
 *  @Description: Component description is not available
 *
 *  Generated by: Socrates CRED generator prototype
 *
    *//* ====================================================================== */

#ifndef __EMIF4D_CRED_H
#define __EMIF4D_CRED_H

#ifdef __cplusplus
extern "C" {
#endif

    /* 
     * Instance EMIF4D1 of component EMIF4D mapped in MONICA at address 0x4C000000
     * Instance EMIF4D2 of component EMIF4D mapped in MONICA at address 0x4D000000
     */

                                                                              /*-------------------------------------------------------------------------*//**
 * @DEFINITION   BITFIELD
 *
 * @BRIEF        The bitfield must be defined according to register width
 *               of the component - 64/32/16/8
 *
    *//*------------------------------------------------------------------------ */
#undef BITFIELD
#define BITFIELD BITFIELD_32

    /* 
     *  List of Register arrays for component EMIF4D
     *
     */

    /* 
     *  List of bundle arrays for component EMIF4D
     *
     */

    /* 
     *  List of bundles for component EMIF4D
     *
     */

    /* 
     * List of registers for component EMIF4D
     *
     */

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__EMIF_MOD_ID_REV
 *
 * @BRIEF        Register description is not available
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__EMIF_MOD_ID_REV                            0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__STATUS
 *
 * @BRIEF        Register description is not available
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__STATUS                                     0x4ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__SDRAM_CONFIG
 *
 * @BRIEF        Register description is not available
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__SDRAM_CONFIG                               0x8ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__SDRAM_CONFIG_2
 *
 * @BRIEF        Register description is not available
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__SDRAM_CONFIG_2                             0xCul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__SDRAM_REF_CTRL
 *
 * @BRIEF        Register description is not available
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__SDRAM_REF_CTRL                             0x10ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__SDRAM_REF_CTRL_SHDW
 *
 * @BRIEF        Register description is not available
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__SDRAM_REF_CTRL_SHDW                        0x14ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__SDRAM_TIM_1
 *
 * @BRIEF        Register description is not available
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__SDRAM_TIM_1                                0x18ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__SDRAM_TIM_1_SHDW
 *
 * @BRIEF        Register description is not available
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__SDRAM_TIM_1_SHDW                           0x1Cul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__SDRAM_TIM_2
 *
 * @BRIEF        Register description is not available
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__SDRAM_TIM_2                                0x20ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__SDRAM_TIM_2_SHDW
 *
 * @BRIEF        Register description is not available
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__SDRAM_TIM_2_SHDW                           0x24ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__SDRAM_TIM_3
 *
 * @BRIEF        Register description is not available
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__SDRAM_TIM_3                                0x28ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__SDRAM_TIM_3_SHDW
 *
 * @BRIEF        Register description is not available
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__SDRAM_TIM_3_SHDW                           0x2Cul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__LPDDR2_NVM_TIM
 *
 * @BRIEF        Register description is not available
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__LPDDR2_NVM_TIM                             0x30ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__LPDDR2_NVM_TIM_SHDW
 *
 * @BRIEF        Register description is not available
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__LPDDR2_NVM_TIM_SHDW                        0x34ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__PWR_MGMT_CTRL
 *
 * @BRIEF        Register description is not available
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__PWR_MGMT_CTRL                              0x38ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__PWR_MGMT_CTRL_SHDW
 *
 * @BRIEF        Register description is not available
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__PWR_MGMT_CTRL_SHDW                         0x3Cul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__LPDDR2_MODE_REG_DATA
 *
 * @BRIEF        Register description is not available
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__LPDDR2_MODE_REG_DATA                       0x40ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__LPDDR2_MODE_REG_CFG
 *
 * @BRIEF        Register description is not available
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__LPDDR2_MODE_REG_CFG                        0x50ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__OCP_CONFIG
 *
 * @BRIEF        Register description is not available
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__OCP_CONFIG                                 0x54ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__OCP_CFG_VAL_1
 *
 * @BRIEF        Register description is not available
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__OCP_CFG_VAL_1                              0x58ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__OCP_CFG_VAL_2
 *
 * @BRIEF        Register description is not available
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__OCP_CFG_VAL_2                              0x5Cul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__IODFT_TLGC
 *
 * @BRIEF        Register description is not available
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__IODFT_TLGC                                 0x60ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__IODFT_CTRL_MISR_RSLT
 *
 * @BRIEF        Register description is not available
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__IODFT_CTRL_MISR_RSLT                       0x64ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__IODFT_ADDR_MISR_RSLT
 *
 * @BRIEF        Register description is not available
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__IODFT_ADDR_MISR_RSLT                       0x68ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__IODFT_DATA_MISR_RSLT_1
 *
 * @BRIEF        Register description is not available
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__IODFT_DATA_MISR_RSLT_1                     0x6Cul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__IODFT_DATA_MISR_RSLT_2
 *
 * @BRIEF        Register description is not available
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__IODFT_DATA_MISR_RSLT_2                     0x70ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__IODFT_DATA_MISR_RSLT_3
 *
 * @BRIEF        Register description is not available
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__IODFT_DATA_MISR_RSLT_3                     0x74ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__PERF_CNT_1
 *
 * @BRIEF        Register description is not available
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__PERF_CNT_1                                 0x80ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__PERF_CNT_2
 *
 * @BRIEF        Register description is not available
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__PERF_CNT_2                                 0x84ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__PERF_CNT_CFG
 *
 * @BRIEF        Register description is not available
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__PERF_CNT_CFG                               0x88ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__PERF_CNT_SEL
 *
 * @BRIEF        Register description is not available
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__PERF_CNT_SEL                               0x8Cul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__PERF_CNT_TIM
 *
 * @BRIEF        Register description is not available
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__PERF_CNT_TIM                               0x90ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__READ_IDLE_CTRL
 *
 * @BRIEF        Register description is not available
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__READ_IDLE_CTRL                             0x98ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__READ_IDLE_CTRL_SHDW
 *
 * @BRIEF        Register description is not available
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__READ_IDLE_CTRL_SHDW                        0x9Cul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__IRQ_EOI
 *
 * @BRIEF        Register description is not available
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__IRQ_EOI                                    0xA0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__IRQSTATUS_RAW_SYS
 *
 * @BRIEF        Register description is not available
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__IRQSTATUS_RAW_SYS                          0xA4ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__IRQSTATUS_RAW_LL
 *
 * @BRIEF        Register description is not available
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__IRQSTATUS_RAW_LL                           0xA8ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__IRQSTATUS_SYS
 *
 * @BRIEF        Register description is not available
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__IRQSTATUS_SYS                              0xACul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__IRQSTATUS_LL
 *
 * @BRIEF        Register description is not available
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__IRQSTATUS_LL                               0xB0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__IRQENABLE_SET_SYS
 *
 * @BRIEF        Register description is not available
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__IRQENABLE_SET_SYS                          0xB4ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__IRQENABLE_SET_LL
 *
 * @BRIEF        Register description is not available
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__IRQENABLE_SET_LL                           0xB8ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__IRQENABLE_CLR_SYS
 *
 * @BRIEF        Register description is not available
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__IRQENABLE_CLR_SYS                          0xBCul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__IRQENABLE_CLR_LL
 *
 * @BRIEF        Register description is not available
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__IRQENABLE_CLR_LL                           0xC0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__ZQ_CONFIG
 *
 * @BRIEF        Register description is not available
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__ZQ_CONFIG                                  0xC8ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__TEMP_ALERT_CONFIG
 *
 * @BRIEF        Register description is not available
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__TEMP_ALERT_CONFIG                          0xCCul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__OCP_ERR_LOG
 *
 * @BRIEF        Register description is not available
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__OCP_ERR_LOG                                0xD0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__DDR_PHY_CTRL_1
 *
 * @BRIEF        Register description is not available
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__DDR_PHY_CTRL_1                             0xE4ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__DDR_PHY_CTRL_1_SHDW
 *
 * @BRIEF        Register description is not available
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__DDR_PHY_CTRL_1_SHDW                        0xE8ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__DDR_PHY_CTRL_2
 *
 * @BRIEF        Register description is not available
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__DDR_PHY_CTRL_2                             0xECul

    /* 
     * List of register bitfields for component EMIF4D
     *
     */

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__EMIF_MOD_ID_REV__REG_SCHEME   
 *
 * @BRIEF        Used to distinguish between old and current schemes. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__EMIF_MOD_ID_REV__REG_SCHEME           BITFIELD(31, 30)
#define EMIF4D__EMIF_MOD_ID_REV__REG_SCHEME__POS      30

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__EMIF_MOD_ID_REV__REG_MODULE_ID   
 *
 * @BRIEF        EMIF module ID. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__EMIF_MOD_ID_REV__REG_MODULE_ID        BITFIELD(27, 16)
#define EMIF4D__EMIF_MOD_ID_REV__REG_MODULE_ID__POS   16

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__EMIF_MOD_ID_REV__REG_RTL_VERSION   
 *
 * @BRIEF        RTL Version. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__EMIF_MOD_ID_REV__REG_RTL_VERSION      BITFIELD(15, 11)
#define EMIF4D__EMIF_MOD_ID_REV__REG_RTL_VERSION__POS 11

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__EMIF_MOD_ID_REV__REG_MAJOR_REVISION   
 *
 * @BRIEF        Major Revision. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__EMIF_MOD_ID_REV__REG_MAJOR_REVISION   BITFIELD(10, 8)
#define EMIF4D__EMIF_MOD_ID_REV__REG_MAJOR_REVISION__POS 8

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__EMIF_MOD_ID_REV__REG_MINOR_REVISION   
 *
 * @BRIEF        Minor Revision. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__EMIF_MOD_ID_REV__REG_MINOR_REVISION   BITFIELD(5, 0)
#define EMIF4D__EMIF_MOD_ID_REV__REG_MINOR_REVISION__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__STATUS__REG_BE   
 *
 * @BRIEF        Big Endian. Reflects the value on the config_big_endian port 
 *               that defines whether the EMIF is in big or little endian 
 *               mode. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__STATUS__REG_BE                        BITFIELD(31, 31)
#define EMIF4D__STATUS__REG_BE__POS                   31

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__STATUS__REG_DUAL_CLK_MODE   
 *
 * @BRIEF        Dual Clock mode. Reflects the value on the 
 *               config_dual_clk_mode port that defines whether the ocp_clk 
 *               and m_clk are asynchronous. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__STATUS__REG_DUAL_CLK_MODE             BITFIELD(30, 30)
#define EMIF4D__STATUS__REG_DUAL_CLK_MODE__POS        30

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__STATUS__REG_FAST_INIT   
 *
 * @BRIEF        Fast Init. Reflects the value on the config_fast_init port 
 *               that defines whether the EMIF fast initialization mode has 
 *               been enabled. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__STATUS__REG_FAST_INIT                 BITFIELD(29, 29)
#define EMIF4D__STATUS__REG_FAST_INIT__POS            29

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__STATUS__REG_PHY_DLL_READY   
 *
 * @BRIEF        DDR PHY Ready. Reflects the value on the phy_ready port 
 *               (active high) that defines whether the DDR PHY is ready for 
 *               normal operation. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__STATUS__REG_PHY_DLL_READY             BITFIELD(2, 2)
#define EMIF4D__STATUS__REG_PHY_DLL_READY__POS        2

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__SDRAM_CONFIG__REG_SDRAM_TYPE   
 *
 * @BRIEF        SDRAM Type selection. Set to 0 for DDR1, set to 1 for 
 *               LPDDR1, set to 2 for DDR2, set to 3 for DDR3, and set to 4 
 *               for LPDDR2. All other values are reserved. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__SDRAM_CONFIG__REG_SDRAM_TYPE          BITFIELD(31, 29)
#define EMIF4D__SDRAM_CONFIG__REG_SDRAM_TYPE__POS     29

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__SDRAM_CONFIG__REG_IBANK_POS   
 *
 * @BRIEF        Internal bank position. Set to 0 to assign internal bank 
 *               address bits from OCP address as shown in tables. Set to 1, 
 *               2, or 3 to assign internal bank address bits from OCP 
 *               address as shown in tables. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__SDRAM_CONFIG__REG_IBANK_POS           BITFIELD(28, 27)
#define EMIF4D__SDRAM_CONFIG__REG_IBANK_POS__POS      27

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__SDRAM_CONFIG__REG_DDR_TERM   
 *
 * @BRIEF        DDR2 and DDR3 termination resistor value. Set to 0 to 
 *               disable termination. For DDR2, set to 1 for 75 ohm, set to 2 
 *               for 150 ohm, and set to 3 for 50 ohm. For DDR3, set to 1 for 
 *               RZQ/4, set to 2 for RZQ/2, set to 3 for RZQ/6, set to 4 for 
 *               RZQ/12, and set to 5 for RZQ/8. All other values are 
 *               reserved. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__SDRAM_CONFIG__REG_DDR_TERM            BITFIELD(26, 24)
#define EMIF4D__SDRAM_CONFIG__REG_DDR_TERM__POS       24

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__SDRAM_CONFIG__REG_DDR2_DDQS   
 *
 * @BRIEF        DDR2 and LPDDR2 differential DQS enable. Set to 0 for single 
 *               ended DQS. Set to 1 for differential DQS. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__SDRAM_CONFIG__REG_DDR2_DDQS           BITFIELD(23, 23)
#define EMIF4D__SDRAM_CONFIG__REG_DDR2_DDQS__POS      23

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__SDRAM_CONFIG__REG_DYN_ODT   
 *
 * @BRIEF        DDR3 Dynamic ODT. Set to 0 to turn off dynamic ODT. Set to 1 
 *               for RZQ/4 and set to 2 for RZQ/2. All other values are 
 *               reserved. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__SDRAM_CONFIG__REG_DYN_ODT             BITFIELD(22, 21)
#define EMIF4D__SDRAM_CONFIG__REG_DYN_ODT__POS        21

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__SDRAM_CONFIG__REG_DDR_DISABLE_DLL   
 *
 * @BRIEF        Disable DLL select. Set to 1 to disable DLL inside SDRAM. - 
 *               (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__SDRAM_CONFIG__REG_DDR_DISABLE_DLL     BITFIELD(20, 20)
#define EMIF4D__SDRAM_CONFIG__REG_DDR_DISABLE_DLL__POS 20

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__SDRAM_CONFIG__REG_SDRAM_DRIVE   
 *
 * @BRIEF        SDRAM drive strength. For DDR1/DDR2, set to 0 for normal, 
 *               and set to 1 for weak drive strength. For DDR3, set to 0 for 
 *               RZQ/6 and set to 1 for RZQ/7. For LPDDR1, set to 0 for full, 
 *               set to 1 for 1/2, set to 2 for 1/4, and set to 3 for 1/8 
 *               drive strength. All other values are reserved. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__SDRAM_CONFIG__REG_SDRAM_DRIVE         BITFIELD(19, 18)
#define EMIF4D__SDRAM_CONFIG__REG_SDRAM_DRIVE__POS    18

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__SDRAM_CONFIG__REG_CWL   
 *
 * @BRIEF        DDR3 CAS Write latency. Value of 0, 1, 2, and 3 (CAS write 
 *               latency of 5, 6, 7, and 8) are supported. Use the lowest 
 *               value supported for best performance. All other values are 
 *               reserved. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__SDRAM_CONFIG__REG_CWL                 BITFIELD(17, 16)
#define EMIF4D__SDRAM_CONFIG__REG_CWL__POS            16

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__SDRAM_CONFIG__REG_NARROW_MODE   
 *
 * @BRIEF        SDRAM data bus width. Set to 0 for 32-bit and set to 1 for 
 *               16-bit. All other values are reserved. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__SDRAM_CONFIG__REG_NARROW_MODE         BITFIELD(15, 14)
#define EMIF4D__SDRAM_CONFIG__REG_NARROW_MODE__POS    14

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__SDRAM_CONFIG__REG_CL   
 *
 * @BRIEF        CAS Latency. The value of this field defines the CAS latency 
 *               to be used when accessing connected SDRAM devices. Value of 
 *               2, 3, 5, and 6 (CAS latency of 2, 3, 1.5, and 2.5) are 
 *               supported for DDR1. Value of 2, 3, 4, and 5 (CAS latency of 
 *               2, 3, 4, and 5) are supported for DDR2. Value of 2, 4, 6, 8, 
 *               10, 12, and 14 (CAS latency of 5, 6, 7, 8, 9, 10, and 11) 
 *               are supported for DDR3. Value of 2 and 3 (CAS latency of 2 
 *               and 3) are supported for LPDDR1. Value of 3, 4, 5, 6, 7, and 
 *               8 (CAS latency of 3, 4, 5, 6, 7, and 8) are supported for 
 *               LPDDR2-SDRAM. All other values are reserved. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__SDRAM_CONFIG__REG_CL                  BITFIELD(13, 10)
#define EMIF4D__SDRAM_CONFIG__REG_CL__POS             10

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__SDRAM_CONFIG__REG_ROWSIZE   
 *
 * @BRIEF        Row Size. Defines the number of row address bits of 
 *               connected SDRAM devices. Set to 0 for 9 row bits, set to 1 
 *               for 10 row bits, set to 2 for 11 row bits, set to 3 for 12 
 *               row bits, set to 4 for 13 row bits, set to 5 for 14 row 
 *               bits, set to 6 for 15 row bits, and set to 7 for 16 row 
 *               bits. This field is only used when reg_ibank_pos field in 
 *               SDRAM Config register is set to 1, 2, or 3. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__SDRAM_CONFIG__REG_ROWSIZE             BITFIELD(9, 7)
#define EMIF4D__SDRAM_CONFIG__REG_ROWSIZE__POS        7

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__SDRAM_CONFIG__REG_IBANK   
 *
 * @BRIEF        Internal Bank setup. Defines number of banks inside 
 *               connected SDRAM devices. Set to 0 for 1 bank, set to 1 for 2 
 *               banks, set to 2 for 4 banks, and set to 3 for 8 banks. All 
 *               other values are reserved. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__SDRAM_CONFIG__REG_IBANK               BITFIELD(6, 4)
#define EMIF4D__SDRAM_CONFIG__REG_IBANK__POS          4

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__SDRAM_CONFIG__REG_EBANK   
 *
 * @BRIEF        External chip select setup. Defines whether SDRAM accesses 
 *               will use 1 or 2 chip select lines. Set to 0 to use 
 *               pad_cs_o_n[0] only. Set to 1 to use pad_cs_o_n[1:0]. This 
 *               bit will automaticlly be set to 0 if reg_cs1nvmen field in 
 *               the LPDDR2-NVM is set to 1. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__SDRAM_CONFIG__REG_EBANK               BITFIELD(3, 3)
#define EMIF4D__SDRAM_CONFIG__REG_EBANK__POS          3

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__SDRAM_CONFIG__REG_PAGESIZE   
 *
 * @BRIEF        Page Size. Defines the internal page size of connected SDRAM 
 *               devices. Set to 0 for 256-word page (8 column bits), set to 
 *               1 for 512-word page (9 column bits), set to 2 for 1024-word 
 *               page (10 column bits), and set to 3 for 2048-word page (11 
 *               column bits). All other values are reserved. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__SDRAM_CONFIG__REG_PAGESIZE            BITFIELD(2, 0)
#define EMIF4D__SDRAM_CONFIG__REG_PAGESIZE__POS       0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__SDRAM_CONFIG_2__REG_CS1NVMEN   
 *
 * @BRIEF        CS1 LPDDR2-NVM enable. Set to 1 if LPDDR2-NVM is connected 
 *               to CS1. This bit will automatically be set to 0 if 
 *               reg_sdram_type field in the SDRAM Config register is not set 
 *               to LPDDR2. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__SDRAM_CONFIG_2__REG_CS1NVMEN          BITFIELD(30, 30)
#define EMIF4D__SDRAM_CONFIG_2__REG_CS1NVMEN__POS     30

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__SDRAM_CONFIG_2__REG_EBANK_POS   
 *
 * @BRIEF        External bank position. Set to 0 to assign external bank 
 *               address bits from OCP address as shown in Table 4, 5, and 6. 
 *               Set to 1 to assign external bank address bits to the most 
 *               significant bit of the OCP address. This field is not 
 *               implemented in the design and is reserved field for future 
 *               use. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__SDRAM_CONFIG_2__REG_EBANK_POS         BITFIELD(27, 27)
#define EMIF4D__SDRAM_CONFIG_2__REG_EBANK_POS__POS    27

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__SDRAM_CONFIG_2__REG_RDBNUM   
 *
 * @BRIEF        Row Buffer setup. Defines number of row buffers inside 
 *               connected LPDDR2-NVM devices. Set to 0 for 1 row buffer, set 
 *               to 1 for 2 row buffers, set to 2 for 4 row buffers, and set 
 *               to 3 for 8 row buffers. All other values are reserved. - 
 *               (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__SDRAM_CONFIG_2__REG_RDBNUM            BITFIELD(5, 4)
#define EMIF4D__SDRAM_CONFIG_2__REG_RDBNUM__POS       4

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__SDRAM_CONFIG_2__REG_RDBSIZE   
 *
 * @BRIEF        Row Data Buffer Size. Defines the row data buffer size of 
 *               connected LPDDR2-NVM devices. Set to 0 for 32 bytes, set to 
 *               1 for 64 bytes, set to 2 for 128 bytes, set to 3 for 256 
 *               bytes, set to 4 for 512 bytes, set to 5 for 1024 bytes, set 
 *               to 6 for 2048 bytes, and set to 7 for 4096 bytes. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__SDRAM_CONFIG_2__REG_RDBSIZE           BITFIELD(2, 0)
#define EMIF4D__SDRAM_CONFIG_2__REG_RDBSIZE__POS      0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__SDRAM_REF_CTRL__REG_INITREF_DIS   
 *
 * @BRIEF        Initialization and Refresh disable. When set to 1, EMIF will 
 *               disable SDRAM initialization and refreshes, but will carry 
 *               out SDRAM write/read transactions. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__SDRAM_REF_CTRL__REG_INITREF_DIS       BITFIELD(31, 31)
#define EMIF4D__SDRAM_REF_CTRL__REG_INITREF_DIS__POS  31

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__SDRAM_REF_CTRL__REG_SRT   
 *
 * @BRIEF        DDR3 Self Refresh temperature range. Set to 0 for normal 
 *               operating temperature range and set to 1 for extended 
 *               operating temperature range when the reg_asr field is set to 
 *               0. This bit must be set to 0 if the reg_asr field is set to 
 *               1. A write to this field will cause the EMIF to start the 
 *               SDRAM initialization sequence. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__SDRAM_REF_CTRL__REG_SRT               BITFIELD(29, 29)
#define EMIF4D__SDRAM_REF_CTRL__REG_SRT__POS          29

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__SDRAM_REF_CTRL__REG_ASR   
 *
 * @BRIEF        DDR3 Auto Self Refresh enable. Set to 1 for auto Self 
 *               Refresh enable. Set to 0 for manual Self Refresh reference 
 *               indicated by the reg_srt field. A write to this field will 
 *               cause the EMIF to start the SDRAM initialization sequence. - 
 *               (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__SDRAM_REF_CTRL__REG_ASR               BITFIELD(28, 28)
#define EMIF4D__SDRAM_REF_CTRL__REG_ASR__POS          28

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__SDRAM_REF_CTRL__REG_PASR   
 *
 * @BRIEF        Partial Array Self Refresh. These bits get loaded into the 
 *               Extended Mode Register of an LPDDR1 or DDR3 during 
 *               initialization. For LPDDR1, set to 0 for full array, set to 
 *               1 for 1/2 array, set to 2 for 1/4 array, set to 5 for 1/8 
 *               array, and set to 6 for 1/16 array to be refreshed. For 
 *               DDR3, set to 0 for full array, set to 1 or 5 for 1/2 array, 
 *               set to 2 or 6 for 1/4 array, set to 3 or 7 for 1/8 array, 
 *               and set to 4 for 3/4 array to be refreshed. All other values 
 *               are reserved. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__SDRAM_REF_CTRL__REG_PASR              BITFIELD(26, 24)
#define EMIF4D__SDRAM_REF_CTRL__REG_PASR__POS         24

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__SDRAM_REF_CTRL__REG_REFRESH_RATE   
 *
 * @BRIEF        Refresh Rate. Value in this field is used to define the rate 
 *               at which connected SDRAM devices will be refreshed. SDRAM 
 *               refresh rate = EMIF rate / reg_refresh_rate where EMIF rate 
 *               is equal to m_clk rate. If reg_refresh_rate < 
 *               (8*reg_t_rfc)+reg_t_rp+reg_t_rcd+20 then it will be loaded 
 *               with (8*reg_t_rfc)+reg_t_rp+reg_t_rcd+20. This is done to 
 *               avoid lock-up situations when illegal values are programmed. 
 *               - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__SDRAM_REF_CTRL__REG_REFRESH_RATE      BITFIELD(15, 0)
#define EMIF4D__SDRAM_REF_CTRL__REG_REFRESH_RATE__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__SDRAM_REF_CTRL_SHDW__REG_REFRESH_RATE_SHDW   
 *
 * @BRIEF        Shadow field for reg_refresh_rate. This field is loaded into 
 *               reg_refresh_rate field in SDRAM Refresh Control register 
 *               when SIdleAck is asserted. This register is not auto 
 *               corrected when the value is invalid. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__SDRAM_REF_CTRL_SHDW__REG_REFRESH_RATE_SHDW BITFIELD(15, 0)
#define EMIF4D__SDRAM_REF_CTRL_SHDW__REG_REFRESH_RATE_SHDW__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__SDRAM_TIM_1__REG_T_RP   
 *
 * @BRIEF        Minimum number of m_clk cycles from Precharge to Activate or 
 *               Refresh, minus one. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__SDRAM_TIM_1__REG_T_RP                 BITFIELD(28, 25)
#define EMIF4D__SDRAM_TIM_1__REG_T_RP__POS            25

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__SDRAM_TIM_1__REG_T_RCD   
 *
 * @BRIEF        Minimum number of m_clk cycles from Activate to Read or 
 *               Write, minus one. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__SDRAM_TIM_1__REG_T_RCD                BITFIELD(24, 21)
#define EMIF4D__SDRAM_TIM_1__REG_T_RCD__POS           21

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__SDRAM_TIM_1__REG_T_WR   
 *
 * @BRIEF        Minimum number of m_clk cycles from last Write transfer to 
 *               Pre-charge, minus one. The SDRAM initialization sequence 
 *               will be started when the value of this field is changed from 
 *               the previous value and the EMIF is in DDR2 mode. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__SDRAM_TIM_1__REG_T_WR                 BITFIELD(20, 17)
#define EMIF4D__SDRAM_TIM_1__REG_T_WR__POS            17

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__SDRAM_TIM_1__REG_T_RAS   
 *
 * @BRIEF        Minimum number of m_clk cycles from Activate to Pre-charge, 
 *               minus one. reg_t_ras >= 
 *                reg_t_rcd. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__SDRAM_TIM_1__REG_T_RAS                BITFIELD(16, 12)
#define EMIF4D__SDRAM_TIM_1__REG_T_RAS__POS           12

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__SDRAM_TIM_1__REG_T_RC   
 *
 * @BRIEF        Minimum number of m_clk cycles from Activate to Activate, 
 *               minus one. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__SDRAM_TIM_1__REG_T_RC                 BITFIELD(11, 6)
#define EMIF4D__SDRAM_TIM_1__REG_T_RC__POS            6

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__SDRAM_TIM_1__REG_T_RRD   
 *
 * @BRIEF        Minimum number of m_clk cycles from Activate to Activate for 
 *               a different bank, minus one. For an 8-bank DDR2, this field 
 *               must be equal to ((((4*tRRD)+(2*tCK))/(4*tCK))-1). - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__SDRAM_TIM_1__REG_T_RRD                BITFIELD(5, 3)
#define EMIF4D__SDRAM_TIM_1__REG_T_RRD__POS           3

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__SDRAM_TIM_1__REG_T_WTR   
 *
 * @BRIEF        Minimum number of m_clk cycles from last Write to Read, 
 *               minus one. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__SDRAM_TIM_1__REG_T_WTR                BITFIELD(2, 0)
#define EMIF4D__SDRAM_TIM_1__REG_T_WTR__POS           0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__SDRAM_TIM_1_SHDW__REG_T_RP_SHDW   
 *
 * @BRIEF        Shadow field for reg_t_rp. This field is loaded into 
 *               reg_t_rp field in SDRAM Timing 1 register when SIdleAck is 
 *               asserted. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__SDRAM_TIM_1_SHDW__REG_T_RP_SHDW       BITFIELD(28, 25)
#define EMIF4D__SDRAM_TIM_1_SHDW__REG_T_RP_SHDW__POS  25

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__SDRAM_TIM_1_SHDW__REG_T_RCD_SHDW   
 *
 * @BRIEF        Shadow field for reg_t_rcd. This field is loaded into 
 *               reg_t_rcd field in SDRAM Timing 1 register when SIdleAck is 
 *               asserted. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__SDRAM_TIM_1_SHDW__REG_T_RCD_SHDW      BITFIELD(24, 21)
#define EMIF4D__SDRAM_TIM_1_SHDW__REG_T_RCD_SHDW__POS 21

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__SDRAM_TIM_1_SHDW__REG_T_WR_SHDW   
 *
 * @BRIEF        Shadow field for reg_t_wr. This field is loaded into 
 *               reg_t_wr field in SDRAM Timing 1 register when SIdleAck is 
 *               asserted. initialization sequence will be started when the 
 *               value of this field is changed from the previous value and 
 *               the EMIF is in DDR2 mode. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__SDRAM_TIM_1_SHDW__REG_T_WR_SHDW       BITFIELD(20, 17)
#define EMIF4D__SDRAM_TIM_1_SHDW__REG_T_WR_SHDW__POS  17

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__SDRAM_TIM_1_SHDW__REG_T_RAS_SHDW   
 *
 * @BRIEF        Shadow field for reg_t_ras. This field is loaded into 
 *               reg_t_ras field in SDRAM Timing 1 register when SIdleAck is 
 *               asserted. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__SDRAM_TIM_1_SHDW__REG_T_RAS_SHDW      BITFIELD(16, 12)
#define EMIF4D__SDRAM_TIM_1_SHDW__REG_T_RAS_SHDW__POS 12

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__SDRAM_TIM_1_SHDW__REG_T_RC_SHDW   
 *
 * @BRIEF        Shadow field for reg_t_rc. This field is loaded into 
 *               reg_t_rc field in SDRAM Timing 1 register when SIdleAck is 
 *               asserted. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__SDRAM_TIM_1_SHDW__REG_T_RC_SHDW       BITFIELD(11, 6)
#define EMIF4D__SDRAM_TIM_1_SHDW__REG_T_RC_SHDW__POS  6

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__SDRAM_TIM_1_SHDW__REG_T_RRD_SHDW   
 *
 * @BRIEF        Shadow field for reg_t_rrd. This field is loaded into 
 *               reg_t_rrd field in SDRAM Timing 1 register when SIdleAck is 
 *               asserted. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__SDRAM_TIM_1_SHDW__REG_T_RRD_SHDW      BITFIELD(5, 3)
#define EMIF4D__SDRAM_TIM_1_SHDW__REG_T_RRD_SHDW__POS 3

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__SDRAM_TIM_1_SHDW__REG_T_WTR_SHDW   
 *
 * @BRIEF        Shadow field for reg_t_wtr. This field is loaded into 
 *               reg_t_wtr field in SDRAM Timing 1 register when SIdleAck is 
 *               asserted. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__SDRAM_TIM_1_SHDW__REG_T_WTR_SHDW      BITFIELD(2, 0)
#define EMIF4D__SDRAM_TIM_1_SHDW__REG_T_WTR_SHDW__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__SDRAM_TIM_2__REG_T_XP   
 *
 * @BRIEF        Minimum number of m_clk cycles from Powerdown exit to any 
 *               command other than a Read command, minus one. For DDR2 and 
 *               LPDDR1, this field must satisfy greater of tXP or tCKE. - 
 *               (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__SDRAM_TIM_2__REG_T_XP                 BITFIELD(30, 28)
#define EMIF4D__SDRAM_TIM_2__REG_T_XP__POS            28

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__SDRAM_TIM_2__REG_T_ODT   
 *
 * @BRIEF        Minimum number of m_clk cycles from ODT enable to write data 
 *               driven for DDR2 and DDR3. reg_t_odt must be equal to tAOND. 
 *               - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__SDRAM_TIM_2__REG_T_ODT                BITFIELD(27, 25)
#define EMIF4D__SDRAM_TIM_2__REG_T_ODT__POS           25

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__SDRAM_TIM_2__REG_T_XSNR   
 *
 * @BRIEF        Minimum number of m_clk cycles from Self-Refresh exit to any 
 *               command other than a Read command, minus one. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__SDRAM_TIM_2__REG_T_XSNR               BITFIELD(24, 16)
#define EMIF4D__SDRAM_TIM_2__REG_T_XSNR__POS          16

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__SDRAM_TIM_2__REG_T_XSRD   
 *
 * @BRIEF        Minimum number of m_clk cycles from Self-Refresh exit to a 
 *               Read command, minus one. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__SDRAM_TIM_2__REG_T_XSRD               BITFIELD(15, 6)
#define EMIF4D__SDRAM_TIM_2__REG_T_XSRD__POS          6

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__SDRAM_TIM_2__REG_T_RTP   
 *
 * @BRIEF        Minimum number of m_clk cycles from the last Read command to 
 *               a Pre-charge command for DDR2, minus one. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__SDRAM_TIM_2__REG_T_RTP                BITFIELD(5, 3)
#define EMIF4D__SDRAM_TIM_2__REG_T_RTP__POS           3

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__SDRAM_TIM_2__REG_T_CKE   
 *
 * @BRIEF        Minimum number of m_clk cycles between pad_cke_o changes, 
 *               minus one. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__SDRAM_TIM_2__REG_T_CKE                BITFIELD(2, 0)
#define EMIF4D__SDRAM_TIM_2__REG_T_CKE__POS           0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__SDRAM_TIM_2_SHDW__REG_T_XP_SHDW   
 *
 * @BRIEF        Shadow field for reg_t_xp. This field is loaded into 
 *               reg_t_xp field in SDRAM Timing 2 register when SIdleAck is 
 *               asserted. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__SDRAM_TIM_2_SHDW__REG_T_XP_SHDW       BITFIELD(30, 28)
#define EMIF4D__SDRAM_TIM_2_SHDW__REG_T_XP_SHDW__POS  28

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__SDRAM_TIM_2_SHDW__REG_T_ODT_SHDW   
 *
 * @BRIEF        Shadow field for reg_t_odt. This field is loaded into 
 *               reg_t_odt field in SDRAM Timing 2 register when SIdleAck is 
 *               asserted. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__SDRAM_TIM_2_SHDW__REG_T_ODT_SHDW      BITFIELD(27, 25)
#define EMIF4D__SDRAM_TIM_2_SHDW__REG_T_ODT_SHDW__POS 25

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__SDRAM_TIM_2_SHDW__REG_T_XSNR_SHDW   
 *
 * @BRIEF        Shadow field for reg_t_xsnr. This field is loaded into 
 *               reg_t_xsnr field in SDRAM Timing 2 register when SIdleAck is 
 *               asserted. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__SDRAM_TIM_2_SHDW__REG_T_XSNR_SHDW     BITFIELD(24, 16)
#define EMIF4D__SDRAM_TIM_2_SHDW__REG_T_XSNR_SHDW__POS 16

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__SDRAM_TIM_2_SHDW__REG_T_XSRD_SHDW   
 *
 * @BRIEF        Shadow field for reg_t_xsrd. This field is loaded into 
 *               reg_t_xsrd field in SDRAM Timing 2 register when SIdleAck is 
 *               asserted. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__SDRAM_TIM_2_SHDW__REG_T_XSRD_SHDW     BITFIELD(15, 6)
#define EMIF4D__SDRAM_TIM_2_SHDW__REG_T_XSRD_SHDW__POS 6

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__SDRAM_TIM_2_SHDW__REG_T_RTP_SHDW   
 *
 * @BRIEF        Shadow field for reg_t_rtp. This field is loaded into 
 *               reg_t_rtp field in SDRAM Timing 2 register when SIdleAck is 
 *               asserted. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__SDRAM_TIM_2_SHDW__REG_T_RTP_SHDW      BITFIELD(5, 3)
#define EMIF4D__SDRAM_TIM_2_SHDW__REG_T_RTP_SHDW__POS 3

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__SDRAM_TIM_2_SHDW__REG_T_CKE_SHDW   
 *
 * @BRIEF        Shadow field for reg_t_cke. This field is loaded into 
 *               reg_t_cke field in SDRAM Timing 2 register when SIdleAck is 
 *               asserted. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__SDRAM_TIM_2_SHDW__REG_T_CKE_SHDW      BITFIELD(2, 0)
#define EMIF4D__SDRAM_TIM_2_SHDW__REG_T_CKE_SHDW__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__SDRAM_TIM_3__REG_T_CKESR   
 *
 * @BRIEF        Minimum number of m_clk cycles for which LPDDR2 must remain 
 *               in Self Refresh, minus one. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__SDRAM_TIM_3__REG_T_CKESR              BITFIELD(23, 21)
#define EMIF4D__SDRAM_TIM_3__REG_T_CKESR__POS         21

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__SDRAM_TIM_3__REG_ZQ_ZQCS   
 *
 * @BRIEF        Number of m_clk clock cycles for a ZQCS command, minus one. 
 *               - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__SDRAM_TIM_3__REG_ZQ_ZQCS              BITFIELD(20, 15)
#define EMIF4D__SDRAM_TIM_3__REG_ZQ_ZQCS__POS         15

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__SDRAM_TIM_3__REG_T_TDQSCKMAX   
 *
 * @BRIEF        Number of m_clk that satisfies tDQSCKmax for LPDDR2, minus 
 *               one. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__SDRAM_TIM_3__REG_T_TDQSCKMAX          BITFIELD(14, 13)
#define EMIF4D__SDRAM_TIM_3__REG_T_TDQSCKMAX__POS     13

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__SDRAM_TIM_3__REG_T_RFC   
 *
 * @BRIEF        Minimum number of m_clk cycles from Refresh or Load Mode to 
 *               Refresh or Activate, minus one. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__SDRAM_TIM_3__REG_T_RFC                BITFIELD(12, 4)
#define EMIF4D__SDRAM_TIM_3__REG_T_RFC__POS           4

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__SDRAM_TIM_3__REG_T_RAS_MAX   
 *
 * @BRIEF        Maximum number of reg_refresh_rate intervals from Activate 
 *               to Precharge command. This field must be equal to ((tRASmax 
 *               / tREFI)-1) rounded down to the next lower integer. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__SDRAM_TIM_3__REG_T_RAS_MAX            BITFIELD(3, 0)
#define EMIF4D__SDRAM_TIM_3__REG_T_RAS_MAX__POS       0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__SDRAM_TIM_3_SHDW__REG_T_CKESR_SHDW   
 *
 * @BRIEF        Shadow field for reg_t_ckesr. This field is loaded into 
 *               reg_t_ckesr field in SDRAM Timing 3 register when SIdleAck 
 *               is asserted. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__SDRAM_TIM_3_SHDW__REG_T_CKESR_SHDW    BITFIELD(23, 21)
#define EMIF4D__SDRAM_TIM_3_SHDW__REG_T_CKESR_SHDW__POS 21

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__SDRAM_TIM_3_SHDW__REG_ZQ_ZQCS_SHDW   
 *
 * @BRIEF        Shadow field for reg_zq_zqcs. This field is loaded into 
 *               reg_zq_zqcs field in SDRAM Timing 3 register when SIdleAck 
 *               is asserted. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__SDRAM_TIM_3_SHDW__REG_ZQ_ZQCS_SHDW    BITFIELD(20, 15)
#define EMIF4D__SDRAM_TIM_3_SHDW__REG_ZQ_ZQCS_SHDW__POS 15

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__SDRAM_TIM_3_SHDW__REG_T_TDQSCKMAX_SHDW   
 *
 * @BRIEF        Shadow field for reg_t_dqsckmax. This field is loaded into 
 *               reg_t_dqsckmax field in SDRAM Timing 3 register when 
 *               SIdleAck is asserted. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__SDRAM_TIM_3_SHDW__REG_T_TDQSCKMAX_SHDW BITFIELD(14, 13)
#define EMIF4D__SDRAM_TIM_3_SHDW__REG_T_TDQSCKMAX_SHDW__POS 13

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__SDRAM_TIM_3_SHDW__REG_T_RFC_SHDW   
 *
 * @BRIEF        Shadow field for reg_t_rfc. This field is loaded into 
 *               reg_t_rfc field in SDRAM Timing 3 register when SIdleAck is 
 *               asserted. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__SDRAM_TIM_3_SHDW__REG_T_RFC_SHDW      BITFIELD(12, 4)
#define EMIF4D__SDRAM_TIM_3_SHDW__REG_T_RFC_SHDW__POS 4

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__SDRAM_TIM_3_SHDW__REG_T_RAS_MAX_SHDW   
 *
 * @BRIEF        Shadow field for reg_t_ras_max. This field is loaded into 
 *               reg_t_ras_max field in SDRAM Timing 3 register when SIdleAck 
 *               is asserted. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__SDRAM_TIM_3_SHDW__REG_T_RAS_MAX_SHDW  BITFIELD(3, 0)
#define EMIF4D__SDRAM_TIM_3_SHDW__REG_T_RAS_MAX_SHDW__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__LPDDR2_NVM_TIM__REG_NVM_T_XP   
 *
 * @BRIEF        Minimum number of m_clk cycles from Powerdown exit to any 
 *               command, minus one. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__LPDDR2_NVM_TIM__REG_NVM_T_XP          BITFIELD(30, 28)
#define EMIF4D__LPDDR2_NVM_TIM__REG_NVM_T_XP__POS     28

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__LPDDR2_NVM_TIM__REG_NVM_T_WTR   
 *
 * @BRIEF        Minimum number of m_clk cycles from last Write to Read, 
 *               minus one. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__LPDDR2_NVM_TIM__REG_NVM_T_WTR         BITFIELD(26, 24)
#define EMIF4D__LPDDR2_NVM_TIM__REG_NVM_T_WTR__POS    24

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__LPDDR2_NVM_TIM__REG_NVM_T_RP   
 *
 * @BRIEF        Minimum number of m_clk cycles from Preactive to Activate, 
 *               minus one. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__LPDDR2_NVM_TIM__REG_NVM_T_RP          BITFIELD(23, 20)
#define EMIF4D__LPDDR2_NVM_TIM__REG_NVM_T_RP__POS     20

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__LPDDR2_NVM_TIM__REG_NVM_T_WRA   
 *
 * @BRIEF        Minimum number of m_clk cycles from last Write transfer to 
 *               Activate, minus one. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__LPDDR2_NVM_TIM__REG_NVM_T_WRA         BITFIELD(19, 16)
#define EMIF4D__LPDDR2_NVM_TIM__REG_NVM_T_WRA__POS    16

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__LPDDR2_NVM_TIM__REG_NVM_T_RRD   
 *
 * @BRIEF        Minimum number of m_clk cycles from Activate to Activate for 
 *               a different bank, minus one. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__LPDDR2_NVM_TIM__REG_NVM_T_RRD         BITFIELD(15, 8)
#define EMIF4D__LPDDR2_NVM_TIM__REG_NVM_T_RRD__POS    8

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__LPDDR2_NVM_TIM__REG_NVM_T_RCDMIN   
 *
 * @BRIEF        Minimum number of m_clk cycles from Activate to Read or 
 *               Write, minus one. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__LPDDR2_NVM_TIM__REG_NVM_T_RCDMIN      BITFIELD(7, 0)
#define EMIF4D__LPDDR2_NVM_TIM__REG_NVM_T_RCDMIN__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__LPDDR2_NVM_TIM_SHDW__REG_NVM_T_XP_SHDW   
 *
 * @BRIEF        Shadow field for reg_nvm_t_xp. This field is loaded into 
 *               reg_nvm_t_xp field in LPDDR2-NVM Timing register when 
 *               SIdleAck is asserted. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__LPDDR2_NVM_TIM_SHDW__REG_NVM_T_XP_SHDW BITFIELD(30, 28)
#define EMIF4D__LPDDR2_NVM_TIM_SHDW__REG_NVM_T_XP_SHDW__POS 28

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__LPDDR2_NVM_TIM_SHDW__REG_NVM_T_WTR_SHDW   
 *
 * @BRIEF        Shadow field for reg_nvm_t_wtr. This field is loaded into 
 *               reg_nvm_t_wtr field in LPDDR2-NVM Timing register when 
 *               SIdleAck is asserted. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__LPDDR2_NVM_TIM_SHDW__REG_NVM_T_WTR_SHDW BITFIELD(26, 24)
#define EMIF4D__LPDDR2_NVM_TIM_SHDW__REG_NVM_T_WTR_SHDW__POS 24

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__LPDDR2_NVM_TIM_SHDW__REG_NVM_T_RP_SHDW   
 *
 * @BRIEF        Shadow field for reg_nvm_t_rp. This field is loaded into 
 *               reg_nvm_t_rp field in LPDDR2-NVM Timing register when 
 *               SIdleAck is asserted. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__LPDDR2_NVM_TIM_SHDW__REG_NVM_T_RP_SHDW BITFIELD(23, 20)
#define EMIF4D__LPDDR2_NVM_TIM_SHDW__REG_NVM_T_RP_SHDW__POS 20

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__LPDDR2_NVM_TIM_SHDW__REG_NVM_T_WRA_SHDW   
 *
 * @BRIEF        Shadow field for reg_nvm_t_wra. This field is loaded into 
 *               reg_nvm_t_wra field in LPDDR2-NVM Timing register when 
 *               SIdleAck is asserted. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__LPDDR2_NVM_TIM_SHDW__REG_NVM_T_WRA_SHDW BITFIELD(19, 16)
#define EMIF4D__LPDDR2_NVM_TIM_SHDW__REG_NVM_T_WRA_SHDW__POS 16

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__LPDDR2_NVM_TIM_SHDW__REG_NVM_T_RRD_SHDW   
 *
 * @BRIEF        Shadow field for reg_nvm_t_rrd. This field is loaded into 
 *               reg_nvm_t_rrd field in LPDDR2-NVM Timing register when 
 *               SIdleAck is asserted. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__LPDDR2_NVM_TIM_SHDW__REG_NVM_T_RRD_SHDW BITFIELD(15, 8)
#define EMIF4D__LPDDR2_NVM_TIM_SHDW__REG_NVM_T_RRD_SHDW__POS 8

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__LPDDR2_NVM_TIM_SHDW__REG_NVM_T_RCDMIN_SHDW   
 *
 * @BRIEF        Shadow field for reg_nvm_t_rcdmin. This field is loaded into 
 *               reg_nvm_t_rcdmin field in LPDDR2-NVM Timing register when 
 *               SIdleAck is asserted. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__LPDDR2_NVM_TIM_SHDW__REG_NVM_T_RCDMIN_SHDW BITFIELD(7, 0)
#define EMIF4D__LPDDR2_NVM_TIM_SHDW__REG_NVM_T_RCDMIN_SHDW__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__PWR_MGMT_CTRL__REG_IDLEMODE   
 *
 * @BRIEF        Power-Idle IP Generic mode. Set to 0 for force-idle mode, 
 *               where EMIF acknowledges the system's idle requests 
 *               unconditionally, i.e. regardless of the EMIF's internal 
 *               requirements. Backup mode, for debug only. Set to 1 for 
 *               no-idle mode, where EMIF will never enter idle state. Backup 
 *               mode, for debug only. Set to 2 for smart-idle mode, where 
 *               EMIF's idle state eventually follows (acknowledges) the 
 *               system's idle requests, depending on EMIF's internal 
 *               requirements. Setting of 3 (smart-idle wakeup-capable mode) 
 *               is not supported. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__PWR_MGMT_CTRL__REG_IDLEMODE           BITFIELD(31, 30)
#define EMIF4D__PWR_MGMT_CTRL__REG_IDLEMODE__POS      30

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__PWR_MGMT_CTRL__REG_PD_TIM   
 *
 * @BRIEF        Power Mangement timer for Power-Down. The EMIF will put the 
 *               external SDRAM in Power-Down mode after the EMIF is idle for 
 *               these number of m_clk cycles and if reg_lp_mode field is set 
 *               to 4. Set to 0 to immediately enter Power-Down mode. Set to 
 *               1 for 16 clocks, set to 2 for 32 clocks, set to 3 for 64 
 *               clocks, set to 4 for 128 clocks, set to 5 for 256 clocks, 
 *               set to 6 for 512 clocks, set to 7 for 1024 clocks, set to 8 
 *               for 2048 clocks, set to 9 for 4096 clocks, set to 10 for 
 *               8192 clocks, set to 11 for 16384 clocks, set to 12 for 32768 
 *               clocks, set to 13 for 65536 clocks, set to 14 for 131072 
 *               clocks, and set to 15 for 262144 clocks. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__PWR_MGMT_CTRL__REG_PD_TIM             BITFIELD(15, 12)
#define EMIF4D__PWR_MGMT_CTRL__REG_PD_TIM__POS        12

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__PWR_MGMT_CTRL__REG_DPD_EN   
 *
 * @BRIEF        Deep Power Down enable. Set to 0 for normal operation. Set 
 *               to 1 to enter deep power down mode. This mode will override 
 *               the reg_lp_mode field setting. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__PWR_MGMT_CTRL__REG_DPD_EN             BITFIELD(11, 11)
#define EMIF4D__PWR_MGMT_CTRL__REG_DPD_EN__POS        11

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__PWR_MGMT_CTRL__REG_LP_MODE   
 *
 * @BRIEF        Automatic Power Management enable. Set to 1 for Clock Stop, 
 *               set to 2 for Self Refresh, and set to 4 for Power-Down. All 
 *               other values will disable automatic power management. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__PWR_MGMT_CTRL__REG_LP_MODE            BITFIELD(10, 8)
#define EMIF4D__PWR_MGMT_CTRL__REG_LP_MODE__POS       8

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__PWR_MGMT_CTRL__REG_SR_TIM   
 *
 * @BRIEF        Power Mangement timer for Self Refresh. The EMIF will put 
 *               the external SDRAM in Self Refresh mode after the EMIF is 
 *               idle for these number of m_clk cycles and if reg_lp_mode 
 *               field is set to 2. Set to 0 to immediately enter Self 
 *               Refresh mode. Set to 1 for 16 clocks, set to 2 for 32 
 *               clocks, set to 3 for 64 clocks, set to 4 for 128 clocks, set 
 *               to 5 for 256 clocks, set to 6 for 512 clocks, set to 7 for 
 *               1024 clocks, set to 8 for 2048 clocks, set to 9 for 4096 
 *               clocks, set to 10 for 8192 clocks, set to 11 for 16384 
 *               clocks, set to 12 for 32768 clocks, set to 13 for 65536 
 *               clocks, set to 14 for 131072 clocks, and set to 15 for 
 *               262144 clocks. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__PWR_MGMT_CTRL__REG_SR_TIM             BITFIELD(7, 4)
#define EMIF4D__PWR_MGMT_CTRL__REG_SR_TIM__POS        4

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__PWR_MGMT_CTRL__REG_CS_TIM   
 *
 * @BRIEF        Power Mangement timer for Clock Stop. The EMIF will put the 
 *               external SDRAM in Clock Stop mode after the EMIF is idle for 
 *               these number of m_clk cycles and if reg_lp_mode field is set 
 *               to 1. Set to 0 to immediately enter Clock Stop mode. Set to 
 *               1 for 16 clocks, set to 2 for 32 clocks, set to 3 for 64 
 *               clocks, set to 4 for 128 clocks, set to 5 for 256 clocks, 
 *               set to 6 for 512 clocks, set to 7 for 1024 clocks, set to 8 
 *               for 2048 clocks, set to 9 for 4096 clocks, set to 10 for 
 *               8192 clocks, set to 11 for 16384 clocks, set to 12 for 32768 
 *               clocks, set to 13 for 65536 clocks, set to 14 for 131072 
 *               clocks, and set to 15 for 262144 clocks. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__PWR_MGMT_CTRL__REG_CS_TIM             BITFIELD(3, 0)
#define EMIF4D__PWR_MGMT_CTRL__REG_CS_TIM__POS        0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__PWR_MGMT_CTRL_SHDW__REG_PD_TIM_SHDW   
 *
 * @BRIEF        Shadow field for reg_pd_tim. This field is loaded into 
 *               reg_pd_tim field in Power Management Control register when 
 *               SIdleAck is asserted. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__PWR_MGMT_CTRL_SHDW__REG_PD_TIM_SHDW   BITFIELD(11, 8)
#define EMIF4D__PWR_MGMT_CTRL_SHDW__REG_PD_TIM_SHDW__POS 8

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__PWR_MGMT_CTRL_SHDW__REG_SR_TIM_SHDW   
 *
 * @BRIEF        Shadow field for reg_sr_tim. This field is loaded into 
 *               reg_sr_tim field in Power Management Control register when 
 *               SIdleAck is asserted. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__PWR_MGMT_CTRL_SHDW__REG_SR_TIM_SHDW   BITFIELD(7, 4)
#define EMIF4D__PWR_MGMT_CTRL_SHDW__REG_SR_TIM_SHDW__POS 4

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__PWR_MGMT_CTRL_SHDW__REG_CS_TIM_SHDW   
 *
 * @BRIEF        Shadow field for reg_cs_tim. This field is loaded into 
 *               reg_cs_tim field in Power Management Control register when 
 *               SIdleAck is asserted. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__PWR_MGMT_CTRL_SHDW__REG_CS_TIM_SHDW   BITFIELD(3, 0)
#define EMIF4D__PWR_MGMT_CTRL_SHDW__REG_CS_TIM_SHDW__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__LPDDR2_MODE_REG_DATA__REG_VALUE_0   
 *
 * @BRIEF        Mode register value. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__LPDDR2_MODE_REG_DATA__REG_VALUE_0     BITFIELD(6, 0)
#define EMIF4D__LPDDR2_MODE_REG_DATA__REG_VALUE_0__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__LPDDR2_MODE_REG_CFG__REG_CS   
 *
 * @BRIEF        Chip select to issue mode register command. Set to 0 for CS0 
 *               and set to 1 for CS1. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__LPDDR2_MODE_REG_CFG__REG_CS           BITFIELD(31, 31)
#define EMIF4D__LPDDR2_MODE_REG_CFG__REG_CS__POS      31

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__LPDDR2_MODE_REG_CFG__REG_REFRESH_EN   
 *
 * @BRIEF        Refresh Enable after MRW write. If a Mode Data register 
 *               write occurs with this bit set to 1, the refresh operations 
 *               will commence. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__LPDDR2_MODE_REG_CFG__REG_REFRESH_EN   BITFIELD(30, 30)
#define EMIF4D__LPDDR2_MODE_REG_CFG__REG_REFRESH_EN__POS 30

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__LPDDR2_MODE_REG_CFG__REG_ADDRESS   
 *
 * @BRIEF        Mode register address. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__LPDDR2_MODE_REG_CFG__REG_ADDRESS      BITFIELD(7, 0)
#define EMIF4D__LPDDR2_MODE_REG_CFG__REG_ADDRESS__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__OCP_CONFIG__REG_SYS_THRESH_MAX   
 *
 * @BRIEF        System OCP Threshold Maximum. The number of commands the 
 *               system interface can consume in the command FIFO. The value 
 *               is used to determine when to stop future request, writing a 
 *               zero will reserve no space for the associated interface. In 
 *               the event the value is set to zero and a request is seen for 
 *               that interface, the command FIFO will assume a value of 1. 
 *               Since the low-latency interface has effectively a higher 
 *               priority, the only way for the system interface to use all 
 *               command FIFO entries is to set the reg_ll_thresh_max to 
 *               zero. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__OCP_CONFIG__REG_SYS_THRESH_MAX        BITFIELD(27, 24)
#define EMIF4D__OCP_CONFIG__REG_SYS_THRESH_MAX__POS   24

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__OCP_CONFIG__REG_LL_THRESH_MAX   
 *
 * @BRIEF        Low-latency OCP Threshold Maximum. The number of commands 
 *               the low latency interface can consume in the command FIFO. 
 *               The value is used to determine when to stop future request, 
 *               writing a zero will reserve no space for the associated 
 *               interface. In the event the value is set to zero and a 
 *               request is seen for that interface, the command FIFO will 
 *               assume a value of 1. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__OCP_CONFIG__REG_LL_THRESH_MAX         BITFIELD(19, 16)
#define EMIF4D__OCP_CONFIG__REG_LL_THRESH_MAX__POS    16

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__OCP_CONFIG__REG_PR_OLD_COUNT   
 *
 * @BRIEF        Priority Raise Old Counter. Number of memory transfers after 
 *               which the EMIF momentarily raises the priority of old 
 *               commands in the OCP Command FIFO. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__OCP_CONFIG__REG_PR_OLD_COUNT          BITFIELD(7, 0)
#define EMIF4D__OCP_CONFIG__REG_PR_OLD_COUNT__POS     0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__OCP_CFG_VAL_1__REG_SYS_BUS_WIDTH   
 *
 * @BRIEF        System OCP data bus width for a particular configuration. 0 
 *               = 32-bit wide, 1 = 64-bit wide, 2 = 128-bit wide, and 3 = 
 *               256-bit wide - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__OCP_CFG_VAL_1__REG_SYS_BUS_WIDTH      BITFIELD(31, 30)
#define EMIF4D__OCP_CFG_VAL_1__REG_SYS_BUS_WIDTH__POS 30

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__OCP_CFG_VAL_1__REG_LL_BUS_WIDTH   
 *
 * @BRIEF        Low-latency OCP data bus width for a particular 
 *               configuration. 0 = 32-bit wide, 1 = 64-bit wide, 2 = 128-bit 
 *               wide, and 3 = 256-bit wide - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__OCP_CFG_VAL_1__REG_LL_BUS_WIDTH       BITFIELD(29, 28)
#define EMIF4D__OCP_CFG_VAL_1__REG_LL_BUS_WIDTH__POS  28

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__OCP_CFG_VAL_1__REG_WR_FIFO_DEPTH   
 *
 * @BRIEF        Write Data FIFO depth for a particular configuration. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__OCP_CFG_VAL_1__REG_WR_FIFO_DEPTH      BITFIELD(15, 8)
#define EMIF4D__OCP_CFG_VAL_1__REG_WR_FIFO_DEPTH__POS 8

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__OCP_CFG_VAL_1__REG_CMD_FIFO_DEPTH   
 *
 * @BRIEF        Command FIFO depth for a particular configuration. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__OCP_CFG_VAL_1__REG_CMD_FIFO_DEPTH     BITFIELD(7, 0)
#define EMIF4D__OCP_CFG_VAL_1__REG_CMD_FIFO_DEPTH__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__OCP_CFG_VAL_2__REG_RREG_FIFO_DEPTH   
 *
 * @BRIEF        Register Read Data FIFO depth for a particular 
 *               configuration. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__OCP_CFG_VAL_2__REG_RREG_FIFO_DEPTH    BITFIELD(23, 16)
#define EMIF4D__OCP_CFG_VAL_2__REG_RREG_FIFO_DEPTH__POS 16

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__OCP_CFG_VAL_2__REG_RSD_FIFO_DEPTH   
 *
 * @BRIEF        SDRAM Read Data FIFO depth for a particular configuration. - 
 *               (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__OCP_CFG_VAL_2__REG_RSD_FIFO_DEPTH     BITFIELD(15, 8)
#define EMIF4D__OCP_CFG_VAL_2__REG_RSD_FIFO_DEPTH__POS 8

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__OCP_CFG_VAL_2__REG_RCMD_FIFO_DEPTH   
 *
 * @BRIEF        Read Command FIFO depth for a particular configuration. - 
 *               (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__OCP_CFG_VAL_2__REG_RCMD_FIFO_DEPTH    BITFIELD(7, 0)
#define EMIF4D__OCP_CFG_VAL_2__REG_RCMD_FIFO_DEPTH__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__IODFT_TLGC__REG_TLEC   
 *
 * @BRIEF        IODFT Test Logic Execution Counter. Contains the number of 
 *               cycle that the MISR signature will be accumulated. Upon the 
 *               expiration of the counter the MISR capture will be turned 
 *               off. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__IODFT_TLGC__REG_TLEC                  BITFIELD(31, 16)
#define EMIF4D__IODFT_TLGC__REG_TLEC__POS             16

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__IODFT_TLGC__REG_MT   
 *
 * @BRIEF        MISR on/off trigger command. 0x0 = inactive/no affect. 0x1 = 
 *               MISR capture start on the first write or read command to the 
 *               memory and continues to update the signature until reg_tlec 
 *               expires - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__IODFT_TLGC__REG_MT                    BITFIELD(14, 14)
#define EMIF4D__IODFT_TLGC__REG_MT__POS               14

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__IODFT_TLGC__REG_ACT_CAP_EN   
 *
 * @BRIEF        Active cycles capture enable. If set to a 1 the MISRs and 
 *               pattern generators will shift only during active cycles. If 
 *               set to a 0 the MISRs and pattern generators will shift every 
 *               clock cycle. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__IODFT_TLGC__REG_ACT_CAP_EN            BITFIELD(13, 13)
#define EMIF4D__IODFT_TLGC__REG_ACT_CAP_EN__POS       13

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__IODFT_TLGC__REG_OPG_LD   
 *
 * @BRIEF        Load pattern generators' initial value. Set to 1 to load an 
 *               initial value in the pattern generators from reg_tlec. - 
 *               (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__IODFT_TLGC__REG_OPG_LD                BITFIELD(12, 12)
#define EMIF4D__IODFT_TLGC__REG_OPG_LD__POS           12

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__IODFT_TLGC__REG_RESET_PHY   
 *
 * @BRIEF        Reset DDR PHY. Writing a 1 to this bit will reset the DDR 
 *               PHY. This bit will self clear to 0. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__IODFT_TLGC__REG_RESET_PHY             BITFIELD(10, 10)
#define EMIF4D__IODFT_TLGC__REG_RESET_PHY__POS        10

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__IODFT_TLGC__REG_MMS   
 *
 * @BRIEF        Chooses the source of the MISR input. Set to 0 for output 
 *               register, and set to 1 for input capture. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__IODFT_TLGC__REG_MMS                   BITFIELD(8, 8)
#define EMIF4D__IODFT_TLGC__REG_MMS__POS              8

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__IODFT_TLGC__REG_MC   
 *
 * @BRIEF        MISR state. Set to 0 to download results. Set to 1 to hold 
 *               current value. Set to 2 to load initial value from pc bits. 
 *               Set to 3 to enable MISR to capture signature. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__IODFT_TLGC__REG_MC                    BITFIELD(5, 4)
#define EMIF4D__IODFT_TLGC__REG_MC__POS               4

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__IODFT_TLGC__REG_PC   
 *
 * @BRIEF        Pattern code. Defines the type of pattern that is selected 
 *               for the pattern generators. Set to 0 for functional mode and 
 *               set to 4 to hold current register value. For output pattern 
 *               generator, set to 1 for random XOR, set to 2 for random 
 *               XNOR, and set to 3 for an 8 bit shifter. For input pattern 
 *               generator, set to 5 for random XOR, set to 6 for random 
 *               XNOR, and set to 7 for an 8 bit shifter. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__IODFT_TLGC__REG_PC                    BITFIELD(3, 1)
#define EMIF4D__IODFT_TLGC__REG_PC__POS               1

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__IODFT_TLGC__REG_TM   
 *
 * @BRIEF        Functional mode enable. Set to 1 for functional mode, and 
 *               set to 0 for IODFT mode. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__IODFT_TLGC__REG_TM                    BITFIELD(0, 0)
#define EMIF4D__IODFT_TLGC__REG_TM__POS               0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__IODFT_CTRL_MISR_RSLT__REG_DQM_TLMR   
 *
 * @BRIEF        This contains the MISR result signature of a given test 
 *               after the download function is executed. This result is for 
 *               the DQM signals. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__IODFT_CTRL_MISR_RSLT__REG_DQM_TLMR    BITFIELD(25, 16)
#define EMIF4D__IODFT_CTRL_MISR_RSLT__REG_DQM_TLMR__POS 16

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__IODFT_CTRL_MISR_RSLT__REG_CTL_TLMR   
 *
 * @BRIEF        This contains the MISR result signature of a given test 
 *               after the download function is executed. This result is for 
 *               the control signals. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__IODFT_CTRL_MISR_RSLT__REG_CTL_TLMR    BITFIELD(10, 0)
#define EMIF4D__IODFT_CTRL_MISR_RSLT__REG_CTL_TLMR__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__IODFT_ADDR_MISR_RSLT__REG_ADDR_TLMR   
 *
 * @BRIEF        This contains the MISR result signature of a given test 
 *               after the download function is executed. This result is for 
 *               the address signals. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__IODFT_ADDR_MISR_RSLT__REG_ADDR_TLMR   BITFIELD(20, 0)
#define EMIF4D__IODFT_ADDR_MISR_RSLT__REG_ADDR_TLMR__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__IODFT_DATA_MISR_RSLT_1__REG_DATA_TLMR_31_0   
 *
 * @BRIEF        This contains the least significant bits of the MISR result 
 *               signature of a given test after the download function is 
 *               executed. This result is for data bus. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__IODFT_DATA_MISR_RSLT_1__REG_DATA_TLMR_31_0 BITFIELD(31, 0)
#define EMIF4D__IODFT_DATA_MISR_RSLT_1__REG_DATA_TLMR_31_0__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__IODFT_DATA_MISR_RSLT_2__REG_DATA_TLMR_63_32   
 *
 * @BRIEF        This contains the middle bits of the MISR result signature 
 *               of a given test after the download function is executed. 
 *               This result is for data bus. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__IODFT_DATA_MISR_RSLT_2__REG_DATA_TLMR_63_32 BITFIELD(31, 0)
#define EMIF4D__IODFT_DATA_MISR_RSLT_2__REG_DATA_TLMR_63_32__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__IODFT_DATA_MISR_RSLT_3__REG_DATA_TLMR_66_64   
 *
 * @BRIEF        This contains the most significant bits of the MISR result 
 *               signature of a given test after the download function is 
 *               executed. This result is for data bus. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__IODFT_DATA_MISR_RSLT_3__REG_DATA_TLMR_66_64 BITFIELD(2, 0)
#define EMIF4D__IODFT_DATA_MISR_RSLT_3__REG_DATA_TLMR_66_64__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__PERF_CNT_1__REG_COUNTER1   
 *
 * @BRIEF        32-bit counter that can be configured as specified in the 
 *               Performance Counter Config Register and Performance Counter 
 *               Master Region Select Register. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__PERF_CNT_1__REG_COUNTER1              BITFIELD(31, 0)
#define EMIF4D__PERF_CNT_1__REG_COUNTER1__POS         0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__PERF_CNT_2__REG_COUNTER2   
 *
 * @BRIEF        32-bit counter that can be configured as specified in the 
 *               Performance Counter Config Register and Performance Counter 
 *               Master Region Select Register. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__PERF_CNT_2__REG_COUNTER2              BITFIELD(31, 0)
#define EMIF4D__PERF_CNT_2__REG_COUNTER2__POS         0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__PERF_CNT_CFG__REG_CNTR2_MTAGID_EN   
 *
 * @BRIEF        MConnID filter enable for Performance Counter 2 register. - 
 *               (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__PERF_CNT_CFG__REG_CNTR2_MTAGID_EN     BITFIELD(31, 31)
#define EMIF4D__PERF_CNT_CFG__REG_CNTR2_MTAGID_EN__POS 31

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__PERF_CNT_CFG__REG_CNTR2_REGION_EN   
 *
 * @BRIEF        Chip Select filter enable for Performance Counter 2 
 *               register. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__PERF_CNT_CFG__REG_CNTR2_REGION_EN     BITFIELD(30, 30)
#define EMIF4D__PERF_CNT_CFG__REG_CNTR2_REGION_EN__POS 30

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__PERF_CNT_CFG__REG_CNTR2_CFG   
 *
 * @BRIEF        Filter configuration for Performance Counter 2. Refer to 
 *               table for details. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__PERF_CNT_CFG__REG_CNTR2_CFG           BITFIELD(19, 16)
#define EMIF4D__PERF_CNT_CFG__REG_CNTR2_CFG__POS      16

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__PERF_CNT_CFG__REG_CNTR1_MTAGID_EN   
 *
 * @BRIEF        MConnID filter enable for Performance Counter 1 register. - 
 *               (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__PERF_CNT_CFG__REG_CNTR1_MTAGID_EN     BITFIELD(15, 15)
#define EMIF4D__PERF_CNT_CFG__REG_CNTR1_MTAGID_EN__POS 15

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__PERF_CNT_CFG__REG_CNTR1_REGION_EN   
 *
 * @BRIEF        Chip Select filter enable for Performance Counter 1 
 *               register. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__PERF_CNT_CFG__REG_CNTR1_REGION_EN     BITFIELD(14, 14)
#define EMIF4D__PERF_CNT_CFG__REG_CNTR1_REGION_EN__POS 14

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__PERF_CNT_CFG__REG_CNTR1_CFG   
 *
 * @BRIEF        Filter configuration for Performance Counter 1. Refer to 
 *               table for details. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__PERF_CNT_CFG__REG_CNTR1_CFG           BITFIELD(3, 0)
#define EMIF4D__PERF_CNT_CFG__REG_CNTR1_CFG__POS      0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__PERF_CNT_SEL__REG_MTAGID2   
 *
 * @BRIEF        MConnID for Performance Counter 2 register. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__PERF_CNT_SEL__REG_MTAGID2             BITFIELD(31, 24)
#define EMIF4D__PERF_CNT_SEL__REG_MTAGID2__POS        24

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__PERF_CNT_SEL__REG_REGION_SEL2   
 *
 * @BRIEF        MAddrSpace for Performance Counter 2 register. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__PERF_CNT_SEL__REG_REGION_SEL2         BITFIELD(17, 16)
#define EMIF4D__PERF_CNT_SEL__REG_REGION_SEL2__POS    16

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__PERF_CNT_SEL__REG_MTAGID1   
 *
 * @BRIEF        MConnID for Performance Counter 1 register. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__PERF_CNT_SEL__REG_MTAGID1             BITFIELD(15, 8)
#define EMIF4D__PERF_CNT_SEL__REG_MTAGID1__POS        8

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__PERF_CNT_SEL__REG_REGION_SEL1   
 *
 * @BRIEF        MAddrSpace for Performance Counter 1 register. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__PERF_CNT_SEL__REG_REGION_SEL1         BITFIELD(1, 0)
#define EMIF4D__PERF_CNT_SEL__REG_REGION_SEL1__POS    0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__PERF_CNT_TIM__REG_TOTAL_TIME   
 *
 * @BRIEF        32-bit counter that continuously counts number for m_clk 
 *               cycles elapsed after EMIF is brought out of reset. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__PERF_CNT_TIM__REG_TOTAL_TIME          BITFIELD(31, 0)
#define EMIF4D__PERF_CNT_TIM__REG_TOTAL_TIME__POS     0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__READ_IDLE_CTRL__REG_READ_IDLE_LEN   
 *
 * @BRIEF        The Read Idle Length field determines the minimum size 
 *               (reg_read_idle_len-1 clock cycles) of Read Idle window for 
 *               the read idle detection as well as the force read idle time. 
 *               - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__READ_IDLE_CTRL__REG_READ_IDLE_LEN     BITFIELD(19, 16)
#define EMIF4D__READ_IDLE_CTRL__REG_READ_IDLE_LEN__POS 16

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__READ_IDLE_CTRL__REG_READ_IDLE_INTERVAL   
 *
 * @BRIEF        The Read Idle Interval field determines the maximum interval 
 *               ((reg_read_idle_interval-1)*64 clock cycles) between read 
 *               idle detections or force. A value of zero disables the read 
 *               idle function. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__READ_IDLE_CTRL__REG_READ_IDLE_INTERVAL BITFIELD(8, 0)
#define EMIF4D__READ_IDLE_CTRL__REG_READ_IDLE_INTERVAL__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__READ_IDLE_CTRL_SHDW__REG_READ_IDLE_LEN   
 *
 * @BRIEF        Shadow field for reg_read_idle_len. This field is loaded 
 *               into reg_read_idle_len field in Read Idle Control register 
 *               when SIdleAck is asserted; - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__READ_IDLE_CTRL_SHDW__REG_READ_IDLE_LEN BITFIELD(19, 16)
#define EMIF4D__READ_IDLE_CTRL_SHDW__REG_READ_IDLE_LEN__POS 16

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__READ_IDLE_CTRL_SHDW__REG_READ_IDLE_INTERVAL   
 *
 * @BRIEF        Shadow field for reg_read_idle_interval. This field is 
 *               loaded into reg_read_idle_interval field in Read Idle 
 *               Control register when SIdleAck is asserted. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__READ_IDLE_CTRL_SHDW__REG_READ_IDLE_INTERVAL BITFIELD(8, 0)
#define EMIF4D__READ_IDLE_CTRL_SHDW__REG_READ_IDLE_INTERVAL__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__IRQ_EOI__REG_EOI   
 *
 * @BRIEF        Software End Of Interrupt (EOI) control. Write 0 for system 
 *               OCP interrupt and write 1 for low-latency OCP interrupt. 
 *               This field always reads 0 (no EOI memory). - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__IRQ_EOI__REG_EOI                      BITFIELD(0, 0)
#define EMIF4D__IRQ_EOI__REG_EOI__POS                 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__IRQSTATUS_RAW_SYS__REG_DNV_SYS   
 *
 * @BRIEF        Raw status of system OCP interrupt for LPDDR2 NVM data not 
 *               valid. Write 1 to set the (raw) status, mostly for debug. 
 *               Writing a 0 has no effect. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__IRQSTATUS_RAW_SYS__REG_DNV_SYS        BITFIELD(2, 2)
#define EMIF4D__IRQSTATUS_RAW_SYS__REG_DNV_SYS__POS   2

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__IRQSTATUS_RAW_SYS__REG_TA_SYS   
 *
 * @BRIEF        Raw status of system OCP interrupt. Write 1 to set the (raw) 
 *               status, mostly for debug. Writing a 0 has no effect. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__IRQSTATUS_RAW_SYS__REG_TA_SYS         BITFIELD(1, 1)
#define EMIF4D__IRQSTATUS_RAW_SYS__REG_TA_SYS__POS    1

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__IRQSTATUS_RAW_SYS__REG_ERR_SYS   
 *
 * @BRIEF        Raw status of system OCP interrupt. Write 1 to set the (raw) 
 *               status, mostly for debug. Writing a 0 has no effect. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__IRQSTATUS_RAW_SYS__REG_ERR_SYS        BITFIELD(0, 0)
#define EMIF4D__IRQSTATUS_RAW_SYS__REG_ERR_SYS__POS   0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__IRQSTATUS_RAW_LL__REG_DNV_LL   
 *
 * @BRIEF        Raw status of low-latency OCP interrupt for LPDDR2 NVM data 
 *               not valid. Write 1 to set the (raw) status, mostly for 
 *               debug. Writing a 0 has no effect. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__IRQSTATUS_RAW_LL__REG_DNV_LL          BITFIELD(2, 2)
#define EMIF4D__IRQSTATUS_RAW_LL__REG_DNV_LL__POS     2

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__IRQSTATUS_RAW_LL__REG_TA_LL   
 *
 * @BRIEF        Raw status of low-latency OCP interrupt. Write 1 to set the 
 *               (raw) status, mostly for debug. Writing a 0 has no effect. - 
 *               (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__IRQSTATUS_RAW_LL__REG_TA_LL           BITFIELD(1, 1)
#define EMIF4D__IRQSTATUS_RAW_LL__REG_TA_LL__POS      1

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__IRQSTATUS_RAW_LL__REG_ERR_LL   
 *
 * @BRIEF        Raw status of low-latency OCP interrupt. Write 1 to set the 
 *               (raw) status, mostly for debug. Writing a 0 has no effect. - 
 *               (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__IRQSTATUS_RAW_LL__REG_ERR_LL          BITFIELD(0, 0)
#define EMIF4D__IRQSTATUS_RAW_LL__REG_ERR_LL__POS     0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__IRQSTATUS_SYS__REG_DNV_SYS   
 *
 * @BRIEF        Enabled status of system OCP interrupt for LPDDR2 NVM data 
 *               not valid. Write 1 to clear the status after interrupt has 
 *               been serviced (raw status gets cleared, i.e. even if not 
 *               enabled). Writing a 0 has no effect. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__IRQSTATUS_SYS__REG_DNV_SYS            BITFIELD(2, 2)
#define EMIF4D__IRQSTATUS_SYS__REG_DNV_SYS__POS       2

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__IRQSTATUS_SYS__REG_TA_SYS   
 *
 * @BRIEF        Enabled status of system OCP interrupt. Write 1 to clear the 
 *               status after interrupt has been serviced (raw status gets 
 *               cleared, i.e. even if not enabled). Writing a 0 has no 
 *               effect. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__IRQSTATUS_SYS__REG_TA_SYS             BITFIELD(1, 1)
#define EMIF4D__IRQSTATUS_SYS__REG_TA_SYS__POS        1

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__IRQSTATUS_SYS__REG_ERR_SYS   
 *
 * @BRIEF        Enabled status of system OCP interrupt. Write 1 to clear the 
 *               status after interrupt has been serviced (raw status gets 
 *               cleared, i.e. even if not enabled). Writing a 0 has no 
 *               effect. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__IRQSTATUS_SYS__REG_ERR_SYS            BITFIELD(0, 0)
#define EMIF4D__IRQSTATUS_SYS__REG_ERR_SYS__POS       0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__IRQSTATUS_LL__REG_DNV_LL   
 *
 * @BRIEF        Enabled status of low-latency OCP interrupt for LPDDR2 NVM 
 *               data not valid. Write 1 to clear the status after interrupt 
 *               has been serviced (raw status gets cleared, i.e. even if not 
 *               enabled). Writing a 0 has no effect. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__IRQSTATUS_LL__REG_DNV_LL              BITFIELD(2, 2)
#define EMIF4D__IRQSTATUS_LL__REG_DNV_LL__POS         2

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__IRQSTATUS_LL__REG_TA_LL   
 *
 * @BRIEF        Enabled status of low-latency OCP interrupt. Write 1 to 
 *               clear the status after interrupt has been serviced (raw 
 *               status gets cleared, i.e. even if not enabled). Writing a 0 
 *               has no effect. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__IRQSTATUS_LL__REG_TA_LL               BITFIELD(1, 1)
#define EMIF4D__IRQSTATUS_LL__REG_TA_LL__POS          1

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__IRQSTATUS_LL__REG_ERR_LL   
 *
 * @BRIEF        Enabled status of low-latency OCP interrupt. Write 1 to 
 *               clear the status after interrupt has been serviced (raw 
 *               status gets cleared, i.e. even if not enabled). Writing a 0 
 *               has no effect. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__IRQSTATUS_LL__REG_ERR_LL              BITFIELD(0, 0)
#define EMIF4D__IRQSTATUS_LL__REG_ERR_LL__POS         0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__IRQENABLE_SET_SYS__REG_EN_DNV_SYS   
 *
 * @BRIEF        Enable set for system OCP interrupt for LPDDR2 NVM data not 
 *               valid. Writing a 1 will enable the interrupt, and set this 
 *               bit as well as the corresponding Interrupt Enable Clear 
 *               Register. Writing a 0 has no effect. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__IRQENABLE_SET_SYS__REG_EN_DNV_SYS     BITFIELD(2, 2)
#define EMIF4D__IRQENABLE_SET_SYS__REG_EN_DNV_SYS__POS 2

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__IRQENABLE_SET_SYS__REG_EN_TA_SYS   
 *
 * @BRIEF        Enable set for system OCP interrupt. Writing a 1 will enable 
 *               the interrupt, and set this bit as well as the corresponding 
 *               Interrupt Enable Clear Register. Writing a 0 has no effect. 
 *               - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__IRQENABLE_SET_SYS__REG_EN_TA_SYS      BITFIELD(1, 1)
#define EMIF4D__IRQENABLE_SET_SYS__REG_EN_TA_SYS__POS 1

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__IRQENABLE_SET_SYS__REG_EN_ERR_SYS   
 *
 * @BRIEF        Enable set for system OCP interrupt. Writing a 1 will enable 
 *               the interrupt, and set this bit as well as the corresponding 
 *               Interrupt Enable Clear Register. Writing a 0 has no effect. 
 *               - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__IRQENABLE_SET_SYS__REG_EN_ERR_SYS     BITFIELD(0, 0)
#define EMIF4D__IRQENABLE_SET_SYS__REG_EN_ERR_SYS__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__IRQENABLE_SET_LL__REG_EN_DNV_LL   
 *
 * @BRIEF        Enable set for low-latency OCP interrupt for LPDDR2 NVM data 
 *               not valid. Writing a 1 will enable the interrupt, and set 
 *               this bit as well as the corresponding Interrupt Enable Clear 
 *               Register. Writing a 0 has no effect. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__IRQENABLE_SET_LL__REG_EN_DNV_LL       BITFIELD(2, 2)
#define EMIF4D__IRQENABLE_SET_LL__REG_EN_DNV_LL__POS  2

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__IRQENABLE_SET_LL__REG_EN_TA_LL   
 *
 * @BRIEF        Enable set for low-latency OCP interrupt. Writing a 1 will 
 *               enable the interrupt, and set this bit as well as the 
 *               corresponding Interrupt Enable Clear Register. Writing a 0 
 *               has no effect. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__IRQENABLE_SET_LL__REG_EN_TA_LL        BITFIELD(1, 1)
#define EMIF4D__IRQENABLE_SET_LL__REG_EN_TA_LL__POS   1

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__IRQENABLE_SET_LL__REG_EN_ERR_LL   
 *
 * @BRIEF        Enable set for low-latency OCP interrupt. Writing a 1 will 
 *               enable the interrupt, and set this bit as well as the 
 *               corresponding Interrupt Enable Clear Register. Writing a 0 
 *               has no effect. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__IRQENABLE_SET_LL__REG_EN_ERR_LL       BITFIELD(0, 0)
#define EMIF4D__IRQENABLE_SET_LL__REG_EN_ERR_LL__POS  0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__IRQENABLE_CLR_SYS__REG_EN_DNV_SYS   
 *
 * @BRIEF        Enable clear for system OCP interrupt for LPDDR2 NVM data 
 *               not valid. Writing a 1 will disable the interrupt, and clear 
 *               this bit as well as the corresponding Interrupt Enable Set 
 *               Register. Writing a 0 has no effect. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__IRQENABLE_CLR_SYS__REG_EN_DNV_SYS     BITFIELD(2, 2)
#define EMIF4D__IRQENABLE_CLR_SYS__REG_EN_DNV_SYS__POS 2

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__IRQENABLE_CLR_SYS__REG_EN_TA_SYS   
 *
 * @BRIEF        Enable clear for system OCP interrupt. Writing a 1 will 
 *               disable the interrupt, and clear this bit as well as the 
 *               corresponding Interrupt Enable Set Register. Writing a 0 has 
 *               no effect. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__IRQENABLE_CLR_SYS__REG_EN_TA_SYS      BITFIELD(1, 1)
#define EMIF4D__IRQENABLE_CLR_SYS__REG_EN_TA_SYS__POS 1

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__IRQENABLE_CLR_SYS__REG_EN_ERR_SYS   
 *
 * @BRIEF        Enable clear for system OCP interrupt. Writing a 1 will 
 *               disable the interrupt, and clear this bit as well as the 
 *               corresponding Interrupt Enable Set Register. Writing a 0 has 
 *               no effect. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__IRQENABLE_CLR_SYS__REG_EN_ERR_SYS     BITFIELD(0, 0)
#define EMIF4D__IRQENABLE_CLR_SYS__REG_EN_ERR_SYS__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__IRQENABLE_CLR_LL__REG_EN_DNV_LL   
 *
 * @BRIEF        Enable clear for low-latency OCP interrupt for LPDDR2 NVM 
 *               data not valid. Writing a 1 will disable the interrupt, and 
 *               clear this bit as well as the corresponding Interrupt Enable 
 *               Set Register. Writing a 0 has no effect. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__IRQENABLE_CLR_LL__REG_EN_DNV_LL       BITFIELD(2, 2)
#define EMIF4D__IRQENABLE_CLR_LL__REG_EN_DNV_LL__POS  2

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__IRQENABLE_CLR_LL__REG_EN_TA_LL   
 *
 * @BRIEF        Enable clear for low-latency OCP interrupt. Writing a 1 will 
 *               disable the interrupt, and clear this bit as well as the 
 *               corresponding Interrupt Enable Set Register. Writing a 0 has 
 *               no effect. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__IRQENABLE_CLR_LL__REG_EN_TA_LL        BITFIELD(1, 1)
#define EMIF4D__IRQENABLE_CLR_LL__REG_EN_TA_LL__POS   1

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__IRQENABLE_CLR_LL__REG_EN_ERR_LL   
 *
 * @BRIEF        Enable clear for low-latency OCP interrupt. Writing a 1 will 
 *               disable the interrupt, and clear this bit as well as the 
 *               corresponding Interrupt Enable Set Register. Writing a 0 has 
 *               no effect. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__IRQENABLE_CLR_LL__REG_EN_ERR_LL       BITFIELD(0, 0)
#define EMIF4D__IRQENABLE_CLR_LL__REG_EN_ERR_LL__POS  0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__ZQ_CONFIG__REG_ZQ_CS1EN   
 *
 * @BRIEF        Writing a 1 enables ZQ calibration for CS1. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__ZQ_CONFIG__REG_ZQ_CS1EN               BITFIELD(31, 31)
#define EMIF4D__ZQ_CONFIG__REG_ZQ_CS1EN__POS          31

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__ZQ_CONFIG__REG_ZQ_CS0EN   
 *
 * @BRIEF        Writing a 1 enables ZQ calibration for CS0. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__ZQ_CONFIG__REG_ZQ_CS0EN               BITFIELD(30, 30)
#define EMIF4D__ZQ_CONFIG__REG_ZQ_CS0EN__POS          30

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__ZQ_CONFIG__REG_ZQ_DUALCALEN   
 *
 * @BRIEF        ZQ Dual Calibration enable. Allows both ranks to be ZQ 
 *               calibrated simultaneously. Setting this bit requires both 
 *               chip selects to have a seerate calibration resistor per 
 *               device. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__ZQ_CONFIG__REG_ZQ_DUALCALEN           BITFIELD(29, 29)
#define EMIF4D__ZQ_CONFIG__REG_ZQ_DUALCALEN__POS      29

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__ZQ_CONFIG__REG_ZQ_SFEXITEN   
 *
 * @BRIEF        ZQCL on Self Refresh, Active Power-Down, and Precharge 
 *               Power-Down exit enable. Writing a 1 enables the issuing of 
 *               ZQCL on Self-Refresh, Active Power-Down, and Precharge 
 *               Power-Down exit. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__ZQ_CONFIG__REG_ZQ_SFEXITEN            BITFIELD(28, 28)
#define EMIF4D__ZQ_CONFIG__REG_ZQ_SFEXITEN__POS       28

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__ZQ_CONFIG__REG_ZQ_ZQINIT_MULT   
 *
 * @BRIEF        Indicates the number of ZQCL intervals that make up a ZQINIT 
 *               interval, minus one. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__ZQ_CONFIG__REG_ZQ_ZQINIT_MULT         BITFIELD(19, 18)
#define EMIF4D__ZQ_CONFIG__REG_ZQ_ZQINIT_MULT__POS    18

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__ZQ_CONFIG__REG_ZQ_ZQCL_MULT   
 *
 * @BRIEF        Indicates the number of ZQCS intervals that make up a ZQCL 
 *               interval, minus one. ZQCS interval is defined by reg_zq_zqcs 
 *               in SDRAM Timing 3 Register. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__ZQ_CONFIG__REG_ZQ_ZQCL_MULT           BITFIELD(17, 16)
#define EMIF4D__ZQ_CONFIG__REG_ZQ_ZQCL_MULT__POS      16

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__ZQ_CONFIG__REG_ZQ_REFINTERVAL   
 *
 * @BRIEF        Number of refresh periods between ZQCS commands. This field 
 *               supports between one refresh period to 256 ms between ZQCS 
 *               calibration commands. Refresh period is defined by 
 *               reg_refresh_rate in SDRAM Refresh Control register. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__ZQ_CONFIG__REG_ZQ_REFINTERVAL         BITFIELD(15, 0)
#define EMIF4D__ZQ_CONFIG__REG_ZQ_REFINTERVAL__POS    0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__TEMP_ALERT_CONFIG__REG_TA_CS1EN   
 *
 * @BRIEF        Writing a 1 enables temperature alert polling for CS1. - 
 *               (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__TEMP_ALERT_CONFIG__REG_TA_CS1EN       BITFIELD(31, 31)
#define EMIF4D__TEMP_ALERT_CONFIG__REG_TA_CS1EN__POS  31

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__TEMP_ALERT_CONFIG__REG_TA_CS0EN   
 *
 * @BRIEF        Writing a 1 enables temperature alert polling for CS0. - 
 *               (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__TEMP_ALERT_CONFIG__REG_TA_CS0EN       BITFIELD(30, 30)
#define EMIF4D__TEMP_ALERT_CONFIG__REG_TA_CS0EN__POS  30

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__TEMP_ALERT_CONFIG__REG_TA_SFEXITEN   
 *
 * @BRIEF        Temperature Alert Poll on Self-Refresh, Active Power-Down, 
 *               and Precharge Power-Down exit enable. Writing a 1 enables 
 *               the issuing of a temperature alert poll on Self-Refresh 
 *               exit. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__TEMP_ALERT_CONFIG__REG_TA_SFEXITEN    BITFIELD(28, 28)
#define EMIF4D__TEMP_ALERT_CONFIG__REG_TA_SFEXITEN__POS 28

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__TEMP_ALERT_CONFIG__REG_TA_DEVWDT   
 *
 * @BRIEF        Bitfield description is not available - (RW)
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__TEMP_ALERT_CONFIG__REG_TA_DEVWDT      BITFIELD(27, 26)
#define EMIF4D__TEMP_ALERT_CONFIG__REG_TA_DEVWDT__POS 26

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__TEMP_ALERT_CONFIG__REG_TA_DEVCNT   
 *
 * @BRIEF        Bitfield description is not available - (RW)
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__TEMP_ALERT_CONFIG__REG_TA_DEVCNT      BITFIELD(25, 24)
#define EMIF4D__TEMP_ALERT_CONFIG__REG_TA_DEVCNT__POS 24

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__TEMP_ALERT_CONFIG__REG_TA_REFINTERVAL   
 *
 * @BRIEF        Number of refresh periods between temperature alert polls. 
 *               This field supports one refresh period to 10 seconds between 
 *               temperature alert polls. Refresh period is defined by 
 *               reg_refresh_rate in SDRAM Refresh Control register. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__TEMP_ALERT_CONFIG__REG_TA_REFINTERVAL BITFIELD(21, 0)
#define EMIF4D__TEMP_ALERT_CONFIG__REG_TA_REFINTERVAL__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__OCP_ERR_LOG__REG_MADDRSPACE   
 *
 * @BRIEF        Address space of the first errored transaction. Writing a 1 
 *               to the lt field in the Interrupt Raw register or the 
 *               lt_masked field in the Interrupt Masked register will clear 
 *               this field. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__OCP_ERR_LOG__REG_MADDRSPACE           BITFIELD(15, 14)
#define EMIF4D__OCP_ERR_LOG__REG_MADDRSPACE__POS      14

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__OCP_ERR_LOG__REG_MBURSTSEQ   
 *
 * @BRIEF        Addressing mode of the first errored transaction. Writing a 
 *               1 to the lt field in the Interrupt Raw register or the 
 *               lt_masked field in the Interrupt Masked register will clear 
 *               this field. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__OCP_ERR_LOG__REG_MBURSTSEQ            BITFIELD(13, 11)
#define EMIF4D__OCP_ERR_LOG__REG_MBURSTSEQ__POS       11

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__OCP_ERR_LOG__REG_MCMD   
 *
 * @BRIEF        Command type of the first errored transaction. Writing a 1 
 *               to the lt field in the Interrupt Raw register or the 
 *               lt_masked field in the Interrupt Masked register will clear 
 *               this field. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__OCP_ERR_LOG__REG_MCMD                 BITFIELD(10, 8)
#define EMIF4D__OCP_ERR_LOG__REG_MCMD__POS            8

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__OCP_ERR_LOG__REG_MCONNID   
 *
 * @BRIEF        Connection ID of the first errored transaction. Writing a 1 
 *               to the lt field in the Interrupt Raw register or the 
 *               lt_masked field in the Interrupt Masked register will clear 
 *               this field. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__OCP_ERR_LOG__REG_MCONNID              BITFIELD(7, 0)
#define EMIF4D__OCP_ERR_LOG__REG_MCONNID__POS         0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__DDR_PHY_CTRL_1__REG_DDR_PHY_CTRL_1   
 *
 * @BRIEF        This register is used to control the DDR PHY. The bit field 
 *               definitions are DDR PHY specific and should be described in 
 *               the DDR PHY specification. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__DDR_PHY_CTRL_1__REG_DDR_PHY_CTRL_1    BITFIELD(31, 4)
#define EMIF4D__DDR_PHY_CTRL_1__REG_DDR_PHY_CTRL_1__POS 4

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__DDR_PHY_CTRL_1__REG_READ_LATENCY   
 *
 * @BRIEF        This field defines the read latency for the read data from 
 *               SDRAM in number of m_clk cycles. This field is used by the 
 *               EMIF as well as the PHY. The EMIF will expect the first read 
 *               data to arrive (reg_read_latency + 3) m_clk cycles from the 
 *               read command. Refer to the PHY specification for information 
 *               on programming this field. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__DDR_PHY_CTRL_1__REG_READ_LATENCY      BITFIELD(3, 0)
#define EMIF4D__DDR_PHY_CTRL_1__REG_READ_LATENCY__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__DDR_PHY_CTRL_1_SHDW__REG_DDR_PHY_CTRL_1_SHDW   
 *
 * @BRIEF        This register is used to control the DDR PHY. The bit field 
 *               definitions are DDR PHY specific and should be described in 
 *               the DDR PHY specification. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__DDR_PHY_CTRL_1_SHDW__REG_DDR_PHY_CTRL_1_SHDW BITFIELD(31, 4)
#define EMIF4D__DDR_PHY_CTRL_1_SHDW__REG_DDR_PHY_CTRL_1_SHDW__POS 4

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__DDR_PHY_CTRL_1_SHDW__REG_READ_LATENCY_SHDW   
 *
 * @BRIEF        Shadow field for read_latency. This field is loaded into 
 *               reg_refresh_rate field in DDR PHY Control 1 register when 
 *               SIdleAck is asserted. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__DDR_PHY_CTRL_1_SHDW__REG_READ_LATENCY_SHDW BITFIELD(3, 0)
#define EMIF4D__DDR_PHY_CTRL_1_SHDW__REG_READ_LATENCY_SHDW__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   EMIF4D__DDR_PHY_CTRL_2__REG_DDR_PHY_CTRL_2   
 *
 * @BRIEF        This register is used to control the DDR PHY. The bit field 
 *               definitions are DDR PHY specific and should be described in 
 *               the DDR PHY specification. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define EMIF4D__DDR_PHY_CTRL_2__REG_DDR_PHY_CTRL_2    BITFIELD(31, 0)
#define EMIF4D__DDR_PHY_CTRL_2__REG_DDR_PHY_CTRL_2__POS 0

    /* 
     * List of register bitfields values for component EMIF4D
     *
     */

#ifdef __cplusplus
}
#endif
#endif                                                     /* __EMIF4D_CRED_H 
                                                            */

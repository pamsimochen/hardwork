/** ==================================================================
 *  @file   venc_cred.h                                                  
 *                                                                    
 *  @path   /ti/psp/iss/hal/cred_cram/cred/inc/cortexm3_sys_ape/                                                  
 *                                                                    
 *  @desc   This  File contains.                                      
 * ===================================================================
 *  Copyright (c) Texas Instruments Inc 2011, 2012                    
 *                                                                    
 *  Use of this software is controlled by the terms and conditions found
 *  in the license agreement under which this software has been supplied
 * ===================================================================*/

/* ============================================================================ 
 * TEXAS INSTRUMENTS INCORPORATED PROPRIETARY INFORMATION Property of Texas
 * Instruments For Unrestricted Internal Use Only Unauthorized reproduction
 * and/or distribution is strictly prohibited.  This product is protected
 * under copyright law and trade secret law as an unpublished work.  Created
 * 2008, (C) Copyright 2008 Texas Instruments.  All rights reserved. */

/**
 *  @Component:   VENC
 *
 *  @Filename:    venc_cred.h
 *
 *  @Description:  
 *                video encoder cell  
 *
 *  Generated by: Socrates CRED generator prototype
 *
    *//* ====================================================================== */

#ifndef __VENC_CRED_H
#define __VENC_CRED_H

#ifdef __cplusplus
extern "C" {
#endif

    /* 
     * Instance DSS_SS_FROM_L4_PER__VENC of component VENC mapped in MONICA at address 0x48043000
     * Instance DSS_SS_FROM_L3__VENC of component VENC mapped in MONICA at address 0x58003000
     */

                                                                              /*-------------------------------------------------------------------------*//**
 * @DEFINITION   BITFIELD
 *
 * @BRIEF        The bitfield must be defined according to register width
 *               of the component - 64/32/16/8
 *
    *//*------------------------------------------------------------------------ */
#undef BITFIELD
#define BITFIELD BITFIELD_32

    /* 
     *  List of Register arrays for component VENC
     *
     */

    /* 
     *  List of bundle arrays for component VENC
     *
     */

    /* 
     *  List of bundles for component VENC
     *
     */

    /* 
     * List of registers for component VENC
     *
     */

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__REV_ID
 *
 * @BRIEF        Revision ID for the encoder 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__REV_ID                                       0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__STATUS
 *
 * @BRIEF        STATUS 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__STATUS                                       0x4ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__F_CONTROL
 *
 * @BRIEF        This register specifies the input video source and format 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__F_CONTROL                                    0x8ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__VIDOUT_CTRL
 *
 * @BRIEF        Encoder output clock  
 *
    *//*------------------------------------------------------------------------ */
#define VENC__VIDOUT_CTRL                                  0x10ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__SYNC_CTRL
 *
 * @BRIEF        SYNC Control register 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__SYNC_CTRL                                    0x14ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__LLEN
 *
 * @BRIEF        LLEN 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__LLEN                                         0x1Cul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__FLENS
 *
 * @BRIEF        FLENS 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__FLENS                                        0x20ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__HFLTR_CTRL
 *
 * @BRIEF        HFLTR_CTRL 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__HFLTR_CTRL                                   0x24ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__CC_CARR_WSS_CARR
 *
 * @BRIEF        Frequencie code control 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__CC_CARR_WSS_CARR                             0x28ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__C_PHASE
 *
 * @BRIEF        C_PHASE 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__C_PHASE                                      0x2Cul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__GAIN_U
 *
 * @BRIEF        Gain control for Cb signal 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__GAIN_U                                       0x30ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__GAIN_V
 *
 * @BRIEF        Gain control of Cr signal 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__GAIN_V                                       0x34ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__GAIN_Y
 *
 * @BRIEF        Gain control of Y signal 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__GAIN_Y                                       0x38ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__BLACK_LEVEL
 *
 * @BRIEF        BLACK LEVEL 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__BLACK_LEVEL                                  0x3Cul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__BLANK_LEVEL
 *
 * @BRIEF        BLANK LEVEL 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__BLANK_LEVEL                                  0x40ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__X_COLOR
 *
 * @BRIEF        Cross-Colour Control register 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__X_COLOR                                      0x44ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__M_CONTROL
 *
 * @BRIEF        M_CONTROL 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__M_CONTROL                                    0x48ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__BSTAMP_WSS_DATA
 *
 * @BRIEF        BSTAMP and WSS_DATA 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__BSTAMP_WSS_DATA                              0x4Cul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__S_CARR
 *
 * @BRIEF        Color Subcarrier Frequency Registers. 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__S_CARR                                       0x50ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__LINE21
 *
 * @BRIEF        LINE 21 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__LINE21                                       0x54ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__LN_SEL
 *
 * @BRIEF        LN_SEL 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__LN_SEL                                       0x58ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__L21_WC_CTL
 *
 * @BRIEF        L21 & WC_CTL registers 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__L21_WC_CTL                                   0x5Cul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__HTRIGGER_VTRIGGER
 *
 * @BRIEF        HTRIGGER and VTRIGGER 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__HTRIGGER_VTRIGGER                            0x60ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__SAVID_EAVID
 *
 * @BRIEF        SAVID and EAVID 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__SAVID_EAVID                                  0x64ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__FLEN_FAL
 *
 * @BRIEF        FLEN and FAL 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__FLEN_FAL                                     0x68ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__LAL_PHASE_RESET
 *
 * @BRIEF        LAL and PHASE_RESET 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__LAL_PHASE_RESET                              0x6Cul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__HS_INT_START_STOP_X
 *
 * @BRIEF        HS_INT_START_STOP_X 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__HS_INT_START_STOP_X                          0x70ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__HS_EXT_START_STOP_X
 *
 * @BRIEF        HS_EXT_START_STOP_X 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__HS_EXT_START_STOP_X                          0x74ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__VS_INT_START_X
 *
 * @BRIEF        VS_INT_START_X 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__VS_INT_START_X                               0x78ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__VS_INT_STOP_X_VS_INT_START_Y
 *
 * @BRIEF        VS_INT_STOP_X and VS_INT_START_Y 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__VS_INT_STOP_X_VS_INT_START_Y                 0x7Cul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__VS_INT_STOP_Y_VS_EXT_START_X
 *
 * @BRIEF        VS_INT_STOP_Y and VS_EXT_START_X 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__VS_INT_STOP_Y_VS_EXT_START_X                 0x80ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__VS_EXT_STOP_X_VS_EXT_START_Y
 *
 * @BRIEF        VS_EXT_STOP_X and VS_EXT_START_Y 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__VS_EXT_STOP_X_VS_EXT_START_Y                 0x84ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__VS_EXT_STOP_Y
 *
 * @BRIEF        VS_EXT_STOP_Y 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__VS_EXT_STOP_Y                                0x88ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__AVID_START_STOP_X
 *
 * @BRIEF        AVID_START_STOP_X 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__AVID_START_STOP_X                            0x90ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__AVID_START_STOP_Y
 *
 * @BRIEF        AVID_START_STOP_Y 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__AVID_START_STOP_Y                            0x94ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__FID_INT_START_X_FID_INT_START_Y
 *
 * @BRIEF        FID_INT_START_X and FID_INT_START_Y 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__FID_INT_START_X_FID_INT_START_Y              0xA0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__FID_INT_OFFSET_Y_FID_EXT_START_X
 *
 * @BRIEF        FID_INT_OFFSET_Y and FID_EXT_START_X 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__FID_INT_OFFSET_Y_FID_EXT_START_X             0xA4ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__FID_EXT_START_Y_FID_EXT_OFFSET_Y
 *
 * @BRIEF        FID_EXT_START_Y and FID_EXT_OFFSET_Y 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__FID_EXT_START_Y_FID_EXT_OFFSET_Y             0xA8ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__TVDETGP_INT_START_STOP_X
 *
 * @BRIEF        TVDETGP_INT_START_STOP_X 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__TVDETGP_INT_START_STOP_X                     0xB0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__TVDETGP_INT_START_STOP_Y
 *
 * @BRIEF        TVDETGP_INT_START_STOP_Y 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__TVDETGP_INT_START_STOP_Y                     0xB4ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__GEN_CTRL
 *
 * @BRIEF        TVDETGP enable and SYNC_POLARITY and UVPHASE_POL 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__GEN_CTRL                                     0xB8ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__OUTPUT_CONTROL
 *
 * @BRIEF        Output channel control register 
 *               Also contains some test control features 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__OUTPUT_CONTROL                               0xC4ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__OUTPUT_TEST
 *
 * @BRIEF        Test values for the Luma/Composite Video DAC1 (if composite 
 *               video is selected) and the Chroma Video DAC2 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__OUTPUT_TEST                                  0xC8ul

    /* 
     * List of register bitfields for component VENC
     *
     */

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__REV_ID__REV_ID   
 *
 * @BRIEF        This read-only register contains the revision ID for the 
 *               encoder.  The revision ID will identify different revisions 
 *               of the IP. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__REV_ID__REV_ID                          BITFIELD(7, 0)
#define VENC__REV_ID__REV_ID__POS                     0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__STATUS__CCE   
 *
 * @BRIEF        Closed Caption Status for Even Field.   
 *               This bit is set immediately after the data in registers 
 *               LINE21_E0 and LINE21_E1 have been encoded to closed caption. 
 *               This bit is reset when both of these registers are written. 
 *               - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__STATUS__CCE                             BITFIELD(4, 4)
#define VENC__STATUS__CCE__POS                        4

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__STATUS__CCO   
 *
 * @BRIEF        Closed Caption Status for Odd Field.  
 *               This bit is set immediately after the data in registers 
 *               LINE21_O0 and LINE21_O1 have been encoded to closed caption. 
 *               This bit is reset when both of these registers are written. 
 *               - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__STATUS__CCO                             BITFIELD(3, 3)
#define VENC__STATUS__CCO__POS                        3

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__STATUS__FSQ   
 *
 * @BRIEF        Field Sequence ID.   
 *               For PAL, all three FSQ[2:0] are used whereas for NTSC only 
 *               FSQ[1:0] is meaningful.  Furthermore, FSQ[0] represents ODD 
 *               field when it is '0' and EVEN field when it is '1'.  - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__STATUS__FSQ                             BITFIELD(2, 0)
#define VENC__STATUS__FSQ__POS                        0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__F_CONTROL__RESET   
 *
 * @BRIEF        RESET the encoder - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__F_CONTROL__RESET                        BITFIELD(8, 8)
#define VENC__F_CONTROL__RESET__POS                   8

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__F_CONTROL__SVDS   
 *
 * @BRIEF        Select Video Data Source.  
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__F_CONTROL__SVDS                         BITFIELD(7, 6)
#define VENC__F_CONTROL__SVDS__POS                    6

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__F_CONTROL__RGBF   
 *
 * @BRIEF        RGB /YCrCb input coding range  
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__F_CONTROL__RGBF                         BITFIELD(5, 5)
#define VENC__F_CONTROL__RGBF__POS                    5

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__F_CONTROL__BCOLOR   
 *
 * @BRIEF        Background color select 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__F_CONTROL__BCOLOR                       BITFIELD(4, 2)
#define VENC__F_CONTROL__BCOLOR__POS                  2

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__F_CONTROL__FMT   
 *
 * @BRIEF        These two bits specify the video input data stream format 
 *               and timing 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__F_CONTROL__FMT                          BITFIELD(1, 0)
#define VENC__F_CONTROL__FMT__POS                     0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__VIDOUT_CTRL__MHZ_27_54   
 *
 * @BRIEF        Encoder output clock  
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__VIDOUT_CTRL__MHZ_27_54                  BITFIELD(0, 0)
#define VENC__VIDOUT_CTRL__MHZ_27_54__POS             0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__SYNC_CTRL__FREE   
 *
 * @BRIEF        Free running - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__SYNC_CTRL__FREE                         BITFIELD(15, 15)
#define VENC__SYNC_CTRL__FREE__POS                    15

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__SYNC_CTRL__ESAV   
 *
 * @BRIEF        Enable to detect F and V bits only on EAV in ITU-R 656 input 
 *               mode  - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__SYNC_CTRL__ESAV                         BITFIELD(14, 14)
#define VENC__SYNC_CTRL__ESAV__POS                    14

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__SYNC_CTRL__IGNP   
 *
 * @BRIEF        Ignore protection bits in ITU-R 656 input mode - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__SYNC_CTRL__IGNP                         BITFIELD(13, 13)
#define VENC__SYNC_CTRL__IGNP__POS                    13

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__SYNC_CTRL__NBLNKS   
 *
 * @BRIEF        Blank shaping - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__SYNC_CTRL__NBLNKS                       BITFIELD(12, 12)
#define VENC__SYNC_CTRL__NBLNKS__POS                  12

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__SYNC_CTRL__VBLKM   
 *
 * @BRIEF        Vertical blanking mode 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__SYNC_CTRL__VBLKM                        BITFIELD(11, 10)
#define VENC__SYNC_CTRL__VBLKM__POS                   10

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__SYNC_CTRL__HBLKM   
 *
 * @BRIEF        Horizontal blanking mode 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__SYNC_CTRL__HBLKM                        BITFIELD(9, 8)
#define VENC__SYNC_CTRL__HBLKM__POS                   8

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__SYNC_CTRL__M_S   
 *
 * @BRIEF        Encoder is master or slave of external sync - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__SYNC_CTRL__M_S                          BITFIELD(7, 7)
#define VENC__SYNC_CTRL__M_S__POS                     7

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__SYNC_CTRL__FID_POL   
 *
 * @BRIEF        FID output polarity - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__SYNC_CTRL__FID_POL                      BITFIELD(6, 6)
#define VENC__SYNC_CTRL__FID_POL__POS                 6

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__SYNC_CTRL__VS_POL   
 *
 * @BRIEF        VS input polarity - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__SYNC_CTRL__VS_POL                       BITFIELD(3, 3)
#define VENC__SYNC_CTRL__VS_POL__POS                  3

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__SYNC_CTRL__HS_POL   
 *
 * @BRIEF        HS input polarity - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__SYNC_CTRL__HS_POL                       BITFIELD(2, 2)
#define VENC__SYNC_CTRL__HS_POL__POS                  2

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__SYNC_CTRL__FHVMOD   
 *
 * @BRIEF        FID extracted from external FID or HSYNC and VSYNC - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__SYNC_CTRL__FHVMOD                       BITFIELD(0, 0)
#define VENC__SYNC_CTRL__FHVMOD__POS                  0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__LLEN__LLEN_EN   
 *
 * @BRIEF        LLEN_EN - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__LLEN__LLEN_EN                           BITFIELD(15, 15)
#define VENC__LLEN__LLEN_EN__POS                      15

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__LLEN__LLEN   
 *
 * @BRIEF        LLEN[10:0] 
 *               Line length or total number of pixels in a scan line 
 *               including active video and blanking.  
 *               Total number of pixels in a scan line = LLEN 
 *               NOTE: A write to bit 11 of this bitfield is illegal. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__LLEN__LLEN                              BITFIELD(10, 0)
#define VENC__LLEN__LLEN__POS                         0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__FLENS__FLENS   
 *
 * @BRIEF        The frame length or total number of lines in a frame 
 *               including active video and blanking from the source image.  
 *               Total number of lines in a frame from the source image = 
 *               FLENS + 1 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__FLENS__FLENS                            BITFIELD(10, 0)
#define VENC__FLENS__FLENS__POS                       0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__HFLTR_CTRL__CINTP   
 *
 * @BRIEF        Chrominance interpolation filter control  
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__HFLTR_CTRL__CINTP                       BITFIELD(2, 1)
#define VENC__HFLTR_CTRL__CINTP__POS                  1

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__HFLTR_CTRL__YINTP   
 *
 * @BRIEF        Luminance interpolation filter control - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__HFLTR_CTRL__YINTP                       BITFIELD(0, 0)
#define VENC__HFLTR_CTRL__YINTP__POS                  0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__CC_CARR_WSS_CARR__FWSS   
 *
 * @BRIEF        Wide screen signaling run-in code frequency control 
 *                For 50 Hz systems, 
 *                FWSS = 2^18* 5*10^6/(LLEN*Fh) 
 *               Where 
 *                LLEN  = Total number of pixels in a scan line 
 *                Fh   = Line frequency 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__CC_CARR_WSS_CARR__FWSS                  BITFIELD(31, 16)
#define VENC__CC_CARR_WSS_CARR__FWSS__POS             16

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__CC_CARR_WSS_CARR__FCC   
 *
 * @BRIEF        Close caption run-in code frequency control 
 *               For 60 Hz system, 
 *               FCC = 2^18* 0.5035*10^6/(LLEN*Fh) 
 *               For 50 Hz systems, 
 *               FCC = 2^18* 0.500*10^6/(LLEN*Fh) 
 *               Where 
 *               LLEN = Total number of pixels in a scan line 
 *               Fh = Line frequency - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__CC_CARR_WSS_CARR__FCC                   BITFIELD(15, 0)
#define VENC__CC_CARR_WSS_CARR__FCC__POS              0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__C_PHASE__CPHS   
 *
 * @BRIEF        Phase of the encoded video color subcarrier (including the 
 *               color burst) relative to H-sync. The adjustable step is 
 *               360/256 degrees. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__C_PHASE__CPHS                           BITFIELD(7, 0)
#define VENC__C_PHASE__CPHS__POS                      0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__GAIN_U__GU   
 *
 * @BRIEF        Gain control for Cb signal. Following are typical 
 *               programming examples for NTSC and PAL standards. 
 *               NTSC with 7.5 IRE pedestal: 
 *               WHITE - BLACK = 92.5 IRE  GU = 0x102  
 *               NTSC with no pedestal: 
 *               WHITE - BLACK = 100 IRE  GU = 0x117     
 *               PAL with no pedestal: 
 *               WHITE - BLACK = 100 IRE  GU = 0x111  
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__GAIN_U__GU                              BITFIELD(8, 0)
#define VENC__GAIN_U__GU__POS                         0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__GAIN_V__GV   
 *
 * @BRIEF        Gain control of Cr signal. Following are typical programming 
 *               examples for NTSC and PAL standards. 
 *               NTSC with 7.5 IRE pedestal: 
 *               WHITE - BLACK = 92.5 IRE    GV = 0x16C   
 *               NTSC with no pedestal: 
 *                WHITE - BLACK = 100 IRE    GV = 0x189  
 *                PAL with no pedestal: 
 *               WHITE - BLACK = 100 IRE     GV = 0x181  
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__GAIN_V__GV                              BITFIELD(8, 0)
#define VENC__GAIN_V__GV__POS                         0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__GAIN_Y__GY   
 *
 * @BRIEF        Gain control of Y signal. Following are typical programming 
 *               examples for NTSC/PAL standards. 
 *               NTSC with 7.5 IRE pedestal: 
 *               WHITE - BLACK = 92.5 IRE  GY = 0x12F 
 *               NTSC with no pedestal: 
 *               WHITE - BLACK = 100 IRE   GY = 0x147 
 *               PAL with no pedestal: 
 *               WHITE - BLACK = 100 IRE   GY = 0x140 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__GAIN_Y__GY                              BITFIELD(8, 0)
#define VENC__GAIN_Y__GY__POS                         0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__BLACK_LEVEL__BLACK   
 *
 * @BRIEF        Black level setting. Following are typical programming 
 *               examples for NTSC/PAL standards. 
 *               NTSC with 7.5 IRE pedestal: 
 *               WHITE - BLACK = 92.5 IRE   BLACK_LEVEL = 0x43  
 *               NTSC with no pedestal: 
 *                WHITE - BLACK = 100 IRE   BLACK_LEVEL = 0x38  
 *                PAL with no pedestal: 
 *                WHITE - BLACK = 100 IRE   BLACK_LEVEL = 0x3B 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__BLACK_LEVEL__BLACK                      BITFIELD(6, 0)
#define VENC__BLACK_LEVEL__BLACK__POS                 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__BLANK_LEVEL__BLANK   
 *
 * @BRIEF        Blank level setting. Following are typical programming 
 *               examples for NTSC/PAL standards. 
 *               NTSC with 7.5 IRE pedestal: 
 *               WHITE - BLACK = 92.5 IRE  BLANK_LEVEL = 0x38 
 *               NTSC with no pedestal: 
 *               WHITE - BLACK = 100 IRE   BLANK_LEVEL = 0x38 
 *               PAL with no pedestal: 
 *               WHITE - BLACK = 100 IRE   BLANK_LEVEL = 0x3B 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__BLANK_LEVEL__BLANK                      BITFIELD(6, 0)
#define VENC__BLANK_LEVEL__BLANK__POS                 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__X_COLOR__XCE   
 *
 * @BRIEF        Cross color reduction enable for composite video output. 
 *               Cross color does not affect S-video output - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__X_COLOR__XCE                            BITFIELD(6, 6)
#define VENC__X_COLOR__XCE__POS                       6

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__X_COLOR__XCBW   
 *
 * @BRIEF        Cross color reduction filter selection - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__X_COLOR__XCBW                           BITFIELD(4, 3)
#define VENC__X_COLOR__XCBW__POS                      3

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__X_COLOR__LCD   
 *
 * @BRIEF        These three bits can be used for chroma channel delay 
 *               compensation. Delay on Luma channel. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__X_COLOR__LCD                            BITFIELD(2, 0)
#define VENC__X_COLOR__LCD__POS                       0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__M_CONTROL__PALI   
 *
 * @BRIEF        PAL I enable - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__M_CONTROL__PALI                         BITFIELD(7, 7)
#define VENC__M_CONTROL__PALI__POS                    7

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__M_CONTROL__PALN   
 *
 * @BRIEF        PAL N Enable - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__M_CONTROL__PALN                         BITFIELD(6, 6)
#define VENC__M_CONTROL__PALN__POS                    6

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__M_CONTROL__PALPHS   
 *
 * @BRIEF        PAL switch phase setting 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__M_CONTROL__PALPHS                       BITFIELD(5, 5)
#define VENC__M_CONTROL__PALPHS__POS                  5

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__M_CONTROL__CBW   
 *
 * @BRIEF        Chrominance lowpass filter bandwidth control  - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__M_CONTROL__CBW                          BITFIELD(4, 2)
#define VENC__M_CONTROL__CBW__POS                     2

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__M_CONTROL__PAL   
 *
 * @BRIEF        Phase alternation line encoding selection 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__M_CONTROL__PAL                          BITFIELD(1, 1)
#define VENC__M_CONTROL__PAL__POS                     1

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__M_CONTROL__FFRQ   
 *
 * @BRIEF        The value of this field and the SQP bit in the 
 *               BSTAMP_WSS_DATA register control the number of horizontal 
 *               pixels displayed per scan line 
 *                                                                     # OF 
 *                 MODE                    SQP  FFRQ     PIXEL 
 *                                                                     PER  
 *                                                                     LINE 
 *               ITU-R 601      NTSC    0       1         858 
 *               Square pixel  NTSC    1       1        780 
 *               ITU-R 601      PAL       0       0        864 
 *               Square pixel  PAL       1       0        944 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__M_CONTROL__FFRQ                         BITFIELD(0, 0)
#define VENC__M_CONTROL__FFRQ__POS                    0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__BSTAMP_WSS_DATA__WSS_D   
 *
 * @BRIEF        Wide Screen Signaling data 
 *               NTSC: WORD 0 D0, D1 
 *                WORD 1 D2, D3, D4, D5 
 *                WORD 2 D6, D7, D8, D9, D10, D11, D12, D13 
 *                CRC D14, D15, D16, D17, D18, D19 
 *                  
 *               PAL: GROUP A D0, D1, D2, D3 
 *                GROUP B D4, D5, D6, D7 
 *                GROUP C D8, D9 ,D10 
 *                GROUP D D11, D12, D13 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__BSTAMP_WSS_DATA__WSS_D                  BITFIELD(27, 8)
#define VENC__BSTAMP_WSS_DATA__WSS_D__POS             8

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__BSTAMP_WSS_DATA__SQP   
 *
 * @BRIEF        Square-pixel sampling rate.  Please refer to FFRQ in 
 *               M_CONTROL register for programming information. 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__BSTAMP_WSS_DATA__SQP                    BITFIELD(7, 7)
#define VENC__BSTAMP_WSS_DATA__SQP__POS               7

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__BSTAMP_WSS_DATA__BSTAP   
 *
 * @BRIEF        Setting of amplitude of color burst. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__BSTAMP_WSS_DATA__BSTAP                  BITFIELD(6, 0)
#define VENC__BSTAMP_WSS_DATA__BSTAP__POS             0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__S_CARR__FSC   
 *
 * @BRIEF        These four bytes' data are used to program color subcarrier 
 *               frequency.  These four bytes are determined by the following 
 *               formula.  
 *               S_CARR = ROUND((Fsc/Fclkenc) * 232) 
 *               Where Fsc = Frequency of the subcarrier 
 *               Fclkenc = Frequency of the internal video encoding clock = 
 *               2*LLEN *Fh 
 *               LLEN = Number of pixels in a scan line 
 *               Fh = Line frequency 
 *               Please refer to the description of LLEN registers 
 *               (subaddresses 0x42 and 0x43). 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__S_CARR__FSC                             BITFIELD(31, 0)
#define VENC__S_CARR__FSC__POS                        0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__LINE21__L21E   
 *
 * @BRIEF        The two bytes of the closed caption data in the even field.  
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__LINE21__L21E                            BITFIELD(31, 16)
#define VENC__LINE21__L21E__POS                       16

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__LINE21__L21O   
 *
 * @BRIEF        The two bytes of the closed caption data in the odd field - 
 *               (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__LINE21__L21O                            BITFIELD(15, 0)
#define VENC__LINE21__L21O__POS                       0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__LN_SEL__LN21_RUNIN   
 *
 * @BRIEF        The two Bytes of the closed caption runin code position from 
 *               the HSYNC - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__LN_SEL__LN21_RUNIN                      BITFIELD(25, 16)
#define VENC__LN_SEL__LN21_RUNIN__POS                 16

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__LN_SEL__SLINE   
 *
 * @BRIEF        Selects the line where closed caption or extended service 
 *               data are encoded. 
 *               There is a four line offset, so program the wanted line 
 *               number - 4. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__LN_SEL__SLINE                           BITFIELD(4, 0)
#define VENC__LN_SEL__SLINE__POS                      0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__L21_WC_CTL__INV   
 *
 * @BRIEF        WSS inverter - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__L21_WC_CTL__INV                         BITFIELD(15, 15)
#define VENC__L21_WC_CTL__INV__POS                    15

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__L21_WC_CTL__EVEN_ODD_EN   
 *
 * @BRIEF        This bit controls the WSS encoding. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__L21_WC_CTL__EVEN_ODD_EN                 BITFIELD(14, 13)
#define VENC__L21_WC_CTL__EVEN_ODD_EN__POS            13

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__L21_WC_CTL__LINE   
 *
 * @BRIEF        Selects the line where WSS data are encoded.   
 *               There is a four line offset, so program the wanted line 
 *               number - 4. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__L21_WC_CTL__LINE                        BITFIELD(12, 8)
#define VENC__L21_WC_CTL__LINE__POS                   8

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__L21_WC_CTL__L21EN   
 *
 * @BRIEF        Those bits controls the Line21 closed caption encoding 
 *               according to the mode. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__L21_WC_CTL__L21EN                       BITFIELD(1, 0)
#define VENC__L21_WC_CTL__L21EN__POS                  0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__HTRIGGER_VTRIGGER__VTRIG   
 *
 * @BRIEF        Vertical trigger reference for VSYNC.  These bits specify 
 *               the phase between VSYNC input and the lines in a field.  The 
 *               VTRIG field is expressed in units of half-line. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__HTRIGGER_VTRIGGER__VTRIG                BITFIELD(25, 16)
#define VENC__HTRIGGER_VTRIGGER__VTRIG__POS           16

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__HTRIGGER_VTRIGGER__HTRIG   
 *
 * @BRIEF        Horizontal trigger phase, which sets HSYNC. HTRIG is 
 *               expressed in half-pixels or clk2x (27 MHz) periods - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__HTRIGGER_VTRIGGER__HTRIG                BITFIELD(10, 0)
#define VENC__HTRIGGER_VTRIGGER__HTRIG__POS           0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__SAVID_EAVID__EAVID   
 *
 * @BRIEF        End of active video. These bits define the ending pixel 
 *               position on a horizontal display line where active video 
 *               will be displayed. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__SAVID_EAVID__EAVID                      BITFIELD(26, 16)
#define VENC__SAVID_EAVID__EAVID__POS                 16

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__SAVID_EAVID__SAVID   
 *
 * @BRIEF        Start of active video. These bits define the starting pixel 
 *               position on a horizontal line where active video will be 
 *               displayed. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__SAVID_EAVID__SAVID                      BITFIELD(10, 0)
#define VENC__SAVID_EAVID__SAVID__POS                 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__FLEN_FAL__FAL   
 *
 * @BRIEF        First Active Line of Field. These bits define the first 
 *               active line of a field - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__FLEN_FAL__FAL                           BITFIELD(24, 16)
#define VENC__FLEN_FAL__FAL__POS                      16

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__FLEN_FAL__FLEN   
 *
 * @BRIEF        Field length. These bits define the number of half_lines in 
 *               each field. 
 *               Length of field = (FLEN + 1) half_lines 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__FLEN_FAL__FLEN                          BITFIELD(9, 0)
#define VENC__FLEN_FAL__FLEN__POS                     0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__LAL_PHASE_RESET__PRES   
 *
 * @BRIEF        Phase reset mode. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__LAL_PHASE_RESET__PRES                   BITFIELD(18, 17)
#define VENC__LAL_PHASE_RESET__PRES__POS              17

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__LAL_PHASE_RESET__SBLANK   
 *
 * @BRIEF        Vertical blanking setting - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__LAL_PHASE_RESET__SBLANK                 BITFIELD(16, 16)
#define VENC__LAL_PHASE_RESET__SBLANK__POS            16

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__LAL_PHASE_RESET__LAL   
 *
 * @BRIEF        Last Active Line of Field. These bits define the last active 
 *               line of a field - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__LAL_PHASE_RESET__LAL                    BITFIELD(8, 0)
#define VENC__LAL_PHASE_RESET__LAL__POS               0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__HS_INT_START_STOP_X__HS_INT_STOP_X   
 *
 * @BRIEF        HSYNC internal stop. These bits define HSYNC internal stop 
 *               pixel value - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__HS_INT_START_STOP_X__HS_INT_STOP_X      BITFIELD(25, 16)
#define VENC__HS_INT_START_STOP_X__HS_INT_STOP_X__POS 16

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__HS_INT_START_STOP_X__HS_INT_START_X   
 *
 * @BRIEF        HSYNC internal start. These bits define HSYNC internal start 
 *               pixel value - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__HS_INT_START_STOP_X__HS_INT_START_X     BITFIELD(9, 0)
#define VENC__HS_INT_START_STOP_X__HS_INT_START_X__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__HS_EXT_START_STOP_X__HS_EXT_STOP_X   
 *
 * @BRIEF        HSYNC external stop. These bits define HSYNC external stop 
 *               pixel value - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__HS_EXT_START_STOP_X__HS_EXT_STOP_X      BITFIELD(25, 16)
#define VENC__HS_EXT_START_STOP_X__HS_EXT_STOP_X__POS 16

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__HS_EXT_START_STOP_X__HS_EXT_START_X   
 *
 * @BRIEF        HSYNC external start. These bits define HSYNC external start 
 *               pixel value - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__HS_EXT_START_STOP_X__HS_EXT_START_X     BITFIELD(9, 0)
#define VENC__HS_EXT_START_STOP_X__HS_EXT_START_X__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__VS_INT_START_X__VS_INT_START_X   
 *
 * @BRIEF        VSYNC internal start. These bits define VSYNC internal start 
 *               pixel value. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__VS_INT_START_X__VS_INT_START_X          BITFIELD(25, 16)
#define VENC__VS_INT_START_X__VS_INT_START_X__POS     16

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__VS_INT_STOP_X_VS_INT_START_Y__VS_INT_START_Y   
 *
 * @BRIEF        VSYNC internal start. These bits define VSYNC internal start 
 *               line value - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__VS_INT_STOP_X_VS_INT_START_Y__VS_INT_START_Y BITFIELD(25, 16)
#define VENC__VS_INT_STOP_X_VS_INT_START_Y__VS_INT_START_Y__POS 16

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__VS_INT_STOP_X_VS_INT_START_Y__VS_INT_STOP_X   
 *
 * @BRIEF        VSYNC internal stop. These bits define VSYNC internal stop 
 *               pixel value - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__VS_INT_STOP_X_VS_INT_START_Y__VS_INT_STOP_X BITFIELD(9, 0)
#define VENC__VS_INT_STOP_X_VS_INT_START_Y__VS_INT_STOP_X__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__VS_INT_STOP_Y_VS_EXT_START_X__VS_EXT_START_X   
 *
 * @BRIEF        VSYNC external start. These bits define VSYNC external start 
 *               pixel value. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__VS_INT_STOP_Y_VS_EXT_START_X__VS_EXT_START_X BITFIELD(25, 16)
#define VENC__VS_INT_STOP_Y_VS_EXT_START_X__VS_EXT_START_X__POS 16

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__VS_INT_STOP_Y_VS_EXT_START_X__VS_INT_STOP_Y   
 *
 * @BRIEF        VSYNC internal stop. These bits define VSYNC internal stop 
 *               line value. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__VS_INT_STOP_Y_VS_EXT_START_X__VS_INT_STOP_Y BITFIELD(9, 0)
#define VENC__VS_INT_STOP_Y_VS_EXT_START_X__VS_INT_STOP_Y__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__VS_EXT_STOP_X_VS_EXT_START_Y__VS_EXT_START_Y   
 *
 * @BRIEF        VSYNC external start. These bits define VSYNC external start 
 *               line value. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__VS_EXT_STOP_X_VS_EXT_START_Y__VS_EXT_START_Y BITFIELD(25, 16)
#define VENC__VS_EXT_STOP_X_VS_EXT_START_Y__VS_EXT_START_Y__POS 16

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__VS_EXT_STOP_X_VS_EXT_START_Y__VS_EXT_STOP_X   
 *
 * @BRIEF        VSYNC external stop. These bits define VSYNC external stop 
 *               pixel value. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__VS_EXT_STOP_X_VS_EXT_START_Y__VS_EXT_STOP_X BITFIELD(9, 0)
#define VENC__VS_EXT_STOP_X_VS_EXT_START_Y__VS_EXT_STOP_X__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__VS_EXT_STOP_Y__VS_EXT_STOP_Y   
 *
 * @BRIEF        VSYNC external stop. These bits define VSYNC external stop 
 *               line value. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__VS_EXT_STOP_Y__VS_EXT_STOP_Y            BITFIELD(9, 0)
#define VENC__VS_EXT_STOP_Y__VS_EXT_STOP_Y__POS       0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__AVID_START_STOP_X__AVID_STOP_X   
 *
 * @BRIEF        AVID stop. These bits define AVID stop pixel value - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__AVID_START_STOP_X__AVID_STOP_X          BITFIELD(25, 16)
#define VENC__AVID_START_STOP_X__AVID_STOP_X__POS     16

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__AVID_START_STOP_X__AVID_START_X   
 *
 * @BRIEF        AVID start. These bits define AVID start pixel value - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__AVID_START_STOP_X__AVID_START_X         BITFIELD(9, 0)
#define VENC__AVID_START_STOP_X__AVID_START_X__POS    0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__AVID_START_STOP_Y__AVID_STOP_Y   
 *
 * @BRIEF        AVID stop. These bits define AVID stop line value. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__AVID_START_STOP_Y__AVID_STOP_Y          BITFIELD(25, 16)
#define VENC__AVID_START_STOP_Y__AVID_STOP_Y__POS     16

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__AVID_START_STOP_Y__AVID_START_Y   
 *
 * @BRIEF        AVID start. These bits define AVID start line value - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__AVID_START_STOP_Y__AVID_START_Y         BITFIELD(9, 0)
#define VENC__AVID_START_STOP_Y__AVID_START_Y__POS    0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__FID_INT_START_X_FID_INT_START_Y__FID_INT_START_Y   
 *
 * @BRIEF        FID internal stop. These bits define FID internal start line 
 *               value - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__FID_INT_START_X_FID_INT_START_Y__FID_INT_START_Y BITFIELD(25, 16)
#define VENC__FID_INT_START_X_FID_INT_START_Y__FID_INT_START_Y__POS 16

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__FID_INT_START_X_FID_INT_START_Y__FID_INT_START_X   
 *
 * @BRIEF        FID internal start. These bits define FID internal start 
 *               pixel value - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__FID_INT_START_X_FID_INT_START_Y__FID_INT_START_X BITFIELD(9, 0)
#define VENC__FID_INT_START_X_FID_INT_START_Y__FID_INT_START_X__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__FID_INT_OFFSET_Y_FID_EXT_START_X__FID_EXT_START_X   
 *
 * @BRIEF        FID external start. These bits define FID external start 
 *               pixel value - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__FID_INT_OFFSET_Y_FID_EXT_START_X__FID_EXT_START_X BITFIELD(25, 16)
#define VENC__FID_INT_OFFSET_Y_FID_EXT_START_X__FID_EXT_START_X__POS 16

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__FID_INT_OFFSET_Y_FID_EXT_START_X__FID_INT_OFFSET_Y   
 *
 * @BRIEF        FID internal offset. These bits define FID internal offset 
 *               linel value - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__FID_INT_OFFSET_Y_FID_EXT_START_X__FID_INT_OFFSET_Y BITFIELD(9, 0)
#define VENC__FID_INT_OFFSET_Y_FID_EXT_START_X__FID_INT_OFFSET_Y__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__FID_EXT_START_Y_FID_EXT_OFFSET_Y__FID_EXT_OFFSET_Y   
 *
 * @BRIEF        FID external offset. These bits define FID external offset 
 *               line value - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__FID_EXT_START_Y_FID_EXT_OFFSET_Y__FID_EXT_OFFSET_Y BITFIELD(25, 16)
#define VENC__FID_EXT_START_Y_FID_EXT_OFFSET_Y__FID_EXT_OFFSET_Y__POS 16

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__FID_EXT_START_Y_FID_EXT_OFFSET_Y__FID_EXT_START_Y   
 *
 * @BRIEF        FID external start. These bits define FID external start 
 *               line value. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__FID_EXT_START_Y_FID_EXT_OFFSET_Y__FID_EXT_START_Y BITFIELD(9, 0)
#define VENC__FID_EXT_START_Y_FID_EXT_OFFSET_Y__FID_EXT_START_Y__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__TVDETGP_INT_START_STOP_X__TVDETGP_INT_STOP_X   
 *
 * @BRIEF        TVDETGP internal stop. These bits define TVDETGP internal 
 *               stop pixel value. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__TVDETGP_INT_START_STOP_X__TVDETGP_INT_STOP_X BITFIELD(25, 16)
#define VENC__TVDETGP_INT_START_STOP_X__TVDETGP_INT_STOP_X__POS 16

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__TVDETGP_INT_START_STOP_X__TVDETGP_INT_START_X   
 *
 * @BRIEF        TVDETGP internal start. These bits define TVDETGP internal 
 *               start pixel value - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__TVDETGP_INT_START_STOP_X__TVDETGP_INT_START_X BITFIELD(9, 0)
#define VENC__TVDETGP_INT_START_STOP_X__TVDETGP_INT_START_X__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__TVDETGP_INT_START_STOP_Y__TVDETGP_INT_STOP_Y   
 *
 * @BRIEF        TVDETGP internal stop. These bits define TVDETGP internal 
 *               stop line value. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__TVDETGP_INT_START_STOP_Y__TVDETGP_INT_STOP_Y BITFIELD(25, 16)
#define VENC__TVDETGP_INT_START_STOP_Y__TVDETGP_INT_STOP_Y__POS 16

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__TVDETGP_INT_START_STOP_Y__TVDETGP_INT_START_Y   
 *
 * @BRIEF        TVDETGP internal start. These bits define TVDETGP internal 
 *               start line value - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__TVDETGP_INT_START_STOP_Y__TVDETGP_INT_START_Y BITFIELD(9, 0)
#define VENC__TVDETGP_INT_START_STOP_Y__TVDETGP_INT_START_Y__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__GEN_CTRL__MS   
 *
 * @BRIEF        UVPHASE_POL MS mode UV phase - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__GEN_CTRL__MS                            BITFIELD(26, 26)
#define VENC__GEN_CTRL__MS__POS                       26

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__GEN_CTRL__UVPHASE_POL_656   
 *
 * @BRIEF        UVPHASE_POL 656 input mode UV phase - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__GEN_CTRL__UVPHASE_POL_656               BITFIELD(25, 25)
#define VENC__GEN_CTRL__UVPHASE_POL_656__POS          25

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__GEN_CTRL__CBAR   
 *
 * @BRIEF        UVPHASE_POL CBAR mode UV phase - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__GEN_CTRL__CBAR                          BITFIELD(24, 24)
#define VENC__GEN_CTRL__CBAR__POS                     24

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__GEN_CTRL__HIP   
 *
 * @BRIEF        HSYNC internal polarity - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__GEN_CTRL__HIP                           BITFIELD(23, 23)
#define VENC__GEN_CTRL__HIP__POS                      23

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__GEN_CTRL__VIP   
 *
 * @BRIEF        VSYNC internal polarity - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__GEN_CTRL__VIP                           BITFIELD(22, 22)
#define VENC__GEN_CTRL__VIP__POS                      22

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__GEN_CTRL__HEP   
 *
 * @BRIEF        HSYNC external polarity 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__GEN_CTRL__HEP                           BITFIELD(21, 21)
#define VENC__GEN_CTRL__HEP__POS                      21

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__GEN_CTRL__VEP   
 *
 * @BRIEF        VSYNC externall polarity - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__GEN_CTRL__VEP                           BITFIELD(20, 20)
#define VENC__GEN_CTRL__VEP__POS                      20

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__GEN_CTRL__AVIDP   
 *
 * @BRIEF        AVID polarity - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__GEN_CTRL__AVIDP                         BITFIELD(19, 19)
#define VENC__GEN_CTRL__AVIDP__POS                    19

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__GEN_CTRL__FIP   
 *
 * @BRIEF        FID internal polarity - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__GEN_CTRL__FIP                           BITFIELD(18, 18)
#define VENC__GEN_CTRL__FIP__POS                      18

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__GEN_CTRL__FEP   
 *
 * @BRIEF        FID external polarity - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__GEN_CTRL__FEP                           BITFIELD(17, 17)
#define VENC__GEN_CTRL__FEP__POS                      17

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__GEN_CTRL__TVDP   
 *
 * @BRIEF        TVDETGP polarity - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__GEN_CTRL__TVDP                          BITFIELD(16, 16)
#define VENC__GEN_CTRL__TVDP__POS                     16

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__GEN_CTRL__EN   
 *
 * @BRIEF        TVDETGP generation enable - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__GEN_CTRL__EN                            BITFIELD(0, 0)
#define VENC__GEN_CTRL__EN__POS                       0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__OUTPUT_CONTROL__LUMA_TEST   
 *
 * @BRIEF        In test mode, DAC 1 input value 
 *               (if s-video video mode is selected) - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__OUTPUT_CONTROL__LUMA_TEST               BITFIELD(25, 16)
#define VENC__OUTPUT_CONTROL__LUMA_TEST__POS          16

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__OUTPUT_CONTROL__CHROMA_SOURCE   
 *
 * @BRIEF        Source of chroma video data in test mode - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__OUTPUT_CONTROL__CHROMA_SOURCE           BITFIELD(7, 7)
#define VENC__OUTPUT_CONTROL__CHROMA_SOURCE__POS      7

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__OUTPUT_CONTROL__COMPOSITE_SOURCE   
 *
 * @BRIEF        Source of composite video data in test mode - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__OUTPUT_CONTROL__COMPOSITE_SOURCE        BITFIELD(6, 6)
#define VENC__OUTPUT_CONTROL__COMPOSITE_SOURCE__POS   6

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__OUTPUT_CONTROL__LUMA_SOURCE   
 *
 * @BRIEF        Source of luminance video data in test mode - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__OUTPUT_CONTROL__LUMA_SOURCE             BITFIELD(5, 5)
#define VENC__OUTPUT_CONTROL__LUMA_SOURCE__POS        5

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__OUTPUT_CONTROL__TEST_MODE   
 *
 * @BRIEF        This enables the video DACs to be tested.  The values sent 
 *               to the DACs comes from a register for each output channel 
 *               (Luma, Composite or Chroma) or from the display controller 
 *               video port bits G[1:0], B[7:0], depending on the setting of 
 *               the Source bits - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__OUTPUT_CONTROL__TEST_MODE               BITFIELD(4, 4)
#define VENC__OUTPUT_CONTROL__TEST_MODE__POS          4

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__OUTPUT_CONTROL__VIDEO_INVERT   
 *
 * @BRIEF        Controls the video output polarity.  This may be used to 
 *               correct for inversion in an external video amplifier. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__OUTPUT_CONTROL__VIDEO_INVERT            BITFIELD(3, 3)
#define VENC__OUTPUT_CONTROL__VIDEO_INVERT__POS       3

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__OUTPUT_CONTROL__CHROMA_ENABLE   
 *
 * @BRIEF        Enable the Chrominance output channel - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__OUTPUT_CONTROL__CHROMA_ENABLE           BITFIELD(2, 2)
#define VENC__OUTPUT_CONTROL__CHROMA_ENABLE__POS      2

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__OUTPUT_CONTROL__COMPOSITE_ENABLE   
 *
 * @BRIEF        Enable the Composite output channel - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__OUTPUT_CONTROL__COMPOSITE_ENABLE        BITFIELD(1, 1)
#define VENC__OUTPUT_CONTROL__COMPOSITE_ENABLE__POS   1

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__OUTPUT_CONTROL__LUMA_ENABLE   
 *
 * @BRIEF        Enable the Luminance output channel - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__OUTPUT_CONTROL__LUMA_ENABLE             BITFIELD(0, 0)
#define VENC__OUTPUT_CONTROL__LUMA_ENABLE__POS        0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__OUTPUT_TEST__CHROMA_TEST   
 *
 * @BRIEF        In test mode, DAC 2 input value  - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__OUTPUT_TEST__CHROMA_TEST                BITFIELD(25, 16)
#define VENC__OUTPUT_TEST__CHROMA_TEST__POS           16

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__OUTPUT_TEST__COMPOSITE_TEST   
 *
 * @BRIEF        In test mode, DAC 1 input value 
 *               (if composite video is selected)   - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__OUTPUT_TEST__COMPOSITE_TEST             BITFIELD(9, 0)
#define VENC__OUTPUT_TEST__COMPOSITE_TEST__POS        0

    /* 
     * List of register bitfields values for component VENC
     *
     */

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__STATUS__FSQ__ODD
 *
 * @BRIEF        ODD field - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__STATUS__FSQ__ODD                        0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__STATUS__FSQ__EVEN
 *
 * @BRIEF        EVEN field - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__STATUS__FSQ__EVEN                       0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__F_CONTROL__RESET__NOEFFECT
 *
 * @BRIEF        No effect - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__F_CONTROL__RESET__NOEFFECT              0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__F_CONTROL__RESET__RESETENCODER
 *
 * @BRIEF        Reset the encoder, after reset, this bit is automatically 
 *               set to zero. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__F_CONTROL__RESET__RESETENCODER          0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__F_CONTROL__SVDS__EXTERNALVIDEOSOURCE
 *
 * @BRIEF        Use external video source - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__F_CONTROL__SVDS__EXTERNALVIDEOSOURCE    0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__F_CONTROL__SVDS__INTERNALCOLORBAR
 *
 * @BRIEF        Use internal Color BAR - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__F_CONTROL__SVDS__INTERNALCOLORBAR       0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__F_CONTROL__SVDS__BACKGROUNDCOLOR
 *
 * @BRIEF        Use background color - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__F_CONTROL__SVDS__BACKGROUNDCOLOR        0x2ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__F_CONTROL__SVDS__RESERVED
 *
 * @BRIEF        Reserved - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__F_CONTROL__SVDS__RESERVED               0x3ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__F_CONTROL__RGBF__RANGE0_255
 *
 * @BRIEF        The input RGB data are in binary format with coding range 
 *               0-255 
 *               The input YCrCb data are in binary format with coding range 
 *               0-255 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__F_CONTROL__RGBF__RANGE0_255             0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__F_CONTROL__RGBF__RANGEMISC
 *
 * @BRIEF        The input RGB data are in binary format with coding range 
 *               16-235 
 *               The input YCrCb data are in binary format conforming to 
 *               ITU-601 standard - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__F_CONTROL__RGBF__RANGEMISC              0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__F_CONTROL__BCOLOR__BLACK
 *
 * @BRIEF        Enumeration value description is not available - (RW)
 *
    *//*------------------------------------------------------------------------ */
#define VENC__F_CONTROL__BCOLOR__BLACK                0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__F_CONTROL__BCOLOR__BLUE
 *
 * @BRIEF        Enumeration value description is not available - (RW)
 *
    *//*------------------------------------------------------------------------ */
#define VENC__F_CONTROL__BCOLOR__BLUE                 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__F_CONTROL__BCOLOR__RED
 *
 * @BRIEF        Enumeration value description is not available - (RW)
 *
    *//*------------------------------------------------------------------------ */
#define VENC__F_CONTROL__BCOLOR__RED                  0x2ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__F_CONTROL__BCOLOR__MAGENTA
 *
 * @BRIEF        Enumeration value description is not available - (RW)
 *
    *//*------------------------------------------------------------------------ */
#define VENC__F_CONTROL__BCOLOR__MAGENTA              0x3ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__F_CONTROL__BCOLOR__GREEN
 *
 * @BRIEF        Enumeration value description is not available - (RW)
 *
    *//*------------------------------------------------------------------------ */
#define VENC__F_CONTROL__BCOLOR__GREEN                0x4ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__F_CONTROL__BCOLOR__CYAN
 *
 * @BRIEF        Enumeration value description is not available - (RW)
 *
    *//*------------------------------------------------------------------------ */
#define VENC__F_CONTROL__BCOLOR__CYAN                 0x5ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__F_CONTROL__BCOLOR__YELLOW
 *
 * @BRIEF        Enumeration value description is not available - (RW)
 *
    *//*------------------------------------------------------------------------ */
#define VENC__F_CONTROL__BCOLOR__YELLOW               0x6ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__F_CONTROL__BCOLOR__WHITE
 *
 * @BRIEF        Enumeration value description is not available - (RW)
 *
    *//*------------------------------------------------------------------------ */
#define VENC__F_CONTROL__BCOLOR__WHITE                0x7ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__F_CONTROL__FMT__RGB24B
 *
 * @BRIEF        24-bit 4:4:4 RGB - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__F_CONTROL__FMT__RGB24B                  0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__F_CONTROL__FMT__YCBCR24B
 *
 * @BRIEF        24-bit 4:4:4 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__F_CONTROL__FMT__YCBCR24B                0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__F_CONTROL__FMT__YCBCR16B
 *
 * @BRIEF        16-bit 4:2:2 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__F_CONTROL__FMT__YCBCR16B                0x2ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__F_CONTROL__FMT__YCBCR8B
 *
 * @BRIEF        8-bit ITU-R 656 4:2:2 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__F_CONTROL__FMT__YCBCR8B                 0x3ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__VIDOUT_CTRL__MHZ_27_54__54
 *
 * @BRIEF        54 MHz, 4x oversampling - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__VIDOUT_CTRL__MHZ_27_54__54              0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__VIDOUT_CTRL__MHZ_27_54__27
 *
 * @BRIEF        27MHz, 2x oversampling, the last 2x oversampling filter 
 *               bypassed - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__VIDOUT_CTRL__MHZ_27_54__27              0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__SYNC_CTRL__FREE__DISABLED
 *
 * @BRIEF        Free running disabled - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__SYNC_CTRL__FREE__DISABLED               0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__SYNC_CTRL__FREE__ENABLED
 *
 * @BRIEF        Free running enabled.  HSYNC and VSYNC are ignored - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__SYNC_CTRL__FREE__ENABLED                0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__SYNC_CTRL__ESAV__EAVANDSAV
 *
 * @BRIEF        Detection of F and V bits on both EAV and SAV - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__SYNC_CTRL__ESAV__EAVANDSAV              0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__SYNC_CTRL__ESAV__EAVONLY
 *
 * @BRIEF        Detection of F and V bits only on EAV - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__SYNC_CTRL__ESAV__EAVONLY                0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__SYNC_CTRL__IGNP__NOTIGNORED
 *
 * @BRIEF        Protection bits are not ignored - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__SYNC_CTRL__IGNP__NOTIGNORED             0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__SYNC_CTRL__IGNP__IGNORED
 *
 * @BRIEF        Protection bits are ignored - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__SYNC_CTRL__IGNP__IGNORED                0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__SYNC_CTRL__NBLNKS__ENABLED
 *
 * @BRIEF        Blank shaping enabled - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__SYNC_CTRL__NBLNKS__ENABLED              0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__SYNC_CTRL__NBLNKS__DISABLED
 *
 * @BRIEF        Blank shaping disabled - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__SYNC_CTRL__NBLNKS__DISABLED             0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__SYNC_CTRL__VBLKM__INTERNALDEFAULT
 *
 * @BRIEF        Internal default blanking - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__SYNC_CTRL__VBLKM__INTERNALDEFAULT       0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__SYNC_CTRL__VBLKM__INTERNALDEFAULTANDINTERNALPROGRAMMABLE
 *
 * @BRIEF        Internal default blanking AND internal programmable blanking 
 *               defined by FAL and LAL - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__SYNC_CTRL__VBLKM__INTERNALDEFAULTANDINTERNALPROGRAMMABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__SYNC_CTRL__VBLKM__RESERVED0X2
 *
 * @BRIEF        Reserved - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__SYNC_CTRL__VBLKM__RESERVED0X2           0x2ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__SYNC_CTRL__VBLKM__RESERVED0X3
 *
 * @BRIEF        Reserved - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__SYNC_CTRL__VBLKM__RESERVED0X3           0x3ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__SYNC_CTRL__HBLKM__INTERNALDEFAULT
 *
 * @BRIEF        Internal default blanking - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__SYNC_CTRL__HBLKM__INTERNALDEFAULT       0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__SYNC_CTRL__HBLKM__INTERNALPROGRAMMABLE
 *
 * @BRIEF        Internal programmable blanking defined by SAVID and EAVID - 
 *               (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__SYNC_CTRL__HBLKM__INTERNALPROGRAMMABLE  0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__SYNC_CTRL__HBLKM__EXTERNAL
 *
 * @BRIEF        External blanking defined by AVID - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__SYNC_CTRL__HBLKM__EXTERNAL              0x2ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__SYNC_CTRL__HBLKM__RESERVED
 *
 * @BRIEF        Reserved - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__SYNC_CTRL__HBLKM__RESERVED              0x3ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__SYNC_CTRL__M_S__SYNCMASTER
 *
 * @BRIEF        Sync master. Encoder outputs Vsync, Hsync, FID and AVID. - 
 *               (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__SYNC_CTRL__M_S__SYNCMASTER              0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__SYNC_CTRL__M_S__SYNCSLAVE
 *
 * @BRIEF        Sync slave. Encoder is synchronized to external Vsync, 
 *               Hsync, FID and AVID. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__SYNC_CTRL__M_S__SYNCSLAVE               0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__SYNC_CTRL__FID_POL__ODD0EVEN1
 *
 * @BRIEF        ODD field = '0' 
 *               EVEN field = '1' - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__SYNC_CTRL__FID_POL__ODD0EVEN1           0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__SYNC_CTRL__FID_POL__ODD1EVEN0
 *
 * @BRIEF        ODD field = '1' 
 *               EVEN field = '0' 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__SYNC_CTRL__FID_POL__ODD1EVEN0           0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__SYNC_CTRL__VS_POL__ACTIVEHIGH
 *
 * @BRIEF        VS is active high - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__SYNC_CTRL__VS_POL__ACTIVEHIGH           0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__SYNC_CTRL__VS_POL__ACTIVELOW
 *
 * @BRIEF        VS is active low - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__SYNC_CTRL__VS_POL__ACTIVELOW            0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__SYNC_CTRL__HS_POL__ACTIVEHIGH
 *
 * @BRIEF        HS is active high - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__SYNC_CTRL__HS_POL__ACTIVEHIGH           0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__SYNC_CTRL__HS_POL__ACTIVELOW
 *
 * @BRIEF        HS is active low - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__SYNC_CTRL__HS_POL__ACTIVELOW            0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__SYNC_CTRL__FHVMOD__EXTERNALFID
 *
 * @BRIEF        External FID - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__SYNC_CTRL__FHVMOD__EXTERNALFID          0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__SYNC_CTRL__FHVMOD__HSYNC_VSYNC
 *
 * @BRIEF        Extracted from HSYNC and VSYNC - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__SYNC_CTRL__FHVMOD__HSYNC_VSYNC          0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__LLEN__LLEN_EN__DISABLED
 *
 * @BRIEF        disable - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__LLEN__LLEN_EN__DISABLED                 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__LLEN__LLEN_EN__ENABLED
 *
 * @BRIEF        enable - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__LLEN__LLEN_EN__ENABLED                  0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__HFLTR_CTRL__CINTP__ENABLED
 *
 * @BRIEF        The chrominance interpolation filter is enabled - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__HFLTR_CTRL__CINTP__ENABLED              0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__HFLTR_CTRL__CINTP__FIRSTSECTIONBYPASSED
 *
 * @BRIEF        The first section of the chrominance interpolation filter is 
 *               bypassed - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__HFLTR_CTRL__CINTP__FIRSTSECTIONBYPASSED 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__HFLTR_CTRL__CINTP__SECONDSECTIONBYPASSED
 *
 * @BRIEF        The second section of the chrominance interpolation filter 
 *               is bypassed - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__HFLTR_CTRL__CINTP__SECONDSECTIONBYPASSED 0x2ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__HFLTR_CTRL__CINTP__BYPASSED
 *
 * @BRIEF        Both sections of the filter are bypassed - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__HFLTR_CTRL__CINTP__BYPASSED             0x3ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__HFLTR_CTRL__YINTP__ENABLED
 *
 * @BRIEF        The luminance interpolation filter is enabled - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__HFLTR_CTRL__YINTP__ENABLED              0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__HFLTR_CTRL__YINTP__DISABLED
 *
 * @BRIEF        The luminance interpolation filter is bypassed - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__HFLTR_CTRL__YINTP__DISABLED             0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__X_COLOR__XCE__DISABLED
 *
 * @BRIEF        Cross color reduction is disabled - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__X_COLOR__XCE__DISABLED                  0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__X_COLOR__XCE__ENABLED
 *
 * @BRIEF        Cross color is enabled - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__X_COLOR__XCE__ENABLED                   0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__X_COLOR__XCBW__32_8
 *
 * @BRIEF        The notch is at 32.8 % of the frequency of the encoding 
 *               pixel clock - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__X_COLOR__XCBW__32_8                     0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__X_COLOR__XCBW__26_5
 *
 * @BRIEF        The notch is at 26.5 % of the frequency of the encoding 
 *               pixel clock - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__X_COLOR__XCBW__26_5                     0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__X_COLOR__XCBW__30_0
 *
 * @BRIEF        The notch is at 30.0 % of the frequency of the encoding 
 *               pixel clock - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__X_COLOR__XCBW__30_0                     0x2ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__X_COLOR__XCBW__29_2
 *
 * @BRIEF        The notch is at 29.2 % of the frequency of the encoding 
 *               pixel clock - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__X_COLOR__XCBW__29_2                     0x3ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__X_COLOR__LCD__0PIXEL
 *
 * @BRIEF        0 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__X_COLOR__LCD__0PIXEL                    0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__X_COLOR__LCD__P0_5PIXEL
 *
 * @BRIEF        0.5 pixel clock period - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__X_COLOR__LCD__P0_5PIXEL                 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__X_COLOR__LCD__P1_0PIXEL
 *
 * @BRIEF        1.0 pixel clock period - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__X_COLOR__LCD__P1_0PIXEL                 0x2ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__X_COLOR__LCD__P1_5PIXEL
 *
 * @BRIEF        1.5 pixel clock period - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__X_COLOR__LCD__P1_5PIXEL                 0x3ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__X_COLOR__LCD__M2_0PIXEL
 *
 * @BRIEF        -2.0 pixel clock period - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__X_COLOR__LCD__M2_0PIXEL                 0x4ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__X_COLOR__LCD__M1_5PIXEL
 *
 * @BRIEF        -1.5 pixel clock period - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__X_COLOR__LCD__M1_5PIXEL                 0x5ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__X_COLOR__LCD__M1_0PIXEL
 *
 * @BRIEF        -1.0 pixel clock period - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__X_COLOR__LCD__M1_0PIXEL                 0x6ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__X_COLOR__LCD__M0_5PIXEL
 *
 * @BRIEF        -0.5 pixel clock period - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__X_COLOR__LCD__M0_5PIXEL                 0x7ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__M_CONTROL__PALI__PAL_I_OFF
 *
 * @BRIEF        Normal oeration - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__M_CONTROL__PALI__PAL_I_OFF              0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__M_CONTROL__PALI__PAL_I_ON
 *
 * @BRIEF        PAL I Enable - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__M_CONTROL__PALI__PAL_I_ON               0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__M_CONTROL__PALN__PAL_N_OFF
 *
 * @BRIEF        Normal operation - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__M_CONTROL__PALN__PAL_N_OFF              0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__M_CONTROL__PALN__PAL_N_ON
 *
 * @BRIEF        PAL N enable - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__M_CONTROL__PALN__PAL_N_ON               0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__M_CONTROL__PALPHS__NOMINAL
 *
 * @BRIEF        PAL switch phase is nominal - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__M_CONTROL__PALPHS__NOMINAL              0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__M_CONTROL__PALPHS__INVERTED
 *
 * @BRIEF        PAL switch phase is inverted compared to nominal - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__M_CONTROL__PALPHS__INVERTED             0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__M_CONTROL__CBW__21_8
 *
 * @BRIEF        -6db at 21.8 % of encoding pixel clock frequency - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__M_CONTROL__CBW__21_8                    0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__M_CONTROL__CBW__19_8
 *
 * @BRIEF        -6db at 19.8 % of encoding pixel clock frequency - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__M_CONTROL__CBW__19_8                    0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__M_CONTROL__CBW__18_0
 *
 * @BRIEF        -6db at 18.0 % of encoding pixel clock frequency  - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__M_CONTROL__CBW__18_0                    0x2ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__M_CONTROL__CBW__RESERVED0X3
 *
 * @BRIEF        Reserved - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__M_CONTROL__CBW__RESERVED0X3             0x3ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__M_CONTROL__CBW__RESERVED0X4
 *
 * @BRIEF        Reserved - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__M_CONTROL__CBW__RESERVED0X4             0x4ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__M_CONTROL__CBW__23_7
 *
 * @BRIEF        -6db at 23.7 % of encoding pixel clock frequency - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__M_CONTROL__CBW__23_7                    0x5ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__M_CONTROL__CBW__26_8
 *
 * @BRIEF        -6db at 26.8 % of encoding pixel clock frequency - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__M_CONTROL__CBW__26_8                    0x6ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__M_CONTROL__CBW__BYPASSED
 *
 * @BRIEF        Chrominance lowpass filter bypass - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__M_CONTROL__CBW__BYPASSED                0x7ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__M_CONTROL__PAL__DISABLED
 *
 * @BRIEF        Phase alternation line encoding disabled - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__M_CONTROL__PAL__DISABLED                0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__M_CONTROL__PAL__ENABLED
 *
 * @BRIEF        Phase alternation line encoding enabled - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__M_CONTROL__PAL__ENABLED                 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__BSTAMP_WSS_DATA__SQP__ITU
 *
 * @BRIEF        ITU-R 601 sampling rate - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__BSTAMP_WSS_DATA__SQP__ITU               0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__BSTAMP_WSS_DATA__SQP__SQUAREPIXEL
 *
 * @BRIEF        Square-pixel sampling rate - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__BSTAMP_WSS_DATA__SQP__SQUAREPIXEL       0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__L21_WC_CTL__INV__DISABLED
 *
 * @BRIEF        no effect - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__L21_WC_CTL__INV__DISABLED               0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__L21_WC_CTL__INV__ENABLED
 *
 * @BRIEF        invert WSS data - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__L21_WC_CTL__INV__ENABLED                0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__L21_WC_CTL__EVEN_ODD_EN__DISABLED
 *
 * @BRIEF        WSS encoding OFF - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__L21_WC_CTL__EVEN_ODD_EN__DISABLED       0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__L21_WC_CTL__EVEN_ODD_EN__SECONDFIELDENABLED
 *
 * @BRIEF        Enables encoding in 2nd field (odd field) - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__L21_WC_CTL__EVEN_ODD_EN__SECONDFIELDENABLED 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__L21_WC_CTL__EVEN_ODD_EN__FIRSTFIELDENABLED
 *
 * @BRIEF        Enables encoding in 1st field (even field) - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__L21_WC_CTL__EVEN_ODD_EN__FIRSTFIELDENABLED 0x2ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__L21_WC_CTL__EVEN_ODD_EN__ENABLED
 *
 * @BRIEF        Enables encoding in both fields - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__L21_WC_CTL__EVEN_ODD_EN__ENABLED        0x3ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__L21_WC_CTL__L21EN__DISABLED
 *
 * @BRIEF        Line21 encoding OFF - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__L21_WC_CTL__L21EN__DISABLED             0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__L21_WC_CTL__L21EN__FIRSTFIELDENABLED
 *
 * @BRIEF        Enables encoding in 1st field (ODD field) - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__L21_WC_CTL__L21EN__FIRSTFIELDENABLED    0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__L21_WC_CTL__L21EN__SECONDFIELDENABLED
 *
 * @BRIEF        Enables encoding in 2d field (EVEN field) - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__L21_WC_CTL__L21EN__SECONDFIELDENABLED   0x2ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__L21_WC_CTL__L21EN__ENABLED
 *
 * @BRIEF        Enables encoding in both fields - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__L21_WC_CTL__L21EN__ENABLED              0x3ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__LAL_PHASE_RESET__PRES__NORESET
 *
 * @BRIEF        No reset - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__LAL_PHASE_RESET__PRES__NORESET          0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__LAL_PHASE_RESET__PRES__EVERY2LINES
 *
 * @BRIEF        Reset every two lines - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__LAL_PHASE_RESET__PRES__EVERY2LINES      0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__LAL_PHASE_RESET__PRES__EVERY8FIELDS
 *
 * @BRIEF        Reset every eight fields. Color subcarrier phase is reset to 
 *               C_Phase (subaddress 5A) upon reset - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__LAL_PHASE_RESET__PRES__EVERY8FIELDS     0x2ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__LAL_PHASE_RESET__PRES__EVERY4FIELDS
 *
 * @BRIEF        Reset every four fields. Color subcarrier phase is reset to 
 *               C_Phase (subaddress 5A) upon reset - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__LAL_PHASE_RESET__PRES__EVERY4FIELDS     0x3ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__LAL_PHASE_RESET__SBLANK__DEFINEDBYSETTING
 *
 * @BRIEF        Vertical blanking is defined by the setting of FAL and LAL 
 *               registers. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__LAL_PHASE_RESET__SBLANK__DEFINEDBYSETTING 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__LAL_PHASE_RESET__SBLANK__FORCEDAUTOMATICALLY
 *
 * @BRIEF        Vertical blanking is forced automatically during field 
 *               synchronization and equalization. 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__LAL_PHASE_RESET__SBLANK__FORCEDAUTOMATICALLY 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__GEN_CTRL__MS__CBCR
 *
 * @BRIEF        CbCr - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__GEN_CTRL__MS__CBCR                      0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__GEN_CTRL__MS__CRCB
 *
 * @BRIEF        CrCb - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__GEN_CTRL__MS__CRCB                      0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__GEN_CTRL__UVPHASE_POL_656__CBCR
 *
 * @BRIEF        CbCr - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__GEN_CTRL__UVPHASE_POL_656__CBCR         0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__GEN_CTRL__UVPHASE_POL_656__CRCB
 *
 * @BRIEF        CrCb - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__GEN_CTRL__UVPHASE_POL_656__CRCB         0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__GEN_CTRL__CBAR__CBCR
 *
 * @BRIEF        CbCr - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__GEN_CTRL__CBAR__CBCR                    0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__GEN_CTRL__CBAR__CRCB
 *
 * @BRIEF        CrCb - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__GEN_CTRL__CBAR__CRCB                    0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__GEN_CTRL__HIP__ACTIVELOW
 *
 * @BRIEF        Active Low - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__GEN_CTRL__HIP__ACTIVELOW                0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__GEN_CTRL__HIP__ACTIVEHIGH
 *
 * @BRIEF        Active High - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__GEN_CTRL__HIP__ACTIVEHIGH               0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__GEN_CTRL__VIP__ACTIVELOW
 *
 * @BRIEF        Active Low - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__GEN_CTRL__VIP__ACTIVELOW                0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__GEN_CTRL__VIP__ACTIVEHIGH
 *
 * @BRIEF        Active High - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__GEN_CTRL__VIP__ACTIVEHIGH               0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__GEN_CTRL__HEP__ACTIVELOW
 *
 * @BRIEF        Active Low - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__GEN_CTRL__HEP__ACTIVELOW                0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__GEN_CTRL__HEP__ACTIVEHIGH
 *
 * @BRIEF        Active High - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__GEN_CTRL__HEP__ACTIVEHIGH               0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__GEN_CTRL__VEP__ACTIVELOW
 *
 * @BRIEF        Active Low - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__GEN_CTRL__VEP__ACTIVELOW                0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__GEN_CTRL__VEP__ACTIVEHIGH
 *
 * @BRIEF        Active High - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__GEN_CTRL__VEP__ACTIVEHIGH               0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__GEN_CTRL__AVIDP__ACTIVELOW
 *
 * @BRIEF        Active Low - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__GEN_CTRL__AVIDP__ACTIVELOW              0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__GEN_CTRL__AVIDP__ACTIVEHIGH
 *
 * @BRIEF        Active High - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__GEN_CTRL__AVIDP__ACTIVEHIGH             0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__GEN_CTRL__FIP__ACTIVELOW
 *
 * @BRIEF        Active Low - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__GEN_CTRL__FIP__ACTIVELOW                0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__GEN_CTRL__FIP__ACTIVEHIGH
 *
 * @BRIEF        Active High - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__GEN_CTRL__FIP__ACTIVEHIGH               0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__GEN_CTRL__FEP__ACTIVELOW
 *
 * @BRIEF        Active Low - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__GEN_CTRL__FEP__ACTIVELOW                0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__GEN_CTRL__FEP__ACTIVEHIGH
 *
 * @BRIEF        Active High - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__GEN_CTRL__FEP__ACTIVEHIGH               0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__GEN_CTRL__TVDP__ACTIVELOW
 *
 * @BRIEF        Active Low  - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__GEN_CTRL__TVDP__ACTIVELOW               0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__GEN_CTRL__TVDP__ACTIVEHIGH
 *
 * @BRIEF        Active High - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__GEN_CTRL__TVDP__ACTIVEHIGH              0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__GEN_CTRL__EN__DISABLED
 *
 * @BRIEF        Disabled - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__GEN_CTRL__EN__DISABLED                  0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__GEN_CTRL__EN__ENABLED
 *
 * @BRIEF        Enabled  - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__GEN_CTRL__EN__ENABLED                   0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__OUTPUT_CONTROL__CHROMA_SOURCE__INTERNAL
 *
 * @BRIEF        Chroma test data comes from internal register 
 *               OUTPUT_TEST[25:16] - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__OUTPUT_CONTROL__CHROMA_SOURCE__INTERNAL 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__OUTPUT_CONTROL__CHROMA_SOURCE__DIRECTLYCONNECTED
 *
 * @BRIEF        Chroma test data comes from display controller video port 
 *               G[1:0], B[7:0] - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__OUTPUT_CONTROL__CHROMA_SOURCE__DIRECTLYCONNECTED 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__OUTPUT_CONTROL__COMPOSITE_SOURCE__INTERNAL
 *
 * @BRIEF        Composite test data comes from internal register 
 *               OUTPUT_TEST[9:0] - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__OUTPUT_CONTROL__COMPOSITE_SOURCE__INTERNAL 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__OUTPUT_CONTROL__COMPOSITE_SOURCE__DIRECTLYCONNECTED
 *
 * @BRIEF        Composite test data comes from display controller video port 
 *               G[1:0], B[7:0] - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__OUTPUT_CONTROL__COMPOSITE_SOURCE__DIRECTLYCONNECTED 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__OUTPUT_CONTROL__LUMA_SOURCE__INTERNAL
 *
 * @BRIEF        Luma test data comes from internal register 
 *               OUTPUT_CONTROL[25:16] - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__OUTPUT_CONTROL__LUMA_SOURCE__INTERNAL   0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__OUTPUT_CONTROL__LUMA_SOURCE__DIRECTLYCONNECTED
 *
 * @BRIEF        Luma test data comes from display controller video port 
 *               G[1:0], B[7:0] - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__OUTPUT_CONTROL__LUMA_SOURCE__DIRECTLYCONNECTED 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__OUTPUT_CONTROL__TEST_MODE__NORMALOPERATION
 *
 * @BRIEF        Video outputs are in normal operation - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__OUTPUT_CONTROL__TEST_MODE__NORMALOPERATION 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__OUTPUT_CONTROL__TEST_MODE__TESTMODE
 *
 * @BRIEF        Test mode. Video outputs are directly connected to either 
 *               internal registers or the display controller video port. - 
 *               (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__OUTPUT_CONTROL__TEST_MODE__TESTMODE     0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__OUTPUT_CONTROL__VIDEO_INVERT__INVERTED
 *
 * @BRIEF        Video outputs are inverted - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__OUTPUT_CONTROL__VIDEO_INVERT__INVERTED  0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__OUTPUT_CONTROL__VIDEO_INVERT__NORMALOPERATION
 *
 * @BRIEF        Video outputs are normal polarity - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__OUTPUT_CONTROL__VIDEO_INVERT__NORMALOPERATION 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__OUTPUT_CONTROL__CHROMA_ENABLE__DISABLED
 *
 * @BRIEF        Chroma output is disabled - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__OUTPUT_CONTROL__CHROMA_ENABLE__DISABLED 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__OUTPUT_CONTROL__CHROMA_ENABLE__ENABLED
 *
 * @BRIEF        Chroma output is enabled - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__OUTPUT_CONTROL__CHROMA_ENABLE__ENABLED  0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__OUTPUT_CONTROL__COMPOSITE_ENABLE__DISABLED
 *
 * @BRIEF        Composite output is disabled - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__OUTPUT_CONTROL__COMPOSITE_ENABLE__DISABLED 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__OUTPUT_CONTROL__COMPOSITE_ENABLE__ENABLED
 *
 * @BRIEF        Composite output is enabled - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__OUTPUT_CONTROL__COMPOSITE_ENABLE__ENABLED 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__OUTPUT_CONTROL__LUMA_ENABLE__DISABLED
 *
 * @BRIEF        Luma output is disabled - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__OUTPUT_CONTROL__LUMA_ENABLE__DISABLED   0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   VENC__OUTPUT_CONTROL__LUMA_ENABLE__ENABLED
 *
 * @BRIEF        Luma output is enabled - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define VENC__OUTPUT_CONTROL__LUMA_ENABLE__ENABLED    0x1ul

#ifdef __cplusplus
}
#endif
#endif                                                     /* __VENC_CRED_H */

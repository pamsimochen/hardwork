/** ==================================================================
 *  @file   mcbsplp_cred.h                                                  
 *                                                                    
 *  @path   /ti/psp/iss/hal/cred_cram/cred/inc/cortexm3_sys_ape/                                                  
 *                                                                    
 *  @desc   This  File contains.                                      
 * ===================================================================
 *  Copyright (c) Texas Instruments Inc 2011, 2012                    
 *                                                                    
 *  Use of this software is controlled by the terms and conditions found
 *  in the license agreement under which this software has been supplied
 * ===================================================================*/

/* ============================================================================ 
 * TEXAS INSTRUMENTS INCORPORATED PROPRIETARY INFORMATION Property of Texas
 * Instruments For Unrestricted Internal Use Only Unauthorized reproduction
 * and/or distribution is strictly prohibited.  This product is protected
 * under copyright law and trade secret law as an unpublished work.  Created
 * 2008, (C) Copyright 2008 Texas Instruments.  All rights reserved. */

/**
 *  @Component:   MCBSPLP
 *
 *  @Filename:    mcbsplp_cred.h
 *
 *  @Description: Component description is not available
 *
 *  Generated by: Socrates CRED generator prototype
 *
    *//* ====================================================================== */

#ifndef __MCBSPLP_CRED_H
#define __MCBSPLP_CRED_H

#ifdef __cplusplus
extern "C" {
#endif

    /* 
     * Instance MCBSPLP1 of component MCBSPLP mapped in MONICA at address 0x49022000
     * Instance MCBSPLP2 of component MCBSPLP mapped in MONICA at address 0x49024000
     * Instance MCBSPLP3 of component MCBSPLP mapped in MONICA at address 0x49026000
     */

                                                                              /*-------------------------------------------------------------------------*//**
 * @DEFINITION   BITFIELD
 *
 * @BRIEF        The bitfield must be defined according to register width
 *               of the component - 64/32/16/8
 *
    *//*------------------------------------------------------------------------ */
#undef BITFIELD
#define BITFIELD BITFIELD_32

    /* 
     *  List of Register arrays for component MCBSPLP
     *
     */

    /* 
     *  List of bundle arrays for component MCBSPLP
     *
     */

    /* 
     *  List of bundles for component MCBSPLP
     *
     */

    /* 
     * List of registers for component MCBSPLP
     *
     */

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_DRR_REG
 *
 * @BRIEF        McBSPLP data receive register 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_DRR_REG                           0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_DXR_REG
 *
 * @BRIEF        McBSPLP data transmit register 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_DXR_REG                           0x8ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_SPCR2_REG
 *
 * @BRIEF        McBSPLP serial port control register 2    
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_SPCR2_REG                         0x10ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_SPCR1_REG
 *
 * @BRIEF        McBSPLP serial port control register 1    
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_SPCR1_REG                         0x14ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_RCR2_REG
 *
 * @BRIEF        McBSPLP receive control register 2    
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_RCR2_REG                          0x18ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_RCR1_REG
 *
 * @BRIEF        McBSPLP receive control register 1    
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_RCR1_REG                          0x1Cul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_XCR2_REG
 *
 * @BRIEF        McBSPLP transmit control register 2    
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_XCR2_REG                          0x20ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_XCR1_REG
 *
 * @BRIEF        McBSPLP transmit control register 1    
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_XCR1_REG                          0x24ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_SRGR2_REG
 *
 * @BRIEF        McBSPLP sample rate generator register 2    
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_SRGR2_REG                         0x28ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_SRGR1_REG
 *
 * @BRIEF        McBSPLP sample rate generator register 1    
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_SRGR1_REG                         0x2Cul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_MCR2_REG
 *
 * @BRIEF        McBSPLP multi channel register 2    
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_MCR2_REG                          0x30ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_MCR1_REG
 *
 * @BRIEF        McBSPLP multi channel register 1    
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_MCR1_REG                          0x34ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_RCERA_REG
 *
 * @BRIEF        McBSPLP receive channel enable register partition A    
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_RCERA_REG                         0x38ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_RCERB_REG
 *
 * @BRIEF        McBSPLPreceive channel enable register partition B    
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_RCERB_REG                         0x3Cul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_XCERA_REG
 *
 * @BRIEF        McBSPLP transmit channel enable register partition A    
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_XCERA_REG                         0x40ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_XCERB_REG
 *
 * @BRIEF        McBSPLP transmit channel enable register partition B    
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_XCERB_REG                         0x44ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_PCR_REG
 *
 * @BRIEF        McBSPLP pin control register    
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_PCR_REG                           0x48ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_RCERC_REG
 *
 * @BRIEF        McBSPLP receive channel enable register partition C    
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_RCERC_REG                         0x4Cul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_RCERD_REG
 *
 * @BRIEF        McBSPLP receive channel enable register partition D    
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_RCERD_REG                         0x50ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_XCERC_REG
 *
 * @BRIEF        McBSPLP transmit channel enable register partition C    
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_XCERC_REG                         0x54ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_XCERD_REG
 *
 * @BRIEF        McBSPLPtransmit channel enable register partition D    
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_XCERD_REG                         0x58ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_RCERE_REG
 *
 * @BRIEF        McBSPLP receive channel enable register partition E    
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_RCERE_REG                         0x5Cul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_RCERF_REG
 *
 * @BRIEF        McBSPLP receive channel enable register partition F    
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_RCERF_REG                         0x60ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_XCERE_REG
 *
 * @BRIEF        McBSPLP transmit channel enable register partition E    
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_XCERE_REG                         0x64ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_XCERF_REG
 *
 * @BRIEF        McBSPLP transmit channel enable register partition F    
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_XCERF_REG                         0x68ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_RCERG_REG
 *
 * @BRIEF        McBSPLP receive channel enable register partition G    
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_RCERG_REG                         0x6Cul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_RCERH_REG
 *
 * @BRIEF        McBSPLP receive channel enable register partition H    
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_RCERH_REG                         0x70ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_XCERG_REG
 *
 * @BRIEF        McBSPLP transmit channel enable register partition G    
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_XCERG_REG                         0x74ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_XCERH_REG
 *
 * @BRIEF        McBSPLP transmit channel enable register partition H    
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_XCERH_REG                         0x78ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_REV_REG
 *
 * @BRIEF        MCBSPLP Revision number register    
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_REV_REG                           0x7Cul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_RINTCLR_REG
 *
 * @BRIEF        McBSPLP receive interrupt clear 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_RINTCLR_REG                       0x80ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_XINTCLR_REG
 *
 * @BRIEF        McBSPLP transmit interrupt clear 
 *               (legacy) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_XINTCLR_REG                       0x84ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_ROVFLCLR_REG
 *
 * @BRIEF        McBSPLP receive overflow interrupt clear 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_ROVFLCLR_REG                      0x88ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_SYSCONFIG_REG
 *
 * @BRIEF        McBSPLP System Configuration register 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_SYSCONFIG_REG                     0x8Cul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_THRSH2_REG
 *
 * @BRIEF        McBSPLP transmit buffer threshold (DMA or IRQ trigger) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_THRSH2_REG                        0x90ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_THRSH1_REG
 *
 * @BRIEF        McBSPLP receive buffer threshold (DMA or IRQ trigger) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_THRSH1_REG                        0x94ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_IRQSTATUS_REG
 *
 * @BRIEF        McBSPLP Interrupt Status register (OCP compliant IRQ line) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_IRQSTATUS_REG                     0xA0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_IRQENABLE_REG
 *
 * @BRIEF        McBSPLP Interrupt Enable register (OCP compliant IRQ line) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_IRQENABLE_REG                     0xA4ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_WAKEUPEN_REG
 *
 * @BRIEF        McBSPLP Wakeup Enable register 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_WAKEUPEN_REG                      0xA8ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_XCCR_REG
 *
 * @BRIEF        McBSPLP transmit configuration control register 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_XCCR_REG                          0xACul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_RCCR_REG
 *
 * @BRIEF        McBSPLP receive configuration control register 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_RCCR_REG                          0xB0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_XBUFFSTAT_REG
 *
 * @BRIEF        McBSPLP transmit buffer status 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_XBUFFSTAT_REG                     0xB4ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_RBUFFSTAT_REG
 *
 * @BRIEF        McBSPLP receive buffer status 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_RBUFFSTAT_REG                     0xB8ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_SSELCR_REG
 *
 * @BRIEF        McBSPLP sidetone select register. 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_SSELCR_REG                        0xBCul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_STATUS_REG
 *
 * @BRIEF        McBSPLP status register. 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_STATUS_REG                        0xC0ul

    /* 
     * List of register bitfields for component MCBSPLP
     *
     */

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_DRR_REG__DRR   
 *
 * @BRIEF        Data receive register. Returns the contents of the Receive 
 *               FIFO. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_DRR_REG__DRR                 BITFIELD(31, 0)
#define MCBSPLP__MCBSPLP_DRR_REG__DRR__POS            0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_DXR_REG__DXR   
 *
 * @BRIEF        Data transmit register - (WO) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_DXR_REG__DXR                 BITFIELD(31, 0)
#define MCBSPLP__MCBSPLP_DXR_REG__DXR__POS            0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_SPCR2_REG__FREE   
 *
 * @BRIEF        Free Running Mode  
 *               (When this bit is set, the module ignores the Msuspend 
 *               input) 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_SPCR2_REG__FREE              BITFIELD(9, 9)
#define MCBSPLP__MCBSPLP_SPCR2_REG__FREE__POS         9

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_SPCR2_REG__SOFT   
 *
 * @BRIEF        Soft Bit  
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_SPCR2_REG__SOFT              BITFIELD(8, 8)
#define MCBSPLP__MCBSPLP_SPCR2_REG__SOFT__POS         8

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_SPCR2_REG__FRST   
 *
 * @BRIEF        Frame-Sync Generator Reset 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_SPCR2_REG__FRST              BITFIELD(7, 7)
#define MCBSPLP__MCBSPLP_SPCR2_REG__FRST__POS         7

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_SPCR2_REG__GRST   
 *
 * @BRIEF        Sample-Rate Generator Reset   
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_SPCR2_REG__GRST              BITFIELD(6, 6)
#define MCBSPLP__MCBSPLP_SPCR2_REG__GRST__POS         6

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_SPCR2_REG__XINTM   
 *
 * @BRIEF        Transmit Interrupt Mode 
 *               (legacy) 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_SPCR2_REG__XINTM             BITFIELD(5, 4)
#define MCBSPLP__MCBSPLP_SPCR2_REG__XINTM__POS        4

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_SPCR2_REG__XSYNCERR   
 *
 * @BRIEF        Transmit Synchronization Error 
 *               (writing 0 to this bit clear the legacy transmit interrupt 
 *               if asserted due to XSYNCERR condition) 
 *                 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_SPCR2_REG__XSYNCERR          BITFIELD(3, 3)
#define MCBSPLP__MCBSPLP_SPCR2_REG__XSYNCERR__POS     3

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_SPCR2_REG__XEMPTY   
 *
 * @BRIEF        Transmit Shift Register XSR Empty 
 *                - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_SPCR2_REG__XEMPTY            BITFIELD(2, 2)
#define MCBSPLP__MCBSPLP_SPCR2_REG__XEMPTY__POS       2

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_SPCR2_REG__XRDY   
 *
 * @BRIEF        Transmitter ready 
 *                - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_SPCR2_REG__XRDY              BITFIELD(1, 1)
#define MCBSPLP__MCBSPLP_SPCR2_REG__XRDY__POS         1

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_SPCR2_REG__XRST   
 *
 * @BRIEF        Transmitter reset. This resets and enables the transmitter.  
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_SPCR2_REG__XRST              BITFIELD(0, 0)
#define MCBSPLP__MCBSPLP_SPCR2_REG__XRST__POS         0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_SPCR1_REG__ALB   
 *
 * @BRIEF        Analog Loop Back Mode 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_SPCR1_REG__ALB               BITFIELD(15, 15)
#define MCBSPLP__MCBSPLP_SPCR1_REG__ALB__POS          15

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_SPCR1_REG__RJUST   
 *
 * @BRIEF        Receive Sign-Extension and Justification Mode  
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_SPCR1_REG__RJUST             BITFIELD(14, 13)
#define MCBSPLP__MCBSPLP_SPCR1_REG__RJUST__POS        13

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_SPCR1_REG__DXENA   
 *
 * @BRIEF        DX Enabler  
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_SPCR1_REG__DXENA             BITFIELD(7, 7)
#define MCBSPLP__MCBSPLP_SPCR1_REG__DXENA__POS        7

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_SPCR1_REG__RINTM   
 *
 * @BRIEF        Receive Interrupt Mode 
 *               (legacy) 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_SPCR1_REG__RINTM             BITFIELD(5, 4)
#define MCBSPLP__MCBSPLP_SPCR1_REG__RINTM__POS        4

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_SPCR1_REG__RSYNCERR   
 *
 * @BRIEF        Receive Synchronization Error 
 *               (writing 0 to this bit clear the legacy receive interrupt if 
 *               asserted due to RSYNCERR condition) 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_SPCR1_REG__RSYNCERR          BITFIELD(3, 3)
#define MCBSPLP__MCBSPLP_SPCR1_REG__RSYNCERR__POS     3

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_SPCR1_REG__RFULL   
 *
 * @BRIEF        Receive Shift Register (RSR]) Full 
 *                - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_SPCR1_REG__RFULL             BITFIELD(2, 2)
#define MCBSPLP__MCBSPLP_SPCR1_REG__RFULL__POS        2

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_SPCR1_REG__RRDY   
 *
 * @BRIEF        Receiver Ready  
 *                - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_SPCR1_REG__RRDY              BITFIELD(1, 1)
#define MCBSPLP__MCBSPLP_SPCR1_REG__RRDY__POS         1

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_SPCR1_REG__RRST   
 *
 * @BRIEF        Receiver reset. This resets and enables the receiver. 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_SPCR1_REG__RRST              BITFIELD(0, 0)
#define MCBSPLP__MCBSPLP_SPCR1_REG__RRST__POS         0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_RCR2_REG__RPHASE   
 *
 * @BRIEF        Receive Phases  
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_RCR2_REG__RPHASE             BITFIELD(15, 15)
#define MCBSPLP__MCBSPLP_RCR2_REG__RPHASE__POS        15

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_RCR2_REG__RFRLEN2   
 *
 * @BRIEF        Receive Frame Length 2 
 *               Single-phase frame selected: 
 *               RFRLEN2=don't care 
 *               Dual-phase frame selected: 
 *               RFRLEN2=000 0000 - 1 word per second phase 
 *               (other values are reserved) 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_RCR2_REG__RFRLEN2            BITFIELD(14, 8)
#define MCBSPLP__MCBSPLP_RCR2_REG__RFRLEN2__POS       8

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_RCR2_REG__RWDLEN2   
 *
 * @BRIEF        Receive Word Length 2 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_RCR2_REG__RWDLEN2            BITFIELD(7, 5)
#define MCBSPLP__MCBSPLP_RCR2_REG__RWDLEN2__POS       5

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_RCR2_REG__RREVERSE   
 *
 * @BRIEF        Receive reverse mode.  
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_RCR2_REG__RREVERSE           BITFIELD(4, 3)
#define MCBSPLP__MCBSPLP_RCR2_REG__RREVERSE__POS      3

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_RCR2_REG__RDATDLY   
 *
 * @BRIEF        Receive Data Delay 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_RCR2_REG__RDATDLY            BITFIELD(1, 0)
#define MCBSPLP__MCBSPLP_RCR2_REG__RDATDLY__POS       0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_RCR1_REG__RFRLEN1   
 *
 * @BRIEF        Receive Frame Length 1 
 *               Single-phase frame selected: 
 *               RFRLEN1=000 0000 - 1 word per frame 
 *               RFRLEN1=000 0001 - 2 words per frame 
 *               RFRLEN1=111 1111 - 128 words per frame 
 *               Dual-phase frame selected: 
 *               RFRLEN1=000 0000 - 1 word per phase 
 *               (other values are reserved) 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_RCR1_REG__RFRLEN1            BITFIELD(14, 8)
#define MCBSPLP__MCBSPLP_RCR1_REG__RFRLEN1__POS       8

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_RCR1_REG__RWDLEN1   
 *
 * @BRIEF        Receive Word Length 1 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_RCR1_REG__RWDLEN1            BITFIELD(7, 5)
#define MCBSPLP__MCBSPLP_RCR1_REG__RWDLEN1__POS       5

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_XCR2_REG__XPHASE   
 *
 * @BRIEF        Transmit Phases  
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_XCR2_REG__XPHASE             BITFIELD(15, 15)
#define MCBSPLP__MCBSPLP_XCR2_REG__XPHASE__POS        15

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_XCR2_REG__XFRLEN2   
 *
 * @BRIEF        Transmit Frame Length 2 
 *               Single-phase frame selected: 
 *               XFRLEN2=don't care 
 *               Dual-phase frame selected: 
 *               XFRLEN2=000 0000 - 1 word per second phase 
 *               (other values are reserved) 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_XCR2_REG__XFRLEN2            BITFIELD(14, 8)
#define MCBSPLP__MCBSPLP_XCR2_REG__XFRLEN2__POS       8

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_XCR2_REG__XWDLEN2   
 *
 * @BRIEF        Transmit Word Length 2 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_XCR2_REG__XWDLEN2            BITFIELD(7, 5)
#define MCBSPLP__MCBSPLP_XCR2_REG__XWDLEN2__POS       5

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_XCR2_REG__XREVERSE   
 *
 * @BRIEF        Transmit reverse mode.  
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_XCR2_REG__XREVERSE           BITFIELD(4, 3)
#define MCBSPLP__MCBSPLP_XCR2_REG__XREVERSE__POS      3

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_XCR2_REG__XDATDLY   
 *
 * @BRIEF        Transmit Data Delay 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_XCR2_REG__XDATDLY            BITFIELD(1, 0)
#define MCBSPLP__MCBSPLP_XCR2_REG__XDATDLY__POS       0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_XCR1_REG__XFRLEN1   
 *
 * @BRIEF        Transmit Frame Length 1 
 *               Single-phase frame selected: 
 *               XFRLEN1=000 0000 - 1 word per frame 
 *               XFRLEN1=000 0001 - 2 words per frame 
 *               XFRLEN1=111 1111 - 128 words per frame 
 *               Dual-phase frame selected: 
 *               XFRLEN1=000 0000 - 1 word per phase 
 *               (other values are reserved) 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_XCR1_REG__XFRLEN1            BITFIELD(14, 8)
#define MCBSPLP__MCBSPLP_XCR1_REG__XFRLEN1__POS       8

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_XCR1_REG__XWDLEN1   
 *
 * @BRIEF        Transmit Word Length 1 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_XCR1_REG__XWDLEN1            BITFIELD(7, 5)
#define MCBSPLP__MCBSPLP_XCR1_REG__XWDLEN1__POS       5

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_SRGR2_REG__GSYNC   
 *
 * @BRIEF         
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_SRGR2_REG__GSYNC             BITFIELD(15, 15)
#define MCBSPLP__MCBSPLP_SRGR2_REG__GSYNC__POS        15

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_SRGR2_REG__CLKSP   
 *
 * @BRIEF        CLKS Polarity Clock Edge Select 
 *               Only used when the external clock CLKS drives the sample 
 *               rate generator clock (CLKSM=0). 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_SRGR2_REG__CLKSP             BITFIELD(14, 14)
#define MCBSPLP__MCBSPLP_SRGR2_REG__CLKSP__POS        14

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_SRGR2_REG__CLKSM   
 *
 * @BRIEF        McBSPLP Sample Rate Generator Clock Mode 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_SRGR2_REG__CLKSM             BITFIELD(13, 13)
#define MCBSPLP__MCBSPLP_SRGR2_REG__CLKSM__POS        13

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_SRGR2_REG__FSGM   
 *
 * @BRIEF        Sample Rate Generator Transmit Frame-Synchronization Mode 
 *               Used when FSXM=1 in the PCR. 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_SRGR2_REG__FSGM              BITFIELD(12, 12)
#define MCBSPLP__MCBSPLP_SRGR2_REG__FSGM__POS         12

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_SRGR2_REG__FPER   
 *
 * @BRIEF        Frame Period. This field plus 1 determines when the next 
 *               frame-sync signal becomes active. 
 *               Range: 1 to 4096 CLKG periods 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_SRGR2_REG__FPER              BITFIELD(11, 0)
#define MCBSPLP__MCBSPLP_SRGR2_REG__FPER__POS         0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_SRGR1_REG__FWID   
 *
 * @BRIEF        Frame Width. This field plus 1 determines the width of the 
 *               frame-sync pulse, FSG, during its active period. 
 *               Range: 1 to 256 CLKG periods. 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_SRGR1_REG__FWID              BITFIELD(15, 8)
#define MCBSPLP__MCBSPLP_SRGR1_REG__FWID__POS         8

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_SRGR1_REG__CLKGDV   
 *
 * @BRIEF        Sample Rate Generator Clock Divider 
 *               This value is used as the divide-down number to generate the 
 *               required sample rate generator clock frequency. Default 
 *               value is 1. 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_SRGR1_REG__CLKGDV            BITFIELD(7, 0)
#define MCBSPLP__MCBSPLP_SRGR1_REG__CLKGDV__POS       0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_MCR2_REG__XMCME   
 *
 * @BRIEF        Bitfield description is not available - (RW)
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_MCR2_REG__XMCME              BITFIELD(9, 9)
#define MCBSPLP__MCBSPLP_MCR2_REG__XMCME__POS         9

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_MCR2_REG__XPBBLK   
 *
 * @BRIEF        Transmit Partition B Block 
 *               (legacy) - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_MCR2_REG__XPBBLK             BITFIELD(8, 7)
#define MCBSPLP__MCBSPLP_MCR2_REG__XPBBLK__POS        7

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_MCR2_REG__XPABLK   
 *
 * @BRIEF        Transmit Partition A Block 
 *               (legacy) - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_MCR2_REG__XPABLK             BITFIELD(6, 5)
#define MCBSPLP__MCBSPLP_MCR2_REG__XPABLK__POS        5

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_MCR2_REG__XMCM   
 *
 * @BRIEF        Transmit Multichannel Selection Enable 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_MCR2_REG__XMCM               BITFIELD(1, 0)
#define MCBSPLP__MCBSPLP_MCR2_REG__XMCM__POS          0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_MCR1_REG__RMCME   
 *
 * @BRIEF        (legacy) - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_MCR1_REG__RMCME              BITFIELD(9, 9)
#define MCBSPLP__MCBSPLP_MCR1_REG__RMCME__POS         9

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_MCR1_REG__RPBBLK   
 *
 * @BRIEF        Receive Partition B Block 
 *               (legacy) 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_MCR1_REG__RPBBLK             BITFIELD(8, 7)
#define MCBSPLP__MCBSPLP_MCR1_REG__RPBBLK__POS        7

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_MCR1_REG__RPABLK   
 *
 * @BRIEF        Receive Partition A Block 
 *               (legacy) 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_MCR1_REG__RPABLK             BITFIELD(6, 5)
#define MCBSPLP__MCBSPLP_MCR1_REG__RPABLK__POS        5

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_MCR1_REG__RMCM   
 *
 * @BRIEF        Receive Multichannel Selection Enable 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_MCR1_REG__RMCM               BITFIELD(0, 0)
#define MCBSPLP__MCBSPLP_MCR1_REG__RMCM__POS          0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_RCERA_REG__RCERA   
 *
 * @BRIEF        Receive Channel Enable 
 *               RCERA n=0  Disables reception of n-th channel in an 
 *               even-numbered block in partition A 
 *               RCERA n=1  Enables reception of n-th channel in an 
 *               even-numbered block in partition A 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_RCERA_REG__RCERA             BITFIELD(15, 0)
#define MCBSPLP__MCBSPLP_RCERA_REG__RCERA__POS        0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_RCERB_REG__RCERB   
 *
 * @BRIEF        Receive Channel Enable 
 *               RCERB n=0 Disables reception of n-th channel in a 
 *               even-numbered block in partition B 
 *               RCERB n=1 Enables reception of n-th channel in a 
 *               even-numbered block in partition B 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_RCERB_REG__RCERB             BITFIELD(15, 0)
#define MCBSPLP__MCBSPLP_RCERB_REG__RCERB__POS        0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_XCERA_REG__XCERA   
 *
 * @BRIEF        Transmit Channel Enable 
 *               XCERA n=0 Disables transmission of n-th channel in an 
 *               event-numbered block in partition A 
 *               XCERA n=1 Enables transmission of n-th channel in an 
 *               event-numbered block in partition A 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_XCERA_REG__XCERA             BITFIELD(15, 0)
#define MCBSPLP__MCBSPLP_XCERA_REG__XCERA__POS        0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_XCERB_REG__XCERB   
 *
 * @BRIEF        Transmit Channel Enable 
 *               XCERB n=0 Disables transmission of n-th channel in an 
 *               even-numbered block in partition B 
 *               XCERB n=1 Enables transmission of n-th channel in an 
 *               even-numbered block in partition B 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_XCERB_REG__XCERB             BITFIELD(15, 0)
#define MCBSPLP__MCBSPLP_XCERB_REG__XCERB__POS        0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_PCR_REG__IDLE_EN   
 *
 * @BRIEF        Idle enable. This bit allows stopping all the clocks in the 
 *               MCBSPLP. 
 *               (legacy) - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_PCR_REG__IDLE_EN             BITFIELD(14, 14)
#define MCBSPLP__MCBSPLP_PCR_REG__IDLE_EN__POS        14

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_PCR_REG__XIOEN   
 *
 * @BRIEF        Transmit General Purpose I/O Mode only when XRST=0 in 
 *               SPCR[1,2] 
 *               (legacy) - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_PCR_REG__XIOEN               BITFIELD(13, 13)
#define MCBSPLP__MCBSPLP_PCR_REG__XIOEN__POS          13

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_PCR_REG__RIOEN   
 *
 * @BRIEF        Receive General Purpose I/O Mode when RRST=0 in SPCR[1,2] 
 *               (legacy) - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_PCR_REG__RIOEN               BITFIELD(12, 12)
#define MCBSPLP__MCBSPLP_PCR_REG__RIOEN__POS          12

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_PCR_REG__FSXM   
 *
 * @BRIEF        Transmit Frame-Synchronization Mode  
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_PCR_REG__FSXM                BITFIELD(11, 11)
#define MCBSPLP__MCBSPLP_PCR_REG__FSXM__POS           11

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_PCR_REG__FSRM   
 *
 * @BRIEF        Receive Frame-Synchronization Mode  
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_PCR_REG__FSRM                BITFIELD(10, 10)
#define MCBSPLP__MCBSPLP_PCR_REG__FSRM__POS           10

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_PCR_REG__CLKXM   
 *
 * @BRIEF        Transmitter Clock Mode 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_PCR_REG__CLKXM               BITFIELD(9, 9)
#define MCBSPLP__MCBSPLP_PCR_REG__CLKXM__POS          9

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_PCR_REG__CLKRM   
 *
 * @BRIEF        Receiver Clock Mode 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_PCR_REG__CLKRM               BITFIELD(8, 8)
#define MCBSPLP__MCBSPLP_PCR_REG__CLKRM__POS          8

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_PCR_REG__SCLKME   
 *
 * @BRIEF        The frequency of CLKG is: 
 *               CLKG frequency = (Input clock frequency) / (CLKGDV + 1) 
 *               SCLKME is used in conjunction with the CLKSM bit to select 
 *               the input clock: 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_PCR_REG__SCLKME              BITFIELD(7, 7)
#define MCBSPLP__MCBSPLP_PCR_REG__SCLKME__POS         7

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_PCR_REG__CLKS_STAT   
 *
 * @BRIEF        CLKS pin status. Reflects value on CLKS pin when selected as 
 *               a general purpose input. 
 *               (legacy) - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_PCR_REG__CLKS_STAT           BITFIELD(6, 6)
#define MCBSPLP__MCBSPLP_PCR_REG__CLKS_STAT__POS      6

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_PCR_REG__DX_STAT   
 *
 * @BRIEF        DX pin status. Reflects value driven on to DX pin when 
 *               selected as a general purpose output. 
 *               (legacy) - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_PCR_REG__DX_STAT             BITFIELD(5, 5)
#define MCBSPLP__MCBSPLP_PCR_REG__DX_STAT__POS        5

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_PCR_REG__DR_STAT   
 *
 * @BRIEF        DR pin status. Reflects value on DR pin when selected as a 
 *               general purpose input. 
 *               (legacy) - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_PCR_REG__DR_STAT             BITFIELD(4, 4)
#define MCBSPLP__MCBSPLP_PCR_REG__DR_STAT__POS        4

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_PCR_REG__FSXP   
 *
 * @BRIEF        Transmit Frame-Synchronization Polarity 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_PCR_REG__FSXP                BITFIELD(3, 3)
#define MCBSPLP__MCBSPLP_PCR_REG__FSXP__POS           3

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_PCR_REG__FSRP   
 *
 * @BRIEF        Receive Frame-Synchronization Polarity 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_PCR_REG__FSRP                BITFIELD(2, 2)
#define MCBSPLP__MCBSPLP_PCR_REG__FSRP__POS           2

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_PCR_REG__CLKXP   
 *
 * @BRIEF        Transmit Clock Polarity 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_PCR_REG__CLKXP               BITFIELD(1, 1)
#define MCBSPLP__MCBSPLP_PCR_REG__CLKXP__POS          1

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_PCR_REG__CLKRP   
 *
 * @BRIEF        Receive Clock Polarity 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_PCR_REG__CLKRP               BITFIELD(0, 0)
#define MCBSPLP__MCBSPLP_PCR_REG__CLKRP__POS          0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_RCERC_REG__RCERC   
 *
 * @BRIEF        Receive Channel Enable 
 *               RCERC n=0  Disables reception of n-th channel in an 
 *               even-numbered block in partition C 
 *               RCERC n=1  Enables reception of n-th channel in an 
 *               even-numbered block in partition C 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_RCERC_REG__RCERC             BITFIELD(15, 0)
#define MCBSPLP__MCBSPLP_RCERC_REG__RCERC__POS        0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_RCERD_REG__RCERD   
 *
 * @BRIEF        Receive Channel Enable 
 *               RCERD n=0  Disables reception of n-th channel in an 
 *               even-numbered block in partition D 
 *               RCERD n=1  Enables reception of n-th channel in an 
 *               even-numbered block in partition D 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_RCERD_REG__RCERD             BITFIELD(15, 0)
#define MCBSPLP__MCBSPLP_RCERD_REG__RCERD__POS        0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_XCERC_REG__XCERC   
 *
 * @BRIEF        Transmit Channel Enable 
 *               XCERC n=0 Disables transmission of n-th channel in an 
 *               event-numbered block in partition C 
 *               XCERC n=1 Enables transmission of n-th channel in an 
 *               event-numbered block in partition C 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_XCERC_REG__XCERC             BITFIELD(15, 0)
#define MCBSPLP__MCBSPLP_XCERC_REG__XCERC__POS        0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_XCERD_REG__XCERD   
 *
 * @BRIEF        Transmit Channel Enable 
 *               XCERD n=0 Disables transmission of n-th channel in an 
 *               even-numbered block in partition D 
 *               XCERD n=1 Enables transmission of n-th channel in an 
 *               even-numbered block in partition D 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_XCERD_REG__XCERD             BITFIELD(15, 0)
#define MCBSPLP__MCBSPLP_XCERD_REG__XCERD__POS        0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_RCERE_REG__RCERE   
 *
 * @BRIEF        Receive Channel Enable 
 *               RCERE n=0  Disables reception of n-th channel in an 
 *               even-numbered block in partition E 
 *               RCERE n=1  Enables reception of n-th channel in an 
 *               even-numbered block in partition E 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_RCERE_REG__RCERE             BITFIELD(15, 0)
#define MCBSPLP__MCBSPLP_RCERE_REG__RCERE__POS        0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_RCERF_REG__RCERF   
 *
 * @BRIEF        Receive Channel Enable 
 *               RCERF n=0  Disables reception of n-th channel in an 
 *               even-numbered block in partition F 
 *               RCERF n=1  Enables reception of n-th channel in an 
 *               even-numbered block in partition F 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_RCERF_REG__RCERF             BITFIELD(15, 0)
#define MCBSPLP__MCBSPLP_RCERF_REG__RCERF__POS        0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_XCERE_REG__XCERE   
 *
 * @BRIEF        Transmit Channel Enable 
 *               XCERE n=0 Disables transmission of n-th channel in an 
 *               event-numbered block in partition E 
 *               XCERE n=1 Enables transmission of n-th channel in an 
 *               event-numbered block in partition E 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_XCERE_REG__XCERE             BITFIELD(15, 0)
#define MCBSPLP__MCBSPLP_XCERE_REG__XCERE__POS        0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_XCERF_REG__XCERF   
 *
 * @BRIEF        Transmit Channel Enable 
 *               XCERF n=0 Disables transmission of n-th channel in an 
 *               even-numbered block in partition F 
 *               XCERF n=1 Enables transmission of n-th channel in an 
 *               even-numbered block in partition F 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_XCERF_REG__XCERF             BITFIELD(15, 0)
#define MCBSPLP__MCBSPLP_XCERF_REG__XCERF__POS        0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_RCERG_REG__RCERG   
 *
 * @BRIEF        Receive Channel Enable 
 *               RCERG n=0  Disables reception of n-th channel in an 
 *               even-numbered block in partition G 
 *               RCERG n=1  Enables reception of n-th channel in an 
 *               even-numbered block in partition G 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_RCERG_REG__RCERG             BITFIELD(15, 0)
#define MCBSPLP__MCBSPLP_RCERG_REG__RCERG__POS        0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_RCERH_REG__RCERH   
 *
 * @BRIEF        Receive Channel Enable 
 *               RCERH n=0  Disables reception of n-th channel in an 
 *               even-numbered block in partition H 
 *               RCERH n=1  Enables reception of n-th channel in an 
 *               even-numbered block in partition H 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_RCERH_REG__RCERH             BITFIELD(15, 0)
#define MCBSPLP__MCBSPLP_RCERH_REG__RCERH__POS        0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_XCERG_REG__XCERG   
 *
 * @BRIEF        Transmit Channel Enable 
 *               XCERG n=0 Disables transmission of n-th channel in an 
 *               event-numbered block in partition G 
 *               XCERG n=1 Enables transmission of n-th channel in an 
 *               event-numbered block in partition G 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_XCERG_REG__XCERG             BITFIELD(15, 0)
#define MCBSPLP__MCBSPLP_XCERG_REG__XCERG__POS        0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_XCERH_REG__XCERH   
 *
 * @BRIEF        Transmit Channel Enable 
 *               XCERH n=0 Disables transmission of n-th channel in an 
 *               even-numbered block in partition H 
 *               XCERH n=1 Enables transmission of n-th channel in an 
 *               even-numbered block in partition H 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_XCERH_REG__XCERH             BITFIELD(15, 0)
#define MCBSPLP__MCBSPLP_XCERH_REG__XCERH__POS        0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_REV_REG__REV   
 *
 * @BRIEF        Revision number - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_REV_REG__REV                 BITFIELD(7, 0)
#define MCBSPLP__MCBSPLP_REV_REG__REV__POS            0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_RINTCLR_REG__RINTCLR   
 *
 * @BRIEF        Read from this register will clear the IRQ generated by 
 *               receive end-of-frame indication or MCBSPLP.FSR detection.  
 *               Write to this register has no effect. 
 *               (legacy) - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_RINTCLR_REG__RINTCLR         BITFIELD(31, 0)
#define MCBSPLP__MCBSPLP_RINTCLR_REG__RINTCLR__POS    0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_XINTCLR_REG__XINTCLR   
 *
 * @BRIEF        Read from this register will clear the IRQ generated by 
 *               transmit end-of-frame indication or MCBSPLP.FSX detection.  
 *               Write to this register has no effect. 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_XINTCLR_REG__XINTCLR         BITFIELD(31, 0)
#define MCBSPLP__MCBSPLP_XINTCLR_REG__XINTCLR__POS    0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_ROVFLCLR_REG__ROVFLCLR   
 *
 * @BRIEF        Read from this register will clear the IRQ generated by the 
 *               receive overflow condition.  
 *               Write to this register has no effect. 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_ROVFLCLR_REG__ROVFLCLR       BITFIELD(31, 0)
#define MCBSPLP__MCBSPLP_ROVFLCLR_REG__ROVFLCLR__POS  0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_SYSCONFIG_REG__CLOCKACTIVITY   
 *
 * @BRIEF        Bit 8: OCP interface clock 
 *               0x0: OCP clock can be switched-off 
 *               0x1: OCP clock is maintained during wake up period 
 *               Bit 9: Functional clock 
 *               0x0: Functional clock can be switched-off 
 *               0x1: Functional clock is maintained during wake up period 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_SYSCONFIG_REG__CLOCKACTIVITY BITFIELD(9, 8)
#define MCBSPLP__MCBSPLP_SYSCONFIG_REG__CLOCKACTIVITY__POS 8

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_SYSCONFIG_REG__SIDLEMODE   
 *
 * @BRIEF        Slave interface power management, req/ack control: 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_SYSCONFIG_REG__SIDLEMODE     BITFIELD(4, 3)
#define MCBSPLP__MCBSPLP_SYSCONFIG_REG__SIDLEMODE__POS 3

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_SYSCONFIG_REG__ENAWAKEUP   
 *
 * @BRIEF        WakeUp feature control: 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_SYSCONFIG_REG__ENAWAKEUP     BITFIELD(2, 2)
#define MCBSPLP__MCBSPLP_SYSCONFIG_REG__ENAWAKEUP__POS 2

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_SYSCONFIG_REG__SOFTRESET   
 *
 * @BRIEF        McBSPLP global software reset - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_SYSCONFIG_REG__SOFTRESET     BITFIELD(1, 1)
#define MCBSPLP__MCBSPLP_SYSCONFIG_REG__SOFTRESET__POS 1

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_THRSH2_REG__XTHRESHOLD   
 *
 * @BRIEF        Transmit buffer threshold value. The DMA request (if 
 *               enabled) of interrupt assertion (if enabled) will be 
 *               triggered if the number of free locations inside transmit 
 *               buffer are above or equal to the XTHRESHOLD value + 1. Also, 
 *               this value (XTHRESHOLD value + 1) indicates the number of 
 *               words transferred during a transmit data DMA request, if 
 *               transmit DMA is enabled - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_THRSH2_REG__XTHRESHOLD       BITFIELD(6, 0)
#define MCBSPLP__MCBSPLP_THRSH2_REG__XTHRESHOLD__POS  0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_THRSH1_REG__RTHRESHOLD   
 *
 * @BRIEF        Receive buffer threshold value. The DMA request (if enabled) 
 *               of interrupt assertion (if enabled) will be triggered if the 
 *               number of occupied locations inside receive buffer are above 
 *               or equal to the RTHRESHOLD  value + 1. Also, this value 
 *               (RTHRESHOLD  value + 1) indicates the number of words 
 *               transferred during a receive data DMA request, if receive 
 *               DMA is enabled. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_THRSH1_REG__RTHRESHOLD       BITFIELD(6, 0)
#define MCBSPLP__MCBSPLP_THRSH1_REG__RTHRESHOLD__POS  0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_IRQSTATUS_REG__XEMPTYEOF   
 *
 * @BRIEF        Transmit Buffer Empty at end of frame (XEMPTYEOF is set to 
 *               one when a complete frame was transmitted and the transmit 
 *               buffer is empty). - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_IRQSTATUS_REG__XEMPTYEOF     BITFIELD(14, 14)
#define MCBSPLP__MCBSPLP_IRQSTATUS_REG__XEMPTYEOF__POS 14

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_IRQSTATUS_REG__XOVFLSTAT   
 *
 * @BRIEF        Transmit Buffer Overflow (XOVFLSTAT bit is set to one when 
 *               transmit buffer overflow; the data which is written while 
 *               overflow condition is discarded). 
 *               Writing 1 to this bit clears the bit. 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_IRQSTATUS_REG__XOVFLSTAT     BITFIELD(12, 12)
#define MCBSPLP__MCBSPLP_IRQSTATUS_REG__XOVFLSTAT__POS 12

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_IRQSTATUS_REG__XUNDFLSTAT   
 *
 * @BRIEF        Transmit Buffer Underflow (XUNDFLSTAT bit is set to one when 
 *               the transmit data buffer is empty new data is required to be 
 *               transmitted). 
 *               Writing 1 to this bit clears the bit. 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_IRQSTATUS_REG__XUNDFLSTAT    BITFIELD(11, 11)
#define MCBSPLP__MCBSPLP_IRQSTATUS_REG__XUNDFLSTAT__POS 11

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_IRQSTATUS_REG__XRDY   
 *
 * @BRIEF        Transmit Buffer Threshold Reached (XRDY bit is set to one 
 *               when the transmit buffer free locations are equal or above 
 *               the THRSH2_REG value).  
 *               Writing 1 to this bit clears the bit. 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_IRQSTATUS_REG__XRDY          BITFIELD(10, 10)
#define MCBSPLP__MCBSPLP_IRQSTATUS_REG__XRDY__POS     10

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_IRQSTATUS_REG__XEOF   
 *
 * @BRIEF        Transmit End Of Frame (XEOF is set to one when a complete 
 *               frame was transmitted). 
 *               Writing 1 to this bit clears the bit. 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_IRQSTATUS_REG__XEOF          BITFIELD(9, 9)
#define MCBSPLP__MCBSPLP_IRQSTATUS_REG__XEOF__POS     9

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_IRQSTATUS_REG__XFSX   
 *
 * @BRIEF        Transmit Frame Synchronization (XFSX bit is set to one when 
 *               a new transmit frame synchronization is asserted). 
 *               Writing 1 to this bit clears the bit. 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_IRQSTATUS_REG__XFSX          BITFIELD(8, 8)
#define MCBSPLP__MCBSPLP_IRQSTATUS_REG__XFSX__POS     8

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_IRQSTATUS_REG__XSYNCERR   
 *
 * @BRIEF        Transmit Frame Synchronization Error (XSYNCERR is set to one 
 *               when a transmit frame synchronization error is detected). 
 *               Writing 1 to this bit clears the bit. 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_IRQSTATUS_REG__XSYNCERR      BITFIELD(7, 7)
#define MCBSPLP__MCBSPLP_IRQSTATUS_REG__XSYNCERR__POS 7

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_IRQSTATUS_REG__ROVFLSTAT   
 *
 * @BRIEF        Receive Buffer Overflow (ROVFLSTAT bit is set to one when 
 *               receive buffer overflow; the data which is written while 
 *               overflow condition is discarded). 
 *               Writing 1 to this bit clears the bit. 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_IRQSTATUS_REG__ROVFLSTAT     BITFIELD(5, 5)
#define MCBSPLP__MCBSPLP_IRQSTATUS_REG__ROVFLSTAT__POS 5

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_IRQSTATUS_REG__RUNDFLSTAT   
 *
 * @BRIEF        Receive Buffer Underflow (RUNDFLSTAT bit is set to one when 
 *               read operation is performed to the receive data register 
 *               while receive buffer is empty; data read while underflow 
 *               condition is undefined). 
 *               Writing 1 to this bit clears the bit. 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_IRQSTATUS_REG__RUNDFLSTAT    BITFIELD(4, 4)
#define MCBSPLP__MCBSPLP_IRQSTATUS_REG__RUNDFLSTAT__POS 4

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_IRQSTATUS_REG__RRDY   
 *
 * @BRIEF        Receive Buffer Threshold Reached (RRDY bit is set to one 
 *               when the receive buffer occupied locations are equal or 
 *               above the THRSH1_REG value).  
 *                Writing 1 to this bit clears the bit. 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_IRQSTATUS_REG__RRDY          BITFIELD(3, 3)
#define MCBSPLP__MCBSPLP_IRQSTATUS_REG__RRDY__POS     3

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_IRQSTATUS_REG__REOF   
 *
 * @BRIEF        Receive End Of Frame (REOF is set to one when a complete 
 *               frame was received). 
 *               Writing 1 to this bit clears the bit. 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_IRQSTATUS_REG__REOF          BITFIELD(2, 2)
#define MCBSPLP__MCBSPLP_IRQSTATUS_REG__REOF__POS     2

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_IRQSTATUS_REG__RFSR   
 *
 * @BRIEF        Receive Frame Synchronization (RFSR bit is set to one when a 
 *               new receive frame synchronization is asserted). 
 *               Writing 1 to this bit clears the bit. 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_IRQSTATUS_REG__RFSR          BITFIELD(1, 1)
#define MCBSPLP__MCBSPLP_IRQSTATUS_REG__RFSR__POS     1

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_IRQSTATUS_REG__RSYNCERR   
 *
 * @BRIEF        Receive Frame Synchronization Error (RSYNCERR is set to one 
 *               when a receive frame synchronization error is detected). 
 *               Writing 1 to this bit clears the bit. 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_IRQSTATUS_REG__RSYNCERR      BITFIELD(0, 0)
#define MCBSPLP__MCBSPLP_IRQSTATUS_REG__RSYNCERR__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_IRQENABLE_REG__XEMPTYEOFEN   
 *
 * @BRIEF        Transmit buffer empty at end of frame enable bit. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_IRQENABLE_REG__XEMPTYEOFEN   BITFIELD(14, 14)
#define MCBSPLP__MCBSPLP_IRQENABLE_REG__XEMPTYEOFEN__POS 14

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_IRQENABLE_REG__XOVFLEN   
 *
 * @BRIEF        Transmit Buffer Overflow enable bit. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_IRQENABLE_REG__XOVFLEN       BITFIELD(12, 12)
#define MCBSPLP__MCBSPLP_IRQENABLE_REG__XOVFLEN__POS  12

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_IRQENABLE_REG__XUNDFLEN   
 *
 * @BRIEF        Transmit Buffer Underflow enable bit. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_IRQENABLE_REG__XUNDFLEN      BITFIELD(11, 11)
#define MCBSPLP__MCBSPLP_IRQENABLE_REG__XUNDFLEN__POS 11

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_IRQENABLE_REG__XRDYEN   
 *
 * @BRIEF        Transmit Buffer Threshold Reached enable bit. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_IRQENABLE_REG__XRDYEN        BITFIELD(10, 10)
#define MCBSPLP__MCBSPLP_IRQENABLE_REG__XRDYEN__POS   10

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_IRQENABLE_REG__XEOFEN   
 *
 * @BRIEF        Transmit End Of Frame enable bit. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_IRQENABLE_REG__XEOFEN        BITFIELD(9, 9)
#define MCBSPLP__MCBSPLP_IRQENABLE_REG__XEOFEN__POS   9

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_IRQENABLE_REG__XFSXEN   
 *
 * @BRIEF        Transmit Frame Synchronization enable bit. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_IRQENABLE_REG__XFSXEN        BITFIELD(8, 8)
#define MCBSPLP__MCBSPLP_IRQENABLE_REG__XFSXEN__POS   8

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_IRQENABLE_REG__XSYNCERREN   
 *
 * @BRIEF        Transmit Frame Synchronization Error enable bit. 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_IRQENABLE_REG__XSYNCERREN    BITFIELD(7, 7)
#define MCBSPLP__MCBSPLP_IRQENABLE_REG__XSYNCERREN__POS 7

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_IRQENABLE_REG__ROVFLEN   
 *
 * @BRIEF        Receive Buffer Overflow enable bit. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_IRQENABLE_REG__ROVFLEN       BITFIELD(5, 5)
#define MCBSPLP__MCBSPLP_IRQENABLE_REG__ROVFLEN__POS  5

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_IRQENABLE_REG__RUNDFLEN   
 *
 * @BRIEF        Receive Buffer Underflow enable bit. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_IRQENABLE_REG__RUNDFLEN      BITFIELD(4, 4)
#define MCBSPLP__MCBSPLP_IRQENABLE_REG__RUNDFLEN__POS 4

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_IRQENABLE_REG__RRDYEN   
 *
 * @BRIEF        Receive Buffer Threshold enable bit. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_IRQENABLE_REG__RRDYEN        BITFIELD(3, 3)
#define MCBSPLP__MCBSPLP_IRQENABLE_REG__RRDYEN__POS   3

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_IRQENABLE_REG__REOFEN   
 *
 * @BRIEF        Receive End Of Frame enable bit. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_IRQENABLE_REG__REOFEN        BITFIELD(2, 2)
#define MCBSPLP__MCBSPLP_IRQENABLE_REG__REOFEN__POS   2

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_IRQENABLE_REG__RFSREN   
 *
 * @BRIEF        Receive Frame Synchronization enable bit. RW - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_IRQENABLE_REG__RFSREN        BITFIELD(1, 1)
#define MCBSPLP__MCBSPLP_IRQENABLE_REG__RFSREN__POS   1

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_IRQENABLE_REG__RSYNCERREN   
 *
 * @BRIEF        Receive Frame Synchronization Error enable bit. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_IRQENABLE_REG__RSYNCERREN    BITFIELD(0, 0)
#define MCBSPLP__MCBSPLP_IRQENABLE_REG__RSYNCERREN__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_WAKEUPEN_REG__XEMPTYEOFEN   
 *
 * @BRIEF        Transmit Buffer Empty at End Of Frame enable bit. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_WAKEUPEN_REG__XEMPTYEOFEN    BITFIELD(14, 14)
#define MCBSPLP__MCBSPLP_WAKEUPEN_REG__XEMPTYEOFEN__POS 14

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_WAKEUPEN_REG__XRDYEN   
 *
 * @BRIEF        Transmit Buffer Threshold Reached WK enable bit. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_WAKEUPEN_REG__XRDYEN         BITFIELD(10, 10)
#define MCBSPLP__MCBSPLP_WAKEUPEN_REG__XRDYEN__POS    10

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_WAKEUPEN_REG__XEOFEN   
 *
 * @BRIEF        Transmit End Of Frame WK enable bit. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_WAKEUPEN_REG__XEOFEN         BITFIELD(9, 9)
#define MCBSPLP__MCBSPLP_WAKEUPEN_REG__XEOFEN__POS    9

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_WAKEUPEN_REG__XFSXEN   
 *
 * @BRIEF        Transmit Frame Synchronization WK enable bit. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_WAKEUPEN_REG__XFSXEN         BITFIELD(8, 8)
#define MCBSPLP__MCBSPLP_WAKEUPEN_REG__XFSXEN__POS    8

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_WAKEUPEN_REG__XSYNCERREN   
 *
 * @BRIEF        Transmit Frame Synchronization Error WK enable bit. 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_WAKEUPEN_REG__XSYNCERREN     BITFIELD(7, 7)
#define MCBSPLP__MCBSPLP_WAKEUPEN_REG__XSYNCERREN__POS 7

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_WAKEUPEN_REG__RRDYEN   
 *
 * @BRIEF        Receive Buffer Threshold wakeup enable bit. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_WAKEUPEN_REG__RRDYEN         BITFIELD(3, 3)
#define MCBSPLP__MCBSPLP_WAKEUPEN_REG__RRDYEN__POS    3

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_WAKEUPEN_REG__REOFEN   
 *
 * @BRIEF        Receive End Of Frame WK enable bit. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_WAKEUPEN_REG__REOFEN         BITFIELD(2, 2)
#define MCBSPLP__MCBSPLP_WAKEUPEN_REG__REOFEN__POS    2

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_WAKEUPEN_REG__RFSREN   
 *
 * @BRIEF        Receive Frame Synchronization WK enable bit. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_WAKEUPEN_REG__RFSREN         BITFIELD(1, 1)
#define MCBSPLP__MCBSPLP_WAKEUPEN_REG__RFSREN__POS    1

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_WAKEUPEN_REG__RSYNCERREN   
 *
 * @BRIEF        Receive Frame Synchronization Error WK enable bit. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_WAKEUPEN_REG__RSYNCERREN     BITFIELD(0, 0)
#define MCBSPLP__MCBSPLP_WAKEUPEN_REG__RSYNCERREN__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_XCCR_REG__EXTCLKGATE   
 *
 * @BRIEF        External clock gating enable (CLKX and FSX master only). 
 *               When this bit is set and the transmit clock and FSX are set 
 *               as output, the CLKX is enabled when FSX is active plus 3 
 *               clock cycles after (clock is provided for FWID + 4 clock 
 *               cycles, assuming that the FSX width, active, is  FWID + 1 
 *               clock cycles); outside this window the external transmit 
 *               clock is gated.  The receive use the same gated transmit 
 *               clock and transmit frame synchronization signals regardless 
 *               of the CLKRM/FSRM settings. When using this mode the frame 
 *               synchronization signal must be active during reception of 
 *               the entire frame (FWID must be programmed accordingly) to 
 *               ensure the proper receive process, which requires at least 3 
 *               cycles after the frame complete to transfer the data into 
 *               the receive buffer. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_XCCR_REG__EXTCLKGATE         BITFIELD(15, 15)
#define MCBSPLP__MCBSPLP_XCCR_REG__EXTCLKGATE__POS    15

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_XCCR_REG__PPCONNECT   
 *
 * @BRIEF        Pair to pair connection. When set the DXENO pin is always 
 *               set to 0 regardless of the frame boundary, setting the tree 
 *               state buffer as output - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_XCCR_REG__PPCONNECT          BITFIELD(14, 14)
#define MCBSPLP__MCBSPLP_XCCR_REG__PPCONNECT__POS     14

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_XCCR_REG__DXENDLY   
 *
 * @BRIEF        When DXENA bit in SPCR1 is set to one this field selects the 
 *               added delay as follow:  
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_XCCR_REG__DXENDLY            BITFIELD(13, 12)
#define MCBSPLP__MCBSPLP_XCCR_REG__DXENDLY__POS       12

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_XCCR_REG__XFULL_CYCLE   
 *
 * @BRIEF        Transmit full cycle mode select. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_XCCR_REG__XFULL_CYCLE        BITFIELD(11, 11)
#define MCBSPLP__MCBSPLP_XCCR_REG__XFULL_CYCLE__POS   11

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_XCCR_REG__DLB   
 *
 * @BRIEF        Digital Loop-Back - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_XCCR_REG__DLB                BITFIELD(5, 5)
#define MCBSPLP__MCBSPLP_XCCR_REG__DLB__POS           5

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_XCCR_REG__XDMAEN   
 *
 * @BRIEF        Transmit DMA Enable bit. When set to zero this bit will gate 
 *               the external transmit DMA request, without resetting the DMA 
 *               state machine. It is recommended to change this bit value 
 *               only during transmit reset. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_XCCR_REG__XDMAEN             BITFIELD(3, 3)
#define MCBSPLP__MCBSPLP_XCCR_REG__XDMAEN__POS        3

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_XCCR_REG__XDISABLE   
 *
 * @BRIEF        Transmit Disable bit. When this bit is set the transmit 
 *               process will stop at the next frame boundary. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_XCCR_REG__XDISABLE           BITFIELD(0, 0)
#define MCBSPLP__MCBSPLP_XCCR_REG__XDISABLE__POS      0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_RCCR_REG__RFULL_CYCLE   
 *
 * @BRIEF        Receive full cycle mode select. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_RCCR_REG__RFULL_CYCLE        BITFIELD(11, 11)
#define MCBSPLP__MCBSPLP_RCCR_REG__RFULL_CYCLE__POS   11

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_RCCR_REG__RDMAEN   
 *
 * @BRIEF        Receive DMA Enable bit. When set to zero this bit will gate 
 *               the external transmit DMA request, without resetting the DMA 
 *               state machine. It is recommended to change this bit value 
 *               only during receive reset. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_RCCR_REG__RDMAEN             BITFIELD(3, 3)
#define MCBSPLP__MCBSPLP_RCCR_REG__RDMAEN__POS        3

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_RCCR_REG__RDISABLE   
 *
 * @BRIEF        Receive Disable bit. When this bit is set the receive 
 *               process will stop at the next frame boundary. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_RCCR_REG__RDISABLE           BITFIELD(0, 0)
#define MCBSPLP__MCBSPLP_RCCR_REG__RDISABLE__POS      0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_XBUFFSTAT_REG__XBUFFSTAT   
 *
 * @BRIEF        Transmit Buffer Status (indicates the number of free 
 *               locations inside transmit buffer). The XBUFFSTAT value 
 *               reflects the buffer status on the OCP clock domain and it 
 *               can be smaller than the number of free locations which are 
 *               seen by the transmit state machine. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_XBUFFSTAT_REG__XBUFFSTAT     BITFIELD(7, 0)
#define MCBSPLP__MCBSPLP_XBUFFSTAT_REG__XBUFFSTAT__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_RBUFFSTAT_REG__RBUFFSTAT   
 *
 * @BRIEF        Receive Buffer Status (indicates the number of occupied 
 *               locations inside receive buffer). The RBUFFSTAT value 
 *               reflects the buffer status on the OCP clock domain and it 
 *               can be smaller than the real number of the occupied 
 *               locations which are seen by the receive state machine. - 
 *               (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_RBUFFSTAT_REG__RBUFFSTAT     BITFIELD(7, 0)
#define MCBSPLP__MCBSPLP_RBUFFSTAT_REG__RBUFFSTAT__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_SSELCR_REG__SIDETONEEN   
 *
 * @BRIEF        Sidetone mode enable. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_SSELCR_REG__SIDETONEEN       BITFIELD(10, 10)
#define MCBSPLP__MCBSPLP_SSELCR_REG__SIDETONEEN__POS  10

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_SSELCR_REG__OCH1ASSIGN   
 *
 * @BRIEF        Map the data for the speaker out channels to one of the 
 *               McBSPLP channels (one out of maximum of 8 channels) - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_SSELCR_REG__OCH1ASSIGN       BITFIELD(9, 7)
#define MCBSPLP__MCBSPLP_SSELCR_REG__OCH1ASSIGN__POS  7

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_SSELCR_REG__OCH0ASSIGN   
 *
 * @BRIEF        Map the data for the speaker out channels to one of the 
 *               McBSPLP channels (one out of maximum of 8 channels) - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_SSELCR_REG__OCH0ASSIGN       BITFIELD(6, 4)
#define MCBSPLP__MCBSPLP_SSELCR_REG__OCH0ASSIGN__POS  4

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_SSELCR_REG__ICH1ASSIGN   
 *
 * @BRIEF        Map the data from digital microphone channels to one of the 
 *               McBSPLP channels (one out of maximum of 4 channels) - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_SSELCR_REG__ICH1ASSIGN       BITFIELD(3, 2)
#define MCBSPLP__MCBSPLP_SSELCR_REG__ICH1ASSIGN__POS  2

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_SSELCR_REG__ICH0ASSIGN   
 *
 * @BRIEF        Map the data from digital microphone channels to one of the 
 *               McBSPLP channels (one out of maximum of 4 channels) - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_SSELCR_REG__ICH0ASSIGN       BITFIELD(1, 0)
#define MCBSPLP__MCBSPLP_SSELCR_REG__ICH0ASSIGN__POS  0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_STATUS_REG__CLKMUXSTATUS   
 *
 * @BRIEF        Indicates that the McBSPLP AUDIOBUFFER clock muxing is done 
 *               after exiting SmartIdle mode. When this bit is set one the 
 *               response to a different register access is delayed until the 
 *               muxing process is done. In order to avoid such a situation 
 *               pooling can be performed to status register in order to 
 *               evaluate when McBSPLP is ready. Note that this information 
 *               is relevant only for the McBSPLP having AUDIOBUFFER. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_STATUS_REG__CLKMUXSTATUS     BITFIELD(0, 0)
#define MCBSPLP__MCBSPLP_STATUS_REG__CLKMUXSTATUS__POS 0

    /* 
     * List of register bitfields values for component MCBSPLP
     *
     */

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_SPCR2_REG__FREE__DISABLED
 *
 * @BRIEF        Free running mode is disabled - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_SPCR2_REG__FREE__DISABLED    0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_SPCR2_REG__FREE__ENABLED
 *
 * @BRIEF        Free running mode is enabled - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_SPCR2_REG__FREE__ENABLED     0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_SPCR2_REG__SOFT__DISABLED
 *
 * @BRIEF        SOFT mode is disabled: the module stops its activity 
 *               immediately following MSuspend assertion - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_SPCR2_REG__SOFT__DISABLED    0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_SPCR2_REG__SOFT__ENABLED
 *
 * @BRIEF        SOFT mode is enabled: the module freezes its state after 
 *               completion of the current operation when MSuspend is 
 *               asserted - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_SPCR2_REG__SOFT__ENABLED     0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_SPCR2_REG__FRST__RESET
 *
 * @BRIEF        Frame-synchronization logic is reset. Frame-sync signal FSG 
 *               is not generated by the sample-rate generator - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_SPCR2_REG__FRST__RESET       0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_SPCR2_REG__FRST__GENERATED
 *
 * @BRIEF        Frame-sync signal FSG is generated after (FPER+1) number of 
 *               CLKG clocks;i.e., all frame counters are loaded with their 
 *               programmed values - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_SPCR2_REG__FRST__GENERATED   0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_SPCR2_REG__GRST__RESET
 *
 * @BRIEF        Sample rate generator is reset - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_SPCR2_REG__GRST__RESET       0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_SPCR2_REG__GRST__PULLOUT
 *
 * @BRIEF        Sample rate generator is pulled out of reset. CLKG is driven 
 *               as per programmed value in sample rate generator registers 
 *               (SRGR[1,2]) - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_SPCR2_REG__GRST__PULLOUT     0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_SPCR2_REG__XINTM__DRIVEN
 *
 * @BRIEF        XINT is driven by XRDY  - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_SPCR2_REG__XINTM__DRIVEN     0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_SPCR2_REG__XINTM__GENERATEDENDOFBLOCK
 *
 * @BRIEF        XINT generated by end-of-frame  - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_SPCR2_REG__XINTM__GENERATEDENDOFBLOCK 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_SPCR2_REG__XINTM__GENERATEDNEWFRAME
 *
 * @BRIEF        XINT generated by a new frame synchronization  - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_SPCR2_REG__XINTM__GENERATEDNEWFRAME 0x2ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_SPCR2_REG__XINTM__GENERATEDXSYNCERR
 *
 * @BRIEF        XINT generated by XSYNCERR - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_SPCR2_REG__XINTM__GENERATEDXSYNCERR 0x3ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_SPCR2_REG__XSYNCERR__NO
 *
 * @BRIEF        No synchronization error - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_SPCR2_REG__XSYNCERR__NO      0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_SPCR2_REG__XSYNCERR__DETECTED
 *
 * @BRIEF        Synchronization error detected by McBSP - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_SPCR2_REG__XSYNCERR__DETECTED 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_SPCR2_REG__XEMPTY__EMPTY
 *
 * @BRIEF        XSR is empty - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_SPCR2_REG__XEMPTY__EMPTY     0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_SPCR2_REG__XEMPTY__NOTEMPTY
 *
 * @BRIEF        XSR is not empty - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_SPCR2_REG__XEMPTY__NOTEMPTY  0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_SPCR2_REG__XRDY__NOTREADY
 *
 * @BRIEF        Transmitter is not ready. - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_SPCR2_REG__XRDY__NOTREADY    0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_SPCR2_REG__XRDY__READY
 *
 * @BRIEF        Transmitter is ready for new data in DXR - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_SPCR2_REG__XRDY__READY       0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_SPCR2_REG__XRST__DISABLED
 *
 * @BRIEF        The serial port transmitter is disabled and in reset state. 
 *               - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_SPCR2_REG__XRST__DISABLED    0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_SPCR2_REG__XRST__ENABLED
 *
 * @BRIEF        The serial port transmitter is enabled. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_SPCR2_REG__XRST__ENABLED     0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_SPCR1_REG__ALB__DISABLED
 *
 * @BRIEF        Analog loop back mode disabled - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_SPCR1_REG__ALB__DISABLED     0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_SPCR1_REG__ALB__ENABLED
 *
 * @BRIEF        Analog loop back mode enabled - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_SPCR1_REG__ALB__ENABLED      0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_SPCR1_REG__RJUST__RJ
 *
 * @BRIEF        Right-justify and zero-fill MSBs in DRR - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_SPCR1_REG__RJUST__RJ         0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_SPCR1_REG__RJUST__RJSIGNED
 *
 * @BRIEF        Right-justify and sign-extend MSBs in DRR - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_SPCR1_REG__RJUST__RJSIGNED   0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_SPCR1_REG__RJUST__LJ
 *
 * @BRIEF        Left-justify and zero-fill LSBs in DRR - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_SPCR1_REG__RJUST__LJ         0x2ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_SPCR1_REG__RJUST__RESERVED
 *
 * @BRIEF        Reserved - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_SPCR1_REG__RJUST__RESERVED   0x3ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_SPCR1_REG__DXENA__OFF
 *
 * @BRIEF        DX enabler is off - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_SPCR1_REG__DXENA__OFF        0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_SPCR1_REG__DXENA__ON
 *
 * @BRIEF        DX enabler is on - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_SPCR1_REG__DXENA__ON         0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_SPCR1_REG__RINTM__DRIVEN
 *
 * @BRIEF        RINT driven by RRDY (i.e. end of word) and end of frame in 
 *               A-bis mode - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_SPCR1_REG__RINTM__DRIVEN     0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_SPCR1_REG__RINTM__GENERATEDENDOFBLOCK
 *
 * @BRIEF        RINT generated by end-of-block or end-of-frame in 
 *               multichannel operation - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_SPCR1_REG__RINTM__GENERATEDENDOFBLOCK 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_SPCR1_REG__RINTM__GENERATEDNEWFRAME
 *
 * @BRIEF        RINT generated by a new frame synchronization - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_SPCR1_REG__RINTM__GENERATEDNEWFRAME 0x2ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_SPCR1_REG__RINTM__GENERATEDRSYNCCERR
 *
 * @BRIEF        RINT generated by RSYNCERR - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_SPCR1_REG__RINTM__GENERATEDRSYNCCERR 0x3ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_SPCR1_REG__RSYNCERR__NO
 *
 * @BRIEF        No synchronization error - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_SPCR1_REG__RSYNCERR__NO      0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_SPCR1_REG__RSYNCERR__DETECTED
 *
 * @BRIEF        Synchronization error detected by McBSP - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_SPCR1_REG__RSYNCERR__DETECTED 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_SPCR1_REG__RFULL__NOTOVERRUN
 *
 * @BRIEF        DRR is not read, RB is full and RSR is also full with new 
 *               word  
 *                - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_SPCR1_REG__RFULL__NOTOVERRUN 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_SPCR1_REG__RFULL__NOTREAD
 *
 * @BRIEF        RB is not in overrun condition  - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_SPCR1_REG__RFULL__NOTREAD    0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_SPCR1_REG__RRDY__NOTREADY
 *
 * @BRIEF        Receiver is not ready - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_SPCR1_REG__RRDY__NOTREADY    0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_SPCR1_REG__RRDY__READY
 *
 * @BRIEF        Receiver is ready with data to be read from DRR - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_SPCR1_REG__RRDY__READY       0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_SPCR1_REG__RRST__DISABLED
 *
 * @BRIEF        The serial port receiver is disabled and in reset state. - 
 *               (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_SPCR1_REG__RRST__DISABLED    0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_SPCR1_REG__RRST__ENABLED
 *
 * @BRIEF        The serial port receiver is enabled. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_SPCR1_REG__RRST__ENABLED     0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_RCR2_REG__RPHASE__SINGLE
 *
 * @BRIEF        Single-phase frame - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_RCR2_REG__RPHASE__SINGLE     0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_RCR2_REG__RPHASE__DUAL
 *
 * @BRIEF        Dual-phase frame - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_RCR2_REG__RPHASE__DUAL       0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_RCR2_REG__RWDLEN2__8BITS
 *
 * @BRIEF        8 bits - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_RCR2_REG__RWDLEN2__8BITS     0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_RCR2_REG__RWDLEN2__12BITS
 *
 * @BRIEF        12 bits - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_RCR2_REG__RWDLEN2__12BITS    0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_RCR2_REG__RWDLEN2__16BITS
 *
 * @BRIEF        16 bits - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_RCR2_REG__RWDLEN2__16BITS    0x2ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_RCR2_REG__RWDLEN2__20BITS
 *
 * @BRIEF        20 bits - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_RCR2_REG__RWDLEN2__20BITS    0x3ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_RCR2_REG__RWDLEN2__24BITS
 *
 * @BRIEF        24 bits - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_RCR2_REG__RWDLEN2__24BITS    0x4ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_RCR2_REG__RWDLEN2__32BITS
 *
 * @BRIEF        32 bits - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_RCR2_REG__RWDLEN2__32BITS    0x5ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_RCR2_REG__RWDLEN2__RESERVED0X6
 *
 * @BRIEF        Reserved (do not use) - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_RCR2_REG__RWDLEN2__RESERVED0X6 0x6ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_RCR2_REG__RWDLEN2__RESERVED0X7
 *
 * @BRIEF        Reserved (do not use) - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_RCR2_REG__RWDLEN2__RESERVED0X7 0x7ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_RCR2_REG__RREVERSE__NOCOMPANDINGMSB
 *
 * @BRIEF        Data transfer starts with MSB first.  - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_RCR2_REG__RREVERSE__NOCOMPANDINGMSB 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_RCR2_REG__RREVERSE__NOCOMPANDINGLSB
 *
 * @BRIEF        Data transfer starts with LSB first.  - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_RCR2_REG__RREVERSE__NOCOMPANDINGLSB 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_RCR2_REG__RREVERSE__COMPANDU
 *
 * @BRIEF        Reserved (do not use) - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_RCR2_REG__RREVERSE__COMPANDU 0x2ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_RCR2_REG__RREVERSE__COMPANDA
 *
 * @BRIEF        Reserved (do not use) - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_RCR2_REG__RREVERSE__COMPANDA 0x3ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_RCR2_REG__RDATDLY__0BIT
 *
 * @BRIEF        0-bit data delay - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_RCR2_REG__RDATDLY__0BIT      0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_RCR2_REG__RDATDLY__1BIT
 *
 * @BRIEF        1-bit data delay - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_RCR2_REG__RDATDLY__1BIT      0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_RCR2_REG__RDATDLY__2BITS
 *
 * @BRIEF        2-bit data delay - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_RCR2_REG__RDATDLY__2BITS     0x2ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_RCR2_REG__RDATDLY__RESERVED
 *
 * @BRIEF        Reserved - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_RCR2_REG__RDATDLY__RESERVED  0x3ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_RCR1_REG__RWDLEN1__8BITS
 *
 * @BRIEF        8 bits - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_RCR1_REG__RWDLEN1__8BITS     0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_RCR1_REG__RWDLEN1__12BITS
 *
 * @BRIEF        12 bits - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_RCR1_REG__RWDLEN1__12BITS    0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_RCR1_REG__RWDLEN1__16BITS
 *
 * @BRIEF        16 bits - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_RCR1_REG__RWDLEN1__16BITS    0x2ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_RCR1_REG__RWDLEN1__20BITS
 *
 * @BRIEF        20 bits - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_RCR1_REG__RWDLEN1__20BITS    0x3ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_RCR1_REG__RWDLEN1__24BITS
 *
 * @BRIEF        24 bits - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_RCR1_REG__RWDLEN1__24BITS    0x4ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_RCR1_REG__RWDLEN1__32BITS
 *
 * @BRIEF        32 bits - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_RCR1_REG__RWDLEN1__32BITS    0x5ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_RCR1_REG__RWDLEN1__RESERVED0X6
 *
 * @BRIEF        Reserved (do not use) - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_RCR1_REG__RWDLEN1__RESERVED0X6 0x6ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_RCR1_REG__RWDLEN1__RESERVED0X7
 *
 * @BRIEF        Reserved (do not use) - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_RCR1_REG__RWDLEN1__RESERVED0X7 0x7ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_XCR2_REG__XPHASE__SINGLE
 *
 * @BRIEF        Single-phase frame - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_XCR2_REG__XPHASE__SINGLE     0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_XCR2_REG__XPHASE__DUAL
 *
 * @BRIEF        Dual-phase frame - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_XCR2_REG__XPHASE__DUAL       0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_XCR2_REG__XWDLEN2__8BITS
 *
 * @BRIEF        8 bits - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_XCR2_REG__XWDLEN2__8BITS     0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_XCR2_REG__XWDLEN2__12BITS
 *
 * @BRIEF        12 bits - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_XCR2_REG__XWDLEN2__12BITS    0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_XCR2_REG__XWDLEN2__16BITS
 *
 * @BRIEF        16 bits - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_XCR2_REG__XWDLEN2__16BITS    0x2ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_XCR2_REG__XWDLEN2__20BITS
 *
 * @BRIEF        20 bits - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_XCR2_REG__XWDLEN2__20BITS    0x3ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_XCR2_REG__XWDLEN2__24BITS
 *
 * @BRIEF        24 bits - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_XCR2_REG__XWDLEN2__24BITS    0x4ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_XCR2_REG__XWDLEN2__32BITS
 *
 * @BRIEF        32 bits - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_XCR2_REG__XWDLEN2__32BITS    0x5ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_XCR2_REG__XWDLEN2__RESERVED0X6
 *
 * @BRIEF        Reserved (do not use) - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_XCR2_REG__XWDLEN2__RESERVED0X6 0x6ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_XCR2_REG__XWDLEN2__RESERVED0X7
 *
 * @BRIEF        Reserved (do not use) - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_XCR2_REG__XWDLEN2__RESERVED0X7 0x7ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_XCR2_REG__XREVERSE__NOCOMPANDINGMSB
 *
 * @BRIEF        Data transfer starts with MSB first.  - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_XCR2_REG__XREVERSE__NOCOMPANDINGMSB 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_XCR2_REG__XREVERSE__NOCOMPANDINGLSB
 *
 * @BRIEF        Data transfer starts with LSB first.  - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_XCR2_REG__XREVERSE__NOCOMPANDINGLSB 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_XCR2_REG__XREVERSE__COMPANDU
 *
 * @BRIEF        Reserved (do not use) - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_XCR2_REG__XREVERSE__COMPANDU 0x2ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_XCR2_REG__XREVERSE__COMPANDA
 *
 * @BRIEF        Reserved (do not use) - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_XCR2_REG__XREVERSE__COMPANDA 0x3ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_XCR2_REG__XDATDLY__0BIT
 *
 * @BRIEF        0-bit data delay - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_XCR2_REG__XDATDLY__0BIT      0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_XCR2_REG__XDATDLY__1BIT
 *
 * @BRIEF        1-bit data delay - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_XCR2_REG__XDATDLY__1BIT      0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_XCR2_REG__XDATDLY__2BITS
 *
 * @BRIEF        2-bit data delay - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_XCR2_REG__XDATDLY__2BITS     0x2ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_XCR2_REG__XDATDLY__RESERVED
 *
 * @BRIEF        Reserved - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_XCR2_REG__XDATDLY__RESERVED  0x3ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_XCR1_REG__XWDLEN1__8BITS
 *
 * @BRIEF        8 bits - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_XCR1_REG__XWDLEN1__8BITS     0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_XCR1_REG__XWDLEN1__12BITS
 *
 * @BRIEF        12 bits - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_XCR1_REG__XWDLEN1__12BITS    0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_XCR1_REG__XWDLEN1__16BITS
 *
 * @BRIEF        16 bits - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_XCR1_REG__XWDLEN1__16BITS    0x2ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_XCR1_REG__XWDLEN1__20BITS
 *
 * @BRIEF        20 bits - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_XCR1_REG__XWDLEN1__20BITS    0x3ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_XCR1_REG__XWDLEN1__24BITS
 *
 * @BRIEF        24 bits - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_XCR1_REG__XWDLEN1__24BITS    0x4ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_XCR1_REG__XWDLEN1__32BITS
 *
 * @BRIEF        32 bits - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_XCR1_REG__XWDLEN1__32BITS    0x5ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_XCR1_REG__XWDLEN1__RESERVED0X6
 *
 * @BRIEF        Reserved (do not use) - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_XCR1_REG__XWDLEN1__RESERVED0X6 0x6ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_XCR1_REG__XWDLEN1__RESERVED0X7
 *
 * @BRIEF        Reserved (do not use) - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_XCR1_REG__XWDLEN1__RESERVED0X7 0x7ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_SRGR2_REG__GSYNC__FREERUNNING
 *
 * @BRIEF        The sample rate generator clock (CLKG) is free running. 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_SRGR2_REG__GSYNC__FREERUNNING 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_SRGR2_REG__GSYNC__RUNNING
 *
 * @BRIEF        The sample rate generator clock (CLKG) is running. But CLKG 
 *               is resynchronized and frame-sync signal (FSG) is generated 
 *               only after detecting the receive frame-synchronization 
 *               signal (FSR). Also, frame period, FPER,is a don't care 
 *               because the period is dictated by the external frame-sync 
 *               pulse. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_SRGR2_REG__GSYNC__RUNNING    0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_SRGR2_REG__CLKSP__RISINGEDGE
 *
 * @BRIEF        Rising edge of CLKG and FSG. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_SRGR2_REG__CLKSP__RISINGEDGE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_SRGR2_REG__CLKSP__FALLINGEDGE
 *
 * @BRIEF        Falling edge of CLKG and FSG. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_SRGR2_REG__CLKSP__FALLINGEDGE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_SRGR2_REG__CLKSM__0X0
 *
 * @BRIEF        SCLKME=0: Sample rate generator clock derived from the CLKS 
 *               pin. 
 *               SCLKME=1: Sample rate generator clock derived from the CLKRI 
 *               pin. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_SRGR2_REG__CLKSM__0X0        0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_SRGR2_REG__CLKSM__0X1
 *
 * @BRIEF        SCLKME=0: Sample rate generator clock derived from the CPU 
 *               clock. 
 *               SCLKME=1: Sample rate generator clock derived from the CLKXI 
 *               clock. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_SRGR2_REG__CLKSM__0X1        0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_SRGR2_REG__FSGM__TRANSMITANDIGNORE
 *
 * @BRIEF        Transmit frame-sync signal (FSX) is generated when transmit 
 *               buffer is not empty When FSGM=0, FPER and FWID are used to 
 *               determine the frame synchronization period and width 
 *               (external FSX is gated by the buffer empty condition). - 
 *               (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_SRGR2_REG__FSGM__TRANSMITANDIGNORE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_SRGR2_REG__FSGM__TRANSMIT
 *
 * @BRIEF        Transmit frame-sync signal driven by the sample rate 
 *               generator frame-sync signal, FSG.  - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_SRGR2_REG__FSGM__TRANSMIT    0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_MCR2_REG__XMCME__2PARTITIONS
 *
 * @BRIEF        2-partition mode: 
 *               Only partitions A and B are used. You can control up to 32 
 *               channels in the transmit multichannel selection mode 
 *               selected with the XMCM bits. 
 *               If XMCM = 01b or 10b, assign 16 channels to partition A with 
 *               the XPABLK bits. Assign 16 channels to partition B with the 
 *               XPBBLK 
 *               bits. 
 *               If XMCM = 11b (for symmetric transmission and reception), 
 *               assign 16 channels to receive partition A with the RPABLK 
 *               bits. Assign 16 channels to receive partition B with the 
 *               RPBBLK bits. 
 *               You control the channels with the appropriate transmit 
 *               channel enable registers: 
 *               XCERA: Channels in partition A 
 *               XCERB: Channels in partition B - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_MCR2_REG__XMCME__2PARTITIONS 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_MCR2_REG__XMCME__8PARTITIONS
 *
 * @BRIEF        8-partition mode: 
 *               All partitions (A through H) are used. You can control up to 
 *               128 channels in the transmit multichannel selection mode 
 *               selected with the XMCM bits. 
 *               You control the channels with the appropriate transmit 
 *               channel enable 
 *               registers: 
 *               XCERA: Channels 0 through 15 
 *               XCERB: Channels 16 through 31 
 *               XCERC: Channels 32 through 47 
 *               XCERD: Channels 48 through 63 
 *               XCERE: Channels 64 through 79 
 *               XCERF: Channels 80 through 95 
 *               XCERG: Channels 96 through 111 
 *               XCERH: Channels 112 through 127 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_MCR2_REG__XMCME__8PARTITIONS 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_MCR2_REG__XPBBLK__BLOCK1
 *
 * @BRIEF        Block 1. Channel 16 to channel 31 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_MCR2_REG__XPBBLK__BLOCK1     0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_MCR2_REG__XPBBLK__BLOCK3
 *
 * @BRIEF        Block 3. Channel 48 to channel 63 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_MCR2_REG__XPBBLK__BLOCK3     0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_MCR2_REG__XPBBLK__BLOCK5
 *
 * @BRIEF        Block 5. Channel 80 to channel 95 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_MCR2_REG__XPBBLK__BLOCK5     0x2ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_MCR2_REG__XPBBLK__BLOCK7
 *
 * @BRIEF        Block 7. Channel 112 to channel 127 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_MCR2_REG__XPBBLK__BLOCK7     0x3ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_MCR2_REG__XPABLK__BLOCK0
 *
 * @BRIEF        Block 0. Channel 0 to channel 15 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_MCR2_REG__XPABLK__BLOCK0     0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_MCR2_REG__XPABLK__BLOCK2
 *
 * @BRIEF        Block 2. Channel 32 to channel 47 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_MCR2_REG__XPABLK__BLOCK2     0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_MCR2_REG__XPABLK__BLOCK4
 *
 * @BRIEF        Block 4. Channel 64 to channel 79 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_MCR2_REG__XPABLK__BLOCK4     0x2ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_MCR2_REG__XPABLK__BLOCK6
 *
 * @BRIEF        Block 6. Channel 96 to channel 111 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_MCR2_REG__XPABLK__BLOCK6     0x3ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_MCR2_REG__XMCM__ENABLED
 *
 * @BRIEF        All channels enabled without masking (DX is always driven 
 *               during transmission of data). - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_MCR2_REG__XMCM__ENABLED      0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_MCR2_REG__XMCM__DISABLED
 *
 * @BRIEF        All channels disabled and therefore masked by default. 
 *               Required channels are eslected by enabling XP(A/B)BLK and 
 *               XCER(A/B) appropriately. Also, these selected channels are 
 *               not masked and therefore DX is always driven. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_MCR2_REG__XMCM__DISABLED     0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_MCR2_REG__XMCM__ENABLEDMASKED
 *
 * @BRIEF        All channels enabled, but masked. Selected channels enabled 
 *               via XP(A/B)BLK and XCER(A/B) are unmasked. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_MCR2_REG__XMCM__ENABLEDMASKED 0x2ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_MCR2_REG__XMCM__DISABLEDMASKED
 *
 * @BRIEF        All channels disabled and therefore masked by default. 
 *               Required channels are selected by enabling RP(A/B)BLK and 
 *               RCER(A/B) appropriately. Selected channels can be unmasked 
 *               by RP(A/B)BLK and XCER(A/B). This mode is used for symetric 
 *               transmit and receive operation. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_MCR2_REG__XMCM__DISABLEDMASKED 0x3ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_MCR1_REG__RMCME__2PARTITIONS
 *
 * @BRIEF        2-partition mode. 
 *               Only partitions A and B are used. You can control up to 32 
 *               channels in the receive multichannel selection mode (RMCM = 
 *               1). 
 *               Assign 16 channels to partition A with the RPABLK bits. 
 *               Assign 16 channels to partition B with the RPBBLK bits. 
 *               You control the channels with the apropriate receive channel 
 *               enable registers: 
 *               RCERA: Channels in partition A 
 *               RCERB: Channels in partition B - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_MCR1_REG__RMCME__2PARTITIONS 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_MCR1_REG__RMCME__8PARTITIONS
 *
 * @BRIEF        8-partition mode: 
 *               All partitions (A through H) are used. You can control up to 
 *               128 channels in the receive multichannel selection mode. 
 *               You control the channels with the appropriate receive 
 *               channel enable registers: 
 *               RCERA: Channels 0 through 15 
 *               RCERB: Channels 16 through 31 
 *               RCERC: Channels 32 through 47 
 *               RCERD: Channels 48 through 63 
 *               RCERE: Channels 64 through 79 
 *               RCERF: Channels 80 through 95 
 *               RCERG: Channels 96 through 111 
 *               RCERH: Channels 112 through 127 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_MCR1_REG__RMCME__8PARTITIONS 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_MCR1_REG__RPBBLK__BLOCK1
 *
 * @BRIEF        Block 1. Channel 16 to channel 31 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_MCR1_REG__RPBBLK__BLOCK1     0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_MCR1_REG__RPBBLK__BLOCK3
 *
 * @BRIEF        Block 3. Channel 48 to channel 63 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_MCR1_REG__RPBBLK__BLOCK3     0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_MCR1_REG__RPBBLK__BLOCK5
 *
 * @BRIEF        Block 5. Channel 80 to channel 95 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_MCR1_REG__RPBBLK__BLOCK5     0x2ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_MCR1_REG__RPBBLK__BLOCK7
 *
 * @BRIEF        Block 7. Channel 112 to channel 127 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_MCR1_REG__RPBBLK__BLOCK7     0x3ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_MCR1_REG__RPABLK__BLOCK0
 *
 * @BRIEF        Block 0. Channel 0 to channel 15 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_MCR1_REG__RPABLK__BLOCK0     0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_MCR1_REG__RPABLK__BLOCK2
 *
 * @BRIEF        Block 2. Channel 32 to channel 47 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_MCR1_REG__RPABLK__BLOCK2     0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_MCR1_REG__RPABLK__BLOCK4
 *
 * @BRIEF        Block 4. Channel 64 to channel 79 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_MCR1_REG__RPABLK__BLOCK4     0x2ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_MCR1_REG__RPABLK__BLOCK6
 *
 * @BRIEF        Block 6. Channel 96 to channel 111 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_MCR1_REG__RPABLK__BLOCK6     0x3ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_MCR1_REG__RMCM__ENABLED
 *
 * @BRIEF        All 128 channels - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_MCR1_REG__RMCM__ENABLED      0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_MCR1_REG__RMCM__DISABLED
 *
 * @BRIEF        All channels disabled by default. Required channels are 
 *               selected by enabling RP(A/B)BLK and RCER(A/B) appropriately 
 *               - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_MCR1_REG__RMCM__DISABLED     0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_PCR_REG__IDLE_EN__RUNNING
 *
 * @BRIEF        The McBSP is running - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_PCR_REG__IDLE_EN__RUNNING    0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_PCR_REG__IDLE_EN__SHUTOFF
 *
 * @BRIEF        The clocks in the McBSP are shut off when both IDLE_EN=1 and 
 *               peripheral domain is in idle mode - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_PCR_REG__IDLE_EN__SHUTOFF    0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_PCR_REG__XIOEN__SERIAL
 *
 * @BRIEF        DX, FSX and CLKX are configured as serial port pins and do 
 *               not function as general-purpose I/Os. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_PCR_REG__XIOEN__SERIAL       0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_PCR_REG__XIOEN__GP
 *
 * @BRIEF        DX pin is a general purpose output. FSX and CLKX are general 
 *               purpose I/Os. These serial port pins do not perform serial 
 *               port operation. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_PCR_REG__XIOEN__GP           0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_PCR_REG__RIOEN__SERIAL
 *
 * @BRIEF        DR, FSR, CLKR and CLKS are configured as serial port pins 
 *               and do not function as general-purpose I/Os. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_PCR_REG__RIOEN__SERIAL       0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_PCR_REG__RIOEN__GP
 *
 * @BRIEF        DR and CLKS pins are general purpose inputs; FSR and CLKR 
 *               are general purpose I/Os. These serial port pins do not 
 *               perform serial port operation. The CLKS pin is affected by a 
 *               combination of RRST and RIOEN signals of the receiver. - 
 *               (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_PCR_REG__RIOEN__GP           0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_PCR_REG__FSXM__EXTERNAL
 *
 * @BRIEF        Frame-synchronization signal derived from an external source 
 *               - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_PCR_REG__FSXM__EXTERNAL      0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_PCR_REG__FSXM__SAMPLED
 *
 * @BRIEF        Frame synchronization is determined by the sample rate 
 *               generator frame-synchronization mode bit FSGM in SRGR2. - 
 *               (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_PCR_REG__FSXM__SAMPLED       0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_PCR_REG__FSRM__EXTERNAL
 *
 * @BRIEF        Frame-Synchronization pulses generated by an external 
 *               device. FSR is an input pin. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_PCR_REG__FSRM__EXTERNAL      0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_PCR_REG__FSRM__SAMPLED
 *
 * @BRIEF        Frame synchronization generated internally by sample rate 
 *               generator. FSR is an output pin except when GSYNC=1 in SRGR. 
 *               - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_PCR_REG__FSRM__SAMPLED       0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_PCR_REG__CLKXM__EXTERNAL
 *
 * @BRIEF        Transmitter clock is driven by an external clock with CLKX 
 *               as an input pin. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_PCR_REG__CLKXM__EXTERNAL     0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_PCR_REG__CLKXM__INTERNAL
 *
 * @BRIEF        CLKX is an output pin and is driven by the internal sample 
 *               rate generator. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_PCR_REG__CLKXM__INTERNAL     0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_PCR_REG__CLKRM__EXTERNAL
 *
 * @BRIEF        Case 1: Digital loop back mode not set (DLB=0) in SPCR1: 
 *               Receive clock (CLKR) is an input driven by an externaal 
 *               clock. 
 *               Case 2: Digital loop back mode set (DLB=1) in SPCR1: 
 *               Receive clock (not the CLKR pin) is driven by transmit clock 
 *               (CLKX) which is based on the CLKXM bit in the PCR. CLKR pin 
 *               is in high-impedance. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_PCR_REG__CLKRM__EXTERNAL     0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_PCR_REG__CLKRM__INTERNAL
 *
 * @BRIEF        Case 1: Digital loop back mode not set (DLB=0) in SPCR1: 
 *               CLKR is an output pin and is driven by the internal sample 
 *               rate generator. 
 *               Case 2: Digital loop back mode set (DLB=1) in SPCR1: 
 *               CLKR is an output pin and is driven by the transmit clock. 
 *               The transmit clock is derived based on the CLKRM bit in the 
 *               PCR. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_PCR_REG__CLKRM__INTERNAL     0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_PCR_REG__SCLKME__0X0
 *
 * @BRIEF        CLKSM = 0: Signal on CLKS pin 
 *               CLKSM = 1: CPU clock - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_PCR_REG__SCLKME__0X0         0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_PCR_REG__SCLKME__0X1
 *
 * @BRIEF        CLKSM = 0: Signal on CLKR pin 
 *               CLKSM = 1: Signal on CLKX pin - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_PCR_REG__SCLKME__0X1         0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_PCR_REG__CLKS_STAT__LOW
 *
 * @BRIEF        The signal on the CLKS pin is low - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_PCR_REG__CLKS_STAT__LOW      0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_PCR_REG__CLKS_STAT__HIGH
 *
 * @BRIEF        The signal on the CLKS pin is high - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_PCR_REG__CLKS_STAT__HIGH     0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_PCR_REG__DX_STAT__LOW
 *
 * @BRIEF        Drive the signal on the DX pin low - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_PCR_REG__DX_STAT__LOW        0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_PCR_REG__DX_STAT__HIGH
 *
 * @BRIEF        Drive the signal on the DX pin high - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_PCR_REG__DX_STAT__HIGH       0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_PCR_REG__DR_STAT__LOW
 *
 * @BRIEF        The signal on DR pin is low - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_PCR_REG__DR_STAT__LOW        0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_PCR_REG__DR_STAT__HIGH
 *
 * @BRIEF        The signal on DR pin is high - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_PCR_REG__DR_STAT__HIGH       0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_PCR_REG__FSXP__HIGH
 *
 * @BRIEF        Frame-synchronization pulse FSX is active high - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_PCR_REG__FSXP__HIGH          0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_PCR_REG__FSXP__LOW
 *
 * @BRIEF        FRame-synchronization pulse FSX is active low - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_PCR_REG__FSXP__LOW           0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_PCR_REG__FSRP__HIGH
 *
 * @BRIEF        Frame-synchronization pulse FSR is active high - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_PCR_REG__FSRP__HIGH          0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_PCR_REG__FSRP__LOW
 *
 * @BRIEF        Frame-synchronization pulse FSR is active low - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_PCR_REG__FSRP__LOW           0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_PCR_REG__CLKXP__RISINGEDGE
 *
 * @BRIEF        Transmit data driven on rising edge of CLKX - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_PCR_REG__CLKXP__RISINGEDGE   0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_PCR_REG__CLKXP__FALLINGEDGE
 *
 * @BRIEF        Transmit data driven on falling edge of CLKX - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_PCR_REG__CLKXP__FALLINGEDGE  0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_PCR_REG__CLKRP__FALLINGEDGE
 *
 * @BRIEF        Receive data sampled on falling edge of CLKR - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_PCR_REG__CLKRP__FALLINGEDGE  0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_PCR_REG__CLKRP__RISINGEDGE
 *
 * @BRIEF        Receive data sampled on rising edge of CLKR - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_PCR_REG__CLKRP__RISINGEDGE   0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_SYSCONFIG_REG__CLOCKACTIVITY__CLKACT0
 *
 * @BRIEF        OCP clock can be switched-off 
 *               Functional clock can be switched-off - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_SYSCONFIG_REG__CLOCKACTIVITY__CLKACT0 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_SYSCONFIG_REG__CLOCKACTIVITY__CLKACT1
 *
 * @BRIEF        OCP clock can be switched-off 
 *               Functional clock is maintained during wake up period - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_SYSCONFIG_REG__CLOCKACTIVITY__CLKACT1 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_SYSCONFIG_REG__CLOCKACTIVITY__CLKACT2
 *
 * @BRIEF        OCP clock is maintained during wake up period 
 *               Functional clock can be switched-off - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_SYSCONFIG_REG__CLOCKACTIVITY__CLKACT2 0x2ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_SYSCONFIG_REG__CLOCKACTIVITY__CLKACT3
 *
 * @BRIEF        OCP clock is maintained during wake up period 
 *               Functional clock is maintained during wake up period - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_SYSCONFIG_REG__CLOCKACTIVITY__CLKACT3 0x3ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_SYSCONFIG_REG__SIDLEMODE__SIDLEMODE0
 *
 * @BRIEF        Force-idle. An idle request is acknowledged unconditionally. 
 *               - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_SYSCONFIG_REG__SIDLEMODE__SIDLEMODE0 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_SYSCONFIG_REG__SIDLEMODE__SIDLEMODE1
 *
 * @BRIEF        No-idle. An idle request is never acknowledged. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_SYSCONFIG_REG__SIDLEMODE__SIDLEMODE1 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_SYSCONFIG_REG__SIDLEMODE__SIDLEMODE2
 *
 * @BRIEF        Smart-idle. Acknowledgement to an idle request is given 
 *               based on the internal activity of the module - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_SYSCONFIG_REG__SIDLEMODE__SIDLEMODE2 0x2ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_SYSCONFIG_REG__SIDLEMODE__SIDLEMODE3
 *
 * @BRIEF        Reserved - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_SYSCONFIG_REG__SIDLEMODE__SIDLEMODE3 0x3ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_SYSCONFIG_REG__ENAWAKEUP__ENWK0
 *
 * @BRIEF        WakeUp is disabled - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_SYSCONFIG_REG__ENAWAKEUP__ENWK0 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_SYSCONFIG_REG__ENAWAKEUP__ENWK1
 *
 * @BRIEF        WakeUp capability is enabled - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_SYSCONFIG_REG__ENAWAKEUP__ENWK1 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_SYSCONFIG_REG__SOFTRESET__NORESET
 *
 * @BRIEF        NO soft reset - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_SYSCONFIG_REG__SOFTRESET__NORESET 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_SYSCONFIG_REG__SOFTRESET__SOFTRESET
 *
 * @BRIEF        Soft reset triggered - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_SYSCONFIG_REG__SOFTRESET__SOFTRESET 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_IRQSTATUS_REG__XEMPTYEOF__XEMPTYEOF0
 *
 * @BRIEF        XEMPTYEOF is NOT set to when a complete frame was 
 *               transmitted and the transmit buffer is empty - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_IRQSTATUS_REG__XEMPTYEOF__XEMPTYEOF0 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_IRQSTATUS_REG__XEMPTYEOF__XEMPTYEOF1
 *
 * @BRIEF        XEMPTYEOF is set to one when a complete frame was 
 *               transmitted and the transmit buffer is empty. 
 *               Writing 1 to this bit clears the bit. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_IRQSTATUS_REG__XEMPTYEOF__XEMPTYEOF1 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_IRQSTATUS_REG__XOVFLSTAT__XOVFLSTAT0
 *
 * @BRIEF        Transmit buffer NOT overflow - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_IRQSTATUS_REG__XOVFLSTAT__XOVFLSTAT0 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_IRQSTATUS_REG__XOVFLSTAT__XOVFLSTAT1
 *
 * @BRIEF        Transmit buffer overflow; Writing 1 to this bit clears the 
 *               bit. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_IRQSTATUS_REG__XOVFLSTAT__XOVFLSTAT1 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_IRQSTATUS_REG__XUNDFLSTAT__XUNDFLSTAT0
 *
 * @BRIEF        the transmit data buffer is NOT empty new data is required 
 *               to be transmitted. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_IRQSTATUS_REG__XUNDFLSTAT__XUNDFLSTAT0 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_IRQSTATUS_REG__XUNDFLSTAT__XUNDFLSTAT1
 *
 * @BRIEF        the transmit data buffer is empty new data is required to be 
 *               transmitted. 
 *               Writing 1 to this bit clears the bit. 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_IRQSTATUS_REG__XUNDFLSTAT__XUNDFLSTAT1 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_IRQSTATUS_REG__XRDY__XRDY0
 *
 * @BRIEF        Transmit buffer occupied locations are below the THRSH2_REG 
 *               value).  - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_IRQSTATUS_REG__XRDY__XRDY0   0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_IRQSTATUS_REG__XRDY__XRDY1
 *
 * @BRIEF        Transmit buffer occupied locations are equal or above the 
 *               THRSH2_REG value).  
 *                Writing 1 to this bit clears the bit. 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_IRQSTATUS_REG__XRDY__XRDY1   0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_IRQSTATUS_REG__XEOF__XEOF0
 *
 * @BRIEF        complete frame was NOT transmitted - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_IRQSTATUS_REG__XEOF__XEOF0   0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_IRQSTATUS_REG__XEOF__XEOF1
 *
 * @BRIEF        complete frame was transmitted; Writing 1 to this bit clears 
 *               the bit. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_IRQSTATUS_REG__XEOF__XEOF1   0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_IRQSTATUS_REG__XFSX__XFSX0
 *
 * @BRIEF        new transmit frame synchronization is NOT asserted - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_IRQSTATUS_REG__XFSX__XFSX0   0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_IRQSTATUS_REG__XFSX__XFSX1
 *
 * @BRIEF        new transmit frame synchronization is asserted; Writing 1 to 
 *               this bit clears the bit. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_IRQSTATUS_REG__XFSX__XFSX1   0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_IRQSTATUS_REG__XSYNCERR__XSYNCERR0
 *
 * @BRIEF        Transmit frame synchronization error is NOT detected - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_IRQSTATUS_REG__XSYNCERR__XSYNCERR0 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_IRQSTATUS_REG__XSYNCERR__XSYNCERR1
 *
 * @BRIEF        Transmit frame synchronization error is detected. 
 *               Writing 1 to this bit clears the bit. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_IRQSTATUS_REG__XSYNCERR__XSYNCERR1 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_IRQSTATUS_REG__ROVFLSTAT__ROVFLSTAT0
 *
 * @BRIEF        receive buffer NOT overflow - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_IRQSTATUS_REG__ROVFLSTAT__ROVFLSTAT0 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_IRQSTATUS_REG__ROVFLSTAT__ROVFLSTAT1
 *
 * @BRIEF        receive buffer overflow; Writing 1 to this bit clears the 
 *               bit. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_IRQSTATUS_REG__ROVFLSTAT__ROVFLSTAT1 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_IRQSTATUS_REG__RUNDFLSTAT__RUNDFLSTAT0
 *
 * @BRIEF        read operation is performed to the receive data register 
 *               while receive buffer is NOT empty - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_IRQSTATUS_REG__RUNDFLSTAT__RUNDFLSTAT0 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_IRQSTATUS_REG__RUNDFLSTAT__RUNDFLSTAT1
 *
 * @BRIEF        read operation is performed to the receive data register 
 *               while receive buffer is empty; 
 *               Writing 1 to this bit clears the bit. 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_IRQSTATUS_REG__RUNDFLSTAT__RUNDFLSTAT1 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_IRQSTATUS_REG__RRDY__RRDY0
 *
 * @BRIEF        receive buffer occupied locations are below the THRSH1_REG 
 *               value).  - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_IRQSTATUS_REG__RRDY__RRDY0   0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_IRQSTATUS_REG__RRDY__RRDY1
 *
 * @BRIEF        receive buffer occupied locations are equal or above the 
 *               THRSH1_REG value).  
 *                Writing 1 to this bit clears the bit. 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_IRQSTATUS_REG__RRDY__RRDY1   0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_IRQSTATUS_REG__REOF__REOF0
 *
 * @BRIEF        complete frame was NOT received - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_IRQSTATUS_REG__REOF__REOF0   0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_IRQSTATUS_REG__REOF__REOF1
 *
 * @BRIEF        complete frame was received; Writing 1 to this bit clears 
 *               the bit. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_IRQSTATUS_REG__REOF__REOF1   0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_IRQSTATUS_REG__RFSR__RFSR0
 *
 * @BRIEF        new receive frame synchronization is NOT asserted - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_IRQSTATUS_REG__RFSR__RFSR0   0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_IRQSTATUS_REG__RFSR__RFSR1
 *
 * @BRIEF        new receive frame synchronization is asserted; Writing 1 to 
 *               this bit clears the bit. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_IRQSTATUS_REG__RFSR__RFSR1   0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_IRQSTATUS_REG__RSYNCERR__RSYNCERR0
 *
 * @BRIEF        receive frame synchronization error is NOT detected - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_IRQSTATUS_REG__RSYNCERR__RSYNCERR0 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_IRQSTATUS_REG__RSYNCERR__RSYNCERR1
 *
 * @BRIEF        receive frame synchronization error is detected. 
 *               Writing 1 to this bit clears the bit. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_IRQSTATUS_REG__RSYNCERR__RSYNCERR1 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_IRQENABLE_REG__XEMPTYEOFEN__XEMPTYEOFEN0
 *
 * @BRIEF        Transmit Buffer Empty at End Of Frame NOT enabled - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_IRQENABLE_REG__XEMPTYEOFEN__XEMPTYEOFEN0 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_IRQENABLE_REG__XEMPTYEOFEN__XEMPTYEOFEN1
 *
 * @BRIEF        Transmit Buffer Empty at End Of Frame enabled - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_IRQENABLE_REG__XEMPTYEOFEN__XEMPTYEOFEN1 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_IRQENABLE_REG__XOVFLEN__XOVFLEN0
 *
 * @BRIEF        Transmit  Buffer Overflow   NOT enabled - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_IRQENABLE_REG__XOVFLEN__XOVFLEN0 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_IRQENABLE_REG__XOVFLEN__XOVFLEN1
 *
 * @BRIEF        Transmit  Buffer Overflow   enabled - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_IRQENABLE_REG__XOVFLEN__XOVFLEN1 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_IRQENABLE_REG__XUNDFLEN__XUNDFLEN0
 *
 * @BRIEF        Transmit Buffer Underflow  NOT enabled - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_IRQENABLE_REG__XUNDFLEN__XUNDFLEN0 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_IRQENABLE_REG__XUNDFLEN__XUNDFLEN1
 *
 * @BRIEF        Transmit Buffer Underflow    enabled - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_IRQENABLE_REG__XUNDFLEN__XUNDFLEN1 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_IRQENABLE_REG__XRDYEN__XRDYEN0
 *
 * @BRIEF        Transmit  Buffer Threshold Reached    NOT enabled - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_IRQENABLE_REG__XRDYEN__XRDYEN0 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_IRQENABLE_REG__XRDYEN__XRDYEN1
 *
 * @BRIEF        Transmit  Buffer Threshold Reached    enabled - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_IRQENABLE_REG__XRDYEN__XRDYEN1 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_IRQENABLE_REG__XEOFEN__XEOFEN0
 *
 * @BRIEF        Transmit End Of Frame   NOT enabled - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_IRQENABLE_REG__XEOFEN__XEOFEN0 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_IRQENABLE_REG__XEOFEN__XEOFEN1
 *
 * @BRIEF        Transmit End Of Frame   enabled - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_IRQENABLE_REG__XEOFEN__XEOFEN1 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_IRQENABLE_REG__XFSXEN__XFSXEN0
 *
 * @BRIEF        Transmit  Frame Synchronization   NOT enabled - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_IRQENABLE_REG__XFSXEN__XFSXEN0 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_IRQENABLE_REG__XFSXEN__XFSXEN1
 *
 * @BRIEF        Transmit  Frame Synchronization   enabled - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_IRQENABLE_REG__XFSXEN__XFSXEN1 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_IRQENABLE_REG__XSYNCERREN__XSYNCERREN0
 *
 * @BRIEF        Transmit Frame Synchronization Error  NOT enabled - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_IRQENABLE_REG__XSYNCERREN__XSYNCERREN0 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_IRQENABLE_REG__XSYNCERREN__XSYNCERREN1
 *
 * @BRIEF        Transmit Frame Synchronization Error    enabled - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_IRQENABLE_REG__XSYNCERREN__XSYNCERREN1 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_IRQENABLE_REG__ROVFLEN__ROVFLEN0
 *
 * @BRIEF        Receive  Buffer Overflow  NOT enabled - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_IRQENABLE_REG__ROVFLEN__ROVFLEN0 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_IRQENABLE_REG__ROVFLEN__ROVFLEN1
 *
 * @BRIEF        Receive  Buffer Overflow  enabled - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_IRQENABLE_REG__ROVFLEN__ROVFLEN1 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_IRQENABLE_REG__RUNDFLEN__RUNDFLEN0
 *
 * @BRIEF        ReceiveBuffer Underflow   NOT enabled - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_IRQENABLE_REG__RUNDFLEN__RUNDFLEN0 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_IRQENABLE_REG__RUNDFLEN__RUNDFLEN1
 *
 * @BRIEF        Receive  Buffer Underflow   enabled - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_IRQENABLE_REG__RUNDFLEN__RUNDFLEN1 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_IRQENABLE_REG__RRDYEN__RRDYEN0
 *
 * @BRIEF        Receive  Buffer Threshold  NOT enabled - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_IRQENABLE_REG__RRDYEN__RRDYEN0 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_IRQENABLE_REG__RRDYEN__RRDYEN1
 *
 * @BRIEF        Receive  Buffer Threshold  enabled - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_IRQENABLE_REG__RRDYEN__RRDYEN1 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_IRQENABLE_REG__REOFEN__REOFEN0
 *
 * @BRIEF        Receive End Of Frame NOT enabled - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_IRQENABLE_REG__REOFEN__REOFEN0 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_IRQENABLE_REG__REOFEN__REOFEN1
 *
 * @BRIEF        Receive End Of Frame enabled - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_IRQENABLE_REG__REOFEN__REOFEN1 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_IRQENABLE_REG__RFSREN__RFSREN0
 *
 * @BRIEF        Receive  Frame Synchronization NOT enabled - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_IRQENABLE_REG__RFSREN__RFSREN0 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_IRQENABLE_REG__RFSREN__RFSREN1
 *
 * @BRIEF        Receive  Frame Synchronization enabled - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_IRQENABLE_REG__RFSREN__RFSREN1 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_IRQENABLE_REG__RSYNCERREN__RSYNCERREN0
 *
 * @BRIEF        Receive Frame Synchronization Error  NOT enabled - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_IRQENABLE_REG__RSYNCERREN__RSYNCERREN0 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_IRQENABLE_REG__RSYNCERREN__RSYNCERREN1
 *
 * @BRIEF        Receive  Frame Synchronization Error  enabled - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_IRQENABLE_REG__RSYNCERREN__RSYNCERREN1 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_WAKEUPEN_REG__XEMPTYEOFEN__XEMPTYEOFEN0
 *
 * @BRIEF        Transmit Buffer Empty at End Of Frame WK enable is NOT 
 *               active - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_WAKEUPEN_REG__XEMPTYEOFEN__XEMPTYEOFEN0 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_WAKEUPEN_REG__XEMPTYEOFEN__XEMPTYEOFEN1
 *
 * @BRIEF        Transmit Buffer Empty at End Of Frame WK enable is active - 
 *               (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_WAKEUPEN_REG__XEMPTYEOFEN__XEMPTYEOFEN1 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_WAKEUPEN_REG__XRDYEN__XRDYEN0
 *
 * @BRIEF        Transmit  Buffer Threshold WK enable is NOT active - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_WAKEUPEN_REG__XRDYEN__XRDYEN0 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_WAKEUPEN_REG__XRDYEN__XRDYEN1
 *
 * @BRIEF        Transmit  Buffer Threshold WK enable is active - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_WAKEUPEN_REG__XRDYEN__XRDYEN1 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_WAKEUPEN_REG__XEOFEN__XEOFEN0
 *
 * @BRIEF        Transmit End Of Frame WK enable is NOT active - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_WAKEUPEN_REG__XEOFEN__XEOFEN0 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_WAKEUPEN_REG__XEOFEN__XEOFEN1
 *
 * @BRIEF        Transmit End Of Frame WK enable is active - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_WAKEUPEN_REG__XEOFEN__XEOFEN1 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_WAKEUPEN_REG__XFSXEN__XFSXEN0
 *
 * @BRIEF        Transmit  Frame Synchronization WK enable is NOT active - 
 *               (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_WAKEUPEN_REG__XFSXEN__XFSXEN0 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_WAKEUPEN_REG__XFSXEN__XFSXEN1
 *
 * @BRIEF        Transmit  Frame Synchronization WK enable is active - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_WAKEUPEN_REG__XFSXEN__XFSXEN1 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_WAKEUPEN_REG__XSYNCERREN__XSYNCERREN0
 *
 * @BRIEF        Transmit  Frame Synchronization Error WK enable is NOT 
 *               active - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_WAKEUPEN_REG__XSYNCERREN__XSYNCERREN0 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_WAKEUPEN_REG__XSYNCERREN__XSYNCERREN1
 *
 * @BRIEF        Transmit  Frame Synchronization Error WK enable is active - 
 *               (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_WAKEUPEN_REG__XSYNCERREN__XSYNCERREN1 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_WAKEUPEN_REG__RRDYEN__RRDYEN0
 *
 * @BRIEF        Receive  Buffer Threshold WK enable is NOT active - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_WAKEUPEN_REG__RRDYEN__RRDYEN0 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_WAKEUPEN_REG__RRDYEN__RRDYEN1
 *
 * @BRIEF        Receive  Buffer Threshold WK enable is active - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_WAKEUPEN_REG__RRDYEN__RRDYEN1 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_WAKEUPEN_REG__REOFEN__REOFEN0
 *
 * @BRIEF        Receive End Of Frame WK enable is NOT active - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_WAKEUPEN_REG__REOFEN__REOFEN0 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_WAKEUPEN_REG__REOFEN__REOFEN1
 *
 * @BRIEF        Receive End Of Frame WK enable is active - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_WAKEUPEN_REG__REOFEN__REOFEN1 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_WAKEUPEN_REG__RFSREN__RFSREN0
 *
 * @BRIEF        Receive  Frame Synchronization WK enable is NOT active - 
 *               (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_WAKEUPEN_REG__RFSREN__RFSREN0 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_WAKEUPEN_REG__RFSREN__RFSREN1
 *
 * @BRIEF        Receive  Frame Synchronization WK enable is active - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_WAKEUPEN_REG__RFSREN__RFSREN1 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_WAKEUPEN_REG__RSYNCERREN__RSYNCERREN0
 *
 * @BRIEF        Receive  Frame Synchronization Error WK enable is NOT active 
 *               - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_WAKEUPEN_REG__RSYNCERREN__RSYNCERREN0 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_WAKEUPEN_REG__RSYNCERREN__RSYNCERREN1
 *
 * @BRIEF        Receive  Frame Synchronization Error WK enable is active - 
 *               (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_WAKEUPEN_REG__RSYNCERREN__RSYNCERREN1 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_XCCR_REG__EXTCLKGATE__EXTCLKGATE0
 *
 * @BRIEF        External clock gating disabled. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_XCCR_REG__EXTCLKGATE__EXTCLKGATE0 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_XCCR_REG__EXTCLKGATE__EXTCLKGATE1
 *
 * @BRIEF        External clock gating enable. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_XCCR_REG__EXTCLKGATE__EXTCLKGATE1 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_XCCR_REG__PPCONNECT__PPCONNECT0
 *
 * @BRIEF        Pair to pair connection. When set the DXENO pin is always 
 *               set to 0 regardless of the frame boundary, setting the tree 
 *               state buffer as output - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_XCCR_REG__PPCONNECT__PPCONNECT0 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_XCCR_REG__PPCONNECT__PPCONNECT1
 *
 * @BRIEF        Pair to pair connection. When set the DXENO pin is always 
 *               set to 0 regardless of the frame boundary, setting the tree 
 *               state buffer as output - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_XCCR_REG__PPCONNECT__PPCONNECT1 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_XCCR_REG__DXENDLY__DXENDLY0
 *
 * @BRIEF        18 ns - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_XCCR_REG__DXENDLY__DXENDLY0  0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_XCCR_REG__DXENDLY__DXENDLY1
 *
 * @BRIEF        26 ns (default) - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_XCCR_REG__DXENDLY__DXENDLY1  0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_XCCR_REG__DXENDLY__DXENDLY2
 *
 * @BRIEF        35 ns - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_XCCR_REG__DXENDLY__DXENDLY2  0x2ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_XCCR_REG__DXENDLY__DXENDLY3
 *
 * @BRIEF        42 ns - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_XCCR_REG__DXENDLY__DXENDLY3  0x3ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_XCCR_REG__XFULL_CYCLE__XFULL_CYCLE0
 *
 * @BRIEF        McBSPLP operates in transmit half-cycle mode (transmit frame 
 *               synchronization is sampled by the opposite edge of the clock 
 *               used to drive transmit data). - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_XCCR_REG__XFULL_CYCLE__XFULL_CYCLE0 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_XCCR_REG__XFULL_CYCLE__XFULL_CYCLE1
 *
 * @BRIEF        McBSPLP operates in transmit full-cycle mode (transmit frame 
 *               synchronization is sampled by the same edge of the clock 
 *               used to drive transmit data). - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_XCCR_REG__XFULL_CYCLE__XFULL_CYCLE1 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_XCCR_REG__DLB__NODLB
 *
 * @BRIEF        No DLB - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_XCCR_REG__DLB__NODLB         0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_XCCR_REG__DLB__DLB
 *
 * @BRIEF        DLB - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_XCCR_REG__DLB__DLB           0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_XCCR_REG__XDMAEN__XDMAEN0
 *
 * @BRIEF        When set to zero this bit will gate the external transmit 
 *               DMA request, - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_XCCR_REG__XDMAEN__XDMAEN0    0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_XCCR_REG__XDMAEN__XDMAEN1
 *
 * @BRIEF        When set to one this bit will NOT gate the external transmit 
 *               DMA request, - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_XCCR_REG__XDMAEN__XDMAEN1    0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_XCCR_REG__XDISABLE__XDSB0
 *
 * @BRIEF        The transmit process will NOT stop at the next frame 
 *               boundary. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_XCCR_REG__XDISABLE__XDSB0    0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_XCCR_REG__XDISABLE__XDSB1
 *
 * @BRIEF        The transmit process will stop at the next frame boundary. - 
 *               (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_XCCR_REG__XDISABLE__XDSB1    0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_RCCR_REG__RFULL_CYCLE__RFULL_CYCLE0
 *
 * @BRIEF        McBSPLP operates in receive half-cycle mode (receive frame 
 *               synchronization is sampled by the opposite edge of the clock 
 *               used to sample receive data). - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_RCCR_REG__RFULL_CYCLE__RFULL_CYCLE0 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_RCCR_REG__RFULL_CYCLE__RFULL_CYCLE1
 *
 * @BRIEF        McBSPLP operates in receive full-cycle mode (receive frame 
 *               synchronization is sampled by the same edge of the clock 
 *               used to sample receive data). - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_RCCR_REG__RFULL_CYCLE__RFULL_CYCLE1 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_RCCR_REG__RDMAEN__RDMAEN0
 *
 * @BRIEF        When set to zero this bit will gate the external transmit 
 *               DMA request - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_RCCR_REG__RDMAEN__RDMAEN0    0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_RCCR_REG__RDMAEN__RDMAEN1
 *
 * @BRIEF        When set to one this bit will NOT gate the external transmit 
 *               DMA request - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_RCCR_REG__RDMAEN__RDMAEN1    0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_RCCR_REG__RDISABLE__RDSB0
 *
 * @BRIEF        the receive process will NOT stop at the next frame 
 *               boundary. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_RCCR_REG__RDISABLE__RDSB0    0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_RCCR_REG__RDISABLE__RDSB1
 *
 * @BRIEF        When this bit is set the receive process will stop at the 
 *               next frame boundary. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_RCCR_REG__RDISABLE__RDSB1    0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_SSELCR_REG__SIDETONEEN__SIDETONEEN0
 *
 * @BRIEF        Sidetone disabled. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_SSELCR_REG__SIDETONEEN__SIDETONEEN0 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MCBSPLP__MCBSPLP_SSELCR_REG__SIDETONEEN__SIDETONEEN1
 *
 * @BRIEF        Sidetone enabled.  - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MCBSPLP__MCBSPLP_SSELCR_REG__SIDETONEEN__SIDETONEEN1 0x1ul

#ifdef __cplusplus
}
#endif
#endif                                                     /* __MCBSPLP_CRED_H 
                                                            */

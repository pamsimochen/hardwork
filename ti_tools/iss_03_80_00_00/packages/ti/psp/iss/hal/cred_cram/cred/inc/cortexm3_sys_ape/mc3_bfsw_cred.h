/** ==================================================================
 *  @file   mc3_bfsw_cred.h                                                  
 *                                                                    
 *  @path   /ti/psp/iss/hal/cred_cram/cred/inc/cortexm3_sys_ape/                                                  
 *                                                                    
 *  @desc   This  File contains.                                      
 * ===================================================================
 *  Copyright (c) Texas Instruments Inc 2011, 2012                    
 *                                                                    
 *  Use of this software is controlled by the terms and conditions found
 *  in the license agreement under which this software has been supplied
 * ===================================================================*/

/* ============================================================================ 
 * TEXAS INSTRUMENTS INCORPORATED PROPRIETARY INFORMATION Property of Texas
 * Instruments For Unrestricted Internal Use Only Unauthorized reproduction
 * and/or distribution is strictly prohibited.  This product is protected
 * under copyright law and trade secret law as an unpublished work.  Created
 * 2008, (C) Copyright 2008 Texas Instruments.  All rights reserved. */

/**
 *  @Component:   MC3_BFSW
 *
 *  @Filename:    mc3_bfsw_cred.h
 *
 *  @Description: Component description is not available
 *
 *  Generated by: Socrates CRED generator prototype
 *
    *//* ====================================================================== */

#ifndef __MC3_BFSW_CRED_H
#define __MC3_BFSW_CRED_H

#ifdef __cplusplus
extern "C" {
#endif

    /* 
     * Instance MC3_CFG__BFSW of component MC3_BFSW mapped in MONICA at address 0x5A059200
     */

                                                                              /*-------------------------------------------------------------------------*//**
 * @DEFINITION   BITFIELD
 *
 * @BRIEF        The bitfield must be defined according to register width
 *               of the component - 64/32/16/8
 *
    *//*------------------------------------------------------------------------ */
#undef BITFIELD
#define BITFIELD BITFIELD_32

    /* 
     *  List of Register arrays for component MC3_BFSW
     *
     */

    /* 
     *  List of bundle arrays for component MC3_BFSW
     *
     */

    /* 
     *  List of bundles for component MC3_BFSW
     *
     */

    /* 
     * List of registers for component MC3_BFSW
     *
     */

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MC3_BFSW__VIEWMODE
 *
 * @BRIEF        View Mode Register. 
 *               It selects full-view mode or ping-pong view mode. 
 *
    *//*------------------------------------------------------------------------ */
#define MC3_BFSW__VIEWMODE                                 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MC3_BFSW__MSTID1
 *
 * @BRIEF        Master ID 1 Register 
 *               Select master between HWA and DMA bus. 
 *               This register is used in both full view and ping-pong view 
 *               mode. 
 *               This register is for buffers which has two physical 
 *               memories. 
 *               This register is affected by direct_switch_pi input port. 
 *
    *//*------------------------------------------------------------------------ */
#define MC3_BFSW__MSTID1                                   0x4ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MC3_BFSW__MSTID2
 *
 * @BRIEF        Master ID 1 Register 
 *               Select master between HWA and DMA bus. 
 *               This register is for buffers which has only one physical 
 *               memory. 
 *               This register is NOT affected by direct_switch_pi input 
 *               port. 
 *
    *//*------------------------------------------------------------------------ */
#define MC3_BFSW__MSTID2                                   0x8ul

    /* 
     * List of register bitfields for component MC3_BFSW
     *
     */

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MC3_BFSW__VIEWMODE__VIEW_YBUF   
 *
 * @BRIEF        View mode selection for Y buffer. 
 *               When '0', full view mode is selected. 
 *               When '1', ping-pong view mode is selected. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MC3_BFSW__VIEWMODE__VIEW_YBUF                 BITFIELD(1, 1)
#define MC3_BFSW__VIEWMODE__VIEW_YBUF__POS            1

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MC3_BFSW__VIEWMODE__VIEW_XBUF   
 *
 * @BRIEF        View mode selection for X buffer. 
 *               When '0', full view mode is selected. 
 *               When '1', ping-pong view mode is selected. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MC3_BFSW__VIEWMODE__VIEW_XBUF                 BITFIELD(0, 0)
#define MC3_BFSW__VIEWMODE__VIEW_XBUF__POS            0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MC3_BFSW__MSTID1__MST_YBUF_B   
 *
 * @BRIEF        Master selection for Y buffer B. 
 *               This bit is used in only ping-pong view mode. 
 *               when '0', buffer B is assigned to DMA 
 *               when '1', buffer B is assigned to HWA. 
 *               This bit has no effect in full view mode. 
 *               If direct_switch_pi is high, the value of this bit is 
 *               inverted. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MC3_BFSW__MSTID1__MST_YBUF_B                  BITFIELD(3, 3)
#define MC3_BFSW__MSTID1__MST_YBUF_B__POS             3

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MC3_BFSW__MSTID1__MST_YBUF_A   
 *
 * @BRIEF        Master selection for Y buffer A. 
 *               This bit is used in both full view and ping-pong view mode. 
 *               In full viw mode, 
 *               when '0', both buffer A and B are assigned to DMA 
 *               when '1', both buffer A and B are assigned to HWA. 
 *               In ping-pong view mode, 
 *               when '0', buffer A is assigned to DMA 
 *               when '1', buffer A is assigned to HWA. 
 *               (Buffer B is not affected in ping-pong view mode.) 
 *               If direct_switch_pi is high, the value of this bit is 
 *               inverted. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MC3_BFSW__MSTID1__MST_YBUF_A                  BITFIELD(2, 2)
#define MC3_BFSW__MSTID1__MST_YBUF_A__POS             2

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MC3_BFSW__MSTID1__MST_XBUF_B   
 *
 * @BRIEF        Master selection for X buffer B. 
 *               This bit is used in only ping-pong view mode. 
 *               when '0', buffer B is assigned to DMA 
 *               when '1', buffer B is assigned to HWA. 
 *               This bit has no effect in full view mode. 
 *               If direct_switch_pi is high, the value of this bit is 
 *               inverted. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MC3_BFSW__MSTID1__MST_XBUF_B                  BITFIELD(1, 1)
#define MC3_BFSW__MSTID1__MST_XBUF_B__POS             1

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MC3_BFSW__MSTID1__MST_XBUF_A   
 *
 * @BRIEF        Master selection for X buffer A. 
 *               This bit is used in both full view and ping-pong view mode. 
 *               In full viw mode, 
 *               when '0', both buffer A and B are assigned to DMA 
 *               when '1', both buffer A and B are assigned to HWA. 
 *               In ping-pong view mode, 
 *               when '0', buffer A is assigned to DMA 
 *               when '1', buffer A is assigned to HWA. 
 *               (Buffer B is not affected in ping-pong view mode.) 
 *               If direct_switch_pi is high, the value of this bit is 
 *               inverted. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MC3_BFSW__MSTID1__MST_XBUF_A                  BITFIELD(0, 0)
#define MC3_BFSW__MSTID1__MST_XBUF_A__POS             0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MC3_BFSW__MSTID2__RSRV   
 *
 * @BRIEF        Reserved. 
 *               '0' will be returned at Read, and Write will be ignored. - 
 *               (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define MC3_BFSW__MSTID2__RSRV                        BITFIELD(31, 2)
#define MC3_BFSW__MSTID2__RSRV__POS                   2

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MC3_BFSW__MSTID2__MST_JBUF   
 *
 * @BRIEF        Master selection for J buffer. 
 *               when '0', the buffer is assigned to DMA 
 *               when '1', the buffer is assigned to HWA. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define MC3_BFSW__MSTID2__MST_JBUF                    BITFIELD(1, 1)
#define MC3_BFSW__MSTID2__MST_JBUF__POS               1

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MC3_BFSW__MSTID2__MST_IBUF   
 *
 * @BRIEF        Master selection for I buffer. 
 *               when '0', the buffer is assigned to DMA 
 *               when '1', the buffer is assigned to HWA. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define MC3_BFSW__MSTID2__MST_IBUF                    BITFIELD(0, 0)
#define MC3_BFSW__MSTID2__MST_IBUF__POS               0

    /* 
     * List of register bitfields values for component MC3_BFSW
     *
     */

#ifdef __cplusplus
}
#endif
#endif                                                     /* __MC3_BFSW_CRED_H 
                                                            */

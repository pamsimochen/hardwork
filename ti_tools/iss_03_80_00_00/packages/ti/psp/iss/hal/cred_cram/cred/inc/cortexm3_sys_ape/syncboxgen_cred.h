/** ==================================================================
 *  @file   syncboxgen_cred.h                                                  
 *                                                                    
 *  @path   /ti/psp/iss/hal/cred_cram/cred/inc/cortexm3_sys_ape/                                                  
 *                                                                    
 *  @desc   This  File contains.                                      
 * ===================================================================
 *  Copyright (c) Texas Instruments Inc 2011, 2012                    
 *                                                                    
 *  Use of this software is controlled by the terms and conditions found
 *  in the license agreement under which this software has been supplied
 * ===================================================================*/

/* ============================================================================ 
 * TEXAS INSTRUMENTS INCORPORATED PROPRIETARY INFORMATION Property of Texas
 * Instruments For Unrestricted Internal Use Only Unauthorized reproduction
 * and/or distribution is strictly prohibited.  This product is protected
 * under copyright law and trade secret law as an unpublished work.  Created
 * 2008, (C) Copyright 2008 Texas Instruments.  All rights reserved. */

/**
 *  @Component:   SYNCBOXGEN
 *
 *  @Filename:    syncboxgen_cred.h
 *
 *  @Description: SyncBox module registers mapping and description. 
 *
 *  Generated by: Socrates CRED generator prototype
 *
    *//* ====================================================================== */

#ifndef __SYNCBOXGEN_CRED_H
#define __SYNCBOXGEN_CRED_H

#ifdef __cplusplus
extern "C" {
#endif

    /* 
     * Instance ICONT1_SB__SYNCBOX of component SYNCBOXGEN mapped in MONICA at address 0x5A060000
     * Instance ICONT2_SB__SYNCBOX of component SYNCBOXGEN mapped in MONICA at address 0x5A060800
     * Instance ILF3_SB__SYNCBOX of component SYNCBOXGEN mapped in MONICA at address 0x5A061000
     * Instance IME3_SB__SYNCBOX of component SYNCBOXGEN mapped in MONICA at address 0x5A061800
     * Instance CALC3_SB__SYNCBOX of component SYNCBOXGEN mapped in MONICA at address 0x5A062000
     * Instance IPE3_SB__SYNCBOX of component SYNCBOXGEN mapped in MONICA at address 0x5A062800
     * Instance MC3_SB__SYNCBOX of component SYNCBOXGEN mapped in MONICA at address 0x5A063000
     * Instance ECD3_SB__SYNCBOX of component SYNCBOXGEN mapped in MONICA at address 0x5A063800
     */

                                                                              /*-------------------------------------------------------------------------*//**
 * @DEFINITION   BITFIELD
 *
 * @BRIEF        The bitfield must be defined according to register width
 *               of the component - 64/32/16/8
 *
    *//*------------------------------------------------------------------------ */
#undef BITFIELD
#define BITFIELD BITFIELD_32

    /* 
     *  List of Register arrays for component SYNCBOXGEN
     *
     */

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__REMOTEASYNCACTMSG
 *
 * @BRIEF        contains the task and node identifier to sent the activation 
 *               message to, upon detection of an asynchronous event 
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__REMOTEASYNCACTMSG                      0xC0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__REMOTEASYNCACTMSG__ELSIZE
 *
 * @BRIEF        REMOTEASYNCACTMSG register array element size in Bytes
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__REMOTEASYNCACTMSG__ELSIZE              0x4ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__REMOTEASYNCACTMSG__NELEMS
 *
 * @BRIEF        REMOTEASYNCACTMSG register array number of elements
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__REMOTEASYNCACTMSG__NELEMS              6

    /* 
     *  List of bundle arrays for component SYNCBOXGEN
     *
     */
                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__TASKREGISTERSFILE
 *
 * @BRIEF        Bundle description is not available
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__TASKREGISTERSFILE                      0x100ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__TASKREGISTERSFILE__ELSIZE
 *
 * @BRIEF        TASKREGISTERSFILE bundle array element size in Bytes
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__TASKREGISTERSFILE__ELSIZE              0x80ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__TASKREGISTERSFILE__NELEMS
 *
 * @BRIEF        TASKREGISTERSFILE bundle array number of elements
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__TASKREGISTERSFILE__NELEMS              6

    /* 
     *  List of bundles for component SYNCBOXGEN
     *
     */

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__OCP_REG
 *
 * @BRIEF        Bundle description is not available
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__OCP_REG                                0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__SYNCBOX_REVISION__OFFSET
 *
 * @BRIEF        Register SYNCBOX_REVISION offset in bundle OCP_REG 
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__SYNCBOX_REVISION__OFFSET               0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__SYSCONFIG__OFFSET
 *
 * @BRIEF        Register SYSCONFIG offset in bundle OCP_REG 
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__SYSCONFIG__OFFSET                      0x10ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__REMOTESYNCACTMSGREG1__OFFSET
 *
 * @BRIEF        Register REMOTESYNCACTMSGREG1 offset in bundle TASKREGISTERSFILE 
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__REMOTESYNCACTMSGREG1__OFFSET           0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__REMOTESYNCACTMSGREG2__OFFSET
 *
 * @BRIEF        Register REMOTESYNCACTMSGREG2 offset in bundle TASKREGISTERSFILE 
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__REMOTESYNCACTMSGREG2__OFFSET           0x4ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__REMOTESYNCACTMSGREG3__OFFSET
 *
 * @BRIEF        Register REMOTESYNCACTMSGREG3 offset in bundle TASKREGISTERSFILE 
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__REMOTESYNCACTMSGREG3__OFFSET           0x8ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__REMOTESYNCACTMSGREG4__OFFSET
 *
 * @BRIEF        Register REMOTESYNCACTMSGREG4 offset in bundle TASKREGISTERSFILE 
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__REMOTESYNCACTMSGREG4__OFFSET           0xCul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__ACTIVATIONMASK__OFFSET
 *
 * @BRIEF        Register ACTIVATIONMASK offset in bundle TASKREGISTERSFILE 
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__ACTIVATIONMASK__OFFSET                 0x10ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__ACTIVATIONCONTROL__OFFSET
 *
 * @BRIEF        Register ACTIVATIONCONTROL offset in bundle TASKREGISTERSFILE 
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__ACTIVATIONCONTROL__OFFSET              0x14ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__NEWTASKCOUNTER__OFFSET
 *
 * @BRIEF        Register NEWTASKCOUNTER offset in bundle TASKREGISTERSFILE 
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__NEWTASKCOUNTER__OFFSET                 0x18ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__PARAMADDR_BASE__OFFSET
 *
 * @BRIEF        Register PARAMADDR_BASE offset in bundle TASKREGISTERSFILE 
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__PARAMADDR_BASE__OFFSET                 0x20ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__PARAMADDR_INC__OFFSET
 *
 * @BRIEF        Register PARAMADDR_INC offset in bundle TASKREGISTERSFILE 
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__PARAMADDR_INC__OFFSET                  0x24ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__PARAMADDR_IF__OFFSET
 *
 * @BRIEF        Register PARAMADDR_IF offset in bundle TASKREGISTERSFILE 
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__PARAMADDR_IF__OFFSET                   0x28ul

    /* 
     * List of registers for component SYNCBOXGEN
     *
     */

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__SYNCBOX_REVISION
 *
 * @BRIEF        contains the revision number on 32 bit 
 *                compliant Higlander 
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__SYNCBOX_REVISION                       0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__SYSCONFIG
 *
 * @BRIEF        This register allows controlling various parameters of the 
 *               OCP interface 
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__SYSCONFIG                              0x10ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__RXMESSAGE
 *
 * @BRIEF        Register  containing the received message, from the CTL_IN 
 *               interface or MSG_IN interface 
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__RXMESSAGE                              0x40ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__NODEIDENTIFIER
 *
 * @BRIEF        Contains the node identifier. 
 *               Initialized by default to the tie-off value 
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__NODEIDENTIFIER                         0x44ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__ERRORMSGDEST
 *
 * @BRIEF        register containing the node and task identifier to send an 
 *               activation message when an error is detected 
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__ERRORMSGDEST                           0x48ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__ERRORLOG
 *
 * @BRIEF        contains the different errors latched during message 
 *               decoding 
 *               Any write to the register will reset the current value 
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__ERRORLOG                               0x4Cul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__ASYNCEVENTACKREQ
 *
 * @BRIEF        each bit in this register is defining if the corresponding 
 *               asynchronous line event need a acknowledge upon task 
 *               completion or directly when the line is raised 
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__ASYNCEVENTACKREQ                       0x50ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__PARAMADDR_MOD
 *
 * @BRIEF        Modulo value for the configuration parameter pointer 
 *               computed by syncbox 
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__PARAMADDR_MOD                          0x54ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__TASKSYNCTYPE
 *
 * @BRIEF        This register is used to code the task synchronous type: 
 *               bit = 0: synchronous task 
 *               bit = 1: asynchronous task 
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__TASKSYNCTYPE                           0x58ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__STATUS
 *
 * @BRIEF        Register description is not available
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__STATUS                                 0x60ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__DBG_CAP
 *
 * @BRIEF        This register contains the node revision code (all syncbox 
 *               types) 
 *               and all debug capacities of the module for HWa based syncbox 
 *               only 
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__DBG_CAP                                0x80ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__DBG_CNTL
 *
 * @BRIEF        Register description is not available
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__DBG_CNTL                               0x84ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__REMOTESYNCACTMSGREG1
 *
 * @BRIEF        Contains destination task identifier and destination node 
 *               identifier for activation messages to be sent upon task 
 *               completion. 
 *               Valid bit is used to loop on all registers of the bundle 
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__REMOTESYNCACTMSGREG1                   0x100ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__REMOTESYNCACTMSGREG2
 *
 * @BRIEF        Contains destination task identifier and destination node 
 *               identifier for activation messages to be sent upon task 
 *               completion. 
 *               Valid bit is used to loop on all registers of the bundle 
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__REMOTESYNCACTMSGREG2                   0x104ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__REMOTESYNCACTMSGREG3
 *
 * @BRIEF        Contains destination task identifier and destination node 
 *               identifier for activation messages to be sent upon task 
 *               completion. 
 *               Valid bit is used to loop on all registers of the bundle 
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__REMOTESYNCACTMSGREG3                   0x108ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__REMOTESYNCACTMSGREG4
 *
 * @BRIEF        Contains destination task identifier and destination node 
 *               identifier for activation messages to be sent upon task 
 *               completion. 
 *               Valid bit is used to loop on all registers of the bundle 
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__REMOTESYNCACTMSGREG4                   0x10Cul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__ACTIVATIONMASK
 *
 * @BRIEF        For synchronous task description of bitfields given below 
 *               applies. 
 *               For asynchronous task, only the 16 lsbs are used. 
 *               Each of the 16 lsb is corresponding to a 1hot encoding value 
 *               for the node identifier. 
 *               16 MSBs write access is protected by the corresponding bit 
 *               in the TasksyncType register 
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__ACTIVATIONMASK                         0x110ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__ACTIVATIONCONTROL
 *
 * @BRIEF        contains the 4 activation counters 
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__ACTIVATIONCONTROL                      0x114ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__NEWTASKCOUNTER
 *
 * @BRIEF        Register description is not available
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__NEWTASKCOUNTER                         0x118ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__PARAMADDR_BASE
 *
 * @BRIEF        base address for the node configuration parameters 
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__PARAMADDR_BASE                         0x120ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__PARAMADDR_INC
 *
 * @BRIEF        contains the paramater address increment to be added to the 
 *               current parameter address pointer 
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__PARAMADDR_INC                          0x124ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__PARAMADDR_IF
 *
 * @BRIEF        Interface register containing the current value of the MB 
 *               configuration parameters 
 *               This register is read by the  node core 
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__PARAMADDR_IF                           0x128ul

    /* 
     * List of register bitfields for component SYNCBOXGEN
     *
     */

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__SYNCBOX_REVISION__SCHEME   
 *
 * @BRIEF        Used to distinguish between old scheme and 
 *               current. 
 *               Read 
 *               0x0: Legacy ASP or WTBU scheme  
 *               Read 
 *               0x1 Highlander 0.8 scheme - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__SYNCBOX_REVISION__SCHEME          BITFIELD(31, 30)
#define SYNCBOXGEN__SYNCBOX_REVISION__SCHEME__POS     30

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__SYNCBOX_REVISION__FUNC   
 *
 * @BRIEF        Function indicates a software compatible module 
 *               family. 
 *               If there is no level of software compatibility a new 
 *               Func number (and hence REVISION) should be 
 *               assigned. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__SYNCBOX_REVISION__FUNC            BITFIELD(27, 16)
#define SYNCBOXGEN__SYNCBOX_REVISION__FUNC__POS       16

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__SYNCBOX_REVISION__RTLVERSION   
 *
 * @BRIEF        RTL Version (R), maintained by IP design owner 
 *               RTL follows a numbering such as X.Y.R.Z which 
 *               are explained in this table. 
 *               R changes ONLY when: 
 *               (1) PDS uploads occur which may have been due to spec 
 *               changes 
 *               (2) Bug fixes occur 
 *               (3) Resets to '0' when X or Y changes. 
 *               Design team has an internal 'Z' (customer invisible) number  
 *               which increments on every dropped 
 *               that happens due to DV and RTL updates. Z 
 *               resets to 0 when - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__SYNCBOX_REVISION__RTLVERSION      BITFIELD(15, 11)
#define SYNCBOXGEN__SYNCBOX_REVISION__RTLVERSION__POS 11

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__SYNCBOX_REVISION__MAJORREVISION   
 *
 * @BRIEF        Major Revision (X), maintained by IP specification owner. 
 *               X changes ONLY when: 
 *               (1) There is a major feature addition.  
 *               The Func field (or Class/Type in old PID format)will remain 
 *               the same. 
 *               X does NOT change due to: 
 *               (1) Bug fixes 
 *               (2) Change in feature parameters. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__SYNCBOX_REVISION__MAJORREVISION   BITFIELD(10, 8)
#define SYNCBOXGEN__SYNCBOX_REVISION__MAJORREVISION__POS 8

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__SYNCBOX_REVISION__CUSTOM   
 *
 * @BRIEF        Indicates a special version for a particular device. 
 *               Consequence of use may avoid use of standard 
 *               Chip Support Library (CSL) / Drivers. 
 *               Read 
 *               0x0: Non custom (standard) revision - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__SYNCBOX_REVISION__CUSTOM          BITFIELD(7, 6)
#define SYNCBOXGEN__SYNCBOX_REVISION__CUSTOM__POS     6

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__SYNCBOX_REVISION__MINERRIVISION   
 *
 * @BRIEF        Minor Revision (Y), maintained by IP specification 
 *               owner. 
 *               Y changes ONLY when: 
 *               (1) Features are scaled (up or down). Flexibility 
 *               exists in that this feature scalability may either be 
 *               represented in the Y change or a specific register 
 *               in the IP that indicates which features are exactly 
 *               available. 
 *               (2) When feature creeps from Is-Not list to Is list. 
 *               But this may not be the case once it sees silicon; 
 *               in which case X will change. 
 *               Y does NOT change due to: 
 *               (1) Bug fixes 
 *               (2) Typos or clarifications 
 *               (3) major functional/feature 
 *               change/addition/deletion. Instead these changes 
 *               may be reflected via R, S, X as applicable. 
 *               Spec owner maintains a customer-invisible 
 *               number 'S' which changes due to: 
 *               (1) Typos/clarifications 
 *               (2) Bug documentation. Note that this bug is not 
 *               due to a spec change but due to implementation. 
 *               Nevertheless, the spec tracks the IP bugs. An RTL 
 *               release (say for silicon PG1.1) that occurs due to 
 *               bug fix should document the corresponding spec 
 *               number (X.Y.S) in its release notes. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__SYNCBOX_REVISION__MINERRIVISION   BITFIELD(5, 0)
#define SYNCBOXGEN__SYNCBOX_REVISION__MINERRIVISION__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__SYSCONFIG__CLEARSTATUS   
 *
 * @BRIEF        set to 1 to clear dynamic registers 
 *               Read 0: Clear status  done, no pending action 
 *               Write 0: No action 
 *               Write 1: Initiate Clear status   
 *               Read 1: Clear status  ongoing - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__SYSCONFIG__CLEARSTATUS            BITFIELD(1, 1)
#define SYNCBOXGEN__SYSCONFIG__CLEARSTATUS__POS       1

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__SYSCONFIG__AUTOIDLE   
 *
 * @BRIEF        Internal OCP clock gating strategy: 
 *                   0:   OCP clock is free running 
 *                   1:   Automatic OCP clock-gating strategy is applied 
 *               based on the OCP interface activity - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__SYSCONFIG__AUTOIDLE               BITFIELD(0, 0)
#define SYNCBOXGEN__SYSCONFIG__AUTOIDLE__POS          0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__RXMESSAGE__RECONFIG   
 *
 * @BRIEF        bit to allow dynamic reconfiguration -Not used - (WO) 
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__RXMESSAGE__RECONFIG               BITFIELD(15, 15)
#define SYNCBOXGEN__RXMESSAGE__RECONFIG__POS          15

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__RXMESSAGE__ACK_REQ   
 *
 * @BRIEF        bit set to 1 in input message if an acknowledge message must 
 *               be sent back - (WO) 
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__RXMESSAGE__ACK_REQ                BITFIELD(14, 14)
#define SYNCBOXGEN__RXMESSAGE__ACK_REQ__POS           14

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__RXMESSAGE__MSG_TYPE   
 *
 * @BRIEF        Message Type 
 *               0: Acknowledge message 
 *               1: Activation message - (WO) 
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__RXMESSAGE__MSG_TYPE               BITFIELD(13, 13)
#define SYNCBOXGEN__RXMESSAGE__MSG_TYPE__POS          13

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__RXMESSAGE__SYNCMODE   
 *
 * @BRIEF        Synchrone  message type: 
 *               0  :synchronous 
 *               1 : asynchronous - (WO) 
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__RXMESSAGE__SYNCMODE               BITFIELD(12, 12)
#define SYNCBOXGEN__RXMESSAGE__SYNCMODE__POS          12

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__RXMESSAGE__DESTTASKID   
 *
 * @BRIEF        Task identifier of the destination node - (WO) 
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__RXMESSAGE__DESTTASKID             BITFIELD(11, 8)
#define SYNCBOXGEN__RXMESSAGE__DESTTASKID__POS        8

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__RXMESSAGE__SOURCETASKID   
 *
 * @BRIEF        Task identifier of the message sender - (WO) 
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__RXMESSAGE__SOURCETASKID           BITFIELD(7, 4)
#define SYNCBOXGEN__RXMESSAGE__SOURCETASKID__POS      4

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__RXMESSAGE__SOURCENODEID   
 *
 * @BRIEF        Node identifier of the message sender - (WO) 
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__RXMESSAGE__SOURCENODEID           BITFIELD(3, 0)
#define SYNCBOXGEN__RXMESSAGE__SOURCENODEID__POS      0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__NODEIDENTIFIER__VALUE   
 *
 * @BRIEF        Bitfield description is not available - (RO)
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__NODEIDENTIFIER__VALUE             BITFIELD(3, 0)
#define SYNCBOXGEN__NODEIDENTIFIER__VALUE__POS        0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__ERRORMSGDEST__VALID_BIT   
 *
 * @BRIEF        validity bit use to send or not the error message to a CPU 
 *               based node - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__ERRORMSGDEST__VALID_BIT           BITFIELD(8, 8)
#define SYNCBOXGEN__ERRORMSGDEST__VALID_BIT__POS      8

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__ERRORMSGDEST__TASK_ID   
 *
 * @BRIEF        identifier for the task in charge of recovering error - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__ERRORMSGDEST__TASK_ID             BITFIELD(7, 4)
#define SYNCBOXGEN__ERRORMSGDEST__TASK_ID__POS        4

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__ERRORMSGDEST__NODE_ID   
 *
 * @BRIEF        Bitfield description is not available - (RW)
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__ERRORMSGDEST__NODE_ID             BITFIELD(3, 0)
#define SYNCBOXGEN__ERRORMSGDEST__NODE_ID__POS        0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__ERRORLOG__TASK_ID   
 *
 * @BRIEF        identifier of the task (or event line) to which error is 
 *               attached. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__ERRORLOG__TASK_ID                 BITFIELD(7, 4)
#define SYNCBOXGEN__ERRORLOG__TASK_ID__POS            4

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__ERRORLOG__ERR_CODE   
 *
 * @BRIEF        4 bit coding the error code - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__ERRORLOG__ERR_CODE                BITFIELD(3, 0)
#define SYNCBOXGEN__ERRORLOG__ERR_CODE__POS           0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__ASYNCEVENTACKREQ__ACKTASK5   
 *
 * @BRIEF        Bitfield description is not available - (RW)
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__ASYNCEVENTACKREQ__ACKTASK5        BITFIELD(5, 5)
#define SYNCBOXGEN__ASYNCEVENTACKREQ__ACKTASK5__POS   5

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__ASYNCEVENTACKREQ__ACKTASK4   
 *
 * @BRIEF        Bitfield description is not available - (RW)
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__ASYNCEVENTACKREQ__ACKTASK4        BITFIELD(4, 4)
#define SYNCBOXGEN__ASYNCEVENTACKREQ__ACKTASK4__POS   4

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__ASYNCEVENTACKREQ__ACKTASK3   
 *
 * @BRIEF        Bitfield description is not available - (RW)
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__ASYNCEVENTACKREQ__ACKTASK3        BITFIELD(3, 3)
#define SYNCBOXGEN__ASYNCEVENTACKREQ__ACKTASK3__POS   3

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__ASYNCEVENTACKREQ__ACKTASK2   
 *
 * @BRIEF        Bitfield description is not available - (RW)
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__ASYNCEVENTACKREQ__ACKTASK2        BITFIELD(2, 2)
#define SYNCBOXGEN__ASYNCEVENTACKREQ__ACKTASK2__POS   2

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__ASYNCEVENTACKREQ__ACKTASK1   
 *
 * @BRIEF        Bitfield description is not available - (RW)
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__ASYNCEVENTACKREQ__ACKTASK1        BITFIELD(1, 1)
#define SYNCBOXGEN__ASYNCEVENTACKREQ__ACKTASK1__POS   1

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__ASYNCEVENTACKREQ__ACKTASK0   
 *
 * @BRIEF        Bitfield description is not available - (RW)
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__ASYNCEVENTACKREQ__ACKTASK0        BITFIELD(0, 0)
#define SYNCBOXGEN__ASYNCEVENTACKREQ__ACKTASK0__POS   0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__PARAMADDR_MOD__VALUE   
 *
 * @BRIEF        number of MB configuration arrays in pipeline - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__PARAMADDR_MOD__VALUE              BITFIELD(7, 0)
#define SYNCBOXGEN__PARAMADDR_MOD__VALUE__POS         0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__TASKSYNCTYPE__T5   
 *
 * @BRIEF        Task synchronous or asynchronous - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__TASKSYNCTYPE__T5                  BITFIELD(5, 5)
#define SYNCBOXGEN__TASKSYNCTYPE__T5__POS             5

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__TASKSYNCTYPE__T4   
 *
 * @BRIEF        Task synchronous or asynchronous - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__TASKSYNCTYPE__T4                  BITFIELD(4, 4)
#define SYNCBOXGEN__TASKSYNCTYPE__T4__POS             4

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__TASKSYNCTYPE__T3   
 *
 * @BRIEF        Task synchronous or asynchronous - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__TASKSYNCTYPE__T3                  BITFIELD(3, 3)
#define SYNCBOXGEN__TASKSYNCTYPE__T3__POS             3

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__TASKSYNCTYPE__T2   
 *
 * @BRIEF        Task synchronous or asynchronous - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__TASKSYNCTYPE__T2                  BITFIELD(2, 2)
#define SYNCBOXGEN__TASKSYNCTYPE__T2__POS             2

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__TASKSYNCTYPE__T1   
 *
 * @BRIEF        Task synchronous or asynchronous - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__TASKSYNCTYPE__T1                  BITFIELD(1, 1)
#define SYNCBOXGEN__TASKSYNCTYPE__T1__POS             1

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__TASKSYNCTYPE__T0   
 *
 * @BRIEF        Task synchronous or asynchronous - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__TASKSYNCTYPE__T0                  BITFIELD(0, 0)
#define SYNCBOXGEN__TASKSYNCTYPE__T0__POS             0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__STATUS__EOTFIFO_5   
 *
 * @BRIEF        endOfTask fifo Emty (0) or not empty (1) - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__STATUS__EOTFIFO_5                 BITFIELD(11, 11)
#define SYNCBOXGEN__STATUS__EOTFIFO_5__POS            11

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__STATUS__COREFSM_5   
 *
 * @BRIEF        Status bit for task 5 - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__STATUS__COREFSM_5                 BITFIELD(10, 10)
#define SYNCBOXGEN__STATUS__COREFSM_5__POS            10

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__STATUS__EOTFIFO_4   
 *
 * @BRIEF        endOfTask fifo Emty (0) or not empty (1) - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__STATUS__EOTFIFO_4                 BITFIELD(9, 9)
#define SYNCBOXGEN__STATUS__EOTFIFO_4__POS            9

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__STATUS__COREFSM_4   
 *
 * @BRIEF        Status bit for task 4 - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__STATUS__COREFSM_4                 BITFIELD(8, 8)
#define SYNCBOXGEN__STATUS__COREFSM_4__POS            8

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__STATUS__EOTFIFO_3   
 *
 * @BRIEF        endOfTask fifo Emty (0) or not empty (1) - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__STATUS__EOTFIFO_3                 BITFIELD(7, 7)
#define SYNCBOXGEN__STATUS__EOTFIFO_3__POS            7

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__STATUS__COREFSM_3   
 *
 * @BRIEF        Status bit for task 3 - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__STATUS__COREFSM_3                 BITFIELD(6, 6)
#define SYNCBOXGEN__STATUS__COREFSM_3__POS            6

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__STATUS__EOTFIFO_2   
 *
 * @BRIEF        endOfTask fifo Emty (0) or not empty (1) - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__STATUS__EOTFIFO_2                 BITFIELD(5, 5)
#define SYNCBOXGEN__STATUS__EOTFIFO_2__POS            5

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__STATUS__COREFSM_2   
 *
 * @BRIEF        Status bit for task 2 - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__STATUS__COREFSM_2                 BITFIELD(4, 4)
#define SYNCBOXGEN__STATUS__COREFSM_2__POS            4

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__STATUS__EOTFIFO_1   
 *
 * @BRIEF        endOfTask fifo Emty (0) or not empty (1) - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__STATUS__EOTFIFO_1                 BITFIELD(3, 3)
#define SYNCBOXGEN__STATUS__EOTFIFO_1__POS            3

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__STATUS__COREFSM_1   
 *
 * @BRIEF        Status bit for task 1 - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__STATUS__COREFSM_1                 BITFIELD(2, 2)
#define SYNCBOXGEN__STATUS__COREFSM_1__POS            2

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__STATUS__EOTFIFO_0   
 *
 * @BRIEF        endOfTask fifo Emty (0) or not empty (1) - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__STATUS__EOTFIFO_0                 BITFIELD(1, 1)
#define SYNCBOXGEN__STATUS__EOTFIFO_0__POS            1

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__STATUS__COREFSM_0   
 *
 * @BRIEF        Status bit for task 0 - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__STATUS__COREFSM_0                 BITFIELD(0, 0)
#define SYNCBOXGEN__STATUS__COREFSM_0__POS            0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__DBG_CAP__DBQ_RESET_SUP   
 *
 * @BRIEF        Whether HWA Core reset is supported or not which does not 
 *               affect debug logic. 
 *               b0 ? Not Supported 
 *               b1 ? Supported - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__DBG_CAP__DBQ_RESET_SUP            BITFIELD(25, 25)
#define SYNCBOXGEN__DBG_CAP__DBQ_RESET_SUP__POS       25

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__DBG_CAP__SYS_EXE_REQ   
 *
 * @BRIEF        Whether HWA Core Execution status and control is supported. 
 *               b0 ? Not Supported 
 *               b1 ? Supported - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__DBG_CAP__SYS_EXE_REQ              BITFIELD(24, 24)
#define SYNCBOXGEN__DBG_CAP__SYS_EXE_REQ__POS         24

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__DBG_CAP__TRIG_OUTPUT   
 *
 * @BRIEF        b0 ? Trigger Outputs are not supported 
 *               b1  - Trigger Outputs are supported - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__DBG_CAP__TRIG_OUTPUT              BITFIELD(23, 23)
#define SYNCBOXGEN__DBG_CAP__TRIG_OUTPUT__POS         23

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__DBG_CAP__TRIG_INPUT   
 *
 * @BRIEF        b0  -  Trigger Inputs are not supported 
 *               b1  -  Trigger Inputs are supported - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__DBG_CAP__TRIG_INPUT               BITFIELD(22, 22)
#define SYNCBOXGEN__DBG_CAP__TRIG_INPUT__POS          22

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__DBG_CAP__TRIG_CHNS   
 *
 * @BRIEF        Number of Trigger Channels Supported 
 *               b00 ------ No channels supported 
 *               b01 ------ One channel supported 
 *               b10 ------ Two channels supported 
 *               Others ---- Reserved - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__DBG_CAP__TRIG_CHNS                BITFIELD(21, 20)
#define SYNCBOXGEN__DBG_CAP__TRIG_CHNS__POS           20

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__DBG_CAP__NUM_CNTS   
 *
 * @BRIEF        The number of counter modules that exist.  The registers 
 *               supporting the counter modules must be implemented 
 *               consecutively in the memory map - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__DBG_CAP__NUM_CNTS                 BITFIELD(19, 16)
#define SYNCBOXGEN__DBG_CAP__NUM_CNTS__POS            16

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__DBG_CAP__NUM_WPS   
 *
 * @BRIEF        The number of watchpoint modules that exist.  The registers 
 *               supporting the watchpoint modules must be implemented 
 *               consecutively in the memory map - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__DBG_CAP__NUM_WPS                  BITFIELD(15, 12)
#define SYNCBOXGEN__DBG_CAP__NUM_WPS__POS             12

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__DBG_CAP__NUM_BPS   
 *
 * @BRIEF        The number of breakpoint modules that exist.  The registers 
 *               supporting the breakpoint modules must be implemented 
 *               consecutively in the memory map. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__DBG_CAP__NUM_BPS                  BITFIELD(11, 8)
#define SYNCBOXGEN__DBG_CAP__NUM_BPS__POS             8

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__DBG_CNTL__DBG_HALT_EMU0   
 *
 * @BRIEF        Execution halted due to trigger in on EMU0 input 
 *               ? Set to ?1? when halt due to EMU0 input completes 
 *               ? Set to ?0? when execution resumes - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__DBG_CNTL__DBG_HALT_EMU0           BITFIELD(12, 12)
#define SYNCBOXGEN__DBG_CNTL__DBG_HALT_EMU0__POS      12

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__DBG_CNTL__DBG_HALT_USER   
 *
 * @BRIEF        Execution halted due to register update of DBG_HALT 
 *               ? Set to ?1? when halt due to DBG_HALT update completes 
 *               ? Set to ?0? when execution resumes - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__DBG_CNTL__DBG_HALT_USER           BITFIELD(11, 11)
#define SYNCBOXGEN__DBG_CNTL__DBG_HALT_USER__POS      11

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__DBG_CNTL__DBG_HALT_STEP   
 *
 * @BRIEF        Execution halted due to single step completion 
 *               ? Set to ?1? when the single step completes 
 *               ? Set to ?0? when execution resumes - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__DBG_CNTL__DBG_HALT_STEP           BITFIELD(10, 10)
#define SYNCBOXGEN__DBG_CNTL__DBG_HALT_STEP__POS      10

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__DBG_CNTL__DBG_EXE_STAT   
 *
 * @BRIEF        The execution status of the module 
 *               ? Set to ?1? when halted due to debug event 
 *               ? Set to ?0? when execution resumes - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__DBG_CNTL__DBG_EXE_STAT            BITFIELD(7, 7)
#define SYNCBOXGEN__DBG_CNTL__DBG_EXE_STAT__POS       7

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__DBG_CNTL__DBG_EMU0_EN   
 *
 * @BRIEF        EMU0 input trigger enable 
 *               ? Writing ?1? enables halting on the falling edge of the 
 *               EMU0 input 
 *               ? Writing ?0? disables halts via EMU0 input - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__DBG_CNTL__DBG_EMU0_EN             BITFIELD(5, 5)
#define SYNCBOXGEN__DBG_CNTL__DBG_EMU0_EN__POS        5

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__DBG_CNTL__DBG_SINGLE_STEP_EN   
 *
 * @BRIEF        Single Step Execution enable 
 *               When this bit is set, the accelerator core shall be halted 
 *               upon execution of   a single instruction. This is after the 
 *               accelerator core has left the halted  
 *               state by clearing the DBG_HALT control bit. 
 *               ? Writing ?1? enables halting when the next instruction 
 *               following exit from halted state is executed.  
 *               ? Writing ?0? disables halts via single step. 
 *                                               
 *               NOTE: 
 *               1. When the accelerator core enters its natural execution 
 *               state, it may or may not execute an instruction and re-enter 
 *               HALTED state. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__DBG_CNTL__DBG_SINGLE_STEP_EN      BITFIELD(2, 2)
#define SYNCBOXGEN__DBG_CNTL__DBG_SINGLE_STEP_EN__POS 2

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__DBG_CNTL__DBG_RESTART   
 *
 * @BRIEF        Debug Restart Status bit 
 *               ? Reading ?1? means HWA Core exited halted state (at least 
 *               temporarily). 
 *               ? Reading ?0? means HWA Core did not exit halted state. 
 *               ? Writing ?1? shall clear the bit if set. There is no 
 *               restriction on when it can be cleared. 
 *               ? Writing ?0? shall have no effect. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__DBG_CNTL__DBG_RESTART             BITFIELD(1, 1)
#define SYNCBOXGEN__DBG_CNTL__DBG_RESTART__POS        1

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__DBG_CNTL__DBG_HALT   
 *
 * @BRIEF        Global debug run control 
 *               The bit will be read as being set upon entry to HALTED state 
 *               due to halted state being entered because of SWBP, HWBP, 
 *               HWWP, EMU0 / 1 trigger or manual halt requested through this 
 *               control. 
 *               ? Writing ?1? when read ?0? shall cause a halt on the next 
 *               possible halt boundary. 
 *               ? Writing ?0? when read ?1? returns the system to the 
 *               natural execution state.  
 *               ? Reading ?1? means that the halted state has been reached. 
 *               ? Reading ?0? means that the target is in its natural 
 *               execution state. 
 *               NOTE: 
 *               1. The natural execution state means the FSM state entered 
 *               prior to last entry into Halted state.  
 *               2. This would be the last application requested FSM state 
 *               unless the DBG_SYS_EXE_REQ control was used to change it. - 
 *               (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__DBG_CNTL__DBG_HALT                BITFIELD(0, 0)
#define SYNCBOXGEN__DBG_CNTL__DBG_HALT__POS           0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__REMOTEASYNCACTMSG__VALID_BIT   
 *
 * @BRIEF        validity bit of current register content: if set to 0 the 2 
 *               fields dest_node_id and dest_task_id can be ignored. 
 *               If set to 1, the 2 fields dest_node_id and dest_task_id are 
 *               used to send activation message - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__REMOTEASYNCACTMSG__VALID_BIT      BITFIELD(8, 8)
#define SYNCBOXGEN__REMOTEASYNCACTMSG__VALID_BIT__POS 8

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__REMOTEASYNCACTMSG__DEST_TASK_ID   
 *
 * @BRIEF        destination task identifier, telling at which task in 
 *               destination node the activation message must be sent to upon 
 *               task completion - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__REMOTEASYNCACTMSG__DEST_TASK_ID   BITFIELD(7, 4)
#define SYNCBOXGEN__REMOTEASYNCACTMSG__DEST_TASK_ID__POS 4

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__REMOTEASYNCACTMSG__DEST_NODE_ID   
 *
 * @BRIEF        destination node identifier - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__REMOTEASYNCACTMSG__DEST_NODE_ID   BITFIELD(3, 0)
#define SYNCBOXGEN__REMOTEASYNCACTMSG__DEST_NODE_ID__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__REMOTESYNCACTMSGREG1__VALID_BIT   
 *
 * @BRIEF        validity bit of current register content: if set to 0 the 2 
 *               fields dest_node_id and dest_task_id can be ignored. 
 *               If set to 1, the 2 fields dest_node_id and dest_task_id are 
 *               used to send activation message - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__REMOTESYNCACTMSGREG1__VALID_BIT   BITFIELD(8, 8)
#define SYNCBOXGEN__REMOTESYNCACTMSGREG1__VALID_BIT__POS 8

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__REMOTESYNCACTMSGREG1__DEST_TASK_ID   
 *
 * @BRIEF        destination task identifier, telling at which task in 
 *               destination node the activation message must be sent to upon 
 *               task completion - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__REMOTESYNCACTMSGREG1__DEST_TASK_ID BITFIELD(7, 4)
#define SYNCBOXGEN__REMOTESYNCACTMSGREG1__DEST_TASK_ID__POS 4

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__REMOTESYNCACTMSGREG1__DEST_NODE_ID   
 *
 * @BRIEF        destination node identifier - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__REMOTESYNCACTMSGREG1__DEST_NODE_ID BITFIELD(3, 0)
#define SYNCBOXGEN__REMOTESYNCACTMSGREG1__DEST_NODE_ID__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__REMOTESYNCACTMSGREG2__VALID_BIT   
 *
 * @BRIEF        validity bit of current register content: if set to 0 the 2 
 *               fields dest_node_id and dest_task_id can be ignored. 
 *               If set to 1, the 2 fields dest_node_id and dest_task_id are 
 *               used to send activation message - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__REMOTESYNCACTMSGREG2__VALID_BIT   BITFIELD(8, 8)
#define SYNCBOXGEN__REMOTESYNCACTMSGREG2__VALID_BIT__POS 8

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__REMOTESYNCACTMSGREG2__DEST_TASK_ID   
 *
 * @BRIEF        destination task identifier, telling at which task in 
 *               destination node the activation message must be sent to upon 
 *               task completion - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__REMOTESYNCACTMSGREG2__DEST_TASK_ID BITFIELD(7, 4)
#define SYNCBOXGEN__REMOTESYNCACTMSGREG2__DEST_TASK_ID__POS 4

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__REMOTESYNCACTMSGREG2__DEST_NODE_ID   
 *
 * @BRIEF        destination node identifier - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__REMOTESYNCACTMSGREG2__DEST_NODE_ID BITFIELD(3, 0)
#define SYNCBOXGEN__REMOTESYNCACTMSGREG2__DEST_NODE_ID__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__REMOTESYNCACTMSGREG3__VALID_BIT   
 *
 * @BRIEF        validity bit of current register content: if set to 0 the 2 
 *               fields dest_node_id and dest_task_id can be ignored. 
 *               If set to 1, the 2 fields dest_node_id and dest_task_id are 
 *               used to send activation message - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__REMOTESYNCACTMSGREG3__VALID_BIT   BITFIELD(8, 8)
#define SYNCBOXGEN__REMOTESYNCACTMSGREG3__VALID_BIT__POS 8

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__REMOTESYNCACTMSGREG3__DEST_TASK_ID   
 *
 * @BRIEF        destination task identifier, telling at which task in 
 *               destination node the activation message must be sent to upon 
 *               task completion - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__REMOTESYNCACTMSGREG3__DEST_TASK_ID BITFIELD(7, 4)
#define SYNCBOXGEN__REMOTESYNCACTMSGREG3__DEST_TASK_ID__POS 4

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__REMOTESYNCACTMSGREG3__DEST_NODE_ID   
 *
 * @BRIEF        destination node identifier - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__REMOTESYNCACTMSGREG3__DEST_NODE_ID BITFIELD(3, 0)
#define SYNCBOXGEN__REMOTESYNCACTMSGREG3__DEST_NODE_ID__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__REMOTESYNCACTMSGREG4__VALID_BIT   
 *
 * @BRIEF        validity bit of current register content: if set to 0 the 2 
 *               fields dest_node_id and dest_task_id can be ignored. 
 *               If set to 1, the 2 fields dest_node_id and dest_task_id are 
 *               used to send activation message - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__REMOTESYNCACTMSGREG4__VALID_BIT   BITFIELD(8, 8)
#define SYNCBOXGEN__REMOTESYNCACTMSGREG4__VALID_BIT__POS 8

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__REMOTESYNCACTMSGREG4__DEST_TASK_ID   
 *
 * @BRIEF        destination task identifier, telling at which task in 
 *               destination node the activation message must be sent to upon 
 *               task completion - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__REMOTESYNCACTMSGREG4__DEST_TASK_ID BITFIELD(7, 4)
#define SYNCBOXGEN__REMOTESYNCACTMSGREG4__DEST_TASK_ID__POS 4

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__REMOTESYNCACTMSGREG4__DEST_NODE_ID   
 *
 * @BRIEF        destination node identifier - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__REMOTESYNCACTMSGREG4__DEST_NODE_ID BITFIELD(3, 0)
#define SYNCBOXGEN__REMOTESYNCACTMSGREG4__DEST_NODE_ID__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__ACTIVATIONMASK__TASK_ID3   
 *
 * @BRIEF        for synchronous message : 
 *               each quad bits contains the task id of a potential activator 
 *               for asynchronous message : 
 *               this quadbit contains the task id to which the ack message 
 *               must be sent at end of processing - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__ACTIVATIONMASK__TASK_ID3          BITFIELD(31, 28)
#define SYNCBOXGEN__ACTIVATIONMASK__TASK_ID3__POS     28

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__ACTIVATIONMASK__TASK_ID2   
 *
 * @BRIEF        for synchronous message : 
 *               each quad bits contains the task id of a potential activator 
 *               for asynchronous message : 
 *               this  quadbit contains the node id to which the ack message 
 *               must be sent at end of processing - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__ACTIVATIONMASK__TASK_ID2          BITFIELD(27, 24)
#define SYNCBOXGEN__ACTIVATIONMASK__TASK_ID2__POS     24

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__ACTIVATIONMASK__TASK_ID1   
 *
 * @BRIEF        for synchronous message : 
 *               each quad bits contains the task id of a potential activator 
 *               for asynchronous message : 
 *               this quadbit contains the task id to which the ack message 
 *               must be sent at end of processing - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__ACTIVATIONMASK__TASK_ID1          BITFIELD(23, 20)
#define SYNCBOXGEN__ACTIVATIONMASK__TASK_ID1__POS     20

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__ACTIVATIONMASK__TASK_ID0   
 *
 * @BRIEF        for synchronous message : 
 *               each quad bits contains the task id of a potential activator 
 *               for asynchronous message : 
 *               this  quadbit contains the node id to which the ack message 
 *               must be sent at end of processing - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__ACTIVATIONMASK__TASK_ID0          BITFIELD(19, 16)
#define SYNCBOXGEN__ACTIVATIONMASK__TASK_ID0__POS     16

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__ACTIVATIONMASK__NODE_ID3   
 *
 * @BRIEF        for synchronous message : 
 *               each quad bits contains the node id of a potential activator 
 *               for asynchronous message : 
 *               bit i set to 1 means an activation message is awaited from 
 *               node i - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__ACTIVATIONMASK__NODE_ID3          BITFIELD(15, 12)
#define SYNCBOXGEN__ACTIVATIONMASK__NODE_ID3__POS     12

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__ACTIVATIONMASK__NODE_ID2   
 *
 * @BRIEF        for synchronous message : 
 *               each quad bits contains theinode id of a potential activator 
 *               for asynchronous message : 
 *               bit i set to 1 means an activation message is awaited from 
 *               node i - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__ACTIVATIONMASK__NODE_ID2          BITFIELD(11, 8)
#define SYNCBOXGEN__ACTIVATIONMASK__NODE_ID2__POS     8

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__ACTIVATIONMASK__NODE_ID1   
 *
 * @BRIEF        for synchronous message : 
 *               each quad bits contains the node d of a potential activator 
 *               for asynchronous message : 
 *               bit i set to 1 means an activation message is awaited from 
 *               node i - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__ACTIVATIONMASK__NODE_ID1          BITFIELD(7, 4)
#define SYNCBOXGEN__ACTIVATIONMASK__NODE_ID1__POS     4

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__ACTIVATIONMASK__NODE_ID0   
 *
 * @BRIEF        for synchronous message : 
 *               each quad bits contains the node id of a potential activator 
 *               for asynchronous message : 
 *               bit i set to 1 means an activation message is awaited from 
 *               node i - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__ACTIVATIONMASK__NODE_ID0          BITFIELD(3, 0)
#define SYNCBOXGEN__ACTIVATIONMASK__NODE_ID0__POS     0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__ACTIVATIONCONTROL__MATCHFLAG   
 *
 * @BRIEF        bit set to 1 when all activation messages received - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__ACTIVATIONCONTROL__MATCHFLAG      BITFIELD(20, 20)
#define SYNCBOXGEN__ACTIVATIONCONTROL__MATCHFLAG__POS 20

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__ACTIVATIONCONTROL__COUNTER3   
 *
 * @BRIEF        Bitfield description is not available - (RO)
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__ACTIVATIONCONTROL__COUNTER3       BITFIELD(19, 15)
#define SYNCBOXGEN__ACTIVATIONCONTROL__COUNTER3__POS  15

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__ACTIVATIONCONTROL__COUNTER2   
 *
 * @BRIEF        Bitfield description is not available - (RO)
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__ACTIVATIONCONTROL__COUNTER2       BITFIELD(14, 10)
#define SYNCBOXGEN__ACTIVATIONCONTROL__COUNTER2__POS  10

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__ACTIVATIONCONTROL__COUNTER1   
 *
 * @BRIEF        Bitfield description is not available - (RO)
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__ACTIVATIONCONTROL__COUNTER1       BITFIELD(9, 5)
#define SYNCBOXGEN__ACTIVATIONCONTROL__COUNTER1__POS  5

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__ACTIVATIONCONTROL__COUNTER0   
 *
 * @BRIEF        associated counter with 1st activator - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__ACTIVATIONCONTROL__COUNTER0       BITFIELD(4, 0)
#define SYNCBOXGEN__ACTIVATIONCONTROL__COUNTER0__POS  0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__NEWTASKCOUNTER__VALUE   
 *
 * @BRIEF        Counter of the number of time the NewTask signal has been 
 *               activated. 
 *               Caution this is not a MB counter since N MB can be processed 
 *               every call. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__NEWTASKCOUNTER__VALUE             BITFIELD(12, 0)
#define SYNCBOXGEN__NEWTASKCOUNTER__VALUE__POS        0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__PARAMADDR_BASE__VALUE   
 *
 * @BRIEF        128 bit address - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__PARAMADDR_BASE__VALUE             BITFIELD(15, 0)
#define SYNCBOXGEN__PARAMADDR_BASE__VALUE__POS        0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__PARAMADDR_INC__VALUE   
 *
 * @BRIEF        value of the increment - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__PARAMADDR_INC__VALUE              BITFIELD(15, 0)
#define SYNCBOXGEN__PARAMADDR_INC__VALUE__POS         0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__PARAMADDR_IF__VALUE   
 *
 * @BRIEF        16 bit value containing a 128 bit pointer - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__PARAMADDR_IF__VALUE               BITFIELD(15, 0)
#define SYNCBOXGEN__PARAMADDR_IF__VALUE__POS          0

    /* 
     * List of register bitfields values for component SYNCBOXGEN
     *
     */

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__ASYNCEVENTACKREQ__ACKTASK5__ASYNCEVENTNOACK
 *
 * @BRIEF        - No Acknowledge message expected on this line - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__ASYNCEVENTACKREQ__ACKTASK5__ASYNCEVENTNOACK 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__ASYNCEVENTACKREQ__ACKTASK5__ASYNCEVENTACK
 *
 * @BRIEF        - Acknowledge message expected on this line - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__ASYNCEVENTACKREQ__ACKTASK5__ASYNCEVENTACK 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__ASYNCEVENTACKREQ__ACKTASK4__ASYNCEVENTNOACK
 *
 * @BRIEF        - No Acknowledge message expected on this line - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__ASYNCEVENTACKREQ__ACKTASK4__ASYNCEVENTNOACK 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__ASYNCEVENTACKREQ__ACKTASK4__ASYNCEVENTACK
 *
 * @BRIEF        - Acknowledge message expected on this line - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__ASYNCEVENTACKREQ__ACKTASK4__ASYNCEVENTACK 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__ASYNCEVENTACKREQ__ACKTASK3__ASYNCEVENTNOACK
 *
 * @BRIEF        - No Acknowledge message expected on this line - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__ASYNCEVENTACKREQ__ACKTASK3__ASYNCEVENTNOACK 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__ASYNCEVENTACKREQ__ACKTASK3__ASYNCEVENTACK
 *
 * @BRIEF        - Acknowledge message expected on this line - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__ASYNCEVENTACKREQ__ACKTASK3__ASYNCEVENTACK 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__ASYNCEVENTACKREQ__ACKTASK2__ASYNCEVENTNOACK
 *
 * @BRIEF        -No  Acknowledge message expected on this line - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__ASYNCEVENTACKREQ__ACKTASK2__ASYNCEVENTNOACK 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__ASYNCEVENTACKREQ__ACKTASK2__ASYNCEVENTACK
 *
 * @BRIEF        - Acknowledge message expected on this line - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__ASYNCEVENTACKREQ__ACKTASK2__ASYNCEVENTACK 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__ASYNCEVENTACKREQ__ACKTASK1__ASYNCEVENTNOACK
 *
 * @BRIEF        -No Acknowledge message expected on this line - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__ASYNCEVENTACKREQ__ACKTASK1__ASYNCEVENTNOACK 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__ASYNCEVENTACKREQ__ACKTASK1__ASYNCEVENTACK
 *
 * @BRIEF        - Acknowledge message expected on this line - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__ASYNCEVENTACKREQ__ACKTASK1__ASYNCEVENTACK 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__ASYNCEVENTACKREQ__ACKTASK0__ASYNCEVENTNOACK
 *
 * @BRIEF        -No Acknowledge message expected on this line - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__ASYNCEVENTACKREQ__ACKTASK0__ASYNCEVENTNOACK 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__ASYNCEVENTACKREQ__ACKTASK0__ASYNCEVENTACK
 *
 * @BRIEF        -Acknowledge message expected on this line - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__ASYNCEVENTACKREQ__ACKTASK0__ASYNCEVENTACK 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__TASKSYNCTYPE__T5__SYNCTYPE
 *
 * @BRIEF        - Synchronous Task - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__TASKSYNCTYPE__T5__SYNCTYPE        0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__TASKSYNCTYPE__T5__SYNCTYPE1
 *
 * @BRIEF        - Asynchronous Task - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__TASKSYNCTYPE__T5__SYNCTYPE1       0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__TASKSYNCTYPE__T4__SYNCTYPE
 *
 * @BRIEF        - Synchronous Task - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__TASKSYNCTYPE__T4__SYNCTYPE        0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__TASKSYNCTYPE__T4__SYNCTYPE1
 *
 * @BRIEF        - Asynchronous Task - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__TASKSYNCTYPE__T4__SYNCTYPE1       0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__TASKSYNCTYPE__T3__SYNCTYPE
 *
 * @BRIEF        - Synchronous Task - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__TASKSYNCTYPE__T3__SYNCTYPE        0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__TASKSYNCTYPE__T3__SYNCTYPE1
 *
 * @BRIEF        - Asynchronous Task - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__TASKSYNCTYPE__T3__SYNCTYPE1       0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__TASKSYNCTYPE__T2__SYNCTYPE
 *
 * @BRIEF        - Synchronous Task - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__TASKSYNCTYPE__T2__SYNCTYPE        0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__TASKSYNCTYPE__T2__SYNCTYPE1
 *
 * @BRIEF        - Asynchronous Task - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__TASKSYNCTYPE__T2__SYNCTYPE1       0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__TASKSYNCTYPE__T1__SYNCTYPE
 *
 * @BRIEF        - Synchronous Task - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__TASKSYNCTYPE__T1__SYNCTYPE        0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__TASKSYNCTYPE__T1__SYNCTYPE1
 *
 * @BRIEF        - Asynchronous Task - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__TASKSYNCTYPE__T1__SYNCTYPE1       0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__TASKSYNCTYPE__T0__SYNCTYPE
 *
 * @BRIEF        - Synchronous Task - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__TASKSYNCTYPE__T0__SYNCTYPE        0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SYNCBOXGEN__TASKSYNCTYPE__T0__SYNCTYPE1
 *
 * @BRIEF        - Asynchronous Task - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SYNCBOXGEN__TASKSYNCTYPE__T0__SYNCTYPE1       0x1ul

#ifdef __cplusplus
}
#endif
#endif                                                     /* __SYNCBOXGEN_CRED_H 
                                                            */

/** ==================================================================
 *  @file   wkup_cm_cred.h                                                  
 *                                                                    
 *  @path   /ti/psp/iss/hal/cred_cram/cred/inc/cortexm3_sys_ape/                                                  
 *                                                                    
 *  @desc   This  File contains.                                      
 * ===================================================================
 *  Copyright (c) Texas Instruments Inc 2011, 2012                    
 *                                                                    
 *  Use of this software is controlled by the terms and conditions found
 *  in the license agreement under which this software has been supplied
 * ===================================================================*/

/* ============================================================================ 
 * TEXAS INSTRUMENTS INCORPORATED PROPRIETARY INFORMATION Property of Texas
 * Instruments For Unrestricted Internal Use Only Unauthorized reproduction
 * and/or distribution is strictly prohibited.  This product is protected
 * under copyright law and trade secret law as an unpublished work.  Created
 * 2008, (C) Copyright 2008 Texas Instruments.  All rights reserved. */

/**
 *  @Component:   WKUP_CM
 *
 *  @Filename:    wkup_cm_cred.h
 *
 *  @Description: Component description is not available
 *
 *  Generated by: Socrates CRED generator prototype
 *
    *//* ====================================================================== */

#ifndef __WKUP_CM_CRED_H
#define __WKUP_CM_CRED_H

#ifdef __cplusplus
extern "C" {
#endif

    /* 
     * Instance WKUP_CM of component WKUP_CM mapped in MONICA at address 0x4A307800
     */

                                                                              /*-------------------------------------------------------------------------*//**
 * @DEFINITION   BITFIELD
 *
 * @BRIEF        The bitfield must be defined according to register width
 *               of the component - 64/32/16/8
 *
    *//*------------------------------------------------------------------------ */
#undef BITFIELD
#define BITFIELD BITFIELD_32

    /* 
     *  List of Register arrays for component WKUP_CM
     *
     */

    /* 
     *  List of bundle arrays for component WKUP_CM
     *
     */

    /* 
     *  List of bundles for component WKUP_CM
     *
     */

    /* 
     * List of registers for component WKUP_CM
     *
     */

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   WKUP_CM__CM_WKUP_CLKSTCTRL
 *
 * @BRIEF        This register enables the domain power state transition. It 
 *               controls the HW supervised domain power state transition 
 *               between ON-ACTIVE and ON-INACTIVE states. It also hold one 
 *               status bit per clock input of the domain. 
 *
    *//*------------------------------------------------------------------------ */
#define WKUP_CM__CM_WKUP_CLKSTCTRL                         0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   WKUP_CM__CM_WKUP_L4WKUP_CLKCTRL
 *
 * @BRIEF        This register manages the L4WKUP clocks. 
 *
    *//*------------------------------------------------------------------------ */
#define WKUP_CM__CM_WKUP_L4WKUP_CLKCTRL                    0x20ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   WKUP_CM__CM_WKUP_WDT1_CLKCTRL
 *
 * @BRIEF        This register manages the WDT1 clocks. 
 *
    *//*------------------------------------------------------------------------ */
#define WKUP_CM__CM_WKUP_WDT1_CLKCTRL                      0x28ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   WKUP_CM__CM_WKUP_WDT2_CLKCTRL
 *
 * @BRIEF        This register manages the WDT2 clocks. 
 *
    *//*------------------------------------------------------------------------ */
#define WKUP_CM__CM_WKUP_WDT2_CLKCTRL                      0x30ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   WKUP_CM__CM_WKUP_GPIO1_CLKCTRL
 *
 * @BRIEF        This register manages the GPIO1 clocks. 
 *
    *//*------------------------------------------------------------------------ */
#define WKUP_CM__CM_WKUP_GPIO1_CLKCTRL                     0x38ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   WKUP_CM__CM_WKUP_TIMER1_CLKCTRL
 *
 * @BRIEF        This register manages the TIMER1 clocks. 
 *
    *//*------------------------------------------------------------------------ */
#define WKUP_CM__CM_WKUP_TIMER1_CLKCTRL                    0x40ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   WKUP_CM__CM_WKUP_TIMER12_CLKCTRL
 *
 * @BRIEF        This register manages the TIMER12 clocks. 
 *
    *//*------------------------------------------------------------------------ */
#define WKUP_CM__CM_WKUP_TIMER12_CLKCTRL                   0x48ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   WKUP_CM__CM_WKUP_SYNCTIMER_CLKCTRL
 *
 * @BRIEF        This register manages the SYNCTIMER clocks. 
 *
    *//*------------------------------------------------------------------------ */
#define WKUP_CM__CM_WKUP_SYNCTIMER_CLKCTRL                 0x50ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   WKUP_CM__CM_WKUP_USIM_CLKCTRL
 *
 * @BRIEF        This register manages the USIM clocks. 
 *
    *//*------------------------------------------------------------------------ */
#define WKUP_CM__CM_WKUP_USIM_CLKCTRL                      0x58ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   WKUP_CM__CM_WKUP_SARRAM_CLKCTRL
 *
 * @BRIEF        This register manages the SARRAM clocks. 
 *
    *//*------------------------------------------------------------------------ */
#define WKUP_CM__CM_WKUP_SARRAM_CLKCTRL                    0x60ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   WKUP_CM__CM_WKUP_KEYBOARD_CLKCTRL
 *
 * @BRIEF        This register manages the KEYBOARD clocks. 
 *
    *//*------------------------------------------------------------------------ */
#define WKUP_CM__CM_WKUP_KEYBOARD_CLKCTRL                  0x78ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   WKUP_CM__CM_WKUP_RTC_CLKCTRL
 *
 * @BRIEF        This register manages the RTC clocks. 
 *
    *//*------------------------------------------------------------------------ */
#define WKUP_CM__CM_WKUP_RTC_CLKCTRL                       0x80ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   WKUP_CM__CM_WKUP_BANDGAP_CLKCTRL
 *
 * @BRIEF        This register manages the bandgap clock. 
 *
    *//*------------------------------------------------------------------------ */
#define WKUP_CM__CM_WKUP_BANDGAP_CLKCTRL                   0x88ul

    /* 
     * List of register bitfields for component WKUP_CM
     *
     */

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   WKUP_CM__CM_WKUP_CLKSTCTRL__CLKACTIVITY_L4_WKUP_GICLK   
 *
 * @BRIEF        This field indicates the state of the L4_WKUP_GICLK clock in 
 *               the domain. 
 *               [warm reset insensitive] - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define WKUP_CM__CM_WKUP_CLKSTCTRL__CLKACTIVITY_L4_WKUP_GICLK BITFIELD(12, 12)
#define WKUP_CM__CM_WKUP_CLKSTCTRL__CLKACTIVITY_L4_WKUP_GICLK__POS 12

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   WKUP_CM__CM_WKUP_CLKSTCTRL__CLKACTIVITY_WKUP_32K_GFCLK   
 *
 * @BRIEF        This field indicates the state of the WKUP_32K_GFCLK clock 
 *               in the domain. 
 *               [warm reset insensitive] - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define WKUP_CM__CM_WKUP_CLKSTCTRL__CLKACTIVITY_WKUP_32K_GFCLK BITFIELD(11, 11)
#define WKUP_CM__CM_WKUP_CLKSTCTRL__CLKACTIVITY_WKUP_32K_GFCLK__POS 11

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   WKUP_CM__CM_WKUP_CLKSTCTRL__CLKACTIVITY_USIM_GFCLK   
 *
 * @BRIEF        This field indicates the state of the USIM_GFCLK clock in 
 *               the domain. 
 *               [warm reset insensitive] - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define WKUP_CM__CM_WKUP_CLKSTCTRL__CLKACTIVITY_USIM_GFCLK BITFIELD(10, 10)
#define WKUP_CM__CM_WKUP_CLKSTCTRL__CLKACTIVITY_USIM_GFCLK__POS 10

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   WKUP_CM__CM_WKUP_CLKSTCTRL__CLKACTIVITY_ABE_LP_CLK   
 *
 * @BRIEF        This field indicates the state of the ABE_LP_CLK clock in 
 *               the domain. 
 *               [warm reset insensitive] - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define WKUP_CM__CM_WKUP_CLKSTCTRL__CLKACTIVITY_ABE_LP_CLK BITFIELD(9, 9)
#define WKUP_CM__CM_WKUP_CLKSTCTRL__CLKACTIVITY_ABE_LP_CLK__POS 9

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   WKUP_CM__CM_WKUP_CLKSTCTRL__CLKACTIVITY_SYS_CLK   
 *
 * @BRIEF        This field indicates the state of the SYS_CLK clock in the 
 *               domain. 
 *               [warm reset insensitive] - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define WKUP_CM__CM_WKUP_CLKSTCTRL__CLKACTIVITY_SYS_CLK BITFIELD(8, 8)
#define WKUP_CM__CM_WKUP_CLKSTCTRL__CLKACTIVITY_SYS_CLK__POS 8

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   WKUP_CM__CM_WKUP_CLKSTCTRL__CLKTRCTRL   
 *
 * @BRIEF        Controls the clock state transition of the WKUP clock 
 *               domain. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define WKUP_CM__CM_WKUP_CLKSTCTRL__CLKTRCTRL         BITFIELD(1, 0)
#define WKUP_CM__CM_WKUP_CLKSTCTRL__CLKTRCTRL__POS    0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   WKUP_CM__CM_WKUP_L4WKUP_CLKCTRL__IDLEST   
 *
 * @BRIEF        Module idle status. [warm reset insensitive] - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define WKUP_CM__CM_WKUP_L4WKUP_CLKCTRL__IDLEST       BITFIELD(17, 16)
#define WKUP_CM__CM_WKUP_L4WKUP_CLKCTRL__IDLEST__POS  16

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   WKUP_CM__CM_WKUP_L4WKUP_CLKCTRL__MODULEMODE   
 *
 * @BRIEF        Control the way mandatory clocks are managed. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define WKUP_CM__CM_WKUP_L4WKUP_CLKCTRL__MODULEMODE   BITFIELD(1, 0)
#define WKUP_CM__CM_WKUP_L4WKUP_CLKCTRL__MODULEMODE__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   WKUP_CM__CM_WKUP_WDT1_CLKCTRL__IDLEST   
 *
 * @BRIEF        Module idle status. [warm reset insensitive] - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define WKUP_CM__CM_WKUP_WDT1_CLKCTRL__IDLEST         BITFIELD(17, 16)
#define WKUP_CM__CM_WKUP_WDT1_CLKCTRL__IDLEST__POS    16

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   WKUP_CM__CM_WKUP_WDT1_CLKCTRL__MODULEMODE   
 *
 * @BRIEF        Control the way mandatory clocks are managed. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define WKUP_CM__CM_WKUP_WDT1_CLKCTRL__MODULEMODE     BITFIELD(1, 0)
#define WKUP_CM__CM_WKUP_WDT1_CLKCTRL__MODULEMODE__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   WKUP_CM__CM_WKUP_WDT2_CLKCTRL__IDLEST   
 *
 * @BRIEF        Module idle status. [warm reset insensitive] - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define WKUP_CM__CM_WKUP_WDT2_CLKCTRL__IDLEST         BITFIELD(17, 16)
#define WKUP_CM__CM_WKUP_WDT2_CLKCTRL__IDLEST__POS    16

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   WKUP_CM__CM_WKUP_WDT2_CLKCTRL__MODULEMODE   
 *
 * @BRIEF        Control the way mandatory clocks are managed. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define WKUP_CM__CM_WKUP_WDT2_CLKCTRL__MODULEMODE     BITFIELD(1, 0)
#define WKUP_CM__CM_WKUP_WDT2_CLKCTRL__MODULEMODE__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   WKUP_CM__CM_WKUP_GPIO1_CLKCTRL__IDLEST   
 *
 * @BRIEF        Module idle status. [warm reset insensitive] - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define WKUP_CM__CM_WKUP_GPIO1_CLKCTRL__IDLEST        BITFIELD(17, 16)
#define WKUP_CM__CM_WKUP_GPIO1_CLKCTRL__IDLEST__POS   16

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   WKUP_CM__CM_WKUP_GPIO1_CLKCTRL__OPTFCLKEN_DBCLK   
 *
 * @BRIEF        Optional functional clock control. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define WKUP_CM__CM_WKUP_GPIO1_CLKCTRL__OPTFCLKEN_DBCLK BITFIELD(8, 8)
#define WKUP_CM__CM_WKUP_GPIO1_CLKCTRL__OPTFCLKEN_DBCLK__POS 8

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   WKUP_CM__CM_WKUP_GPIO1_CLKCTRL__MODULEMODE   
 *
 * @BRIEF        Control the way mandatory clocks are managed. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define WKUP_CM__CM_WKUP_GPIO1_CLKCTRL__MODULEMODE    BITFIELD(1, 0)
#define WKUP_CM__CM_WKUP_GPIO1_CLKCTRL__MODULEMODE__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   WKUP_CM__CM_WKUP_TIMER1_CLKCTRL__CLKSEL   
 *
 * @BRIEF        Select the source of the functional clock - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define WKUP_CM__CM_WKUP_TIMER1_CLKCTRL__CLKSEL       BITFIELD(24, 24)
#define WKUP_CM__CM_WKUP_TIMER1_CLKCTRL__CLKSEL__POS  24

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   WKUP_CM__CM_WKUP_TIMER1_CLKCTRL__IDLEST   
 *
 * @BRIEF        Module idle status. [warm reset insensitive] - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define WKUP_CM__CM_WKUP_TIMER1_CLKCTRL__IDLEST       BITFIELD(17, 16)
#define WKUP_CM__CM_WKUP_TIMER1_CLKCTRL__IDLEST__POS  16

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   WKUP_CM__CM_WKUP_TIMER1_CLKCTRL__MODULEMODE   
 *
 * @BRIEF        Control the way mandatory clocks are managed. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define WKUP_CM__CM_WKUP_TIMER1_CLKCTRL__MODULEMODE   BITFIELD(1, 0)
#define WKUP_CM__CM_WKUP_TIMER1_CLKCTRL__MODULEMODE__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   WKUP_CM__CM_WKUP_TIMER12_CLKCTRL__IDLEST   
 *
 * @BRIEF        Module idle status. [warm reset insensitive] - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define WKUP_CM__CM_WKUP_TIMER12_CLKCTRL__IDLEST      BITFIELD(17, 16)
#define WKUP_CM__CM_WKUP_TIMER12_CLKCTRL__IDLEST__POS 16

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   WKUP_CM__CM_WKUP_TIMER12_CLKCTRL__MODULEMODE   
 *
 * @BRIEF        Control the way mandatory clocks are managed. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define WKUP_CM__CM_WKUP_TIMER12_CLKCTRL__MODULEMODE  BITFIELD(1, 0)
#define WKUP_CM__CM_WKUP_TIMER12_CLKCTRL__MODULEMODE__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   WKUP_CM__CM_WKUP_SYNCTIMER_CLKCTRL__IDLEST   
 *
 * @BRIEF        Module idle status. [warm reset insensitive] - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define WKUP_CM__CM_WKUP_SYNCTIMER_CLKCTRL__IDLEST    BITFIELD(17, 16)
#define WKUP_CM__CM_WKUP_SYNCTIMER_CLKCTRL__IDLEST__POS 16

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   WKUP_CM__CM_WKUP_SYNCTIMER_CLKCTRL__MODULEMODE   
 *
 * @BRIEF        Control the way mandatory clocks are managed. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define WKUP_CM__CM_WKUP_SYNCTIMER_CLKCTRL__MODULEMODE BITFIELD(1, 0)
#define WKUP_CM__CM_WKUP_SYNCTIMER_CLKCTRL__MODULEMODE__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   WKUP_CM__CM_WKUP_USIM_CLKCTRL__CLKSEL_DIV   
 *
 * @BRIEF        Selects the divider configuration on the 128MHz clock 
 *               located in PRM to generate USIM_FCLK clock. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define WKUP_CM__CM_WKUP_USIM_CLKCTRL__CLKSEL_DIV     BITFIELD(24, 24)
#define WKUP_CM__CM_WKUP_USIM_CLKCTRL__CLKSEL_DIV__POS 24

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   WKUP_CM__CM_WKUP_USIM_CLKCTRL__IDLEST   
 *
 * @BRIEF        Module idle status. [warm reset insensitive] - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define WKUP_CM__CM_WKUP_USIM_CLKCTRL__IDLEST         BITFIELD(17, 16)
#define WKUP_CM__CM_WKUP_USIM_CLKCTRL__IDLEST__POS    16

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   WKUP_CM__CM_WKUP_USIM_CLKCTRL__OPTFCLKEN_FCLK   
 *
 * @BRIEF        Optional functional clock control for USIM_GFCLK clock. - 
 *               (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define WKUP_CM__CM_WKUP_USIM_CLKCTRL__OPTFCLKEN_FCLK BITFIELD(8, 8)
#define WKUP_CM__CM_WKUP_USIM_CLKCTRL__OPTFCLKEN_FCLK__POS 8

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   WKUP_CM__CM_WKUP_USIM_CLKCTRL__MODULEMODE   
 *
 * @BRIEF        Control the way mandatory clocks are managed. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define WKUP_CM__CM_WKUP_USIM_CLKCTRL__MODULEMODE     BITFIELD(1, 0)
#define WKUP_CM__CM_WKUP_USIM_CLKCTRL__MODULEMODE__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   WKUP_CM__CM_WKUP_SARRAM_CLKCTRL__IDLEST   
 *
 * @BRIEF        Module idle status. [warm reset insensitive] - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define WKUP_CM__CM_WKUP_SARRAM_CLKCTRL__IDLEST       BITFIELD(17, 16)
#define WKUP_CM__CM_WKUP_SARRAM_CLKCTRL__IDLEST__POS  16

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   WKUP_CM__CM_WKUP_SARRAM_CLKCTRL__MODULEMODE   
 *
 * @BRIEF        Control the way mandatory clocks are managed. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define WKUP_CM__CM_WKUP_SARRAM_CLKCTRL__MODULEMODE   BITFIELD(1, 0)
#define WKUP_CM__CM_WKUP_SARRAM_CLKCTRL__MODULEMODE__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   WKUP_CM__CM_WKUP_KEYBOARD_CLKCTRL__IDLEST   
 *
 * @BRIEF        Module idle status. [warm reset insensitive] - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define WKUP_CM__CM_WKUP_KEYBOARD_CLKCTRL__IDLEST     BITFIELD(17, 16)
#define WKUP_CM__CM_WKUP_KEYBOARD_CLKCTRL__IDLEST__POS 16

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   WKUP_CM__CM_WKUP_KEYBOARD_CLKCTRL__MODULEMODE   
 *
 * @BRIEF        Control the way mandatory clocks are managed. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define WKUP_CM__CM_WKUP_KEYBOARD_CLKCTRL__MODULEMODE BITFIELD(1, 0)
#define WKUP_CM__CM_WKUP_KEYBOARD_CLKCTRL__MODULEMODE__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   WKUP_CM__CM_WKUP_RTC_CLKCTRL__IDLEST   
 *
 * @BRIEF        Module idle status. [warm reset insensitive] - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define WKUP_CM__CM_WKUP_RTC_CLKCTRL__IDLEST          BITFIELD(17, 16)
#define WKUP_CM__CM_WKUP_RTC_CLKCTRL__IDLEST__POS     16

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   WKUP_CM__CM_WKUP_RTC_CLKCTRL__MODULEMODE   
 *
 * @BRIEF        Control the way mandatory clocks are managed. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define WKUP_CM__CM_WKUP_RTC_CLKCTRL__MODULEMODE      BITFIELD(1, 0)
#define WKUP_CM__CM_WKUP_RTC_CLKCTRL__MODULEMODE__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   WKUP_CM__CM_WKUP_BANDGAP_CLKCTRL__OPTFCLKEN_BGAP_32K   
 *
 * @BRIEF        Optional functional clock control. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define WKUP_CM__CM_WKUP_BANDGAP_CLKCTRL__OPTFCLKEN_BGAP_32K BITFIELD(8, 8)
#define WKUP_CM__CM_WKUP_BANDGAP_CLKCTRL__OPTFCLKEN_BGAP_32K__POS 8

    /* 
     * List of register bitfields values for component WKUP_CM
     *
     */

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   WKUP_CM__CM_WKUP_CLKSTCTRL__CLKACTIVITY_L4_WKUP_GICLK__INACT
 *
 * @BRIEF        Corresponding clock is definitely gated - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define WKUP_CM__CM_WKUP_CLKSTCTRL__CLKACTIVITY_L4_WKUP_GICLK__INACT 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   WKUP_CM__CM_WKUP_CLKSTCTRL__CLKACTIVITY_L4_WKUP_GICLK__ACT
 *
 * @BRIEF        Corresponding clock is running or gating/ungating transition 
 *               is on-going - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define WKUP_CM__CM_WKUP_CLKSTCTRL__CLKACTIVITY_L4_WKUP_GICLK__ACT 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   WKUP_CM__CM_WKUP_CLKSTCTRL__CLKACTIVITY_WKUP_32K_GFCLK__INACT
 *
 * @BRIEF        Corresponding clock is definitely gated - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define WKUP_CM__CM_WKUP_CLKSTCTRL__CLKACTIVITY_WKUP_32K_GFCLK__INACT 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   WKUP_CM__CM_WKUP_CLKSTCTRL__CLKACTIVITY_WKUP_32K_GFCLK__ACT
 *
 * @BRIEF        Corresponding clock is running or gating/ungating transition 
 *               is on-going - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define WKUP_CM__CM_WKUP_CLKSTCTRL__CLKACTIVITY_WKUP_32K_GFCLK__ACT 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   WKUP_CM__CM_WKUP_CLKSTCTRL__CLKACTIVITY_USIM_GFCLK__INACT
 *
 * @BRIEF        Corresponding clock is definitely gated - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define WKUP_CM__CM_WKUP_CLKSTCTRL__CLKACTIVITY_USIM_GFCLK__INACT 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   WKUP_CM__CM_WKUP_CLKSTCTRL__CLKACTIVITY_USIM_GFCLK__ACT
 *
 * @BRIEF        Corresponding clock is running or gating/ungating transition 
 *               is on-going - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define WKUP_CM__CM_WKUP_CLKSTCTRL__CLKACTIVITY_USIM_GFCLK__ACT 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   WKUP_CM__CM_WKUP_CLKSTCTRL__CLKACTIVITY_ABE_LP_CLK__INACT
 *
 * @BRIEF        Corresponding clock is definitely gated - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define WKUP_CM__CM_WKUP_CLKSTCTRL__CLKACTIVITY_ABE_LP_CLK__INACT 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   WKUP_CM__CM_WKUP_CLKSTCTRL__CLKACTIVITY_ABE_LP_CLK__ACT
 *
 * @BRIEF        Corresponding clock is running or gating/ungating transition 
 *               is on-going - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define WKUP_CM__CM_WKUP_CLKSTCTRL__CLKACTIVITY_ABE_LP_CLK__ACT 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   WKUP_CM__CM_WKUP_CLKSTCTRL__CLKACTIVITY_SYS_CLK__INACT
 *
 * @BRIEF        Corresponding clock is definitely gated - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define WKUP_CM__CM_WKUP_CLKSTCTRL__CLKACTIVITY_SYS_CLK__INACT 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   WKUP_CM__CM_WKUP_CLKSTCTRL__CLKACTIVITY_SYS_CLK__ACT
 *
 * @BRIEF        Corresponding clock is running or gating/ungating transition 
 *               is on-going - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define WKUP_CM__CM_WKUP_CLKSTCTRL__CLKACTIVITY_SYS_CLK__ACT 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   WKUP_CM__CM_WKUP_CLKSTCTRL__CLKTRCTRL__NO_SLEEP
 *
 * @BRIEF        NO_SLEEP: Sleep transition cannot be initiated. Wakeup 
 *               transition may however occur. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define WKUP_CM__CM_WKUP_CLKSTCTRL__CLKTRCTRL__NO_SLEEP 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   WKUP_CM__CM_WKUP_CLKSTCTRL__CLKTRCTRL__RESERVED_1
 *
 * @BRIEF        Reserved - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define WKUP_CM__CM_WKUP_CLKSTCTRL__CLKTRCTRL__RESERVED_1 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   WKUP_CM__CM_WKUP_CLKSTCTRL__CLKTRCTRL__RESERVED_2
 *
 * @BRIEF        Reserved - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define WKUP_CM__CM_WKUP_CLKSTCTRL__CLKTRCTRL__RESERVED_2 0x2ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   WKUP_CM__CM_WKUP_CLKSTCTRL__CLKTRCTRL__HW_AUTO
 *
 * @BRIEF        HW_AUTO: Automatic transition is enabled. Sleep and wakeup 
 *               transition are based upon hardware conditions. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define WKUP_CM__CM_WKUP_CLKSTCTRL__CLKTRCTRL__HW_AUTO 0x3ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   WKUP_CM__CM_WKUP_L4WKUP_CLKCTRL__IDLEST__FUNC
 *
 * @BRIEF        Module is fully functional, including OCP - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define WKUP_CM__CM_WKUP_L4WKUP_CLKCTRL__IDLEST__FUNC 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   WKUP_CM__CM_WKUP_L4WKUP_CLKCTRL__IDLEST__TRANS
 *
 * @BRIEF        Module is performing transition: wakeup, or sleep, or sleep 
 *               abortion - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define WKUP_CM__CM_WKUP_L4WKUP_CLKCTRL__IDLEST__TRANS 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   WKUP_CM__CM_WKUP_L4WKUP_CLKCTRL__IDLEST__IDLE
 *
 * @BRIEF        Module is in Idle mode (only OCP part). It is functional if 
 *               using separate functional clock - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define WKUP_CM__CM_WKUP_L4WKUP_CLKCTRL__IDLEST__IDLE 0x2ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   WKUP_CM__CM_WKUP_L4WKUP_CLKCTRL__IDLEST__DISABLE
 *
 * @BRIEF        Module is disabled and cannot be accessed - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define WKUP_CM__CM_WKUP_L4WKUP_CLKCTRL__IDLEST__DISABLE 0x3ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   WKUP_CM__CM_WKUP_L4WKUP_CLKCTRL__MODULEMODE__AUTO
 *
 * @BRIEF        Module is managed automatically by HW according to clock 
 *               domain transition. A clock domain sleep transition put 
 *               module into idle. A wakeup domain transition put it back 
 *               into function. If CLKTRCTRL=3, any OCP access to module is 
 *               always granted. Module clocks may be gated according to the 
 *               clock domain state. - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define WKUP_CM__CM_WKUP_L4WKUP_CLKCTRL__MODULEMODE__AUTO 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   WKUP_CM__CM_WKUP_WDT1_CLKCTRL__IDLEST__FUNC
 *
 * @BRIEF        Module is fully functional, including OCP - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define WKUP_CM__CM_WKUP_WDT1_CLKCTRL__IDLEST__FUNC   0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   WKUP_CM__CM_WKUP_WDT1_CLKCTRL__IDLEST__TRANS
 *
 * @BRIEF        Module is performing transition: wakeup, or sleep, or sleep 
 *               abortion - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define WKUP_CM__CM_WKUP_WDT1_CLKCTRL__IDLEST__TRANS  0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   WKUP_CM__CM_WKUP_WDT1_CLKCTRL__IDLEST__IDLE
 *
 * @BRIEF        Module is in Idle mode (only OCP part). It is functional if 
 *               using separate functional clock - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define WKUP_CM__CM_WKUP_WDT1_CLKCTRL__IDLEST__IDLE   0x2ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   WKUP_CM__CM_WKUP_WDT1_CLKCTRL__IDLEST__DISABLE
 *
 * @BRIEF        Module is disabled and cannot be accessed - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define WKUP_CM__CM_WKUP_WDT1_CLKCTRL__IDLEST__DISABLE 0x3ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   WKUP_CM__CM_WKUP_WDT1_CLKCTRL__MODULEMODE__AUTO
 *
 * @BRIEF        Module is managed automatically by HW according to clock 
 *               domain transition. A clock domain sleep transition put 
 *               module into idle. A wakeup domain transition put it back 
 *               into function. If CLKTRCTRL=3, any OCP access to module is 
 *               always granted. Module clocks may be gated according to the 
 *               clock domain state. - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define WKUP_CM__CM_WKUP_WDT1_CLKCTRL__MODULEMODE__AUTO 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   WKUP_CM__CM_WKUP_WDT2_CLKCTRL__IDLEST__FUNC
 *
 * @BRIEF        Module is fully functional, including OCP - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define WKUP_CM__CM_WKUP_WDT2_CLKCTRL__IDLEST__FUNC   0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   WKUP_CM__CM_WKUP_WDT2_CLKCTRL__IDLEST__TRANS
 *
 * @BRIEF        Module is performing transition: wakeup, or sleep, or sleep 
 *               abortion - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define WKUP_CM__CM_WKUP_WDT2_CLKCTRL__IDLEST__TRANS  0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   WKUP_CM__CM_WKUP_WDT2_CLKCTRL__IDLEST__IDLE
 *
 * @BRIEF        Module is in Idle mode (only OCP part). It is functional if 
 *               using separate functional clock - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define WKUP_CM__CM_WKUP_WDT2_CLKCTRL__IDLEST__IDLE   0x2ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   WKUP_CM__CM_WKUP_WDT2_CLKCTRL__IDLEST__DISABLE
 *
 * @BRIEF        Module is disabled and cannot be accessed - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define WKUP_CM__CM_WKUP_WDT2_CLKCTRL__IDLEST__DISABLE 0x3ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   WKUP_CM__CM_WKUP_WDT2_CLKCTRL__MODULEMODE__DISABLED
 *
 * @BRIEF        Module is disable by SW. Any OCP access to module results in 
 *               an error, except if resulting from a module wakeup 
 *               (asynchronous wakeup). - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define WKUP_CM__CM_WKUP_WDT2_CLKCTRL__MODULEMODE__DISABLED 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   WKUP_CM__CM_WKUP_WDT2_CLKCTRL__MODULEMODE__RESERVED_1
 *
 * @BRIEF        Reserved - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define WKUP_CM__CM_WKUP_WDT2_CLKCTRL__MODULEMODE__RESERVED_1 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   WKUP_CM__CM_WKUP_WDT2_CLKCTRL__MODULEMODE__ENABLE
 *
 * @BRIEF        Module is explicitly enabled. Interface clock (if not used 
 *               for functions) may be gated according to the clock domain 
 *               state. Functional clocks are guarantied to stay present. As 
 *               long as in this configuration, power domain sleep transition 
 *               cannot happen. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define WKUP_CM__CM_WKUP_WDT2_CLKCTRL__MODULEMODE__ENABLE 0x2ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   WKUP_CM__CM_WKUP_WDT2_CLKCTRL__MODULEMODE__RESERVED
 *
 * @BRIEF        Reserved - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define WKUP_CM__CM_WKUP_WDT2_CLKCTRL__MODULEMODE__RESERVED 0x3ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   WKUP_CM__CM_WKUP_GPIO1_CLKCTRL__IDLEST__FUNC
 *
 * @BRIEF        Module is fully functional, including OCP - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define WKUP_CM__CM_WKUP_GPIO1_CLKCTRL__IDLEST__FUNC  0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   WKUP_CM__CM_WKUP_GPIO1_CLKCTRL__IDLEST__TRANS
 *
 * @BRIEF        Module is performing transition: wakeup, or sleep, or sleep 
 *               abortion - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define WKUP_CM__CM_WKUP_GPIO1_CLKCTRL__IDLEST__TRANS 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   WKUP_CM__CM_WKUP_GPIO1_CLKCTRL__IDLEST__IDLE
 *
 * @BRIEF        Module is in Idle mode (only OCP part). It is functional if 
 *               using separate functional clock - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define WKUP_CM__CM_WKUP_GPIO1_CLKCTRL__IDLEST__IDLE  0x2ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   WKUP_CM__CM_WKUP_GPIO1_CLKCTRL__IDLEST__DISABLE
 *
 * @BRIEF        Module is disabled and cannot be accessed - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define WKUP_CM__CM_WKUP_GPIO1_CLKCTRL__IDLEST__DISABLE 0x3ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   WKUP_CM__CM_WKUP_GPIO1_CLKCTRL__OPTFCLKEN_DBCLK__FCLK_DIS
 *
 * @BRIEF        Optional functional clock is disabled - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define WKUP_CM__CM_WKUP_GPIO1_CLKCTRL__OPTFCLKEN_DBCLK__FCLK_DIS 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   WKUP_CM__CM_WKUP_GPIO1_CLKCTRL__OPTFCLKEN_DBCLK__FCLK_EN
 *
 * @BRIEF        Optional functional clock is enabled - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define WKUP_CM__CM_WKUP_GPIO1_CLKCTRL__OPTFCLKEN_DBCLK__FCLK_EN 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   WKUP_CM__CM_WKUP_GPIO1_CLKCTRL__MODULEMODE__DISABLED
 *
 * @BRIEF        Module is disable by SW. Any OCP access to module results in 
 *               an error, except if resulting from a module wakeup 
 *               (asynchronous wakeup). - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define WKUP_CM__CM_WKUP_GPIO1_CLKCTRL__MODULEMODE__DISABLED 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   WKUP_CM__CM_WKUP_GPIO1_CLKCTRL__MODULEMODE__AUTO
 *
 * @BRIEF        Module is managed automatically by HW according to clock 
 *               domain transition. A clock domain sleep transition put 
 *               module into idle. A wakeup domain transition put it back 
 *               into function. If CLKTRCTRL=3, any OCP access to module is 
 *               always granted. Module clocks may be gated according to the 
 *               clock domain state. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define WKUP_CM__CM_WKUP_GPIO1_CLKCTRL__MODULEMODE__AUTO 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   WKUP_CM__CM_WKUP_GPIO1_CLKCTRL__MODULEMODE__RESERVED_2
 *
 * @BRIEF        Reserved - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define WKUP_CM__CM_WKUP_GPIO1_CLKCTRL__MODULEMODE__RESERVED_2 0x2ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   WKUP_CM__CM_WKUP_GPIO1_CLKCTRL__MODULEMODE__RESERVED
 *
 * @BRIEF        Reserved - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define WKUP_CM__CM_WKUP_GPIO1_CLKCTRL__MODULEMODE__RESERVED 0x3ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   WKUP_CM__CM_WKUP_TIMER1_CLKCTRL__CLKSEL__SEL_SYS_CLK
 *
 * @BRIEF        Selects the SYS_CLK as the source - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define WKUP_CM__CM_WKUP_TIMER1_CLKCTRL__CLKSEL__SEL_SYS_CLK 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   WKUP_CM__CM_WKUP_TIMER1_CLKCTRL__CLKSEL__SEL_32K_CLK
 *
 * @BRIEF        Selects the 32KHz as the source - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define WKUP_CM__CM_WKUP_TIMER1_CLKCTRL__CLKSEL__SEL_32K_CLK 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   WKUP_CM__CM_WKUP_TIMER1_CLKCTRL__IDLEST__FUNC
 *
 * @BRIEF        Module is fully functional, including OCP - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define WKUP_CM__CM_WKUP_TIMER1_CLKCTRL__IDLEST__FUNC 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   WKUP_CM__CM_WKUP_TIMER1_CLKCTRL__IDLEST__TRANS
 *
 * @BRIEF        Module is performing transition: wakeup, or sleep, or sleep 
 *               abortion - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define WKUP_CM__CM_WKUP_TIMER1_CLKCTRL__IDLEST__TRANS 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   WKUP_CM__CM_WKUP_TIMER1_CLKCTRL__IDLEST__IDLE
 *
 * @BRIEF        Module is in Idle mode (only OCP part). It is functional if 
 *               using separate functional clock - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define WKUP_CM__CM_WKUP_TIMER1_CLKCTRL__IDLEST__IDLE 0x2ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   WKUP_CM__CM_WKUP_TIMER1_CLKCTRL__IDLEST__DISABLE
 *
 * @BRIEF        Module is disabled and cannot be accessed - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define WKUP_CM__CM_WKUP_TIMER1_CLKCTRL__IDLEST__DISABLE 0x3ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   WKUP_CM__CM_WKUP_TIMER1_CLKCTRL__MODULEMODE__DISABLED
 *
 * @BRIEF        Module is disable by SW. Any OCP access to module results in 
 *               an error, except if resulting from a module wakeup 
 *               (asynchronous wakeup). - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define WKUP_CM__CM_WKUP_TIMER1_CLKCTRL__MODULEMODE__DISABLED 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   WKUP_CM__CM_WKUP_TIMER1_CLKCTRL__MODULEMODE__RESERVED_1
 *
 * @BRIEF        Reserved - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define WKUP_CM__CM_WKUP_TIMER1_CLKCTRL__MODULEMODE__RESERVED_1 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   WKUP_CM__CM_WKUP_TIMER1_CLKCTRL__MODULEMODE__ENABLE
 *
 * @BRIEF        Module is explicitly enabled. Interface clock (if not used 
 *               for functions) may be gated according to the clock domain 
 *               state. Functional clocks are guarantied to stay present. As 
 *               long as in this configuration, power domain sleep transition 
 *               cannot happen. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define WKUP_CM__CM_WKUP_TIMER1_CLKCTRL__MODULEMODE__ENABLE 0x2ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   WKUP_CM__CM_WKUP_TIMER1_CLKCTRL__MODULEMODE__RESERVED
 *
 * @BRIEF        Reserved - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define WKUP_CM__CM_WKUP_TIMER1_CLKCTRL__MODULEMODE__RESERVED 0x3ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   WKUP_CM__CM_WKUP_TIMER12_CLKCTRL__IDLEST__FUNC
 *
 * @BRIEF        Module is fully functional, including OCP - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define WKUP_CM__CM_WKUP_TIMER12_CLKCTRL__IDLEST__FUNC 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   WKUP_CM__CM_WKUP_TIMER12_CLKCTRL__IDLEST__TRANS
 *
 * @BRIEF        Module is performing transition: wakeup, or sleep, or sleep 
 *               abortion - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define WKUP_CM__CM_WKUP_TIMER12_CLKCTRL__IDLEST__TRANS 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   WKUP_CM__CM_WKUP_TIMER12_CLKCTRL__IDLEST__IDLE
 *
 * @BRIEF        Module is in Idle mode (only OCP part). It is functional if 
 *               using separate functional clock - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define WKUP_CM__CM_WKUP_TIMER12_CLKCTRL__IDLEST__IDLE 0x2ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   WKUP_CM__CM_WKUP_TIMER12_CLKCTRL__IDLEST__DISABLE
 *
 * @BRIEF        Module is disabled and cannot be accessed - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define WKUP_CM__CM_WKUP_TIMER12_CLKCTRL__IDLEST__DISABLE 0x3ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   WKUP_CM__CM_WKUP_TIMER12_CLKCTRL__MODULEMODE__AUTO
 *
 * @BRIEF        Module is managed automatically by HW according to clock 
 *               domain transition. A clock domain sleep transition put 
 *               module into idle. A wakeup domain transition put it back 
 *               into function. If CLKTRCTRL=3, any OCP access to module is 
 *               always granted. Module clocks may be gated according to the 
 *               clock domain state. - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define WKUP_CM__CM_WKUP_TIMER12_CLKCTRL__MODULEMODE__AUTO 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   WKUP_CM__CM_WKUP_SYNCTIMER_CLKCTRL__IDLEST__FUNC
 *
 * @BRIEF        Module is fully functional, including OCP - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define WKUP_CM__CM_WKUP_SYNCTIMER_CLKCTRL__IDLEST__FUNC 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   WKUP_CM__CM_WKUP_SYNCTIMER_CLKCTRL__IDLEST__TRANS
 *
 * @BRIEF        Module is performing transition: wakeup, or sleep, or sleep 
 *               abortion - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define WKUP_CM__CM_WKUP_SYNCTIMER_CLKCTRL__IDLEST__TRANS 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   WKUP_CM__CM_WKUP_SYNCTIMER_CLKCTRL__IDLEST__IDLE
 *
 * @BRIEF        Module is in Idle mode (only OCP part). It is functional if 
 *               using separate functional clock - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define WKUP_CM__CM_WKUP_SYNCTIMER_CLKCTRL__IDLEST__IDLE 0x2ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   WKUP_CM__CM_WKUP_SYNCTIMER_CLKCTRL__IDLEST__DISABLE
 *
 * @BRIEF        Module is disabled and cannot be accessed - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define WKUP_CM__CM_WKUP_SYNCTIMER_CLKCTRL__IDLEST__DISABLE 0x3ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   WKUP_CM__CM_WKUP_SYNCTIMER_CLKCTRL__MODULEMODE__AUTO
 *
 * @BRIEF        Module is managed automatically by HW according to clock 
 *               domain transition. A clock domain sleep transition put 
 *               module into idle. A wakeup domain transition put it back 
 *               into function. If CLKTRCTRL=3, any OCP access to module is 
 *               always granted. Module clocks may be gated according to the 
 *               clock domain state. - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define WKUP_CM__CM_WKUP_SYNCTIMER_CLKCTRL__MODULEMODE__AUTO 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   WKUP_CM__CM_WKUP_USIM_CLKCTRL__CLKSEL_DIV__DIV_BY_14
 *
 * @BRIEF        Divide by 14 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define WKUP_CM__CM_WKUP_USIM_CLKCTRL__CLKSEL_DIV__DIV_BY_14 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   WKUP_CM__CM_WKUP_USIM_CLKCTRL__CLKSEL_DIV__DIV_BY_18
 *
 * @BRIEF        Divide by 18 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define WKUP_CM__CM_WKUP_USIM_CLKCTRL__CLKSEL_DIV__DIV_BY_18 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   WKUP_CM__CM_WKUP_USIM_CLKCTRL__IDLEST__FUNC
 *
 * @BRIEF        Module is fully functional, including OCP - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define WKUP_CM__CM_WKUP_USIM_CLKCTRL__IDLEST__FUNC   0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   WKUP_CM__CM_WKUP_USIM_CLKCTRL__IDLEST__TRANS
 *
 * @BRIEF        Module is performing transition: wakeup, or sleep, or sleep 
 *               abortion - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define WKUP_CM__CM_WKUP_USIM_CLKCTRL__IDLEST__TRANS  0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   WKUP_CM__CM_WKUP_USIM_CLKCTRL__IDLEST__IDLE
 *
 * @BRIEF        Module is in Idle mode (only OCP part). It is functional if 
 *               using separate functional clock - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define WKUP_CM__CM_WKUP_USIM_CLKCTRL__IDLEST__IDLE   0x2ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   WKUP_CM__CM_WKUP_USIM_CLKCTRL__IDLEST__DISABLE
 *
 * @BRIEF        Module is disabled and cannot be accessed - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define WKUP_CM__CM_WKUP_USIM_CLKCTRL__IDLEST__DISABLE 0x3ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   WKUP_CM__CM_WKUP_USIM_CLKCTRL__OPTFCLKEN_FCLK__FCLK_DIS
 *
 * @BRIEF        Optional functional clock is disabled - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define WKUP_CM__CM_WKUP_USIM_CLKCTRL__OPTFCLKEN_FCLK__FCLK_DIS 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   WKUP_CM__CM_WKUP_USIM_CLKCTRL__OPTFCLKEN_FCLK__FCLK_EN
 *
 * @BRIEF        Optional functional clock is enabled - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define WKUP_CM__CM_WKUP_USIM_CLKCTRL__OPTFCLKEN_FCLK__FCLK_EN 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   WKUP_CM__CM_WKUP_USIM_CLKCTRL__MODULEMODE__DISABLED
 *
 * @BRIEF        Module is disable by SW. Any OCP access to module results in 
 *               an error, except if resulting from a module wakeup 
 *               (asynchronous wakeup). - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define WKUP_CM__CM_WKUP_USIM_CLKCTRL__MODULEMODE__DISABLED 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   WKUP_CM__CM_WKUP_USIM_CLKCTRL__MODULEMODE__AUTO
 *
 * @BRIEF        Module is managed automatically by HW according to clock 
 *               domain transition. A clock domain sleep transition put 
 *               module into idle. A wakeup domain transition put it back 
 *               into function. If CLKTRCTRL=3, any OCP access to module is 
 *               always granted. Module clocks may be gated according to the 
 *               clock domain state. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define WKUP_CM__CM_WKUP_USIM_CLKCTRL__MODULEMODE__AUTO 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   WKUP_CM__CM_WKUP_USIM_CLKCTRL__MODULEMODE__RESERVED_2
 *
 * @BRIEF        Reserved - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define WKUP_CM__CM_WKUP_USIM_CLKCTRL__MODULEMODE__RESERVED_2 0x2ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   WKUP_CM__CM_WKUP_USIM_CLKCTRL__MODULEMODE__RESERVED
 *
 * @BRIEF        Reserved - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define WKUP_CM__CM_WKUP_USIM_CLKCTRL__MODULEMODE__RESERVED 0x3ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   WKUP_CM__CM_WKUP_SARRAM_CLKCTRL__IDLEST__FUNC
 *
 * @BRIEF        Module is fully functional, including OCP - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define WKUP_CM__CM_WKUP_SARRAM_CLKCTRL__IDLEST__FUNC 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   WKUP_CM__CM_WKUP_SARRAM_CLKCTRL__IDLEST__TRANS
 *
 * @BRIEF        Module is performing transition: wakeup, or sleep, or sleep 
 *               abortion - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define WKUP_CM__CM_WKUP_SARRAM_CLKCTRL__IDLEST__TRANS 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   WKUP_CM__CM_WKUP_SARRAM_CLKCTRL__IDLEST__IDLE
 *
 * @BRIEF        Module is in Idle mode (only OCP part). It is functional if 
 *               using separate functional clock - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define WKUP_CM__CM_WKUP_SARRAM_CLKCTRL__IDLEST__IDLE 0x2ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   WKUP_CM__CM_WKUP_SARRAM_CLKCTRL__IDLEST__DISABLE
 *
 * @BRIEF        Module is disabled and cannot be accessed - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define WKUP_CM__CM_WKUP_SARRAM_CLKCTRL__IDLEST__DISABLE 0x3ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   WKUP_CM__CM_WKUP_SARRAM_CLKCTRL__MODULEMODE__AUTO
 *
 * @BRIEF        Module is managed automatically by HW according to clock 
 *               domain transition. A clock domain sleep transition put 
 *               module into idle. A wakeup domain transition put it back 
 *               into function. If CLKTRCTRL=3, any OCP access to module is 
 *               always granted. Module clocks may be gated according to the 
 *               clock domain state. - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define WKUP_CM__CM_WKUP_SARRAM_CLKCTRL__MODULEMODE__AUTO 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   WKUP_CM__CM_WKUP_KEYBOARD_CLKCTRL__IDLEST__FUNC
 *
 * @BRIEF        Module is fully functional, including OCP - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define WKUP_CM__CM_WKUP_KEYBOARD_CLKCTRL__IDLEST__FUNC 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   WKUP_CM__CM_WKUP_KEYBOARD_CLKCTRL__IDLEST__TRANS
 *
 * @BRIEF        Module is performing transition: wakeup, or sleep, or sleep 
 *               abortion - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define WKUP_CM__CM_WKUP_KEYBOARD_CLKCTRL__IDLEST__TRANS 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   WKUP_CM__CM_WKUP_KEYBOARD_CLKCTRL__IDLEST__IDLE
 *
 * @BRIEF        Module is in Idle mode (only OCP part). It is functional if 
 *               using separate functional clock - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define WKUP_CM__CM_WKUP_KEYBOARD_CLKCTRL__IDLEST__IDLE 0x2ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   WKUP_CM__CM_WKUP_KEYBOARD_CLKCTRL__IDLEST__DISABLE
 *
 * @BRIEF        Module is disabled and cannot be accessed - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define WKUP_CM__CM_WKUP_KEYBOARD_CLKCTRL__IDLEST__DISABLE 0x3ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   WKUP_CM__CM_WKUP_KEYBOARD_CLKCTRL__MODULEMODE__DISABLED
 *
 * @BRIEF        Module is disable by SW. Any OCP access to module results in 
 *               an error, except if resulting from a module wakeup 
 *               (asynchronous wakeup). - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define WKUP_CM__CM_WKUP_KEYBOARD_CLKCTRL__MODULEMODE__DISABLED 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   WKUP_CM__CM_WKUP_KEYBOARD_CLKCTRL__MODULEMODE__RESERVED_1
 *
 * @BRIEF        Reserved - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define WKUP_CM__CM_WKUP_KEYBOARD_CLKCTRL__MODULEMODE__RESERVED_1 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   WKUP_CM__CM_WKUP_KEYBOARD_CLKCTRL__MODULEMODE__ENABLE
 *
 * @BRIEF        Module is explicitly enabled. Interface clock (if not used 
 *               for functions) may be gated according to the clock domain 
 *               state. Functional clocks are guarantied to stay present. As 
 *               long as in this configuration, power domain sleep transition 
 *               cannot happen. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define WKUP_CM__CM_WKUP_KEYBOARD_CLKCTRL__MODULEMODE__ENABLE 0x2ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   WKUP_CM__CM_WKUP_KEYBOARD_CLKCTRL__MODULEMODE__RESERVED
 *
 * @BRIEF        Reserved - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define WKUP_CM__CM_WKUP_KEYBOARD_CLKCTRL__MODULEMODE__RESERVED 0x3ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   WKUP_CM__CM_WKUP_RTC_CLKCTRL__IDLEST__FUNC
 *
 * @BRIEF        Module is fully functional, including OCP - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define WKUP_CM__CM_WKUP_RTC_CLKCTRL__IDLEST__FUNC    0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   WKUP_CM__CM_WKUP_RTC_CLKCTRL__IDLEST__TRANS
 *
 * @BRIEF        Module is performing transition: wakeup, or sleep, or sleep 
 *               abortion - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define WKUP_CM__CM_WKUP_RTC_CLKCTRL__IDLEST__TRANS   0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   WKUP_CM__CM_WKUP_RTC_CLKCTRL__IDLEST__IDLE
 *
 * @BRIEF        Module is in Idle mode (only OCP part). It is functional if 
 *               using separate functional clock - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define WKUP_CM__CM_WKUP_RTC_CLKCTRL__IDLEST__IDLE    0x2ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   WKUP_CM__CM_WKUP_RTC_CLKCTRL__IDLEST__DISABLE
 *
 * @BRIEF        Module is disabled and cannot be accessed - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define WKUP_CM__CM_WKUP_RTC_CLKCTRL__IDLEST__DISABLE 0x3ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   WKUP_CM__CM_WKUP_RTC_CLKCTRL__MODULEMODE__DISABLED
 *
 * @BRIEF        Module is disabled (not present). - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define WKUP_CM__CM_WKUP_RTC_CLKCTRL__MODULEMODE__DISABLED 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   WKUP_CM__CM_WKUP_BANDGAP_CLKCTRL__OPTFCLKEN_BGAP_32K__FCLK_DIS
 *
 * @BRIEF        Optional functional clock is disabled - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define WKUP_CM__CM_WKUP_BANDGAP_CLKCTRL__OPTFCLKEN_BGAP_32K__FCLK_DIS 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   WKUP_CM__CM_WKUP_BANDGAP_CLKCTRL__OPTFCLKEN_BGAP_32K__FCLK_EN
 *
 * @BRIEF        Optional functional clock is enabled - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define WKUP_CM__CM_WKUP_BANDGAP_CLKCTRL__OPTFCLKEN_BGAP_32K__FCLK_EN 0x1ul

#ifdef __cplusplus
}
#endif
#endif                                                     /* __WKUP_CM_CRED_H 
                                                            */

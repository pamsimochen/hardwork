/** ==================================================================
 *  @file   imx4_cred.h                                                  
 *                                                                    
 *  @path   /ti/psp/iss/hal/cred_cram/cred/inc/cortexm3_sys_ape/                                                  
 *                                                                    
 *  @desc   This  File contains.                                      
 * ===================================================================
 *  Copyright (c) Texas Instruments Inc 2011, 2012                    
 *                                                                    
 *  Use of this software is controlled by the terms and conditions found
 *  in the license agreement under which this software has been supplied
 * ===================================================================*/

/* ============================================================================ 
 * TEXAS INSTRUMENTS INCORPORATED PROPRIETARY INFORMATION Property of Texas
 * Instruments For Unrestricted Internal Use Only Unauthorized reproduction
 * and/or distribution is strictly prohibited.  This product is protected
 * under copyright law and trade secret law as an unpublished work.  Created
 * 2008, (C) Copyright 2008 Texas Instruments.  All rights reserved. */

/**
 *  @Component:   IMX4
 *
 *  @Filename:    imx4_cred.h
 *
 *  @Description: Component description is not available
 *
 *  Generated by: Socrates CRED generator prototype
 *
    *//* ====================================================================== */

#ifndef __IMX4_CRED_H
#define __IMX4_CRED_H

#ifdef __cplusplus
extern "C" {
#endif

    /* 
     * Instance IMX_A of component IMX4 mapped in MONICA at address 0x55060180
     * Instance IMX_B of component IMX4 mapped in MONICA at address 0x550601C0
     */

                                                                              /*-------------------------------------------------------------------------*//**
 * @DEFINITION   BITFIELD
 *
 * @BRIEF        The bitfield must be defined according to register width
 *               of the component - 64/32/16/8
 *
    *//*------------------------------------------------------------------------ */
#undef BITFIELD
#define BITFIELD BITFIELD_16

    /* 
     *  List of Register arrays for component IMX4
     *
     */

    /* 
     *  List of bundle arrays for component IMX4
     *
     */

    /* 
     *  List of bundles for component IMX4
     *
     */

    /* 
     * List of registers for component IMX4
     *
     */

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   IMX4__IMX_START
 *
 * @BRIEF        iMX start 
 *
    *//*------------------------------------------------------------------------ */
#define IMX4__IMX_START                                    0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   IMX4__IMX_CMDADR
 *
 * @BRIEF        iMX starting address 
 *
    *//*------------------------------------------------------------------------ */
#define IMX4__IMX_CMDADR                                   0x2ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   IMX4__IMX_CMDPTR
 *
 * @BRIEF        iMX command pointer 
 *
    *//*------------------------------------------------------------------------ */
#define IMX4__IMX_CMDPTR                                   0x4ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   IMX4__IMX_CLKCNTRL
 *
 * @BRIEF        iMX clock control 
 *
    *//*------------------------------------------------------------------------ */
#define IMX4__IMX_CLKCNTRL                                 0x6ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   IMX4__IMX_MINMAX_ID
 *
 * @BRIEF        Min/max ID 
 *
    *//*------------------------------------------------------------------------ */
#define IMX4__IMX_MINMAX_ID                                0x8ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   IMX4__IMX_MINMAX_VAL
 *
 * @BRIEF        Min/max value 
 *
    *//*------------------------------------------------------------------------ */
#define IMX4__IMX_MINMAX_VAL                               0xAul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   IMX4__IMX_BRKPT
 *
 * @BRIEF        iMX breakpoint 
 *
    *//*------------------------------------------------------------------------ */
#define IMX4__IMX_BRKPT                                    0xCul

    /* 
     * List of register bitfields for component IMX4
     *
     */

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   IMX4__IMX_START__START   
 *
 * @BRIEF        Write 1 to start 
 *               Read back 0 = idle, 1 = busy - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define IMX4__IMX_START__START                        BITFIELD(0, 0)
#define IMX4__IMX_START__START__POS                   0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   IMX4__IMX_CMDADR__ADR   
 *
 * @BRIEF        Command memory address (16-bit per word) from where iMX 
 *               should start execution - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define IMX4__IMX_CMDADR__ADR                         BITFIELD(12, 0)
#define IMX4__IMX_CMDADR__ADR__POS                    0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   IMX4__IMX_CMDPTR__ADR   
 *
 * @BRIEF        Command memory address (16-bit per word) from  
 *               where iMX is currently decoding the command (read-only) - 
 *               (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define IMX4__IMX_CMDPTR__ADR                         BITFIELD(12, 0)
#define IMX4__IMX_CMDPTR__ADR__POS                    0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   IMX4__IMX_CLKCNTRL__CLKCNTRL   
 *
 * @BRIEF        0: clock is on when busy, clock is off when idle 
 *               1: clock is on all the time - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define IMX4__IMX_CLKCNTRL__CLKCNTRL                  BITFIELD(0, 0)
#define IMX4__IMX_CLKCNTRL__CLKCNTRL__POS             0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   IMX4__IMX_MINMAX_ID__ID   
 *
 * @BRIEF        Min/max ID result from the last min_max or motion_est 
 *               command (read-only) - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define IMX4__IMX_MINMAX_ID__ID                       BITFIELD(15, 0)
#define IMX4__IMX_MINMAX_ID__ID__POS                  0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   IMX4__IMX_MINMAX_VAL__VAL   
 *
 * @BRIEF        Min/max value result from the last min_max or motion_est 
 *               command (read-only) - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define IMX4__IMX_MINMAX_VAL__VAL                     BITFIELD(15, 0)
#define IMX4__IMX_MINMAX_VAL__VAL__POS                0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   IMX4__IMX_BRKPT__STAT   
 *
 * @BRIEF        Break point status (read-only) 
 *               0: not pausing due to breakpoint (busy or idle) 
 *               1: pausing due to breakpoint - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define IMX4__IMX_BRKPT__STAT                         BITFIELD(14, 14)
#define IMX4__IMX_BRKPT__STAT__POS                    14

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   IMX4__IMX_BRKPT__EN   
 *
 * @BRIEF        Breakpoint enable, 0: disable, 1: enable 
 *               When iMX is pausing due to breakpoint, write 1 to resume 
 *               execution - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define IMX4__IMX_BRKPT__EN                           BITFIELD(13, 13)
#define IMX4__IMX_BRKPT__EN__POS                      13

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   IMX4__IMX_BRKPT__ADR   
 *
 * @BRIEF        Breakpoint address, starting command memory address (16-bit) 
 *               of a command, where iMX should pause right before executing 
 *               the command - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define IMX4__IMX_BRKPT__ADR                          BITFIELD(12, 0)
#define IMX4__IMX_BRKPT__ADR__POS                     0

    /* 
     * List of register bitfields values for component IMX4
     *
     */

#ifdef __cplusplus
}
#endif
#endif                                                     /* __IMX4_CRED_H */

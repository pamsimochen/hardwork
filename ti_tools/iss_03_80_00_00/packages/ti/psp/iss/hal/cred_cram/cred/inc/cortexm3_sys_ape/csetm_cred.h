/** ==================================================================
 *  @file   csetm_cred.h                                                  
 *                                                                    
 *  @path   /ti/psp/iss/hal/cred_cram/cred/inc/cortexm3_sys_ape/                                                  
 *                                                                    
 *  @desc   This  File contains.                                      
 * ===================================================================
 *  Copyright (c) Texas Instruments Inc 2011, 2012                    
 *                                                                    
 *  Use of this software is controlled by the terms and conditions found
 *  in the license agreement under which this software has been supplied
 * ===================================================================*/

/* ============================================================================ 
 * TEXAS INSTRUMENTS INCORPORATED PROPRIETARY INFORMATION Property of Texas
 * Instruments For Unrestricted Internal Use Only Unauthorized reproduction
 * and/or distribution is strictly prohibited.  This product is protected
 * under copyright law and trade secret law as an unpublished work.  Created
 * 2008, (C) Copyright 2008 Texas Instruments.  All rights reserved. */

/**
 *  @Component:   CSETM
 *
 *  @Filename:    csetm_cred.h
 *
 *  @Description: Component description is not available
 *
 *  Generated by: Socrates CRED generator prototype
 *
    *//* ====================================================================== */

#ifndef __CSETM_CRED_H
#define __CSETM_CRED_H

#ifdef __cplusplus
extern "C" {
#endif

    /* 
     * Instance CSETM of component CSETM mapped in MONICA at address 0x54140000
     */

                                                                              /*-------------------------------------------------------------------------*//**
 * @DEFINITION   BITFIELD
 *
 * @BRIEF        The bitfield must be defined according to register width
 *               of the component - 64/32/16/8
 *
    *//*------------------------------------------------------------------------ */
#undef BITFIELD
#define BITFIELD BITFIELD_32

    /* 
     *  List of Register arrays for component CSETM
     *
     */

    /* 
     *  List of bundle arrays for component CSETM
     *
     */

    /* 
     *  List of bundles for component CSETM
     *
     */

    /* 
     * List of registers for component CSETM
     *
     */

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_CTRL
 *
 * @BRIEF        Controls the general operation of the ETM, such as whether 
 *               tracing is enabled or coprocessor data is traced. 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_CTRL                                  0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_CONFIGCODE
 *
 * @BRIEF        The configuration code register is read-only. It enables the 
 *               debugger to read the implementation-specific configuration 
 *               of the ETM 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_CONFIGCODE                            0x4ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_TRIGGER
 *
 * @BRIEF        Holds the controlling event. 
 *               Read/write if bit 27 of the Configuration Code register 
 *               (0x01) is set. (ETMv3.1 and above) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_TRIGGER                               0x8ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_ETMSTATUS
 *
 * @BRIEF        Holds miscellaneous status information. 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_ETMSTATUS                             0x10ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_SYSCFG
 *
 * @BRIEF        Indicates support for features by the ASIC. 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_SYSCFG                                0x14ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_TRACE_STARTSTOP_CTRL
 *
 * @BRIEF        Specifies which of the single address comparators hold the 
 *               start and stop addresses. 
 *               Read/write if bit 27 of the Configuration Code register 
 *               (0x01) is set. (ETMv3.1 and above) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_TRACE_STARTSTOP_CTRL                  0x18ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_TRACE_ENABLE_CTRL2
 *
 * @BRIEF        Specifies which of the single address comparators hold the 
 *               include or exclude addresses. 
 *               Read/write if bit 27 of the Configuration Code register 
 *               (0x01) is set. (ETMv3.1 and above) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_TRACE_ENABLE_CTRL2                    0x1Cul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_TRACE_ENABLE_EVENT
 *
 * @BRIEF        Holds the TraceEnable enabling event. 
 *               Read/write if bit 27 of the Configuration Code register 
 *               (0x01) is set. (ETMv3.1 and above) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_TRACE_ENABLE_EVENT                    0x20ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_TRACE_ENABLE_CTRL1
 *
 * @BRIEF        Enables the trace start/stop resource. 
 *               Specifies whether resources referenced by the TraceEnable 
 *               control registers are to be included or excluded. Specifies 
 *               which of the address range comparators hold the 
 *               include or exclude address ranges. 
 *               Specifies which of the MMDs hold the include or exclude 
 *               decodes. 
 *               Read/write if bit 27 of the Configuration Code register 
 *               (0x01) is set. (ETMv3.1 and above) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_TRACE_ENABLE_CTRL1                    0x24ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_VIEWDATA_EVENT
 *
 * @BRIEF        Holds the enabling event. 
 *               Read/write if bit 27 of the Configuration Code register 
 *               (0x01) is set. (ETMv3.1 and above) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_VIEWDATA_EVENT                        0x30ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_VIEWDATA_CTRL1
 *
 * @BRIEF        Specifies which of the single address comparators hold the 
 *               include or exclude addresses. 
 *               Read/write if bit 27 of the Configuration Code register 
 *               (0x01) is set. (ETMv3.1 and above) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_VIEWDATA_CTRL1                        0x34ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_VIEWDATA_CTRL3
 *
 * @BRIEF        Selects exclude-only mode if required. 
 *               Specifies which of the address range comparators hold the 
 *               include and exclude address ranges. 
 *               Read/write if bit 27 of the Configuration Code register 
 *               (0x01) is set. (ETMv3.1 and above) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_VIEWDATA_CTRL3                        0x3Cul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_ADDR_VALUE_COMP1
 *
 * @BRIEF        Holds the address of the comparison. 
 *               Read/write if bit 27 of the Configuration Code register 
 *               (0x01) is set. (ETMv3.1 and above) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_ADDR_VALUE_COMP1                      0x40ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_ADDR_VALUE_COMP2
 *
 * @BRIEF        Holds the address of the comparison. 
 *               Read/write if bit 27 of the Configuration Code register 
 *               (0x01) is set. (ETMv3.1 and above) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_ADDR_VALUE_COMP2                      0x44ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_ADDR_VALUE_COMP3
 *
 * @BRIEF        Holds the address of the comparison. 
 *               Read/write if bit 27 of the Configuration Code register 
 *               (0x01) is set. (ETMv3.1 and above) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_ADDR_VALUE_COMP3                      0x48ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_ADDR_VALUE_COMP4
 *
 * @BRIEF        Holds the address of the comparison. 
 *               Read/write if bit 27 of the Configuration Code register 
 *               (0x01) is set. (ETMv3.1 and above) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_ADDR_VALUE_COMP4                      0x4Cul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_ADDR_ACCESS_TYPE1
 *
 * @BRIEF        Holds the type of access (for example instruction or data) 
 *               and other comparator configuration information. 
 *               Read/write if bit 27 of the Configuration Code register 
 *               (0x01) is set. (ETMv3.1 and above) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_ADDR_ACCESS_TYPE1                     0x80ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_ADDR_ACCESS_TYPE2
 *
 * @BRIEF        Holds the type of access (for example instruction or data) 
 *               and other comparator configuration information. 
 *               Read/write if bit 27 of the Configuration Code register 
 *               (0x01) is set. (ETMv3.1 and above) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_ADDR_ACCESS_TYPE2                     0x84ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_ADDR_ACCESS_TYPE3
 *
 * @BRIEF        Holds the type of access (for example instruction or data) 
 *               and other comparator configuration information. 
 *               Read/write if bit 27 of the Configuration Code register 
 *               (0x01) is set. (ETMv3.1 and above) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_ADDR_ACCESS_TYPE3                     0x88ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_ADDR_ACCESS_TYPE4
 *
 * @BRIEF        Holds the type of access (for example instruction or data) 
 *               and other comparator configuration information. 
 *               Read/write if bit 27 of the Configuration Code register 
 *               (0x01) is set. (ETMv3.1 and above) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_ADDR_ACCESS_TYPE4                     0x8Cul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_DATA_VALUE_COMP1
 *
 * @BRIEF        Holds the data to be compared. 
 *               Read/write if bit 27 of the Configuration Code register 
 *               (0x01) is set. (ETMv3.1 and above) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_DATA_VALUE_COMP1                      0xC0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_DATA_VALUE_COMP3
 *
 * @BRIEF        Holds the data to be compared. 
 *               Read/write if bit 27 of the Configuration Code register 
 *               (0x01) is set. (ETMv3.1 and above) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_DATA_VALUE_COMP3                      0xC8ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_DATA_COMP_MASK1
 *
 * @BRIEF        Holds the mask for the data access. 
 *               Read/write if bit 27 of the Configuration Code register 
 *               (0x01) is set. (ETMv3.1 and above) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_DATA_COMP_MASK1                       0x100ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_DATA_COMP_MASK3
 *
 * @BRIEF        Holds the mask for the data access. 
 *               Read/write if bit 27 of the Configuration Code register 
 *               (0x01) is set. (ETMv3.1 and above) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_DATA_COMP_MASK3                       0x108ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_CNT_RELOAD_VALUE1
 *
 * @BRIEF        Holds the initial reload value. 
 *               Read/write if bit 27 of the Configuration Code register 
 *               (0x01) is set. (ETMv3.1 and above) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_CNT_RELOAD_VALUE1                     0x140ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_CNT_RELOAD_VALUE2
 *
 * @BRIEF        Holds the initial reload value. 
 *               Read/write if bit 27 of the Configuration Code register 
 *               (0x01) is set. (ETMv3.1 and above) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_CNT_RELOAD_VALUE2                     0x144ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_CNT_EN1
 *
 * @BRIEF        Holds the enabling event. 
 *               Read/write if bit 27 of the Configuration Code register 
 *               (0x01) is set. (ETMv3.1 and above) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_CNT_EN1                               0x150ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_CNT_EN2
 *
 * @BRIEF        Holds the enabling event. 
 *               Read/write if bit 27 of the Configuration Code register 
 *               (0x01) is set. (ETMv3.1 and above) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_CNT_EN2                               0x154ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_CNT_RELOAD_EVENT1
 *
 * @BRIEF        Holds the reload event. 
 *               Read/write if bit 27 of the Configuration Code register 
 *               (0x01) is set. (ETMv3.1 and above) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_CNT_RELOAD_EVENT1                     0x160ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_CNT_RELOAD_EVENT2
 *
 * @BRIEF        Holds the reload event. 
 *               Read/write if bit 27 of the Configuration Code register 
 *               (0x01) is set. (ETMv3.1 and above) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_CNT_RELOAD_EVENT2                     0x164ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_CNT_VALUE1
 *
 * @BRIEF        Holds the current value. 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_CNT_VALUE1                            0x170ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_CNT_VALUE2
 *
 * @BRIEF        Holds the current value. 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_CNT_VALUE2                            0x174ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_SEQ_CTRL1
 *
 * @BRIEF        Holds the next state triggering events. 
 *               Read/write if bit 27 of the Configuration Code register 
 *               (0x01) is set. (ETMv3.1 and above) 
 *               State1 to State2 transition event register. 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_SEQ_CTRL1                             0x180ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_SEQ_CTRL2
 *
 * @BRIEF        Holds the next state triggering events. 
 *               Read/write if bit 27 of the Configuration Code register 
 *               (0x01) is set. (ETMv3.1 and above) 
 *               State2  to State1 transition event register. 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_SEQ_CTRL2                             0x184ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_SEQ_CTRL3
 *
 * @BRIEF        Holds the next state triggering events. 
 *               Read/write if bit 27 of the Configuration Code register 
 *               (0x01) is set. (ETMv3.1 and above) 
 *               State2  to State3  transition event register. 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_SEQ_CTRL3                             0x188ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_SEQ_CTRL4
 *
 * @BRIEF        Holds the next state triggering events. 
 *               Read/write if bit 27 of the Configuration Code register 
 *               (0x01) is set. (ETMv3.1 and above) 
 *               State3  to State1 transition event register. 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_SEQ_CTRL4                             0x18Cul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_SEQ_CTRL5
 *
 * @BRIEF        Holds the next state triggering events. 
 *               Read/write if bit 27 of the Configuration Code register 
 *               (0x01) is set. (ETMv3.1 and above) 
 *               State3  to State2 transition event register. 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_SEQ_CTRL5                             0x190ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_SEQ_CTRL6
 *
 * @BRIEF        Holds the next state triggering events. 
 *               Read/write if bit 27 of the Configuration Code register 
 *               (0x01) is set. (ETMv3.1 and above) 
 *               State1 to State3 transition event register. 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_SEQ_CTRL6                             0x194ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_SEQ_STATE
 *
 * @BRIEF        Holds the current sequencer state. 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_SEQ_STATE                             0x19Cul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_EXTOUT_EVENT1
 *
 * @BRIEF        Holds the controlling events for each output. 
 *               Read/write if bit 27 of the Configuration Code register 
 *               (0x01) is set. (ETMv3.1 and above) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_EXTOUT_EVENT1                         0x1A0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_EXTOUT_EVENT2
 *
 * @BRIEF        Holds the controlling events for each output. 
 *               Read/write if bit 27 of the Configuration Code register 
 *               (0x01) is set. (ETMv3.1 and above) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_EXTOUT_EVENT2                         0x1A4ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_CONTEXTID_COMP_VALUE
 *
 * @BRIEF        Holds the context ID comparator value. 
 *               Read/write if bit 27 of the Configuration Code register 
 *               (0x01) is set. (ETMv3.1 and above) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_CONTEXTID_COMP_VALUE                  0x1B0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_CONTEXTID_COMP_MASK
 *
 * @BRIEF        Holds the context ID comparator value. 
 *               Read/write if bit 27 of the Configuration Code register 
 *               (0x01) is set. (ETMv3.1 and above) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_CONTEXTID_COMP_MASK                   0x1BCul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_SYNC_FREQ
 *
 * @BRIEF        Holds the trace synchronization frequency. 
 *               Read/write if bit 27 of the Configuration Code register 
 *               (0x01) is set. (ETMv3.1 and above) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_SYNC_FREQ                             0x1E0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_ETMID
 *
 * @BRIEF        Contains the ETM architecture variant. 
 *               The ID value is: 
 *               CoreSight ETM9   => 0x41001220  
 *               CoreSight ETM11 => 0x41013220 or 0x41053220 or 0x41093220 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_ETMID                                 0x1E4ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_CONFIGCODE_EXT
 *
 * @BRIEF        Register description is not available
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_CONFIGCODE_EXT                        0x1E8ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_CSTRACEID
 *
 * @BRIEF        Trace ID.  
 *               ID output onto trace bus. 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_CSTRACEID                             0x200ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_ITMISCOUT
 *
 * @BRIEF        Register description is not available
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_ITMISCOUT                             0xEDCul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_ITMISCIN
 *
 * @BRIEF        Register description is not available
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_ITMISCIN                              0xEE0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_ITTRIGGERACK
 *
 * @BRIEF        Register description is not available
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_ITTRIGGERACK                          0xEE4ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_ITTRIGGERREQ
 *
 * @BRIEF        Register description is not available
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_ITTRIGGERREQ                          0xEE8ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_ITATBDATA0
 *
 * @BRIEF        Register description is not available
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_ITATBDATA0                            0xEECul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_ITATBCTR2
 *
 * @BRIEF        Register description is not available
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_ITATBCTR2                             0xEF0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_ITATBCTR1
 *
 * @BRIEF        Register description is not available
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_ITATBCTR1                             0xEF4ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_ITATBCTR0
 *
 * @BRIEF        Register description is not available
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_ITATBCTR0                             0xEF8ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_IMCR
 *
 * @BRIEF        Integration Mode Control Register. 
 *               Enables integration test mode. 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_IMCR                                  0xF00ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_CLAIMTAGSET
 *
 * @BRIEF        The Claim Tag can be used to co-ordinate software and 
 *               debugger access to ETM functionality. 
 *               Sets bits in claim tag value and indicates which bits are 
 *               supported. 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_CLAIMTAGSET                           0xFA0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_CLAIMTAGCLEAR
 *
 * @BRIEF        The Claim Tag can be used to co-ordinate software and 
 *               debugger access to ETM functionality. 
 *               Clears bits in claim tag value and returns current value. 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_CLAIMTAGCLEAR                         0xFA4ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_LOCK_ACCESS
 *
 * @BRIEF        Unlocks the registers to writes from software 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_LOCK_ACCESS                           0xFB0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_LOCK_STATUS
 *
 * @BRIEF        Indicates whether software writes have been unlocked. 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_LOCK_STATUS                           0xFB4ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_AUTH_STATUS
 *
 * @BRIEF        Returns the status of external authentication signals. 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_AUTH_STATUS                           0xFB8ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_DEVICE_TYPE
 *
 * @BRIEF        Indicates CoreSight device type. 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_DEVICE_TYPE                           0xFCCul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_PERIPHID4
 *
 * @BRIEF        Identification information. 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_PERIPHID4                             0xFD0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_PERIPHID0
 *
 * @BRIEF        Identification information. 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_PERIPHID0                             0xFE0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_PERIPHID1
 *
 * @BRIEF        Identification information. 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_PERIPHID1                             0xFE4ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_PERIPHID2
 *
 * @BRIEF        Identification information. 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_PERIPHID2                             0xFE8ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_PERIPHID3
 *
 * @BRIEF        Identification information. 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_PERIPHID3                             0xFECul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_COMPONENTID0
 *
 * @BRIEF        Preamble 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_COMPONENTID0                          0xFF0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_COMPONENTID1
 *
 * @BRIEF        Preamble 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_COMPONENTID1                          0xFF4ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_COMPONENTID2
 *
 * @BRIEF        Preamble 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_COMPONENTID2                          0xFF8ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_COMPONENTID3
 *
 * @BRIEF        Preamble 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_COMPONENTID3                          0xFFCul

    /* 
     * List of register bitfields for component CSETM
     *
     */

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_CTRL__CORESELECT   
 *
 * @BRIEF        Where an ETM is shared between multiple cores, selects which 
 *               core to trace. For the maximum value allowed, see bits 
 *               [14:12] of the System configuration register, 0x05 . 
 *               To guarantee that the ETM is correctly synchronized to the 
 *               new core, you must update these bits as follows: 
 *               ? Set bits 10 (ETM programming) and 0 (ETM power 
 *               down). 
 *               ? Change the core select bits. 
 *               ? Clear bit 0 (ETM power down). 
 *               ? Perform other programming required as normal. 
 *               The ETM cannot be shared if JTAG access is supported. 
 *               On an ETM reset these bits are LOW. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_CTRL__CORESELECT                 BITFIELD(27, 25)
#define CSETM__CSETM_CTRL__CORESELECT__POS            25

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_CTRL__RESERVED_1   
 *
 * @BRIEF        Bitfield description is not available - (RO)
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_CTRL__RESERVED_1                 BITFIELD(24, 24)
#define CSETM__CSETM_CTRL__RESERVED_1__POS            24

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_CTRL__DATA_ONLY_MODE   
 *
 * @BRIEF        0 = Instruction trace enabled. 
 *               1 = Instruction trace disabled. Data-only tracing is 
 *               possible in this 
 *               mode. 
 *               On an ETM reset this bit is LOW. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_CTRL__DATA_ONLY_MODE             BITFIELD(20, 20)
#define CSETM__CSETM_CTRL__DATA_ONLY_MODE__POS        20

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_CTRL__FILTER_CPRT   
 *
 * @BRIEF        This bit is used in conjunction with MonitorCPRT (bit 1). 
 *               (bit 1)   (bit19)   Description 
 *                  0           0  CPRTs not traced. 
 *                  0           1  Unpredictable. 
 *                  1           0  All CPRTs traced. 
 *                  1           1  CPRTs traced only when ViewData is active. 
 *               On an ETM reset this bit is LOW. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_CTRL__FILTER_CPRT                BITFIELD(19, 19)
#define CSETM__CSETM_CTRL__FILTER_CPRT__POS           19

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_CTRL__SUPRESS_DATA   
 *
 * @BRIEF        Bitfield description is not available - (RW)
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_CTRL__SUPRESS_DATA               BITFIELD(18, 18)
#define CSETM__CSETM_CTRL__SUPRESS_DATA__POS          18

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_CTRL__CONTEXTIDSIZE   
 *
 * @BRIEF        Bitfield description is not available - (RW)
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_CTRL__CONTEXTIDSIZE              BITFIELD(15, 14)
#define CSETM__CSETM_CTRL__CONTEXTIDSIZE__POS         14

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_CTRL__CYCLE_ACCURATE_TRACING   
 *
 * @BRIEF        When HIGH, a precise cycle count of executed instructions 
 *               can be extracted from the trace.  
 *               In ETMv1 and ETMv2, this is achieved by causing trace to be 
 *               captured on every cycle when TraceEnable is active. 
 *                In ETMv3, this is achieved by adding extra information into 
 *               the trace, giving cycle counts even when TraceEnable is 
 *               inactive. 
 *               On an ETM reset this bit is LOW. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_CTRL__CYCLE_ACCURATE_TRACING     BITFIELD(12, 12)
#define CSETM__CSETM_CTRL__CYCLE_ACCURATE_TRACING__POS 12

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_CTRL__ETM_PORT_SELECTION   
 *
 * @BRIEF        An output controlled by this bit is provided to enable the 
 *               trace 
 *               port pins to be shared with GPIO pins. The external pin is 
 *               ETMEN, and this can be used by logic external to the ETM. 
 *               This bit must be set by the trace software tools to ensure 
 *               that trace output is enabled from this ETM. 
 *               On an ETM reset this bit is LOW. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_CTRL__ETM_PORT_SELECTION         BITFIELD(11, 11)
#define CSETM__CSETM_CTRL__ETM_PORT_SELECTION__POS    11

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_CTRL__ETM_PROGRAMMING   
 *
 * @BRIEF        When HIGH, the ETM is being programmed - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_CTRL__ETM_PROGRAMMING            BITFIELD(10, 10)
#define CSETM__CSETM_CTRL__ETM_PROGRAMMING__POS       10

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_CTRL__DEBUG_REQUEST_CTRL   
 *
 * @BRIEF        Bitfield description is not available - (RW)
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_CTRL__DEBUG_REQUEST_CTRL         BITFIELD(9, 9)
#define CSETM__CSETM_CTRL__DEBUG_REQUEST_CTRL__POS    9

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_CTRL__DATA_ACCESS   
 *
 * @BRIEF        00 = no data tracing 
 *               01 = trace only the data portion of the access 
 *               10 = trace only the address portion of the access 
 *               11 = trace both the address and the data of the access. 
 *               On an ETM reset these bits are LOW. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_CTRL__DATA_ACCESS                BITFIELD(3, 2)
#define CSETM__CSETM_CTRL__DATA_ACCESS__POS           2

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_CTRL__MONITORCPRT   
 *
 * @BRIEF        When LOW, the CPRTs are not traced. When HIGH, the CPRTs are 
 *               traced. 
 *               On an ETM reset this bit is LOW. 
 *               From ETMv2.1, if CPRT tracing is not supported then this bit 
 *               reads back as 0. 
 *               From ETMv.3.1, this bit is used with bit 19. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_CTRL__MONITORCPRT                BITFIELD(1, 1)
#define CSETM__CSETM_CTRL__MONITORCPRT__POS           1

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_CTRL__ETMPWRDOWN   
 *
 * @BRIEF        A pin controlled by this bit enables the ETM power to be 
 *               controlled externally. The external pin is often 
 *               ETMPWRDOWN or inverted as ETMPWRUP. This bit must 
 *               be cleared by the trace software tools at the beginning of a 
 *               debug 
 *               session. 
 *               When HIGH, the ETM must be powered down and disabled, and 
 *               then operated in a low power mode with all clocks stopped. 
 *               When HIGH, writes to other registers other than the Lock 
 *               Access 
 *               Register might be ignored. When the Control Register is 
 *               written 
 *               with this bit LOW, bits other than 27:25 (Core select) might 
 *               be 
 *               ignored. 
 *               On an ETM reset this bit is set HIGH. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_CTRL__ETMPWRDOWN                 BITFIELD(0, 0)
#define CSETM__CSETM_CTRL__ETMPWRDOWN__POS            0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_CONFIGCODE__ETMID_PRESENT   
 *
 * @BRIEF        When HIGH, this bit indicates that the ETM ID register is 
 *               present and defines the ETM architecture version in use. 
 *               When LOW, this bit indicates that the ETM ID register is not 
 *               present. 
 *               CoreSight ETM9 ID register is present - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_CONFIGCODE__ETMID_PRESENT        BITFIELD(31, 31)
#define CSETM__CSETM_CONFIGCODE__ETMID_PRESENT__POS   31

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_CONFIGCODE__SOFT_ACCESS   
 *
 * @BRIEF        Software access to registers is supported. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_CONFIGCODE__SOFT_ACCESS          BITFIELD(27, 27)
#define CSETM__CSETM_CONFIGCODE__SOFT_ACCESS__POS     27

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_CONFIGCODE__TRACE_START_STOP   
 *
 * @BRIEF        Trace start/stop block is present. 
 *                - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_CONFIGCODE__TRACE_START_STOP     BITFIELD(26, 26)
#define CSETM__CSETM_CONFIGCODE__TRACE_START_STOP__POS 26

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_CONFIGCODE__NB_CONTEXTID_COMP   
 *
 * @BRIEF        Number of context ID comparators = 1. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_CONFIGCODE__NB_CONTEXTID_COMP    BITFIELD(25, 24)
#define CSETM__CSETM_CONFIGCODE__NB_CONTEXTID_COMP__POS 24

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_CONFIGCODE__FIFOFULL_PRESENT   
 *
 * @BRIEF        When HIGH, the FIFOFULL logic is present.  
 *               FIFOFULL  logic is absent - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_CONFIGCODE__FIFOFULL_PRESENT     BITFIELD(23, 23)
#define CSETM__CSETM_CONFIGCODE__FIFOFULL_PRESENT__POS 23

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_CONFIGCODE__NB_EXTOUT   
 *
 * @BRIEF        Number of external outputs = 2. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_CONFIGCODE__NB_EXTOUT            BITFIELD(22, 20)
#define CSETM__CSETM_CONFIGCODE__NB_EXTOUT__POS       20

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_CONFIGCODE__NB_EXTIN   
 *
 * @BRIEF        Number of external inputs = 4. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_CONFIGCODE__NB_EXTIN             BITFIELD(19, 17)
#define CSETM__CSETM_CONFIGCODE__NB_EXTIN__POS        17

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_CONFIGCODE__SEQ_PRESENT   
 *
 * @BRIEF        When HIGH the sequencer is present. 
 *               Sequencer is present. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_CONFIGCODE__SEQ_PRESENT          BITFIELD(16, 16)
#define CSETM__CSETM_CONFIGCODE__SEQ_PRESENT__POS     16

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_CONFIGCODE__NB_COUNTERS   
 *
 * @BRIEF        Number of counters = 2. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_CONFIGCODE__NB_COUNTERS          BITFIELD(15, 13)
#define CSETM__CSETM_CONFIGCODE__NB_COUNTERS__POS     13

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_CONFIGCODE__NB_MMR_DECODERS   
 *
 * @BRIEF        Number of memory map decoders = 0. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_CONFIGCODE__NB_MMR_DECODERS      BITFIELD(12, 8)
#define CSETM__CSETM_CONFIGCODE__NB_MMR_DECODERS__POS 8

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_CONFIGCODE__NB_DATA_COMPS   
 *
 * @BRIEF        Number of data comparators = 2. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_CONFIGCODE__NB_DATA_COMPS        BITFIELD(7, 4)
#define CSETM__CSETM_CONFIGCODE__NB_DATA_COMPS__POS   4

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_CONFIGCODE__NB_PAIR_ADDR_COMPS   
 *
 * @BRIEF        Number of pairs of address comparators = 4. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_CONFIGCODE__NB_PAIR_ADDR_COMPS   BITFIELD(3, 0)
#define CSETM__CSETM_CONFIGCODE__NB_PAIR_ADDR_COMPS__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_TRIGGER__FCN   
 *
 * @BRIEF        Bitfield description is not available - (RW)
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_TRIGGER__FCN                     BITFIELD(16, 14)
#define CSETM__CSETM_TRIGGER__FCN__POS                14

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_TRIGGER__RESOURCEB   
 *
 * @BRIEF        Bitfield description is not available - (RW)
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_TRIGGER__RESOURCEB               BITFIELD(13, 7)
#define CSETM__CSETM_TRIGGER__RESOURCEB__POS          7

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_TRIGGER__RESOURCEA   
 *
 * @BRIEF        Bitfield description is not available - (RW)
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_TRIGGER__RESOURCEA               BITFIELD(6, 0)
#define CSETM__CSETM_TRIGGER__RESOURCEA__POS          0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_ETMSTATUS__TRIGGER   
 *
 * @BRIEF        Trigger bit. 
 *               Set when the trigger occurs, and prevents the trigger from 
 *               being output until the ETM is next programmed.  
 *               This bit exists in all architecture versions, but can only 
 *               be accessed in ETMv3.1 and above. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_ETMSTATUS__TRIGGER               BITFIELD(3, 3)
#define CSETM__CSETM_ETMSTATUS__TRIGGER__POS          3

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_ETMSTATUS__TRACE_START_STOP   
 *
 * @BRIEF        Holds the current status of the trace start/stop resource. 
 *               If HIGH, it indicates that a trace on address has been 
 *               matched, without a corresponding trace off address match. - 
 *               (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_ETMSTATUS__TRACE_START_STOP      BITFIELD(2, 2)
#define CSETM__CSETM_ETMSTATUS__TRACE_START_STOP__POS 2

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_ETMSTATUS__ETM_PROG_BIT   
 *
 * @BRIEF        The current effective value of the ETM programming bit 
 *               (control register bit 10). 
 *               You must wait for this bit to go HIGH before you start to 
 *               program the ETM. 
 *               If you read other bits in the status register while this bit 
 *               is LOW, some instructions might not have taken effect. It is 
 *               recommended that you set the ETM programming bit and wait 
 *               for this bit to go HIGH before reading the overflow bit. 
 *               In ETMv3.2 and above this bit remains LOW if there is any 
 *               data in the FIFO. This ensures that the FIFO is empty before 
 *               the ETM programming is changed. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_ETMSTATUS__ETM_PROG_BIT          BITFIELD(1, 1)
#define CSETM__CSETM_ETMSTATUS__ETM_PROG_BIT__POS     1

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_ETMSTATUS__OVERFLOW   
 *
 * @BRIEF        If HIGH, there is an overflow that has not yet been traced. 
 *               This bit is cleared when either: 
 *               ? trace is restarted. 
 *               ? the ETM Power Down bit, bit 0 of the Control Register  is 
 *               set. 
 *               Note: Setting or clearing the ETM programming bit does not 
 *               cause this bit to be cleared. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_ETMSTATUS__OVERFLOW              BITFIELD(0, 0)
#define CSETM__CSETM_ETMSTATUS__OVERFLOW__POS         0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_SYSCFG__NOFETCH_COMP   
 *
 * @BRIEF        No Fetch comparisons. Address comparators are not capable of 
 *               performing fetch-stage comparisons.  
 *               Setting bits 2:0 of an address access type register to b000 
 *               (instruction fetch) causes the comparator to have 
 *               unpredictable behavior. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_SYSCFG__NOFETCH_COMP             BITFIELD(17, 17)
#define CSETM__CSETM_SYSCFG__NOFETCH_COMP__POS        17

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_SYSCFG__MAXCORES   
 *
 * @BRIEF        Number of supported cores minus 1. The value given here is 
 *               the maximum value that can be written to bits [27:25] of the 
 *               ETM control register, 0x00. These bits must be b000 if JTAG 
 *               access is supported. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_SYSCFG__MAXCORES                 BITFIELD(14, 12)
#define CSETM__CSETM_SYSCFG__MAXCORES__POS            12

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_SYSCFG__PORTMODE_SUPPORT   
 *
 * @BRIEF        Port mode supported. 
 *               HIGH if the currently selected port mode is supported 
 *               internally or externally. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_SYSCFG__PORTMODE_SUPPORT         BITFIELD(11, 11)
#define CSETM__CSETM_SYSCFG__PORTMODE_SUPPORT__POS    11

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_SYSCFG__PORTSIZE_SUPPORT   
 *
 * @BRIEF        Port size supported. 
 *               HIGH if the currently selected port size is supported 
 *               internally or externally for the currently selected port 
 *               mode. Enables more complex port sizes to be supported. - 
 *               (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_SYSCFG__PORTSIZE_SUPPORT         BITFIELD(10, 10)
#define CSETM__CSETM_SYSCFG__PORTSIZE_SUPPORT__POS    10

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_SYSCFG__MAXPORTSIZE_3   
 *
 * @BRIEF        This bit is used in conjunction with bits [2:0]. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_SYSCFG__MAXPORTSIZE_3            BITFIELD(9, 9)
#define CSETM__CSETM_SYSCFG__MAXPORTSIZE_3__POS       9

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_SYSCFG__FIFOFULL_SUPPORT   
 *
 * @BRIEF        If HIGH, FIFOFULL is supported. This bit is used in 
 *               conjunction with bit 23 of the ETM configuration register. 
 *               Note: You can use FIFOFULL only if it is supported by both 
 *               your ETM and your system. Some cores do not support 
 *               FIFOFULL, so it cannot be used by the system. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_SYSCFG__FIFOFULL_SUPPORT         BITFIELD(8, 8)
#define CSETM__CSETM_SYSCFG__FIFOFULL_SUPPORT__POS    8

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_SYSCFG__MAXPORTSIZE_20   
 *
 * @BRIEF        Maximum port size [2:0]. This bit is used in conjunction 
 *               with bit 9. The value given here is the maximum size 
 *               supported by both the ETM and the ASIC. Smaller sizes might 
 *               or might not be supported. Use bit 10 for precise details of 
 *               supported modes. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_SYSCFG__MAXPORTSIZE_20           BITFIELD(2, 0)
#define CSETM__CSETM_SYSCFG__MAXPORTSIZE_20__POS      0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_TRACE_STARTSTOP_CTRL__STOP   
 *
 * @BRIEF        When HIGH, selects single address comparators 16-1 as stop 
 *               addresses. For example, bit 16 HIGH selects single address 
 *               comparator 1. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_TRACE_STARTSTOP_CTRL__STOP       BITFIELD(30, 16)
#define CSETM__CSETM_TRACE_STARTSTOP_CTRL__STOP__POS  16

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_TRACE_STARTSTOP_CTRL__START   
 *
 * @BRIEF        When HIGH, selects single address comparators 16-1 as start 
 *               addresses. For example, bit 0 HIGH selects single address 
 *               comparator 1. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_TRACE_STARTSTOP_CTRL__START      BITFIELD(15, 0)
#define CSETM__CSETM_TRACE_STARTSTOP_CTRL__START__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_TRACE_ENABLE_CTRL2__INCLUDE_EXCLUDE   
 *
 * @BRIEF        When HIGH, selects single address comparators 16-1 for 
 *               include/exclude control. For example, bit 0 HIGH selects 
 *               single address comparator 1. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_TRACE_ENABLE_CTRL2__INCLUDE_EXCLUDE BITFIELD(15, 0)
#define CSETM__CSETM_TRACE_ENABLE_CTRL2__INCLUDE_EXCLUDE__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_TRACE_ENABLE_EVENT__TRACE_ENABLE_EVENT   
 *
 * @BRIEF        TraceEnable event - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_TRACE_ENABLE_EVENT__TRACE_ENABLE_EVENT BITFIELD(15, 0)
#define CSETM__CSETM_TRACE_ENABLE_EVENT__TRACE_ENABLE_EVENT__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_TRACE_ENABLE_CTRL1__START_STOP_ENABLE   
 *
 * @BRIEF        Trace start/stop enable: 
 *               HIGH    Tracing is controlled by trace on and off addresses. 
 *               LOW    Tracing is unaffected by the trace start/stop logic. 
 *               The trace start/stop resource  is unaffected by the value of 
 *               this bit. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_TRACE_ENABLE_CTRL1__START_STOP_ENABLE BITFIELD(25, 25)
#define CSETM__CSETM_TRACE_ENABLE_CTRL1__START_STOP_ENABLE__POS 25

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_TRACE_ENABLE_CTRL1__INCLUDE_EXCLUDE   
 *
 * @BRIEF        Include/exclude control: 
 *               HIGH = Exclude 
 *               The resources specified in bits [23:0] and in the 
 *               TraceEnable control 2 register indicate regions to be 
 *               excluded from the trace.  When outside an exclude region, 
 *               tracing can occur. 
 *               LOW = Include   
 *               The specified resources indicate the regions in which 
 *               tracing can occur. When outside this region tracing is 
 *               prevented. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_TRACE_ENABLE_CTRL1__INCLUDE_EXCLUDE BITFIELD(24, 24)
#define CSETM__CSETM_TRACE_ENABLE_CTRL1__INCLUDE_EXCLUDE__POS 24

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_TRACE_ENABLE_CTRL1__COMPARATOR_SELECTION   
 *
 * @BRIEF        When HIGH, selects address range comparators 8-1 for 
 *               include/exclude control. For example, bit 0 HIGH selects 
 *               address range comparator 1. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_TRACE_ENABLE_CTRL1__COMPARATOR_SELECTION BITFIELD(7, 0)
#define CSETM__CSETM_TRACE_ENABLE_CTRL1__COMPARATOR_SELECTION__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_VIEWDATA_EVENT__VIEWDATA_EVENT   
 *
 * @BRIEF        Viewdata event - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_VIEWDATA_EVENT__VIEWDATA_EVENT   BITFIELD(15, 0)
#define CSETM__CSETM_VIEWDATA_EVENT__VIEWDATA_EVENT__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_VIEWDATA_CTRL1__EXCLUDE_SELECTION   
 *
 * @BRIEF        When HIGH, selects single address comparators 16 to 1 for 
 *               exclude control. For example, bit 16 HIGH selects single 
 *               address comparator 1. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_VIEWDATA_CTRL1__EXCLUDE_SELECTION BITFIELD(31, 16)
#define CSETM__CSETM_VIEWDATA_CTRL1__EXCLUDE_SELECTION__POS 16

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_VIEWDATA_CTRL1__INCLUDE_SELECTION   
 *
 * @BRIEF        When HIGH, selects single address comparators 16 to 1 for 
 *               include control. For example, bit 0 HIGH selects single 
 *               address comparator 1. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_VIEWDATA_CTRL1__INCLUDE_SELECTION BITFIELD(15, 0)
#define CSETM__CSETM_VIEWDATA_CTRL1__INCLUDE_SELECTION__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_VIEWDATA_CTRL3__EXCLUDE_CONTROL   
 *
 * @BRIEF        Exclude-only control: 
 *               HIGH = Exclude-only mode 
 *               ViewData is programmed only in an excluding mode. If none of 
 *               the excluding resources match, tracing can occur. 
 *               LOW = Mixed mode 
 *               ViewData operates in a mixed mode, and both include and 
 *               exclude resources can be programmed. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_VIEWDATA_CTRL3__EXCLUDE_CONTROL  BITFIELD(16, 16)
#define CSETM__CSETM_VIEWDATA_CTRL3__EXCLUDE_CONTROL__POS 16

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_VIEWDATA_CTRL3__EXCLUDE_SELECTION   
 *
 * @BRIEF        When HIGH, selects address range comparators 8-1 for exclude 
 *               control. For example, bit 8 HIGH selects address range 
 *               comparator 1. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_VIEWDATA_CTRL3__EXCLUDE_SELECTION BITFIELD(15, 8)
#define CSETM__CSETM_VIEWDATA_CTRL3__EXCLUDE_SELECTION__POS 8

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_VIEWDATA_CTRL3__INCLUDE_SELECTION   
 *
 * @BRIEF        When HIGH, selects address range comparators 8-1 for include 
 *               control. For example, bit 0 HIGH selects address range 
 *               comparator 1. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_VIEWDATA_CTRL3__INCLUDE_SELECTION BITFIELD(7, 0)
#define CSETM__CSETM_VIEWDATA_CTRL3__INCLUDE_SELECTION__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_ADDR_VALUE_COMP1__ADDRESS_VALUE   
 *
 * @BRIEF        Address value - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_ADDR_VALUE_COMP1__ADDRESS_VALUE  BITFIELD(31, 0)
#define CSETM__CSETM_ADDR_VALUE_COMP1__ADDRESS_VALUE__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_ADDR_VALUE_COMP2__ADDRESS_VALUE   
 *
 * @BRIEF        Address value - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_ADDR_VALUE_COMP2__ADDRESS_VALUE  BITFIELD(31, 0)
#define CSETM__CSETM_ADDR_VALUE_COMP2__ADDRESS_VALUE__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_ADDR_VALUE_COMP3__ADDRESS_VALUE   
 *
 * @BRIEF        Address value - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_ADDR_VALUE_COMP3__ADDRESS_VALUE  BITFIELD(31, 0)
#define CSETM__CSETM_ADDR_VALUE_COMP3__ADDRESS_VALUE__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_ADDR_VALUE_COMP4__ADDRESS_VALUE   
 *
 * @BRIEF        Address value - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_ADDR_VALUE_COMP4__ADDRESS_VALUE  BITFIELD(31, 0)
#define CSETM__CSETM_ADDR_VALUE_COMP4__ADDRESS_VALUE__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_ADDR_ACCESS_TYPE1__SECURE_LEVEL_CTRL   
 *
 * @BRIEF        Secure level control 
 *               00 = security level ignored 
 *               01 = match only if in nonsecure state 
 *               10 = match only if in secure state 
 *               11 = reserved. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_ADDR_ACCESS_TYPE1__SECURE_LEVEL_CTRL BITFIELD(11, 10)
#define CSETM__CSETM_ADDR_ACCESS_TYPE1__SECURE_LEVEL_CTRL__POS 10

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_ADDR_ACCESS_TYPE1__CONTEXTID_COMP_CTRL   
 *
 * @BRIEF        Context ID comparator control: 
 *               00 = ignore context ID comparators 
 *               01 = address comparator matches only if context ID 
 *               comparator value 1 matches 
 *               10 = address comparator matches only if context ID 
 *               comparator value 2 matches 
 *               11 = address comparator matches only if context ID 
 *               comparator value 3 matches. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_ADDR_ACCESS_TYPE1__CONTEXTID_COMP_CTRL BITFIELD(9, 8)
#define CSETM__CSETM_ADDR_ACCESS_TYPE1__CONTEXTID_COMP_CTRL__POS 8

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_ADDR_ACCESS_TYPE1__EXACT_MATCH   
 *
 * @BRIEF        Exact match bit. Specifies comparator behavior when 
 *               exceptions, aborts, and load misses occur. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_ADDR_ACCESS_TYPE1__EXACT_MATCH   BITFIELD(7, 7)
#define CSETM__CSETM_ADDR_ACCESS_TYPE1__EXACT_MATCH__POS 7

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_ADDR_ACCESS_TYPE1__DATA_COMP_CTRL   
 *
 * @BRIEF        Data comparison control: 
 *               00 = no data comparison 
 *               01 = address matches only if data matches 
 *               10 = reserved 
 *               11 = address matches only if data does not match. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_ADDR_ACCESS_TYPE1__DATA_COMP_CTRL BITFIELD(6, 5)
#define CSETM__CSETM_ADDR_ACCESS_TYPE1__DATA_COMP_CTRL__POS 5

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_ADDR_ACCESS_TYPE1__SIZE   
 *
 * @BRIEF        Size: 
 *               00 = Java instruction or byte data 
 *               01 = Thumb instruction or halfword data 
 *               10 = reserved 
 *               11 = ARM instruction or word data. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_ADDR_ACCESS_TYPE1__SIZE          BITFIELD(4, 3)
#define CSETM__CSETM_ADDR_ACCESS_TYPE1__SIZE__POS     3

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_ADDR_ACCESS_TYPE1__ACCESS_TYPE   
 *
 * @BRIEF        Access type: 
 *               000a = instruction fetch 
 *               001 = instruction execute 
 *               010 = instruction executed and passed condition code test 
 *               011 = instruction executed and failed condition code test 
 *               100 = data load or store 
 *               101 = data load 
 *               110 = data store 
 *               111 = reserved. 
 *               a-Unsupported if bit 17 of the system register is set. - 
 *               (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_ADDR_ACCESS_TYPE1__ACCESS_TYPE   BITFIELD(2, 0)
#define CSETM__CSETM_ADDR_ACCESS_TYPE1__ACCESS_TYPE__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_ADDR_ACCESS_TYPE2__SECURE_LEVEL_CTRL   
 *
 * @BRIEF        Secure level control 
 *               00 = security level ignored 
 *               01 = match only if in nonsecure state 
 *               10 = match only if in secure state 
 *               11 = reserved. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_ADDR_ACCESS_TYPE2__SECURE_LEVEL_CTRL BITFIELD(11, 10)
#define CSETM__CSETM_ADDR_ACCESS_TYPE2__SECURE_LEVEL_CTRL__POS 10

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_ADDR_ACCESS_TYPE2__CONTEXTID_COMP_CTRL   
 *
 * @BRIEF        Context ID comparator control: 
 *               00 = ignore context ID comparators 
 *               01 = address comparator matches only if context ID 
 *               comparator value 1 matches 
 *               10 = address comparator matches only if context ID 
 *               comparator value 2 matches 
 *               11 = address comparator matches only if context ID 
 *               comparator value 3 matches. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_ADDR_ACCESS_TYPE2__CONTEXTID_COMP_CTRL BITFIELD(9, 8)
#define CSETM__CSETM_ADDR_ACCESS_TYPE2__CONTEXTID_COMP_CTRL__POS 8

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_ADDR_ACCESS_TYPE2__EXACT_MATCH   
 *
 * @BRIEF        Exact match bit. Specifies comparator behavior when 
 *               exceptions, aborts, and load misses occur. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_ADDR_ACCESS_TYPE2__EXACT_MATCH   BITFIELD(7, 7)
#define CSETM__CSETM_ADDR_ACCESS_TYPE2__EXACT_MATCH__POS 7

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_ADDR_ACCESS_TYPE2__DATA_COMP_CTRL   
 *
 * @BRIEF        Data comparison control: 
 *               00 = no data comparison 
 *               01 = address matches only if data matches 
 *               10 = reserved 
 *               11 = address matches only if data does not match. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_ADDR_ACCESS_TYPE2__DATA_COMP_CTRL BITFIELD(6, 5)
#define CSETM__CSETM_ADDR_ACCESS_TYPE2__DATA_COMP_CTRL__POS 5

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_ADDR_ACCESS_TYPE2__SIZE   
 *
 * @BRIEF        Size: 
 *               00 = Java instruction or byte data 
 *               01 = Thumb instruction or halfword data 
 *               10 = reserved 
 *               11 = ARM instruction or word data. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_ADDR_ACCESS_TYPE2__SIZE          BITFIELD(4, 3)
#define CSETM__CSETM_ADDR_ACCESS_TYPE2__SIZE__POS     3

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_ADDR_ACCESS_TYPE2__ACCESS_TYPE   
 *
 * @BRIEF        Access type: 
 *               000a = instruction fetch 
 *               001 = instruction execute 
 *               010 = instruction executed and passed condition code test 
 *               011 = instruction executed and failed condition code test 
 *               100 = data load or store 
 *               101 = data load 
 *               110 = data store 
 *               111 = reserved. 
 *               a-Unsupported if bit 17 of the system register is set. - 
 *               (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_ADDR_ACCESS_TYPE2__ACCESS_TYPE   BITFIELD(2, 0)
#define CSETM__CSETM_ADDR_ACCESS_TYPE2__ACCESS_TYPE__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_ADDR_ACCESS_TYPE3__SECURE_LEVEL_CTRL   
 *
 * @BRIEF        Secure level control 
 *               00 = security level ignored 
 *               01 = match only if in nonsecure state 
 *               10 = match only if in secure state 
 *               11 = reserved. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_ADDR_ACCESS_TYPE3__SECURE_LEVEL_CTRL BITFIELD(11, 10)
#define CSETM__CSETM_ADDR_ACCESS_TYPE3__SECURE_LEVEL_CTRL__POS 10

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_ADDR_ACCESS_TYPE3__CONTEXTID_COMP_CTRL   
 *
 * @BRIEF        Context ID comparator control: 
 *               00 = ignore context ID comparators 
 *               01 = address comparator matches only if context ID 
 *               comparator value 1 matches 
 *               10 = address comparator matches only if context ID 
 *               comparator value 2 matches 
 *               11 = address comparator matches only if context ID 
 *               comparator value 3 matches. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_ADDR_ACCESS_TYPE3__CONTEXTID_COMP_CTRL BITFIELD(9, 8)
#define CSETM__CSETM_ADDR_ACCESS_TYPE3__CONTEXTID_COMP_CTRL__POS 8

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_ADDR_ACCESS_TYPE3__EXACT_MATCH   
 *
 * @BRIEF        Exact match bit. Specifies comparator behavior when 
 *               exceptions, aborts, and load misses occur. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_ADDR_ACCESS_TYPE3__EXACT_MATCH   BITFIELD(7, 7)
#define CSETM__CSETM_ADDR_ACCESS_TYPE3__EXACT_MATCH__POS 7

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_ADDR_ACCESS_TYPE3__DATA_COMP_CTRL   
 *
 * @BRIEF        Data comparison control: 
 *               00 = no data comparison 
 *               01 = address matches only if data matches 
 *               10 = reserved 
 *               11 = address matches only if data does not match. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_ADDR_ACCESS_TYPE3__DATA_COMP_CTRL BITFIELD(6, 5)
#define CSETM__CSETM_ADDR_ACCESS_TYPE3__DATA_COMP_CTRL__POS 5

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_ADDR_ACCESS_TYPE3__SIZE   
 *
 * @BRIEF        Size: 
 *               00 = Java instruction or byte data 
 *               01 = Thumb instruction or halfword data 
 *               10 = reserved 
 *               11 = ARM instruction or word data. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_ADDR_ACCESS_TYPE3__SIZE          BITFIELD(4, 3)
#define CSETM__CSETM_ADDR_ACCESS_TYPE3__SIZE__POS     3

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_ADDR_ACCESS_TYPE3__ACCESS_TYPE   
 *
 * @BRIEF        Access type: 
 *               000a = instruction fetch 
 *               001 = instruction execute 
 *               010 = instruction executed and passed condition code test 
 *               011 = instruction executed and failed condition code test 
 *               100 = data load or store 
 *               101 = data load 
 *               110 = data store 
 *               111 = reserved. 
 *               a-Unsupported if bit 17 of the system register is set. - 
 *               (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_ADDR_ACCESS_TYPE3__ACCESS_TYPE   BITFIELD(2, 0)
#define CSETM__CSETM_ADDR_ACCESS_TYPE3__ACCESS_TYPE__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_ADDR_ACCESS_TYPE4__SECURE_LEVEL_CTRL   
 *
 * @BRIEF        Secure level control 
 *               00 = security level ignored 
 *               01 = match only if in nonsecure state 
 *               10 = match only if in secure state 
 *               11 = reserved. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_ADDR_ACCESS_TYPE4__SECURE_LEVEL_CTRL BITFIELD(11, 10)
#define CSETM__CSETM_ADDR_ACCESS_TYPE4__SECURE_LEVEL_CTRL__POS 10

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_ADDR_ACCESS_TYPE4__CONTEXTID_COMP_CTRL   
 *
 * @BRIEF        Context ID comparator control: 
 *               00 = ignore context ID comparators 
 *               01 = address comparator matches only if context ID 
 *               comparator value 1 matches 
 *               10 = address comparator matches only if context ID 
 *               comparator value 2 matches 
 *               11 = address comparator matches only if context ID 
 *               comparator value 3 matches. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_ADDR_ACCESS_TYPE4__CONTEXTID_COMP_CTRL BITFIELD(9, 8)
#define CSETM__CSETM_ADDR_ACCESS_TYPE4__CONTEXTID_COMP_CTRL__POS 8

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_ADDR_ACCESS_TYPE4__EXACT_MATCH   
 *
 * @BRIEF        Exact match bit. Specifies comparator behavior when 
 *               exceptions, aborts, and load misses occur. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_ADDR_ACCESS_TYPE4__EXACT_MATCH   BITFIELD(7, 7)
#define CSETM__CSETM_ADDR_ACCESS_TYPE4__EXACT_MATCH__POS 7

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_ADDR_ACCESS_TYPE4__DATA_COMP_CTRL   
 *
 * @BRIEF        Data comparison control: 
 *               00 = no data comparison 
 *               01 = address matches only if data matches 
 *               10 = reserved 
 *               11 = address matches only if data does not match. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_ADDR_ACCESS_TYPE4__DATA_COMP_CTRL BITFIELD(6, 5)
#define CSETM__CSETM_ADDR_ACCESS_TYPE4__DATA_COMP_CTRL__POS 5

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_ADDR_ACCESS_TYPE4__SIZE   
 *
 * @BRIEF        Size: 
 *               00 = Java instruction or byte data 
 *               01 = Thumb instruction or halfword data 
 *               10 = reserved 
 *               11 = ARM instruction or word data. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_ADDR_ACCESS_TYPE4__SIZE          BITFIELD(4, 3)
#define CSETM__CSETM_ADDR_ACCESS_TYPE4__SIZE__POS     3

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_ADDR_ACCESS_TYPE4__ACCESS_TYPE   
 *
 * @BRIEF        Access type: 
 *               000a = instruction fetch 
 *               001 = instruction execute 
 *               010 = instruction executed and passed condition code test 
 *               011 = instruction executed and failed condition code test 
 *               100 = data load or store 
 *               101 = data load 
 *               110 = data store 
 *               111 = reserved. 
 *               a-Unsupported if bit 17 of the system register is set. - 
 *               (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_ADDR_ACCESS_TYPE4__ACCESS_TYPE   BITFIELD(2, 0)
#define CSETM__CSETM_ADDR_ACCESS_TYPE4__ACCESS_TYPE__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_DATA_VALUE_COMP1__DATA_VALUE   
 *
 * @BRIEF        Data value - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_DATA_VALUE_COMP1__DATA_VALUE     BITFIELD(31, 0)
#define CSETM__CSETM_DATA_VALUE_COMP1__DATA_VALUE__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_DATA_VALUE_COMP3__DATA_VALUE   
 *
 * @BRIEF        Data value - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_DATA_VALUE_COMP3__DATA_VALUE     BITFIELD(31, 0)
#define CSETM__CSETM_DATA_VALUE_COMP3__DATA_VALUE__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_DATA_COMP_MASK1__DATA_MASK   
 *
 * @BRIEF        Data mask - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_DATA_COMP_MASK1__DATA_MASK       BITFIELD(31, 0)
#define CSETM__CSETM_DATA_COMP_MASK1__DATA_MASK__POS  0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_DATA_COMP_MASK3__DATA_MASK   
 *
 * @BRIEF        Data mask - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_DATA_COMP_MASK3__DATA_MASK       BITFIELD(31, 0)
#define CSETM__CSETM_DATA_COMP_MASK3__DATA_MASK__POS  0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_CNT_RELOAD_VALUE1__INITIAL_COUNT   
 *
 * @BRIEF        Initial count - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_CNT_RELOAD_VALUE1__INITIAL_COUNT BITFIELD(15, 0)
#define CSETM__CSETM_CNT_RELOAD_VALUE1__INITIAL_COUNT__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_CNT_RELOAD_VALUE2__INITIAL_COUNT   
 *
 * @BRIEF        Initial count - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_CNT_RELOAD_VALUE2__INITIAL_COUNT BITFIELD(15, 0)
#define CSETM__CSETM_CNT_RELOAD_VALUE2__INITIAL_COUNT__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_CNT_EN1__COUNT_ENABLE_EVENT   
 *
 * @BRIEF        Count enable event. 
 *               To configure a continuous counter, program these bits for 
 *               external resource 15. 
 *                External resource 15 is hardwired to be always active. - 
 *               (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_CNT_EN1__COUNT_ENABLE_EVENT      BITFIELD(16, 0)
#define CSETM__CSETM_CNT_EN1__COUNT_ENABLE_EVENT__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_CNT_EN2__COUNT_ENABLE_EVENT   
 *
 * @BRIEF        Count enable event. 
 *               To configure a continuous counter, program these bits for 
 *               external resource 15. 
 *                External resource 15 is hardwired to be always active. - 
 *               (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_CNT_EN2__COUNT_ENABLE_EVENT      BITFIELD(16, 0)
#define CSETM__CSETM_CNT_EN2__COUNT_ENABLE_EVENT__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_CNT_RELOAD_EVENT1__CNT_RELOAD_EVENT   
 *
 * @BRIEF        Counter reload event - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_CNT_RELOAD_EVENT1__CNT_RELOAD_EVENT BITFIELD(15, 0)
#define CSETM__CSETM_CNT_RELOAD_EVENT1__CNT_RELOAD_EVENT__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_CNT_RELOAD_EVENT2__CNT_RELOAD_EVENT   
 *
 * @BRIEF        Counter reload event - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_CNT_RELOAD_EVENT2__CNT_RELOAD_EVENT BITFIELD(15, 0)
#define CSETM__CSETM_CNT_RELOAD_EVENT2__CNT_RELOAD_EVENT__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_CNT_VALUE1__CNT_VALUE   
 *
 * @BRIEF        Current counter value - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_CNT_VALUE1__CNT_VALUE            BITFIELD(15, 0)
#define CSETM__CSETM_CNT_VALUE1__CNT_VALUE__POS       0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_CNT_VALUE2__CNT_VALUE   
 *
 * @BRIEF        Current counter value - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_CNT_VALUE2__CNT_VALUE            BITFIELD(15, 0)
#define CSETM__CSETM_CNT_VALUE2__CNT_VALUE__POS       0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_SEQ_CTRL1__STATE_TRANSITION_EVENT   
 *
 * @BRIEF        State transition event - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_SEQ_CTRL1__STATE_TRANSITION_EVENT BITFIELD(16, 0)
#define CSETM__CSETM_SEQ_CTRL1__STATE_TRANSITION_EVENT__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_SEQ_CTRL2__STATE_TRANSITION_EVENT   
 *
 * @BRIEF        State transition event - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_SEQ_CTRL2__STATE_TRANSITION_EVENT BITFIELD(16, 0)
#define CSETM__CSETM_SEQ_CTRL2__STATE_TRANSITION_EVENT__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_SEQ_CTRL3__STATE_TRANSITION_EVENT   
 *
 * @BRIEF        State transition event - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_SEQ_CTRL3__STATE_TRANSITION_EVENT BITFIELD(16, 0)
#define CSETM__CSETM_SEQ_CTRL3__STATE_TRANSITION_EVENT__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_SEQ_CTRL4__STATE_TRANSITION_EVENT   
 *
 * @BRIEF        State transition event - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_SEQ_CTRL4__STATE_TRANSITION_EVENT BITFIELD(16, 0)
#define CSETM__CSETM_SEQ_CTRL4__STATE_TRANSITION_EVENT__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_SEQ_CTRL5__STATE_TRANSITION_EVENT   
 *
 * @BRIEF        State transition event - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_SEQ_CTRL5__STATE_TRANSITION_EVENT BITFIELD(16, 0)
#define CSETM__CSETM_SEQ_CTRL5__STATE_TRANSITION_EVENT__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_SEQ_CTRL6__STATE_TRANSITION_EVENT   
 *
 * @BRIEF        State transition event - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_SEQ_CTRL6__STATE_TRANSITION_EVENT BITFIELD(16, 0)
#define CSETM__CSETM_SEQ_CTRL6__STATE_TRANSITION_EVENT__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_SEQ_STATE__CURRENT_SEQUENCER_STATE   
 *
 * @BRIEF        00 = Current sequencer state 1 
 *               01 = Current sequencer state 2 
 *               10 = Current sequencer state 3 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_SEQ_STATE__CURRENT_SEQUENCER_STATE BITFIELD(1, 0)
#define CSETM__CSETM_SEQ_STATE__CURRENT_SEQUENCER_STATE__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_EXTOUT_EVENT1__EXTOUT_EVENT   
 *
 * @BRIEF        External output event - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_EXTOUT_EVENT1__EXTOUT_EVENT      BITFIELD(15, 0)
#define CSETM__CSETM_EXTOUT_EVENT1__EXTOUT_EVENT__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_EXTOUT_EVENT2__EXTOUT_EVENT   
 *
 * @BRIEF        External output event - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_EXTOUT_EVENT2__EXTOUT_EVENT      BITFIELD(15, 0)
#define CSETM__CSETM_EXTOUT_EVENT2__EXTOUT_EVENT__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_CONTEXTID_COMP_VALUE__CONTEXTID_VALUE   
 *
 * @BRIEF        Context ID value - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_CONTEXTID_COMP_VALUE__CONTEXTID_VALUE BITFIELD(31, 0)
#define CSETM__CSETM_CONTEXTID_COMP_VALUE__CONTEXTID_VALUE__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_CONTEXTID_COMP_MASK__CONTEXTID_MASK_VALUE   
 *
 * @BRIEF        Context ID mask value - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_CONTEXTID_COMP_MASK__CONTEXTID_MASK_VALUE BITFIELD(31, 0)
#define CSETM__CSETM_CONTEXTID_COMP_MASK__CONTEXTID_MASK_VALUE__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_SYNC_FREQ__SYNC_FREQ2   
 *
 * @BRIEF        Synchronization frequency (default = 1024) - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_SYNC_FREQ__SYNC_FREQ2            BITFIELD(11, 2)
#define CSETM__CSETM_SYNC_FREQ__SYNC_FREQ2__POS       2

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_SYNC_FREQ__SYNC_FREQ_1   
 *
 * @BRIEF        Synchronization frequency (bit not implemented) - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_SYNC_FREQ__SYNC_FREQ_1           BITFIELD(1, 0)
#define CSETM__CSETM_SYNC_FREQ__SYNC_FREQ_1__POS      0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_ETMID__IMPLEMENTOR_CODE   
 *
 * @BRIEF        Implementor code. The following codes are defined (all other 
 *               values are reserved by ARM Limited): 
 *               0x41 = A (ARM Limited). - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_ETMID__IMPLEMENTOR_CODE          BITFIELD(31, 24)
#define CSETM__CSETM_ETMID__IMPLEMENTOR_CODE__POS     24

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_ETMID__CPRT   
 *
 * @BRIEF        CPRTs count as data instructions. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_ETMID__CPRT                      BITFIELD(17, 17)
#define CSETM__CSETM_ETMID__CPRT__POS                 17

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_ETMID__LOAD_PC   
 *
 * @BRIEF        Load pc first. Special handling is not required to 
 *               reconstruct the data addresses of an LDM with the pc in the 
 *               register list because ETMv3.2 requires noncontiguous data 
 *               addresses to be traced. However, special handling is 
 *               required to determine which transfers correspond to which 
 *               register. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_ETMID__LOAD_PC                   BITFIELD(16, 16)
#define CSETM__CSETM_ETMID__LOAD_PC__POS              16

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_ETMID__CORE_FAMILY   
 *
 * @BRIEF        Core Family. The meaning of this field depends on the value 
 *               of the Implementor Code. 
 *               The following apply if Implementor Code = A (ARM Limited): 
 *               0000 = ARM7 
 *               0001 = ARM9 
 *               0010 = ARM10 
 *               0011 = ARM11. 
 *               The following apply if Implementor Code = i (Intel Limited): 
 *               0001 = XScale - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_ETMID__CORE_FAMILY               BITFIELD(15, 12)
#define CSETM__CSETM_ETMID__CORE_FAMILY__POS          12

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_ETMID__MAJOR_ETM_ARCH   
 *
 * @BRIEF        Major ETM architecture version number=3: 
 *               0000 = ETMv1 
 *               0001 = ETMv2 
 *               0010 = ETMv3. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_ETMID__MAJOR_ETM_ARCH            BITFIELD(11, 8)
#define CSETM__CSETM_ETMID__MAJOR_ETM_ARCH__POS       8

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_ETMID__MINOR_ETM_ARCH   
 *
 * @BRIEF        Minor ETM architecture version number=2 - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_ETMID__MINOR_ETM_ARCH            BITFIELD(7, 4)
#define CSETM__CSETM_ETMID__MINOR_ETM_ARCH__POS       4

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_ETMID__IMPLEMENTATION_REV   
 *
 * @BRIEF        Implementation revision. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_ETMID__IMPLEMENTATION_REV        BITFIELD(3, 0)
#define CSETM__CSETM_ETMID__IMPLEMENTATION_REV__POS   0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_CONFIGCODE_EXT__ALL_REGISTERS_READABLE   
 *
 * @BRIEF        All registers, except some integration test registers, are 
 *               readable = 1. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_CONFIGCODE_EXT__ALL_REGISTERS_READABLE BITFIELD(11, 11)
#define CSETM__CSETM_CONFIGCODE_EXT__ALL_REGISTERS_READABLE__POS 11

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_CONFIGCODE_EXT__EXTENTED_EXTERNAL_INPUT_BUS_SIZE   
 *
 * @BRIEF        Size of extended external input bus = 20 - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_CONFIGCODE_EXT__EXTENTED_EXTERNAL_INPUT_BUS_SIZE BITFIELD(10, 3)
#define CSETM__CSETM_CONFIGCODE_EXT__EXTENTED_EXTERNAL_INPUT_BUS_SIZE__POS 3

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_CONFIGCODE_EXT__NB_EXTERNAL_INPUT_SELECTORS   
 *
 * @BRIEF        Number of extended external input selectors = 2. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_CONFIGCODE_EXT__NB_EXTERNAL_INPUT_SELECTORS BITFIELD(2, 0)
#define CSETM__CSETM_CONFIGCODE_EXT__NB_EXTERNAL_INPUT_SELECTORS__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_CSTRACEID__TRACE_ID   
 *
 * @BRIEF        Trace ID to output onto the trace bus. 
 *               At reset this register is 0x00. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_CSTRACEID__TRACE_ID              BITFIELD(6, 0)
#define CSETM__CSETM_CSTRACEID__TRACE_ID__POS         0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_ITMISCOUT__EXTOUT   
 *
 * @BRIEF        Drives the EXTOUT[1:0] external outputs. - (WO) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_ITMISCOUT__EXTOUT                BITFIELD(9, 8)
#define CSETM__CSETM_ITMISCOUT__EXTOUT__POS           8

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_ITMISCOUT__EXTINACK   
 *
 * @BRIEF        Drives the EXTINACK[3:0] external outputs. - (WO) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_ITMISCOUT__EXTINACK              BITFIELD(3, 0)
#define CSETM__CSETM_ITMISCOUT__EXTINACK__POS         0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_ITMISCIN__EXTOUTACK   
 *
 * @BRIEF        Returns the value of the EXTOUTACK[1:0] external inputs. - 
 *               (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_ITMISCIN__EXTOUTACK              BITFIELD(9, 8)
#define CSETM__CSETM_ITMISCIN__EXTOUTACK__POS         8

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_ITMISCIN__DBGACK   
 *
 * @BRIEF        Returns the value of the DBGACK external input. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_ITMISCIN__DBGACK                 BITFIELD(4, 4)
#define CSETM__CSETM_ITMISCIN__DBGACK__POS            4

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_ITMISCIN__EXTIN   
 *
 * @BRIEF        Returns the value of the EXTIN[3:0] external inputs. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_ITMISCIN__EXTIN                  BITFIELD(3, 0)
#define CSETM__CSETM_ITMISCIN__EXTIN__POS             0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_ITTRIGGERACK__TRIGOUTACK   
 *
 * @BRIEF        Returns the value of the TRIGOUTACK external input. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_ITTRIGGERACK__TRIGOUTACK         BITFIELD(0, 0)
#define CSETM__CSETM_ITTRIGGERACK__TRIGOUTACK__POS    0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_ITTRIGGERREQ__TRIGOUT   
 *
 * @BRIEF        Drives the TRIGOUT external output. - (WO) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_ITTRIGGERREQ__TRIGOUT            BITFIELD(0, 0)
#define CSETM__CSETM_ITTRIGGERREQ__TRIGOUT__POS       0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_ITATBDATA0__ATDATAM   
 *
 * @BRIEF        Drives the ATDATAM[31, 23, 15, 7, 0] external outputs. - 
 *               (WO) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_ITATBDATA0__ATDATAM              BITFIELD(4, 0)
#define CSETM__CSETM_ITATBDATA0__ATDATAM__POS         0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_ITATBCTR2__AFVALIM   
 *
 * @BRIEF        Returns the value of the AFVALIDM external input. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_ITATBCTR2__AFVALIM               BITFIELD(1, 1)
#define CSETM__CSETM_ITATBCTR2__AFVALIM__POS          1

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_ITATBCTR2__ATREADYM   
 *
 * @BRIEF        Returns the value of the ATREADYM external input. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_ITATBCTR2__ATREADYM              BITFIELD(0, 0)
#define CSETM__CSETM_ITATBCTR2__ATREADYM__POS         0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_ITATBCTR1__ATIDM   
 *
 * @BRIEF        Drives the ATIDM[6:0] external outputs. - (WO) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_ITATBCTR1__ATIDM                 BITFIELD(6, 0)
#define CSETM__CSETM_ITATBCTR1__ATIDM__POS            0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_ITATBCTR0__RESERVED_2   
 *
 * @BRIEF        Reserved. Write as zero. - (WO) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_ITATBCTR0__RESERVED_2            BITFIELD(31, 10)
#define CSETM__CSETM_ITATBCTR0__RESERVED_2__POS       10

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_ITATBCTR0__ATBYTESM   
 *
 * @BRIEF        Drives the ATBYTESM[1:0] external outputs. - (WO) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_ITATBCTR0__ATBYTESM              BITFIELD(9, 8)
#define CSETM__CSETM_ITATBCTR0__ATBYTESM__POS         8

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_ITATBCTR0__AFREADYM   
 *
 * @BRIEF        Drives the AFREADYM external output. - (WO) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_ITATBCTR0__AFREADYM              BITFIELD(1, 1)
#define CSETM__CSETM_ITATBCTR0__AFREADYM__POS         1

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_ITATBCTR0__ATVALIDM   
 *
 * @BRIEF        Drives the ATVALIDM external output. - (WO) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_ITATBCTR0__ATVALIDM              BITFIELD(0, 0)
#define CSETM__CSETM_ITATBCTR0__ATVALIDM__POS         0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_IMCR__INTEGRATION_MODE   
 *
 * @BRIEF        When set, the device goes into an integration mode to enable 
 *               Topology Detection or Integration Testing to be checked. 
 *               At reset this bit is LOW. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_IMCR__INTEGRATION_MODE           BITFIELD(0, 0)
#define CSETM__CSETM_IMCR__INTEGRATION_MODE__POS      0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_CLAIMTAGSET__CLAIM_TAG_SET   
 *
 * @BRIEF        The Claim Tag Set Register is used to set bits in the Claim 
 *               Tag and determine the number of bits supported by the Claim 
 *               Tag. 
 *               On reads, returns 0x000000FF.  
 *               On writes, a 1 in each bit position causes the corresponding 
 *               bit in the Claim Tag value to be set. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_CLAIMTAGSET__CLAIM_TAG_SET       BITFIELD(7, 0)
#define CSETM__CSETM_CLAIMTAGSET__CLAIM_TAG_SET__POS  0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_CLAIMTAGCLEAR__CLAIM_TAG_CLEAR   
 *
 * @BRIEF        The Claim Tag Clear Register is used to clear bits in the 
 *               Claim Tag and determine the current value of the Claim Tag. 
 *               On reads, returns the current Claim Tag value. On writes, a 
 *               1 in each bit position causes the corresponding bit in the 
 *               Claim Tag value to be cleared. 
 *               At reset this register is 0x00 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_CLAIMTAGCLEAR__CLAIM_TAG_CLEAR   BITFIELD(7, 0)
#define CSETM__CSETM_CLAIMTAGCLEAR__CLAIM_TAG_CLEAR__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_LOCK_ACCESS__LOCK_ACCESS   
 *
 * @BRIEF        A write of 0xC5ACCE55 unlocks the ETM.  
 *               A write of any other value locks the ETM.  
 *               Writes to this register from an interface that ignores the 
 *               lock 
 *               registers are ignored. - (WO) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_LOCK_ACCESS__LOCK_ACCESS         BITFIELD(31, 0)
#define CSETM__CSETM_LOCK_ACCESS__LOCK_ACCESS__POS    0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_LOCK_STATUS__LOCK_REGISTER_LENGTH   
 *
 * @BRIEF        Reads as 0x0.  
 *               Indicates that the Lock Access Register is 32 bits. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_LOCK_STATUS__LOCK_REGISTER_LENGTH BITFIELD(2, 2)
#define CSETM__CSETM_LOCK_STATUS__LOCK_REGISTER_LENGTH__POS 2

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_LOCK_STATUS__ETM_LOCKED   
 *
 * @BRIEF        Indicates if the ETM is locked 
 *               1: Writes are ignored 
 *               0: Writes are permitted. 
 *               If this register is accessed from an interface where the 
 *               lock registers are ignored, this field reads as 0 regardless 
 *               of whether the ETM is locked. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_LOCK_STATUS__ETM_LOCKED          BITFIELD(1, 1)
#define CSETM__CSETM_LOCK_STATUS__ETM_LOCKED__POS     1

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_LOCK_STATUS__LOCK_IMPLEMENTED   
 *
 * @BRIEF        Indicates if the lock registers are implemented for this 
 *               interface 
 *               1: This access is from an interface that requires the ETM to 
 *               be unlocked 
 *               0: This access is from an interface that ignores the lock 
 *               registers. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_LOCK_STATUS__LOCK_IMPLEMENTED    BITFIELD(0, 0)
#define CSETM__CSETM_LOCK_STATUS__LOCK_IMPLEMENTED__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_AUTH_STATUS__SNID_CONTROL   
 *
 * @BRIEF        This field is a logical OR of the NIDEN and DBGEN signals. 
 *               It takes the value 
 *               b11 when the OR is TRUE, and b10 when the OR is FALSE - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_AUTH_STATUS__SNID_CONTROL        BITFIELD(7, 6)
#define CSETM__CSETM_AUTH_STATUS__SNID_CONTROL__POS   6

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_AUTH_STATUS__SID_STATUS   
 *
 * @BRIEF        00: Secure invasive debug not supported. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_AUTH_STATUS__SID_STATUS          BITFIELD(5, 4)
#define CSETM__CSETM_AUTH_STATUS__SID_STATUS__POS     4

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_AUTH_STATUS__NSNID_STATUS   
 *
 * @BRIEF        00: Non-secure non-invasive debug status not controlled by 
 *               ETM. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_AUTH_STATUS__NSNID_STATUS        BITFIELD(3, 2)
#define CSETM__CSETM_AUTH_STATUS__NSNID_STATUS__POS   2

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_AUTH_STATUS__NSID_STATUS   
 *
 * @BRIEF        00: Non-secure invasive debug not supported. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_AUTH_STATUS__NSID_STATUS         BITFIELD(1, 0)
#define CSETM__CSETM_AUTH_STATUS__NSID_STATUS__POS    0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_DEVICE_TYPE__SUB_TYPE   
 *
 * @BRIEF        0x1 Sub type, Processor trace. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_DEVICE_TYPE__SUB_TYPE            BITFIELD(7, 4)
#define CSETM__CSETM_DEVICE_TYPE__SUB_TYPE__POS       4

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_DEVICE_TYPE__MAIN_TYPE   
 *
 * @BRIEF        0x3 Main type, Trace source. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_DEVICE_TYPE__MAIN_TYPE           BITFIELD(3, 0)
#define CSETM__CSETM_DEVICE_TYPE__MAIN_TYPE__POS      0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_PERIPHID4__FOURKBCOUNT   
 *
 * @BRIEF        4KB count - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_PERIPHID4__FOURKBCOUNT           BITFIELD(7, 4)
#define CSETM__CSETM_PERIPHID4__FOURKBCOUNT__POS      4

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_PERIPHID4__JEP106CCODE   
 *
 * @BRIEF        JEP106 continuation code - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_PERIPHID4__JEP106CCODE           BITFIELD(3, 0)
#define CSETM__CSETM_PERIPHID4__JEP106CCODE__POS      0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_PERIPHID0__PARTNUM0   
 *
 * @BRIEF        Part Number [7:0] - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_PERIPHID0__PARTNUM0              BITFIELD(7, 0)
#define CSETM__CSETM_PERIPHID0__PARTNUM0__POS         0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_PERIPHID1__JEPIDCODE0   
 *
 * @BRIEF        TI JEP106 identity code [3:0] - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_PERIPHID1__JEPIDCODE0            BITFIELD(7, 4)
#define CSETM__CSETM_PERIPHID1__JEPIDCODE0__POS       4

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_PERIPHID1__PARTNUM1   
 *
 * @BRIEF        Part Number [11:8] ? Upper BCD value of Device Number - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_PERIPHID1__PARTNUM1              BITFIELD(3, 0)
#define CSETM__CSETM_PERIPHID1__PARTNUM1__POS         0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_PERIPHID2__REVISION   
 *
 * @BRIEF        Revision - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_PERIPHID2__REVISION              BITFIELD(7, 4)
#define CSETM__CSETM_PERIPHID2__REVISION__POS         4

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_PERIPHID2__JEDECUSED   
 *
 * @BRIEF        Always set, indicates that a JEDEC assigned value is used - 
 *               (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_PERIPHID2__JEDECUSED             BITFIELD(3, 3)
#define CSETM__CSETM_PERIPHID2__JEDECUSED__POS        3

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_PERIPHID2__JEPIDCODE1   
 *
 * @BRIEF        TI JEP106 identity code [6:4] - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_PERIPHID2__JEPIDCODE1            BITFIELD(2, 0)
#define CSETM__CSETM_PERIPHID2__JEPIDCODE1__POS       0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_PERIPHID3__REV   
 *
 * @BRIEF        RevAND - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_PERIPHID3__REV                   BITFIELD(7, 4)
#define CSETM__CSETM_PERIPHID3__REV__POS              4

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_PERIPHID3__CUSTOMERMOD   
 *
 * @BRIEF        Customer Modified - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_PERIPHID3__CUSTOMERMOD           BITFIELD(3, 0)
#define CSETM__CSETM_PERIPHID3__CUSTOMERMOD__POS      0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_COMPONENTID0__PREAMBLE   
 *
 * @BRIEF        Preamble - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_COMPONENTID0__PREAMBLE           BITFIELD(7, 0)
#define CSETM__CSETM_COMPONENTID0__PREAMBLE__POS      0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_COMPONENTID1__CLASS   
 *
 * @BRIEF        Component class = System component - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_COMPONENTID1__CLASS              BITFIELD(7, 4)
#define CSETM__CSETM_COMPONENTID1__CLASS__POS         4

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_COMPONENTID1__PREAMBLE   
 *
 * @BRIEF        Preamble - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_COMPONENTID1__PREAMBLE           BITFIELD(3, 0)
#define CSETM__CSETM_COMPONENTID1__PREAMBLE__POS      0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_COMPONENTID2__PREAMBLE   
 *
 * @BRIEF        Preamble - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_COMPONENTID2__PREAMBLE           BITFIELD(7, 0)
#define CSETM__CSETM_COMPONENTID2__PREAMBLE__POS      0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CSETM__CSETM_COMPONENTID3__PREAMBLE   
 *
 * @BRIEF        Preamble - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define CSETM__CSETM_COMPONENTID3__PREAMBLE           BITFIELD(7, 0)
#define CSETM__CSETM_COMPONENTID3__PREAMBLE__POS      0

    /* 
     * List of register bitfields values for component CSETM
     *
     */

#ifdef __cplusplus
}
#endif
#endif                                                     /* __CSETM_CRED_H */

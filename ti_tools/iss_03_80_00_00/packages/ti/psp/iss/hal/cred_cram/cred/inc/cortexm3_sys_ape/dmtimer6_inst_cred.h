/** ==================================================================
 *  @file   dmtimer6_inst_cred.h                                                  
 *                                                                    
 *  @path   /ti/psp/iss/hal/cred_cram/cred/inc/cortexm3_sys_ape/                                                  
 *                                                                    
 *  @desc   This  File contains.                                      
 * ===================================================================
 *  Copyright (c) Texas Instruments Inc 2011, 2012                    
 *                                                                    
 *  Use of this software is controlled by the terms and conditions found
 *  in the license agreement under which this software has been supplied
 * ===================================================================*/

/* ============================================================================ 
 * TEXAS INSTRUMENTS INCORPORATED PROPRIETARY INFORMATION Property of Texas
 * Instruments For Unrestricted Internal Use Only Unauthorized reproduction
 * and/or distribution is strictly prohibited.  This product is protected
 * under copyright law and trade secret law as an unpublished work.  Created
 * 2008, (C) Copyright 2008 Texas Instruments.  All rights reserved. */

/**
 *  @Component instance:   DMTIMER6
 *
 *  @Filename:             dmtimer6_inst_cred.h
 *
 *  @Description:   
 *
 *  Generated by: Socrates CRED generator prototype
 *
    *//* ====================================================================== */

#ifndef __DMTIMER_CRED_H
#define __DMTIMER_CRED_H

#ifdef __cplusplus
extern "C" {
#endif

    /* 
     * Instance DMTIMER6 of component DMTIMER mapped in MONICA at address 0x4903A000
     */

                                                                              /*-------------------------------------------------------------------------*//**
 * @DEFINITION   BITFIELD
 *
 * @BRIEF        The bitfield must be defined according to register width
 *               of the component instance - 64/32/16/8
 *
    *//*------------------------------------------------------------------------ */
#undef BITFIELD
#define BITFIELD BITFIELD_32

    /* 
     *  List of Register arrays for component instance DMTIMER6
     *
     */

    /* 
     *  List of bundle arrays for component instance DMTIMER6
     *
     */

    /* 
     *  List of bundles for component instance DMTIMER6
     *
     */

    /* 
     * List of registers for component instance DMTIMER6
     *
     */

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMTIMER__TIDR
 *
 * @BRIEF        This read only register contains the revision number of the 
 *               module. A write to this register has no effect. 
 *               This Register is used by software to track features, bugs, 
 *               and compatibility. 
 *
    *//*------------------------------------------------------------------------ */
#define DMTIMER__TIDR                                      0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMTIMER__TIOCP_CFG
 *
 * @BRIEF        This register controls the various parameters of the OCP 
 *               interface  
 *                 
 *
    *//*------------------------------------------------------------------------ */
#define DMTIMER__TIOCP_CFG                                 0x10ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMTIMER__IRQ_EOI
 *
 * @BRIEF        Software End-Of-Interrupt: Allows the generation of further 
 *               pulses on the interrupt line, if an new interrupt event is 
 *               pending, when using the pulsed output. 
 *               Unused when using the level interrupt line (depending on 
 *               module integration). 
 *
    *//*------------------------------------------------------------------------ */
#define DMTIMER__IRQ_EOI                                   0x20ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMTIMER__IRQSTATUS_RAW
 *
 * @BRIEF        Component interrupt request status. 
 *               Check the corresponding secondary status register. Raw 
 *               status is set even if event is not enabled. Write 1 to set 
 *               the (raw) status, mostly for debug. 
 *
    *//*------------------------------------------------------------------------ */
#define DMTIMER__IRQSTATUS_RAW                             0x24ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMTIMER__IRQSTATUS
 *
 * @BRIEF        Component  interrupt request status. 
 *               Check the corresponding secondary status register.Enabled 
 *               status isn't set unless event is enabled.Write 1 to clear 
 *               the status after interrupt has been serviced (raw status 
 *               gets cleared, i.e. even if not enabled). 
 *
    *//*------------------------------------------------------------------------ */
#define DMTIMER__IRQSTATUS                                 0x28ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMTIMER__IRQENABLE_SET
 *
 * @BRIEF        Component interrupt request enable 
 *               Write 1 to set (enable interrupt). 
 *               Readout equal to corresponding _CLR register. 
 *
    *//*------------------------------------------------------------------------ */
#define DMTIMER__IRQENABLE_SET                             0x2Cul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMTIMER__IRQENABLE_CLR
 *
 * @BRIEF        Component interrupt request enable 
 *               Write 1 to clear (disable interrupt). 
 *               Readout equal to corresponding _SET register. 
 *
    *//*------------------------------------------------------------------------ */
#define DMTIMER__IRQENABLE_CLR                             0x30ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMTIMER__IRQWAKEEN
 *
 * @BRIEF        Wakeup-enabled events taking place when module is idle shall 
 *               generate an asynchronous wakeup. 
 *
    *//*------------------------------------------------------------------------ */
#define DMTIMER__IRQWAKEEN                                 0x34ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMTIMER__TCLR
 *
 * @BRIEF        ?This register controls optional features specific to the 
 *               timer functionality  
 *               Note: The bit 
 *
    *//*------------------------------------------------------------------------ */
#define DMTIMER__TCLR                                      0x38ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMTIMER__TCRR
 *
 * @BRIEF        This register holds the value of the internal counter  
 *                 
 *
    *//*------------------------------------------------------------------------ */
#define DMTIMER__TCRR                                      0x3Cul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMTIMER__TLDR
 *
 * @BRIEF        This register holds the timer's load value  
 *                 
 *
    *//*------------------------------------------------------------------------ */
#define DMTIMER__TLDR                                      0x40ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMTIMER__TTGR
 *
 * @BRIEF        The read value of this register is always 0xFFFF FFFF. 
 *
    *//*------------------------------------------------------------------------ */
#define DMTIMER__TTGR                                      0x44ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMTIMER__TWPS
 *
 * @BRIEF        This register contains the write posting bits for all 
 *               writ-able functional registers   
 *                 
 *
    *//*------------------------------------------------------------------------ */
#define DMTIMER__TWPS                                      0x48ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMTIMER__TMAR
 *
 * @BRIEF        The compare logic consists of a 32-bit wide, read/write data 
 *               TMAR register and logic to compare counter 
 *
    *//*------------------------------------------------------------------------ */
#define DMTIMER__TMAR                                      0x4Cul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMTIMER__TCAR1
 *
 * @BRIEF        Register description is not available
 *
    *//*------------------------------------------------------------------------ */
#define DMTIMER__TCAR1                                     0x50ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMTIMER__TSICR
 *
 * @BRIEF        Timer Synchronous Interface Control Register   
 *                 
 *
    *//*------------------------------------------------------------------------ */
#define DMTIMER__TSICR                                     0x54ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMTIMER__TCAR2
 *
 * @BRIEF        Register description is not available
 *
    *//*------------------------------------------------------------------------ */
#define DMTIMER__TCAR2                                     0x58ul

    /* 
     * List of register bitfields for component instance DMTIMER6
     *
     */

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMTIMER__TIDR__SCHEME   
 *
 * @BRIEF        Used to distinguish between old scheme and current - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define DMTIMER__TIDR__SCHEME                         BITFIELD(31, 30)
#define DMTIMER__TIDR__SCHEME__POS                    30

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMTIMER__TIDR__FUNC   
 *
 * @BRIEF        Function indicates a software compatible module family.   
 *               If there is no level of software compatibility a new Func 
 *               number (and hence REVISION) should be assigned. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define DMTIMER__TIDR__FUNC                           BITFIELD(27, 16)
#define DMTIMER__TIDR__FUNC__POS                      16

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMTIMER__TIDR__R_RTL   
 *
 * @BRIEF        RTL Version (R), maintained by IP design owner.  
 *               RTL follows a numbering such as X.Y.R.Z which are explained 
 *               in this table.  
 *               R changes ONLY when:  
 *               (1) PDS uploads occur which may have been due to spec 
 *               changes  
 *               (2) Bug fixes occur  
 *               (3) Resets to '0' when X or Y changes.  
 *               Design team has an internal 'Z' (customer invisible) number 
 *               which increments on every drop that happens due to DV and 
 *               RTL updates. Z resets to 0 when R increments. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define DMTIMER__TIDR__R_RTL                          BITFIELD(15, 11)
#define DMTIMER__TIDR__R_RTL__POS                     11

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMTIMER__TIDR__X_MAJOR   
 *
 * @BRIEF        Major Revision (X), maintained by IP specification owner.  
 *               X changes ONLY when:  
 *               (1) There is a major feature addition. An example would be 
 *               adding Master Mode to Utopia Level2. The Func field (or 
 *               Class/Type in old PID format) will remain the same.  
 *               X does NOT change due to:  
 *               (1) Bug fixes  
 *               (2) Change in feature parameters. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define DMTIMER__TIDR__X_MAJOR                        BITFIELD(10, 8)
#define DMTIMER__TIDR__X_MAJOR__POS                   8

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMTIMER__TIDR__CUSTOM   
 *
 * @BRIEF        Indicates a special version for a particular device. 
 *               Consequence of use may avoid use of standard Chip Support 
 *               Library (CSL) / Drivers. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define DMTIMER__TIDR__CUSTOM                         BITFIELD(7, 6)
#define DMTIMER__TIDR__CUSTOM__POS                    6

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMTIMER__TIDR__Y_MINOR   
 *
 * @BRIEF        Minor Revision (Y), maintained by IP specification owner.  
 *               Y changes ONLY when:  
 *               (1) Features are scaled (up or down). Flexibility exists in 
 *               that this feature scalability may either be represented in 
 *               the Y change or a specific register in the IP that indicates 
 *               which features are exactly available.  
 *               (2) When feature creeps from Is-Not list to Is list. But 
 *               this may not be the case once it sees silicon; in which case 
 *               X will change.  
 *               Y does NOT change due to:  
 *               (1) Bug fixes  
 *               (2) Typos or clarifications  
 *               (3) major functional/feature change/addition/deletion. 
 *               Instead these changes may be reflected via R, S, X as 
 *               applicable.  
 *               Spec owner maintains a customer-invisible number 'S' which 
 *               changes due to:  
 *               (1) Typos/clarifications  
 *               (2) Bug documentation. Note that this bug is not due to a 
 *               spec change but due to implementation. Nevertheless, the 
 *               spec tracks the IP bugs. An RTL release (say for silicon 
 *               PG1.1) that occurs due to bug fix should document the 
 *               corresponding spec number (X.Y.S) in its release notes. - 
 *               (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define DMTIMER__TIDR__Y_MINOR                        BITFIELD(5, 0)
#define DMTIMER__TIDR__Y_MINOR__POS                   0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMTIMER__TIOCP_CFG__IDLEMODE   
 *
 * @BRIEF        Power management, req/ack control - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DMTIMER__TIOCP_CFG__IDLEMODE                  BITFIELD(3, 2)
#define DMTIMER__TIOCP_CFG__IDLEMODE__POS             2

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMTIMER__TIOCP_CFG__EMUFREE   
 *
 * @BRIEF        Emulation mode - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DMTIMER__TIOCP_CFG__EMUFREE                   BITFIELD(1, 1)
#define DMTIMER__TIOCP_CFG__EMUFREE__POS              1

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMTIMER__TIOCP_CFG__SOFTRESET   
 *
 * @BRIEF        Software reset. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DMTIMER__TIOCP_CFG__SOFTRESET                 BITFIELD(0, 0)
#define DMTIMER__TIOCP_CFG__SOFTRESET__POS            0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMTIMER__IRQ_EOI__LINE_NUMBER   
 *
 * @BRIEF        Write the number of the interrupt line to apply a SW EOI to 
 *               it.  
 *               Note that there is only a single line (i.e. number 0). 
 *               Read : Read always returns 0 
 *               Write 0 : SW EOI on interrupt line 
 *               Write 1 : No action - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DMTIMER__IRQ_EOI__LINE_NUMBER                 BITFIELD(0, 0)
#define DMTIMER__IRQ_EOI__LINE_NUMBER__POS            0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMTIMER__IRQSTATUS_RAW__TCAR_IT_FLAG   
 *
 * @BRIEF        IRQ status for Capture 
 *               Read 0 : No event pending 
 *               Write 0 : No action 
 *               Read 1 : IRQ event pending 
 *               Write 1 : Trigger IRQ event by software - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DMTIMER__IRQSTATUS_RAW__TCAR_IT_FLAG          BITFIELD(2, 2)
#define DMTIMER__IRQSTATUS_RAW__TCAR_IT_FLAG__POS     2

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMTIMER__IRQSTATUS_RAW__OVF_IT_FLAG   
 *
 * @BRIEF        IRQ status for Overflow 
 *               Read 0 : No event pending 
 *               Write 0 : No action 
 *               Read 1 : IRQ event pending 
 *               Write 1 : Trigger IRQ event by software - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DMTIMER__IRQSTATUS_RAW__OVF_IT_FLAG           BITFIELD(1, 1)
#define DMTIMER__IRQSTATUS_RAW__OVF_IT_FLAG__POS      1

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMTIMER__IRQSTATUS_RAW__MAT_IT_FLAG   
 *
 * @BRIEF        IRQ status for Match 
 *               Read 0 : No event pending 
 *               Write 0 : No action 
 *               Read 1 : IRQ event pending 
 *               Write 1 : Trigger IRQ event by software - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DMTIMER__IRQSTATUS_RAW__MAT_IT_FLAG           BITFIELD(0, 0)
#define DMTIMER__IRQSTATUS_RAW__MAT_IT_FLAG__POS      0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMTIMER__IRQSTATUS__TCAR_IT_FLAG   
 *
 * @BRIEF        IRQ status for Capture 
 *               Read 0 : No event pending 
 *               Write 0 : No action 
 *               Read 1 : IRQ event pending 
 *               Write 1 :  Clear pending event, if any - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DMTIMER__IRQSTATUS__TCAR_IT_FLAG              BITFIELD(2, 2)
#define DMTIMER__IRQSTATUS__TCAR_IT_FLAG__POS         2

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMTIMER__IRQSTATUS__OVF_IT_FLAG   
 *
 * @BRIEF        IRQ status for Overflow 
 *               Read 0 : No event pending 
 *               Write 0 : No action 
 *               Read 1 : IRQ event pending 
 *               Write 1 :  Clear pending event, if any - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DMTIMER__IRQSTATUS__OVF_IT_FLAG               BITFIELD(1, 1)
#define DMTIMER__IRQSTATUS__OVF_IT_FLAG__POS          1

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMTIMER__IRQSTATUS__MAT_IT_FLAG   
 *
 * @BRIEF        IRQ status for Match 
 *               Read 0 : No event pending 
 *               Write 0 : No action 
 *               Read 1 : IRQ event pending 
 *               Write 1 : Clear pending event, if any - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DMTIMER__IRQSTATUS__MAT_IT_FLAG               BITFIELD(0, 0)
#define DMTIMER__IRQSTATUS__MAT_IT_FLAG__POS          0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMTIMER__IRQENABLE_SET__TCAR_EN_FLAG   
 *
 * @BRIEF        IRQ enable for Compare 
 *               Read 0 : IRQ event is disabled 
 *               Write 0 : No action 
 *               Read 1 : IRQ event is enabled 
 *               Write 1 : Set IRQ enable - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DMTIMER__IRQENABLE_SET__TCAR_EN_FLAG          BITFIELD(2, 2)
#define DMTIMER__IRQENABLE_SET__TCAR_EN_FLAG__POS     2

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMTIMER__IRQENABLE_SET__OVF_EN_FLAG   
 *
 * @BRIEF        IRQ enable for Overflow 
 *               Read 0 : IRQ event is disabled 
 *               Write 0 : No action 
 *               Read 1 : IRQ event is enabled 
 *               Write 1 : Set IRQ enable - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DMTIMER__IRQENABLE_SET__OVF_EN_FLAG           BITFIELD(1, 1)
#define DMTIMER__IRQENABLE_SET__OVF_EN_FLAG__POS      1

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMTIMER__IRQENABLE_SET__MAT_EN_FLAG   
 *
 * @BRIEF        IRQ enable for Match 
 *               Read 0 : IRQ event is disabled 
 *               Write 0 : No action 
 *               Read 1 : IRQ event is enabled 
 *               Write 1 : Set IRQ enable - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DMTIMER__IRQENABLE_SET__MAT_EN_FLAG           BITFIELD(0, 0)
#define DMTIMER__IRQENABLE_SET__MAT_EN_FLAG__POS      0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMTIMER__IRQENABLE_CLR__TCAR_EN_FLAG   
 *
 * @BRIEF        IRQ enable for Compare 
 *               Read 0 : IRQ event is disabled 
 *               Write 0 : No action 
 *               Read 1 : IRQ event is enabled 
 *               Write 1 : Clear IRQ enable - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DMTIMER__IRQENABLE_CLR__TCAR_EN_FLAG          BITFIELD(2, 2)
#define DMTIMER__IRQENABLE_CLR__TCAR_EN_FLAG__POS     2

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMTIMER__IRQENABLE_CLR__OVF_EN_FLAG   
 *
 * @BRIEF        IRQ enable for Overflow 
 *               Read 0 : IRQ event is disabled 
 *               Write 0 : No action 
 *               Read 1 : IRQ event is enabled 
 *               Write 1 : Clear IRQ enable - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DMTIMER__IRQENABLE_CLR__OVF_EN_FLAG           BITFIELD(1, 1)
#define DMTIMER__IRQENABLE_CLR__OVF_EN_FLAG__POS      1

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMTIMER__IRQENABLE_CLR__MAT_EN_FLAG   
 *
 * @BRIEF        IRQ enable for Match 
 *               Read 0 : IRQ event is disabled 
 *               Write 0 : No action 
 *               Read 1 : IRQ event is enabled 
 *               Write 1 : Clear IRQ enable - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DMTIMER__IRQENABLE_CLR__MAT_EN_FLAG           BITFIELD(0, 0)
#define DMTIMER__IRQENABLE_CLR__MAT_EN_FLAG__POS      0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMTIMER__IRQWAKEEN__TCAR_WUP_ENA   
 *
 * @BRIEF        Wakeup generation for Compare - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DMTIMER__IRQWAKEEN__TCAR_WUP_ENA              BITFIELD(2, 2)
#define DMTIMER__IRQWAKEEN__TCAR_WUP_ENA__POS         2

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMTIMER__IRQWAKEEN__OVF_WUP_ENA   
 *
 * @BRIEF        Wakeup generation for Overflow - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DMTIMER__IRQWAKEEN__OVF_WUP_ENA               BITFIELD(1, 1)
#define DMTIMER__IRQWAKEEN__OVF_WUP_ENA__POS          1

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMTIMER__IRQWAKEEN__MAT_WUP_ENA   
 *
 * @BRIEF        Wakeup generation for Match - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DMTIMER__IRQWAKEEN__MAT_WUP_ENA               BITFIELD(0, 0)
#define DMTIMER__IRQWAKEEN__MAT_WUP_ENA__POS          0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMTIMER__TCLR__IODIRECTION   
 *
 * @BRIEF        Drives the direction for TriState buffers. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DMTIMER__TCLR__IODIRECTION                    BITFIELD(14, 14)
#define DMTIMER__TCLR__IODIRECTION__POS               14

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMTIMER__TCLR__CAPT_MODE   
 *
 * @BRIEF        Capture mode select bit (first/second) - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DMTIMER__TCLR__CAPT_MODE                      BITFIELD(13, 13)
#define DMTIMER__TCLR__CAPT_MODE__POS                 13

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMTIMER__TCLR__PT   
 *
 * @BRIEF        Pulse or toggle mode on PORTIMERPWM output pin - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DMTIMER__TCLR__PT                             BITFIELD(12, 12)
#define DMTIMER__TCLR__PT__POS                        12

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMTIMER__TCLR__TRG   
 *
 * @BRIEF        Trigger output mode on PORTIMERPWM output pin - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DMTIMER__TCLR__TRG                            BITFIELD(11, 10)
#define DMTIMER__TCLR__TRG__POS                       10

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMTIMER__TCLR__TCM   
 *
 * @BRIEF        Transition Capture Mode on PIEVENTCAPT input pin 
 *               (When the TCM field passed from (00) to any other 
 *               combination then the TCAR_IT_FLAG and the edge detection 
 *               logic are cleared) - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DMTIMER__TCLR__TCM                            BITFIELD(9, 8)
#define DMTIMER__TCLR__TCM__POS                       8

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMTIMER__TCLR__SCPWM   
 *
 * @BRIEF        This bit should be set or clear while the timer is stopped 
 *               or the trigger is off. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DMTIMER__TCLR__SCPWM                          BITFIELD(7, 7)
#define DMTIMER__TCLR__SCPWM__POS                     7

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMTIMER__TCLR__CE   
 *
 * @BRIEF        Compare enable - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DMTIMER__TCLR__CE                             BITFIELD(6, 6)
#define DMTIMER__TCLR__CE__POS                        6

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMTIMER__TCLR__PRE   
 *
 * @BRIEF        Prescaler enable - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DMTIMER__TCLR__PRE                            BITFIELD(5, 5)
#define DMTIMER__TCLR__PRE__POS                       5

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMTIMER__TCLR__PTV   
 *
 * @BRIEF        Pre-scale clock Timer Value - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DMTIMER__TCLR__PTV                            BITFIELD(4, 2)
#define DMTIMER__TCLR__PTV__POS                       2

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMTIMER__TCLR__AR   
 *
 * @BRIEF        Auto-reload mode - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DMTIMER__TCLR__AR                             BITFIELD(1, 1)
#define DMTIMER__TCLR__AR__POS                        1

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMTIMER__TCLR__ST   
 *
 * @BRIEF        Start/Stop timer control - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DMTIMER__TCLR__ST                             BITFIELD(0, 0)
#define DMTIMER__TCLR__ST__POS                        0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMTIMER__TCRR__TIMER_COUNTER   
 *
 * @BRIEF        Value of TIMER counter - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DMTIMER__TCRR__TIMER_COUNTER                  BITFIELD(31, 0)
#define DMTIMER__TCRR__TIMER_COUNTER__POS             0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMTIMER__TLDR__LOAD_VALUE   
 *
 * @BRIEF        Timer counter value loaded on overflow in auto-reload mode 
 *               or on TTGR write access 
 *               LOAD_VALUE must be different than the timer overflow value 
 *               (0xFFFFFFFF). - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DMTIMER__TLDR__LOAD_VALUE                     BITFIELD(31, 0)
#define DMTIMER__TLDR__LOAD_VALUE__POS                0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMTIMER__TTGR__TTGR_VALUE   
 *
 * @BRIEF        Writing in the TTGR register, TCRR will be loaded from TLDR 
 *               and prescaler counter will be cleared 
 *               Reload will be done regardless of the AR field value of TCLR 
 *               register - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DMTIMER__TTGR__TTGR_VALUE                     BITFIELD(31, 0)
#define DMTIMER__TTGR__TTGR_VALUE__POS                0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMTIMER__TWPS__W_PEND_TMAR   
 *
 * @BRIEF        When equal to 1, a write is pending to the TMAR register - 
 *               (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define DMTIMER__TWPS__W_PEND_TMAR                    BITFIELD(4, 4)
#define DMTIMER__TWPS__W_PEND_TMAR__POS               4

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMTIMER__TWPS__W_PEND_TTGR   
 *
 * @BRIEF        When equal to 1, a write is pending to the TTGR register - 
 *               (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define DMTIMER__TWPS__W_PEND_TTGR                    BITFIELD(3, 3)
#define DMTIMER__TWPS__W_PEND_TTGR__POS               3

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMTIMER__TWPS__W_PEND_TLDR   
 *
 * @BRIEF        When equal to 1, a write is pending to the TLDR register - 
 *               (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define DMTIMER__TWPS__W_PEND_TLDR                    BITFIELD(2, 2)
#define DMTIMER__TWPS__W_PEND_TLDR__POS               2

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMTIMER__TWPS__W_PEND_TCRR   
 *
 * @BRIEF        When equal to 1, a write is pending to the TCRR register - 
 *               (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define DMTIMER__TWPS__W_PEND_TCRR                    BITFIELD(1, 1)
#define DMTIMER__TWPS__W_PEND_TCRR__POS               1

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMTIMER__TWPS__W_PEND_TCLR   
 *
 * @BRIEF        When equal to 1, a write is pending to the TCLR register - 
 *               (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define DMTIMER__TWPS__W_PEND_TCLR                    BITFIELD(0, 0)
#define DMTIMER__TWPS__W_PEND_TCLR__POS               0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMTIMER__TMAR__COMPARE_VALUE   
 *
 * @BRIEF        Value to be compared to the timer counter - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DMTIMER__TMAR__COMPARE_VALUE                  BITFIELD(31, 0)
#define DMTIMER__TMAR__COMPARE_VALUE__POS             0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMTIMER__TCAR1__CAPTURE_VALUE1   
 *
 * @BRIEF        Timer counter value captured on an external event trigger - 
 *               (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define DMTIMER__TCAR1__CAPTURE_VALUE1                BITFIELD(31, 0)
#define DMTIMER__TCAR1__CAPTURE_VALUE1__POS           0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMTIMER__TSICR__POSTED   
 *
 * @BRIEF        Reset value of POSTED depends on hardware integration module 
 *               at design time. Software must read POSTED field to get the 
 *               hardware module configuration. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DMTIMER__TSICR__POSTED                        BITFIELD(2, 2)
#define DMTIMER__TSICR__POSTED__POS                   2

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMTIMER__TSICR__SFT   
 *
 * @BRIEF        This bit reset all the functional part of the module  - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DMTIMER__TSICR__SFT                           BITFIELD(1, 1)
#define DMTIMER__TSICR__SFT__POS                      1

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMTIMER__TCAR2__CAPTURE_VALUE2   
 *
 * @BRIEF        Timer counter value captured on an external event trigger - 
 *               (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define DMTIMER__TCAR2__CAPTURE_VALUE2                BITFIELD(31, 0)
#define DMTIMER__TCAR2__CAPTURE_VALUE2__POS           0

    /* 
     * List of register bitfields values for component instance DMTIMER6
     *
     */

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMTIMER__TIDR__SCHEME__SCHEME_VALUE_0
 *
 * @BRIEF        Legacy ASP or WTBU scheme - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define DMTIMER__TIDR__SCHEME__SCHEME_VALUE_0         0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMTIMER__TIDR__SCHEME__SCHEME_VALUE_1
 *
 * @BRIEF        Highlander 0.8 scheme - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define DMTIMER__TIDR__SCHEME__SCHEME_VALUE_1         0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMTIMER__TIOCP_CFG__IDLEMODE__IDLE_MODE_0X0
 *
 * @BRIEF        Force-idle mode: local target's idle state follows 
 *               (acknowledges) the system's idle requests unconditionally, 
 *               i.e. regardless of the IP module's internal requirements. 
 *               Backup mode, for debug only. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DMTIMER__TIOCP_CFG__IDLEMODE__IDLE_MODE_0X0   0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMTIMER__TIOCP_CFG__IDLEMODE__IDLE_MODE_0X1
 *
 * @BRIEF        No-idle mode: local target never enters idle state. 
 *               Backup mode, for debug only. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DMTIMER__TIOCP_CFG__IDLEMODE__IDLE_MODE_0X1   0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMTIMER__TIOCP_CFG__IDLEMODE__IDLE_MODE_0X2
 *
 * @BRIEF        Smart-idle mode: local target's idle state eventually 
 *               follows (acknowledges) the system's idle requests, depending 
 *               on the IP module's internal requirements. 
 *               IP module shall not generate (IRQ- or DMA-request-related) 
 *               wakeup events. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DMTIMER__TIOCP_CFG__IDLEMODE__IDLE_MODE_0X2   0x2ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMTIMER__TIOCP_CFG__IDLEMODE__IDLE_MODE_0X3
 *
 * @BRIEF        Smart-idle wakeup-capable mode: local target's idle state 
 *               eventually follows (acknowledges) the system's idle 
 *               requests, depending on the IP module's internal 
 *               requirements. 
 *               IP module may generate (IRQ- or DMA-request-related) wakeup 
 *               events when in idle state. 
 *               Mode is only relevant if the appropriate IP module "swakeup" 
 *               output(s) is (are) implemented. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DMTIMER__TIOCP_CFG__IDLEMODE__IDLE_MODE_0X3   0x3ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMTIMER__TIOCP_CFG__EMUFREE__TIMER_FROZEN
 *
 * @BRIEF        The timer is frozen in emulation mode (PINSUSPENDN signal 
 *               active). - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DMTIMER__TIOCP_CFG__EMUFREE__TIMER_FROZEN     0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMTIMER__TIOCP_CFG__EMUFREE__TIMER_FREE
 *
 * @BRIEF        => The timer runs free, regardless of PINSUSPENDN value. - 
 *               (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DMTIMER__TIOCP_CFG__EMUFREE__TIMER_FREE       0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMTIMER__TIOCP_CFG__SOFTRESET__SOFTRESET_VALUE_0
 *
 * @BRIEF        Read 0 : reset done, no pending action 
 *               Write 0 : no action - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DMTIMER__TIOCP_CFG__SOFTRESET__SOFTRESET_VALUE_0 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMTIMER__TIOCP_CFG__SOFTRESET__SOFTRESET_VALUE_1
 *
 * @BRIEF        Read 1 : initiate software reset 
 *               Write 1 : Reset ongoing - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DMTIMER__TIOCP_CFG__SOFTRESET__SOFTRESET_VALUE_1 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMTIMER__IRQWAKEEN__TCAR_WUP_ENA__TCAR_WUP_ENA_VALUE_0
 *
 * @BRIEF        Wakeup disabled - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DMTIMER__IRQWAKEEN__TCAR_WUP_ENA__TCAR_WUP_ENA_VALUE_0 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMTIMER__IRQWAKEEN__TCAR_WUP_ENA__TCAR_WUP_ENA_VALUE_1
 *
 * @BRIEF        Wakeup enabled - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DMTIMER__IRQWAKEEN__TCAR_WUP_ENA__TCAR_WUP_ENA_VALUE_1 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMTIMER__IRQWAKEEN__OVF_WUP_ENA__OVF_WUP_ENA_VALUE_0
 *
 * @BRIEF        Wakeup disabled - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DMTIMER__IRQWAKEEN__OVF_WUP_ENA__OVF_WUP_ENA_VALUE_0 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMTIMER__IRQWAKEEN__OVF_WUP_ENA__OVF_WUP_ENA_VALUE_1
 *
 * @BRIEF        Wakeup enabled - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DMTIMER__IRQWAKEEN__OVF_WUP_ENA__OVF_WUP_ENA_VALUE_1 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMTIMER__IRQWAKEEN__MAT_WUP_ENA__MAT_WUP_ENA_VALUE_0
 *
 * @BRIEF        Wakeup disabled - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DMTIMER__IRQWAKEEN__MAT_WUP_ENA__MAT_WUP_ENA_VALUE_0 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMTIMER__IRQWAKEEN__MAT_WUP_ENA__MAT_WUP_ENA_VALUE_1
 *
 * @BRIEF        Wakeup enabled - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DMTIMER__IRQWAKEEN__MAT_WUP_ENA__MAT_WUP_ENA_VALUE_1 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMTIMER__TCLR__IODIRECTION__DIRECTIONOUTPUT
 *
 * @BRIEF        Tristates driven to output. Used for PWM output. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DMTIMER__TCLR__IODIRECTION__DIRECTIONOUTPUT   0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMTIMER__TCLR__IODIRECTION__DIRECTIONINPUT
 *
 * @BRIEF        Tristate is input. Used for capture. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DMTIMER__TCLR__IODIRECTION__DIRECTIONINPUT    0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMTIMER__TCLR__CAPT_MODE__CAPT_MODE_VALUE_0
 *
 * @BRIEF        single capture - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DMTIMER__TCLR__CAPT_MODE__CAPT_MODE_VALUE_0   0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMTIMER__TCLR__CAPT_MODE__CAPT_MODE_VALUE_1
 *
 * @BRIEF        capture on second event - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DMTIMER__TCLR__CAPT_MODE__CAPT_MODE_VALUE_1   0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMTIMER__TCLR__PT__PT_VALUE_0
 *
 * @BRIEF        pulse - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DMTIMER__TCLR__PT__PT_VALUE_0                 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMTIMER__TCLR__PT__PT_VALUE_1
 *
 * @BRIEF        toggle - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DMTIMER__TCLR__PT__PT_VALUE_1                 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMTIMER__TCLR__TRG__TRG_VALUE_0X0
 *
 * @BRIEF        no trigger - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DMTIMER__TCLR__TRG__TRG_VALUE_0X0             0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMTIMER__TCLR__TRG__TRG_VALUE_0X1
 *
 * @BRIEF        trigger on overflow - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DMTIMER__TCLR__TRG__TRG_VALUE_0X1             0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMTIMER__TCLR__TRG__TRG_VALUE_0X2
 *
 * @BRIEF        trigger on overflow and match - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DMTIMER__TCLR__TRG__TRG_VALUE_0X2             0x2ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMTIMER__TCLR__TRG__TRG_VALUE_0X3
 *
 * @BRIEF        reserved - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DMTIMER__TCLR__TRG__TRG_VALUE_0X3             0x3ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMTIMER__TCLR__TCM__TCM_VALUE_0X0
 *
 * @BRIEF        no capture - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DMTIMER__TCLR__TCM__TCM_VALUE_0X0             0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMTIMER__TCLR__TCM__TCM_VALUE_0X1
 *
 * @BRIEF        capture on low to high transition - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DMTIMER__TCLR__TCM__TCM_VALUE_0X1             0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMTIMER__TCLR__TCM__TCM_VALUE_0X2
 *
 * @BRIEF        capture on both edge transition - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DMTIMER__TCLR__TCM__TCM_VALUE_0X2             0x2ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMTIMER__TCLR__TCM__TCM_VALUE_0X3
 *
 * @BRIEF        Capture on booth edges of PIEVETCAPT - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DMTIMER__TCLR__TCM__TCM_VALUE_0X3             0x3ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMTIMER__TCLR__SCPWM__SCPWM_VALUE_0
 *
 * @BRIEF        clear the PORTIMERPWM output pin and select positive pulse 
 *               for pulse mode - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DMTIMER__TCLR__SCPWM__SCPWM_VALUE_0           0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMTIMER__TCLR__SCPWM__SCPWM_VALUE_1
 *
 * @BRIEF        set the PORTIMERPWM output pin and select negative pulse for 
 *               pulse mode - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DMTIMER__TCLR__SCPWM__SCPWM_VALUE_1           0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMTIMER__TCLR__CE__CE_VALUE_0
 *
 * @BRIEF        compare mode is disable - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DMTIMER__TCLR__CE__CE_VALUE_0                 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMTIMER__TCLR__CE__CE_VALUE_1
 *
 * @BRIEF        compare mode is enable - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DMTIMER__TCLR__CE__CE_VALUE_1                 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMTIMER__TCLR__PRE__PRE_VALUE_0
 *
 * @BRIEF        The TIMER clock input pin clocks the counter - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DMTIMER__TCLR__PRE__PRE_VALUE_0               0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMTIMER__TCLR__PRE__PRE_VALUE_1
 *
 * @BRIEF        The divided input pin clocks the counter - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DMTIMER__TCLR__PRE__PRE_VALUE_1               0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMTIMER__TCLR__AR__AR_VALUE_0
 *
 * @BRIEF        One shot timer - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DMTIMER__TCLR__AR__AR_VALUE_0                 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMTIMER__TCLR__AR__AR_VALUE_1
 *
 * @BRIEF        Auto-reload timer - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DMTIMER__TCLR__AR__AR_VALUE_1                 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMTIMER__TCLR__ST__ST_VALUE_0
 *
 * @BRIEF        Stop timer: Only the counter is frozen 
 *               In case of one-shot mode selected (AR =0), this bit is 
 *               automatically reset by internal logic when the counter is 
 *               overflowed. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DMTIMER__TCLR__ST__ST_VALUE_0                 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMTIMER__TCLR__ST__ST_VALUE_1
 *
 * @BRIEF        Start timer - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DMTIMER__TCLR__ST__ST_VALUE_1                 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMTIMER__TSICR__POSTED__POSTED_VALUE_0
 *
 * @BRIEF        posted mode inactive: will delay the command accept output 
 *               signal. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DMTIMER__TSICR__POSTED__POSTED_VALUE_0        0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMTIMER__TSICR__POSTED__POSTED_VALUE_1
 *
 * @BRIEF        posted mode active (clocks ratio needs to fit freq (timer) < 
 *               freq (OCP)/4 frequency requirement) - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DMTIMER__TSICR__POSTED__POSTED_VALUE_1        0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMTIMER__TSICR__SFT__SFT_0
 *
 * @BRIEF        software reset is disabled - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DMTIMER__TSICR__SFT__SFT_0                    0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMTIMER__TSICR__SFT__SFT_1
 *
 * @BRIEF        software reset is enabled - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DMTIMER__TSICR__SFT__SFT_1                    0x1ul

#ifdef __cplusplus
}
#endif
#endif                                                     /* __DMTIMER_CRED_H 
                                                            */

/** ==================================================================
 *  @file   mc3_mmr_cred.h                                                  
 *                                                                    
 *  @path   /ti/psp/iss/hal/cred_cram/cred/inc/cortexm3_sys_ape/                                                  
 *                                                                    
 *  @desc   This  File contains.                                      
 * ===================================================================
 *  Copyright (c) Texas Instruments Inc 2011, 2012                    
 *                                                                    
 *  Use of this software is controlled by the terms and conditions found
 *  in the license agreement under which this software has been supplied
 * ===================================================================*/

/* ============================================================================ 
 * TEXAS INSTRUMENTS INCORPORATED PROPRIETARY INFORMATION Property of Texas
 * Instruments For Unrestricted Internal Use Only Unauthorized reproduction
 * and/or distribution is strictly prohibited.  This product is protected
 * under copyright law and trade secret law as an unpublished work.  Created
 * 2008, (C) Copyright 2008 Texas Instruments.  All rights reserved. */

/**
 *  @Component:   MC3_MMR
 *
 *  @Filename:    mc3_mmr_cred.h
 *
 *  @Description: Component description is not available
 *
 *  Generated by: Socrates CRED generator prototype
 *
    *//* ====================================================================== */

#ifndef __MC3_MMR_CRED_H
#define __MC3_MMR_CRED_H

#ifdef __cplusplus
extern "C" {
#endif

    /* 
     * Instance MC3_CFG__MMR of component MC3_MMR mapped in MONICA at address 0x5A059000
     */

                                                                              /*-------------------------------------------------------------------------*//**
 * @DEFINITION   BITFIELD
 *
 * @BRIEF        The bitfield must be defined according to register width
 *               of the component - 64/32/16/8
 *
    *//*------------------------------------------------------------------------ */
#undef BITFIELD
#define BITFIELD BITFIELD_32

    /* 
     *  List of Register arrays for component MC3_MMR
     *
     */

    /* 
     *  List of bundle arrays for component MC3_MMR
     *
     */

    /* 
     *  List of bundles for component MC3_MMR
     *
     */

    /* 
     * List of registers for component MC3_MMR
     *
     */

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MC3_MMR__MC_PID
 *
 * @BRIEF        PID register 
 *
    *//*------------------------------------------------------------------------ */
#define MC3_MMR__MC_PID                                    0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MC3_MMR__MC_CNT
 *
 * @BRIEF        Benchmark Counter register 
 *
    *//*------------------------------------------------------------------------ */
#define MC3_MMR__MC_CNT                                    0x4ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MC3_MMR__MC_CTRL
 *
 * @BRIEF        Control register 
 *
    *//*------------------------------------------------------------------------ */
#define MC3_MMR__MC_CTRL                                   0x8ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MC3_MMR__MC_PARAM0
 *
 * @BRIEF        MC parameter register 
 *
    *//*------------------------------------------------------------------------ */
#define MC3_MMR__MC_PARAM0                                 0xCul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MC3_MMR__MC_PARAM1
 *
 * @BRIEF        MC parameter register 
 *
    *//*------------------------------------------------------------------------ */
#define MC3_MMR__MC_PARAM1                                 0x10ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MC3_MMR__MC_PARAM2
 *
 * @BRIEF        MC parameter register 
 *
    *//*------------------------------------------------------------------------ */
#define MC3_MMR__MC_PARAM2                                 0x14ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MC3_MMR__MC_ADDR_0
 *
 * @BRIEF        Base Address of reference data Luma  L0 
 *
    *//*------------------------------------------------------------------------ */
#define MC3_MMR__MC_ADDR_0                                 0x18ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MC3_MMR__MC_ADDR_1
 *
 * @BRIEF        Base Address of reference data Luma  L1 
 *
    *//*------------------------------------------------------------------------ */
#define MC3_MMR__MC_ADDR_1                                 0x1Cul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MC3_MMR__MC_ADDR_2
 *
 * @BRIEF        Base Address of reference data Chroma  L0 
 *
    *//*------------------------------------------------------------------------ */
#define MC3_MMR__MC_ADDR_2                                 0x20ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MC3_MMR__MC_ADDR_3
 *
 * @BRIEF        Register description is not available
 *
    *//*------------------------------------------------------------------------ */
#define MC3_MMR__MC_ADDR_3                                 0x24ul

    /* 
     * List of register bitfields for component MC3_MMR
     *
     */

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MC3_MMR__MC_PID__MC_PID   
 *
 * @BRIEF        PID of MC3. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define MC3_MMR__MC_PID__MC_PID                       BITFIELD(31, 0)
#define MC3_MMR__MC_PID__MC_PID__POS                  0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MC3_MMR__MC_CNT__MC_CNT_EN   
 *
 * @BRIEF        Counter Enable (MC_CNT_EN) 
 *                   0: the benchmark counter is disabled 
 *                   1: the benchmark counter is enabled. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MC3_MMR__MC_CNT__MC_CNT_EN                    BITFIELD(31, 31)
#define MC3_MMR__MC_CNT__MC_CNT_EN__POS               31

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MC3_MMR__MC_CNT__MC_CNT_RST   
 *
 * @BRIEF        Counter reset (MC_CNT_RST) 
 *               Writing 0 results in no effect. 
 *               Writing 1 results in clearing the benchmark counter to 0. 
 *               Always read as 0. - (WO) 
 *
    *//*------------------------------------------------------------------------ */
#define MC3_MMR__MC_CNT__MC_CNT_RST                   BITFIELD(30, 30)
#define MC3_MMR__MC_CNT__MC_CNT_RST__POS              30

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MC3_MMR__MC_CNT__MC_COUNT   
 *
 * @BRIEF        Counter value (MC_COUNT). 
 *               Indicates current value of the benchmark counter. 
 *               When MC_CNT_EN is ?1? and IP is busy (en=1), 
 *                the benchmark counter counts up based on clk_mc. 
 *               Writing has no effect. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define MC3_MMR__MC_CNT__MC_COUNT                     BITFIELD(15, 0)
#define MC3_MMR__MC_CNT__MC_COUNT__POS                0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MC3_MMR__MC_CTRL__MC_DBG   
 *
 * @BRIEF        H.264 MBAFF Debug Mode Bit (MC_DBG). This bit is used for 
 *               H.264 MBAFF mode only. For the other codecs, this bit should 
 *               be 0. 
 *                   0: Normal mode 
 *                   1: Debug mode(1MB prediction/step) - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MC3_MMR__MC_CTRL__MC_DBG                      BITFIELD(2, 2)
#define MC3_MMR__MC_CTRL__MC_DBG__POS                 2

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MC3_MMR__MC_CTRL__MC_EN   
 *
 * @BRIEF        Module Start and Status (MC_EN). Writing 1 starts a set of 
 *               commands and writing 0 is ignored. Writing to this register 
 *               is forbidden while MC_EN = 1. 
 *                   0 : Idle 
 *                   1 : Busy - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MC3_MMR__MC_CTRL__MC_EN                       BITFIELD(0, 0)
#define MC3_MMR__MC_CTRL__MC_EN__POS                  0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MC3_MMR__MC_PARAM0__VC1_SMP_MOD   
 *
 * @BRIEF        VC1 sample mode  
 *                   0: Bilinear Interpolation 
 *                   1: Bicubic  Interpolation - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MC3_MMR__MC_PARAM0__VC1_SMP_MOD               BITFIELD(29, 29)
#define MC3_MMR__MC_PARAM0__VC1_SMP_MOD__POS          29

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MC3_MMR__MC_PARAM0__VC1_RND_CTRL   
 *
 * @BRIEF        VC1 Round Control bit - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MC3_MMR__MC_PARAM0__VC1_RND_CTRL              BITFIELD(28, 28)
#define MC3_MMR__MC_PARAM0__VC1_RND_CTRL__POS         28

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MC3_MMR__MC_PARAM0__H264_WGT_BIPRD_IDC   
 *
 * @BRIEF        H.264 weighted_bipred_idc - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MC3_MMR__MC_PARAM0__H264_WGT_BIPRD_IDC        BITFIELD(11, 10)
#define MC3_MMR__MC_PARAM0__H264_WGT_BIPRD_IDC__POS   10

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MC3_MMR__MC_PARAM0__H264_WGT_PRD   
 *
 * @BRIEF        H.264 weighted_pred_flag - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MC3_MMR__MC_PARAM0__H264_WGT_PRD              BITFIELD(9, 9)
#define MC3_MMR__MC_PARAM0__H264_WGT_PRD__POS         9

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MC3_MMR__MC_PARAM0__CODEC_TYPE   
 *
 * @BRIEF        Codec_type select 
 *                   0 : H.264 
 *                   2 : VC-1 
 *                   4 : MPEG-4 
 *                   5 : MPEG-2 
 *                   6 : AVS-1.0 
 *                   8 : RealVideo-8/9/10 
 *                   9 : On2 VP6 
 *                 10 : On2 VP7 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MC3_MMR__MC_PARAM0__CODEC_TYPE                BITFIELD(3, 0)
#define MC3_MMR__MC_PARAM0__CODEC_TYPE__POS           0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MC3_MMR__MC_PARAM2__VP7_FADING   
 *
 * @BRIEF        VP7 Fading Flag  
 *                   0 : Fading off 
 *                   1 : Fading on - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MC3_MMR__MC_PARAM2__VP7_FADING                BITFIELD(16, 16)
#define MC3_MMR__MC_PARAM2__VP7_FADING__POS           16

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MC3_MMR__MC_PARAM2__VP7_BETA   
 *
 * @BRIEF        VP7 FadingBeta - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MC3_MMR__MC_PARAM2__VP7_BETA                  BITFIELD(15, 8)
#define MC3_MMR__MC_PARAM2__VP7_BETA__POS             8

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MC3_MMR__MC_PARAM2__VP7_ALPHA   
 *
 * @BRIEF        VP7 FadingAlpha - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MC3_MMR__MC_PARAM2__VP7_ALPHA                 BITFIELD(7, 0)
#define MC3_MMR__MC_PARAM2__VP7_ALPHA__POS            0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MC3_MMR__MC_ADDR_0__BASE_YREF_BOT_L0_ADD   
 *
 * @BRIEF        Base Address of reference data Y L0 bottom 
 *               (BASE_YREF_BOT_L0_ADD) 
 *               (Reference for bottom field) - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MC3_MMR__MC_ADDR_0__BASE_YREF_BOT_L0_ADD      BITFIELD(31, 16)
#define MC3_MMR__MC_ADDR_0__BASE_YREF_BOT_L0_ADD__POS 16

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MC3_MMR__MC_ADDR_0__BASE_YREF_TOP_L0_ADD   
 *
 * @BRIEF        Base Address of reference data Y L0 top 
 *               (BASE_YREF_TOP_L0_ADD) 
 *               (Reference for progressive / top field) - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MC3_MMR__MC_ADDR_0__BASE_YREF_TOP_L0_ADD      BITFIELD(15, 0)
#define MC3_MMR__MC_ADDR_0__BASE_YREF_TOP_L0_ADD__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MC3_MMR__MC_ADDR_1__BASE_YREF_BOT_L1_ADD   
 *
 * @BRIEF        Base Address of reference data Y L1 bottom 
 *               (BASE_YREF_BOT_L1_ADD) 
 *               (Reference for bottom field) - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MC3_MMR__MC_ADDR_1__BASE_YREF_BOT_L1_ADD      BITFIELD(31, 16)
#define MC3_MMR__MC_ADDR_1__BASE_YREF_BOT_L1_ADD__POS 16

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MC3_MMR__MC_ADDR_1__BASE_YREF_TOP_L1_ADD   
 *
 * @BRIEF        Base Address of reference data Y L1 top 
 *               (BASE_YREF_TOP_L1_ADD) 
 *               (Reference for progressive / top field) - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MC3_MMR__MC_ADDR_1__BASE_YREF_TOP_L1_ADD      BITFIELD(15, 0)
#define MC3_MMR__MC_ADDR_1__BASE_YREF_TOP_L1_ADD__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MC3_MMR__MC_ADDR_2__BASE_CREF_BOT_L0_ADD   
 *
 * @BRIEF        Base Address of reference data C L0 bottom 
 *               (BASE_CREF_BOT_L0_ADD) 
 *               (Reference for bottom field) - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MC3_MMR__MC_ADDR_2__BASE_CREF_BOT_L0_ADD      BITFIELD(31, 16)
#define MC3_MMR__MC_ADDR_2__BASE_CREF_BOT_L0_ADD__POS 16

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MC3_MMR__MC_ADDR_2__BASE_CREF_TOP_L0_ADD   
 *
 * @BRIEF        Base Address of reference data C L0 top 
 *               (BASE_CREF_TOP_L0_ADD) 
 *               (Reference for progressive / top field) - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MC3_MMR__MC_ADDR_2__BASE_CREF_TOP_L0_ADD      BITFIELD(15, 0)
#define MC3_MMR__MC_ADDR_2__BASE_CREF_TOP_L0_ADD__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MC3_MMR__MC_ADDR_3__BASE_CREF_BOT_L1_ADD   
 *
 * @BRIEF        Base Address of reference data C L1 bottom 
 *               (BASE_CREF_BOT_L1_ADD) 
 *               (Reference for Bottom field) - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MC3_MMR__MC_ADDR_3__BASE_CREF_BOT_L1_ADD      BITFIELD(31, 16)
#define MC3_MMR__MC_ADDR_3__BASE_CREF_BOT_L1_ADD__POS 16

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   MC3_MMR__MC_ADDR_3__BASE_CREF_TOP_L1_ADD   
 *
 * @BRIEF        Base Address of reference data C L1 top 
 *               (BASE_CREF_TOP_L1_ADD) 
 *               (Reference for progressive / top field) - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define MC3_MMR__MC_ADDR_3__BASE_CREF_TOP_L1_ADD      BITFIELD(15, 0)
#define MC3_MMR__MC_ADDR_3__BASE_CREF_TOP_L1_ADD__POS 0

    /* 
     * List of register bitfields values for component MC3_MMR
     *
     */

#ifdef __cplusplus
}
#endif
#endif                                                     /* __MC3_MMR_CRED_H 
                                                            */

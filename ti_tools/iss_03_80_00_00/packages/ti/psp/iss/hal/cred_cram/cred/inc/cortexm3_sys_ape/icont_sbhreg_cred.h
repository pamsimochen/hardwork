/** ==================================================================
 *  @file   icont_sbhreg_cred.h                                                  
 *                                                                    
 *  @path   /ti/psp/iss/hal/cred_cram/cred/inc/cortexm3_sys_ape/                                                  
 *                                                                    
 *  @desc   This  File contains.                                      
 * ===================================================================
 *  Copyright (c) Texas Instruments Inc 2011, 2012                    
 *                                                                    
 *  Use of this software is controlled by the terms and conditions found
 *  in the license agreement under which this software has been supplied
 * ===================================================================*/

/* ============================================================================ 
 * TEXAS INSTRUMENTS INCORPORATED PROPRIETARY INFORMATION Property of Texas
 * Instruments For Unrestricted Internal Use Only Unauthorized reproduction
 * and/or distribution is strictly prohibited.  This product is protected
 * under copyright law and trade secret law as an unpublished work.  Created
 * 2008, (C) Copyright 2008 Texas Instruments.  All rights reserved. */

/**
 *  @Component:   ICONT_SBHREG
 *
 *  @Filename:    icont_sbhreg_cred.h
 *
 *  @Description: ICONT SyncBox Handler module registers 
 *
 *  Generated by: Socrates CRED generator prototype
 *
    *//* ====================================================================== */

#ifndef __ICONT_SBHREG_CRED_H
#define __ICONT_SBHREG_CRED_H

#ifdef __cplusplus
extern "C" {
#endif

    /* 
     * Instance ICONT1_MMR__SBH of component ICONT_SBHREG mapped in MONICA at address 0x5A070C00
     * Instance ICONT2_MMR__SBH of component ICONT_SBHREG mapped in MONICA at address 0x5A071C00
     */

                                                                              /*-------------------------------------------------------------------------*//**
 * @DEFINITION   BITFIELD
 *
 * @BRIEF        The bitfield must be defined according to register width
 *               of the component - 64/32/16/8
 *
    *//*------------------------------------------------------------------------ */
#undef BITFIELD
#define BITFIELD BITFIELD_32

    /* 
     *  List of Register arrays for component ICONT_SBHREG
     *
     */

    /* 
     *  List of bundle arrays for component ICONT_SBHREG
     *
     */
                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ICONT_SBHREG__SBHTCCR
 *
 * @BRIEF        Bundle description is not available
 *
    *//*------------------------------------------------------------------------ */
#define ICONT_SBHREG__SBHTCCR                              0x50ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ICONT_SBHREG__SBHTCCR__ELSIZE
 *
 * @BRIEF        SBHTCCR bundle array element size in Bytes
 *
    *//*------------------------------------------------------------------------ */
#define ICONT_SBHREG__SBHTCCR__ELSIZE                      0x4ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ICONT_SBHREG__SBHTCCR__NELEMS
 *
 * @BRIEF        SBHTCCR bundle array number of elements
 *
    *//*------------------------------------------------------------------------ */
#define ICONT_SBHREG__SBHTCCR__NELEMS                      6

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ICONT_SBHREG__SBHVDMAGPID
 *
 * @BRIEF        Bundle description is not available
 *
    *//*------------------------------------------------------------------------ */
#define ICONT_SBHREG__SBHVDMAGPID                          0xB0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ICONT_SBHREG__SBHVDMAGPID__ELSIZE
 *
 * @BRIEF        SBHVDMAGPID bundle array element size in Bytes
 *
    *//*------------------------------------------------------------------------ */
#define ICONT_SBHREG__SBHVDMAGPID__ELSIZE                  0x4ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ICONT_SBHREG__SBHVDMAGPID__NELEMS
 *
 * @BRIEF        SBHVDMAGPID bundle array number of elements
 *
    *//*------------------------------------------------------------------------ */
#define ICONT_SBHREG__SBHVDMAGPID__NELEMS                  4

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ICONT_SBHREG__SBHCOUNT
 *
 * @BRIEF        Bundle description is not available
 *
    *//*------------------------------------------------------------------------ */
#define ICONT_SBHREG__SBHCOUNT                             0x90ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ICONT_SBHREG__SBHCOUNT__ELSIZE
 *
 * @BRIEF        SBHCOUNT bundle array element size in Bytes
 *
    *//*------------------------------------------------------------------------ */
#define ICONT_SBHREG__SBHCOUNT__ELSIZE                     0x4ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ICONT_SBHREG__SBHCOUNT__NELEMS
 *
 * @BRIEF        SBHCOUNT bundle array number of elements
 *
    *//*------------------------------------------------------------------------ */
#define ICONT_SBHREG__SBHCOUNT__NELEMS                     4

    /* 
     *  List of bundles for component ICONT_SBHREG
     *
     */

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ICONT_SBHREG__ICONT_SBH_TCCR__OFFSET
 *
 * @BRIEF        Register ICONT_SBH_TCCR offset in bundle SBHTCCR 
 *
    *//*------------------------------------------------------------------------ */
#define ICONT_SBHREG__ICONT_SBH_TCCR__OFFSET               0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ICONT_SBHREG__ICONT_SBH_DMLCH_CFG__OFFSET
 *
 * @BRIEF        Register ICONT_SBH_DMLCH_CFG offset in bundle SBHVDMAGPID 
 *
    *//*------------------------------------------------------------------------ */
#define ICONT_SBHREG__ICONT_SBH_DMLCH_CFG__OFFSET          0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ICONT_SBHREG__ICONT_SBH_COUNTER__OFFSET
 *
 * @BRIEF        Register ICONT_SBH_COUNTER offset in bundle SBHCOUNT 
 *
    *//*------------------------------------------------------------------------ */
#define ICONT_SBHREG__ICONT_SBH_COUNTER__OFFSET            0x0ul

    /* 
     * List of registers for component ICONT_SBHREG
     *
     */

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ICONT_SBHREG__ICONT_SBH_CTRL
 *
 * @BRIEF        SyncBox Handler control register 
 *
    *//*------------------------------------------------------------------------ */
#define ICONT_SBHREG__ICONT_SBH_CTRL                       0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ICONT_SBHREG__ICONT_SBH_ATLR
 *
 * @BRIEF        Activation Task List register. It logs reference of the task 
 *               interrupting CPU.  
 *               When bitfield x of TX_0 field is 1, Task x has generated an 
 *               interrupt to the CPU. 
 *               Bitfield x of this register is cleared when writing 1 into 
 *               bitfiled x of ICONT_SBH_EOT register. 
 *
    *//*------------------------------------------------------------------------ */
#define ICONT_SBHREG__ICONT_SBH_ATLR                       0x4ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ICONT_SBHREG__ICONT_SBH_ACK
 *
 * @BRIEF        Acknowledge Task register. 
 *               Task x is automatically acknowledged on writing 1 into 
 *               bitfield x of this register.  
 *               Register is automatically cleared. 
 *
    *//*------------------------------------------------------------------------ */
#define ICONT_SBHREG__ICONT_SBH_ACK                        0x8ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ICONT_SBHREG__ICONT_SBH_EOT
 *
 * @BRIEF        End Of Task register. 
 *               SBH notify to the SB that Task x is ended on writing 1 to 
 *               this register.  
 *               Register is automatically cleared. Writing 1 into bitfield x 
 *               of this register will clear bitfield x of ICONT_SBH_ATLR 
 *               register 
 *
    *//*------------------------------------------------------------------------ */
#define ICONT_SBHREG__ICONT_SBH_EOT                        0xCul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ICONT_SBHREG__ICONT_SBH_IRQ_EOI
 *
 * @BRIEF        End Of Interrupt number specification 
 *
    *//*------------------------------------------------------------------------ */
#define ICONT_SBHREG__ICONT_SBH_IRQ_EOI                    0x20ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ICONT_SBHREG__ICONT_SBH_IRQSTATUS_RAW_0
 *
 * @BRIEF        Per-event raw interrupt status vector, line #0 (end of 
 *               transfer).  
 *               Raw status is set even if event is not enabled. 
 *               Write 1 to set the (raw) status, mostly for debug. 
 *
    *//*------------------------------------------------------------------------ */
#define ICONT_SBHREG__ICONT_SBH_IRQSTATUS_RAW_0            0x24ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ICONT_SBHREG__ICONT_SBH_IRQSTATUS_0
 *
 * @BRIEF        Per-event "enabled" interrupt status vector, line #0 (end of 
 *               transfer). 
 *               Enabled status isn't set unless event is enabled. 
 *               Write 1 to clear the status after interrupt has been 
 *               serviced (raw status gets cleared, i.e. even if not 
 *               enabled). 
 *
    *//*------------------------------------------------------------------------ */
#define ICONT_SBHREG__ICONT_SBH_IRQSTATUS_0                0x28ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ICONT_SBHREG__ICONT_SBH_IRQENABLE_SET_0
 *
 * @BRIEF        Per-event interrupt enable bit vector, line #0 (end of 
 *               transfer).  
 *               Write 1 to set (enable interrupt). 
 *               Readout equal to corresponding _CLR register. 
 *
    *//*------------------------------------------------------------------------ */
#define ICONT_SBHREG__ICONT_SBH_IRQENABLE_SET_0            0x2Cul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ICONT_SBHREG__ICONT_SBH_IRQENABLE_CLR_0
 *
 * @BRIEF        Per-event interrupt enable bit vector, line #0 (end of 
 *               transfer).  
 *               Write 1 to clear (disable interrupt). 
 *               Readout equal to corresponding _SET register. 
 *
    *//*------------------------------------------------------------------------ */
#define ICONT_SBHREG__ICONT_SBH_IRQENABLE_CLR_0            0x30ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ICONT_SBHREG__ICONT_SBH_IRQSTATUS_RAW_1
 *
 * @BRIEF        Per-event raw interrupt status vector, line #1 (error). 
 *               Raw status is set even if event is not enabled. 
 *               Write 1 to set the (raw) status, mostly for debug. 
 *
    *//*------------------------------------------------------------------------ */
#define ICONT_SBHREG__ICONT_SBH_IRQSTATUS_RAW_1            0x34ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ICONT_SBHREG__ICONT_SBH_IRQSTATUS_1
 *
 * @BRIEF        Per-event "enabled" interrupt status vector, line #1 
 *               (error). 
 *               Enabled status isn't set unless event is enabled. 
 *               Write 1 to clear the status after interrupt has been 
 *               serviced (raw status gets cleared, i.e. even if not 
 *               enabled). 
 *
    *//*------------------------------------------------------------------------ */
#define ICONT_SBHREG__ICONT_SBH_IRQSTATUS_1                0x38ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ICONT_SBHREG__ICONT_SBH_IRQENABLE_SET_1
 *
 * @BRIEF        Per-event interrupt enable bit vector, line #1 (error).  
 *               Write 1 to set (enable interrupt). 
 *               Readout equal to corresponding _CLR register. 
 *
    *//*------------------------------------------------------------------------ */
#define ICONT_SBHREG__ICONT_SBH_IRQENABLE_SET_1            0x3Cul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ICONT_SBHREG__ICONT_SBH_IRQENABLE_CLR_1
 *
 * @BRIEF        Per-event interrupt enable bit vector, line #1 (error).  
 *               Write 1 to clear (disable interrupt). 
 *               Readout equal to corresponding _SET register. 
 *
    *//*------------------------------------------------------------------------ */
#define ICONT_SBHREG__ICONT_SBH_IRQENABLE_CLR_1            0x40ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ICONT_SBHREG__ICONT_SBH_TCCR
 *
 * @BRIEF        Task n Configuration Control Register 
 *
    *//*------------------------------------------------------------------------ */
#define ICONT_SBHREG__ICONT_SBH_TCCR                       0x50ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ICONT_SBHREG__ICONT_SBH_COUNTER
 *
 * @BRIEF        Initialization value of SyncBox Handler Counter n 
 *
    *//*------------------------------------------------------------------------ */
#define ICONT_SBHREG__ICONT_SBH_COUNTER                    0x90ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ICONT_SBHREG__ICONT_SBH_DMLCH_CFG
 *
 * @BRIEF        This register defines which VDMA group is associated to the 
 *               Data Mover Logical Channel n. 
 *
    *//*------------------------------------------------------------------------ */
#define ICONT_SBHREG__ICONT_SBH_DMLCH_CFG                  0xB0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ICONT_SBHREG__ICONT_SBH_BYP_VDMAG_START
 *
 * @BRIEF        Syncbox Bypass mode VDMA group Start register. 
 *               Register is cleared when ICONT_SBHCTRL.BYPASS bit is written 
 *               to 1. 
 *               Writing to this register is allowed only when 
 *               ICONT_SBHCTRL.BYPASS bit is 1.  Writing a '1' into bitfield 
 *               n will START VDMA group n. 
 *
    *//*------------------------------------------------------------------------ */
#define ICONT_SBHREG__ICONT_SBH_BYP_VDMAG_START            0xD0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ICONT_SBHREG__ICONT_SBH_BYP_VDMAG_END
 *
 * @BRIEF        Syncbox Bypass mode VDMA group End register status. 
 *               This register is cleared when ICONT_SBHCTRL.BYPASS bit is 
 *               written to 1. 
 *               It is updated every time a VDMA group is completed, i.e. on 
 *               VDMA End of Group detection, only if ICONT_SBHCTRL.BYPASS 
 *               bit is 1. 
 *
    *//*------------------------------------------------------------------------ */
#define ICONT_SBHREG__ICONT_SBH_BYP_VDMAG_END              0xD4ul

    /* 
     * List of register bitfields for component ICONT_SBHREG
     *
     */

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ICONT_SBHREG__ICONT_SBH_CTRL__BYPASS   
 *
 * @BRIEF        Control SyncBox bypass mode. This bit defines if SyncBox is 
 *               used to synchronize Task between the different HWAs. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define ICONT_SBHREG__ICONT_SBH_CTRL__BYPASS          BITFIELD(0, 0)
#define ICONT_SBHREG__ICONT_SBH_CTRL__BYPASS__POS     0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ICONT_SBHREG__ICONT_SBH_ATLR__TX_0   
 *
 * @BRIEF        Task x to 0 (x=SYNCBOX_NB_TASK-1) - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define ICONT_SBHREG__ICONT_SBH_ATLR__TX_0            BITFIELD(5, 0)
#define ICONT_SBHREG__ICONT_SBH_ATLR__TX_0__POS       0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ICONT_SBHREG__ICONT_SBH_ACK__TX_0   
 *
 * @BRIEF        Task x to 0 (x=SYNCBOX_NB_TASK-1) - (WO) 
 *
    *//*------------------------------------------------------------------------ */
#define ICONT_SBHREG__ICONT_SBH_ACK__TX_0             BITFIELD(5, 0)
#define ICONT_SBHREG__ICONT_SBH_ACK__TX_0__POS        0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ICONT_SBHREG__ICONT_SBH_EOT__TX_0   
 *
 * @BRIEF        Task x to 0 (x=SYNCBOX_NB_TASK-1) - (WO) 
 *
    *//*------------------------------------------------------------------------ */
#define ICONT_SBHREG__ICONT_SBH_EOT__TX_0             BITFIELD(5, 0)
#define ICONT_SBHREG__ICONT_SBH_EOT__TX_0__POS        0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ICONT_SBHREG__ICONT_SBH_IRQ_EOI__LINE_NUMBER   
 *
 * @BRIEF        Software End Of Interrupt (EOI) control. Write number of 
 *               interrupt output. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define ICONT_SBHREG__ICONT_SBH_IRQ_EOI__LINE_NUMBER  BITFIELD(0, 0)
#define ICONT_SBHREG__ICONT_SBH_IRQ_EOI__LINE_NUMBER__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ICONT_SBHREG__ICONT_SBH_IRQSTATUS_RAW_0__VDMAG_END   
 *
 * @BRIEF        settable raw status for end of transfer interrupt event - 
 *               (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define ICONT_SBHREG__ICONT_SBH_IRQSTATUS_RAW_0__VDMAG_END BITFIELD(0, 0)
#define ICONT_SBHREG__ICONT_SBH_IRQSTATUS_RAW_0__VDMAG_END__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ICONT_SBHREG__ICONT_SBH_IRQSTATUS_0__VDMAG_END   
 *
 * @BRIEF        clearable, enabled status for end of transfer interrupt 
 *               event - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define ICONT_SBHREG__ICONT_SBH_IRQSTATUS_0__VDMAG_END BITFIELD(0, 0)
#define ICONT_SBHREG__ICONT_SBH_IRQSTATUS_0__VDMAG_END__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ICONT_SBHREG__ICONT_SBH_IRQENABLE_SET_0__VDMAG_END   
 *
 * @BRIEF        enable for end of transfer interrupt event - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define ICONT_SBHREG__ICONT_SBH_IRQENABLE_SET_0__VDMAG_END BITFIELD(0, 0)
#define ICONT_SBHREG__ICONT_SBH_IRQENABLE_SET_0__VDMAG_END__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ICONT_SBHREG__ICONT_SBH_IRQENABLE_CLR_0__VDMAG_END   
 *
 * @BRIEF        enable for end of transfer interrupt event - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define ICONT_SBHREG__ICONT_SBH_IRQENABLE_CLR_0__VDMAG_END BITFIELD(0, 0)
#define ICONT_SBHREG__ICONT_SBH_IRQENABLE_CLR_0__VDMAG_END__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ICONT_SBHREG__ICONT_SBH_IRQSTATUS_RAW_1__SBH_ERR   
 *
 * @BRIEF        settable raw status for SBH error event - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define ICONT_SBHREG__ICONT_SBH_IRQSTATUS_RAW_1__SBH_ERR BITFIELD(0, 0)
#define ICONT_SBHREG__ICONT_SBH_IRQSTATUS_RAW_1__SBH_ERR__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ICONT_SBHREG__ICONT_SBH_IRQSTATUS_1__SBH_ERR   
 *
 * @BRIEF        clearable, enabled status for SBH error event - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define ICONT_SBHREG__ICONT_SBH_IRQSTATUS_1__SBH_ERR  BITFIELD(0, 0)
#define ICONT_SBHREG__ICONT_SBH_IRQSTATUS_1__SBH_ERR__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ICONT_SBHREG__ICONT_SBH_IRQENABLE_SET_1__SBH_ERR   
 *
 * @BRIEF        enable for SBH error event - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define ICONT_SBHREG__ICONT_SBH_IRQENABLE_SET_1__SBH_ERR BITFIELD(0, 0)
#define ICONT_SBHREG__ICONT_SBH_IRQENABLE_SET_1__SBH_ERR__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ICONT_SBHREG__ICONT_SBH_IRQENABLE_CLR_1__SBH_ERR   
 *
 * @BRIEF        enable for SBH error event - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define ICONT_SBHREG__ICONT_SBH_IRQENABLE_CLR_1__SBH_ERR BITFIELD(0, 0)
#define ICONT_SBHREG__ICONT_SBH_IRQENABLE_CLR_1__SBH_ERR__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ICONT_SBHREG__ICONT_SBH_TCCR__RESERVED6   
 *
 * @BRIEF        Reserved - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define ICONT_SBHREG__ICONT_SBH_TCCR__RESERVED6       BITFIELD(31, 26)
#define ICONT_SBHREG__ICONT_SBH_TCCR__RESERVED6__POS  26

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ICONT_SBHREG__ICONT_SBH_TCCR__COUNTER_ID   
 *
 * @BRIEF        Counter Identifier - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define ICONT_SBHREG__ICONT_SBH_TCCR__COUNTER_ID      BITFIELD(25, 24)
#define ICONT_SBHREG__ICONT_SBH_TCCR__COUNTER_ID__POS 24

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ICONT_SBHREG__ICONT_SBH_TCCR__RESERVED5   
 *
 * @BRIEF        Reserved - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define ICONT_SBHREG__ICONT_SBH_TCCR__RESERVED5       BITFIELD(23, 23)
#define ICONT_SBHREG__ICONT_SBH_TCCR__RESERVED5__POS  23

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ICONT_SBHREG__ICONT_SBH_TCCR__COUNTER_EN   
 *
 * @BRIEF        Counter Enable - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define ICONT_SBHREG__ICONT_SBH_TCCR__COUNTER_EN      BITFIELD(22, 22)
#define ICONT_SBHREG__ICONT_SBH_TCCR__COUNTER_EN__POS 22

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ICONT_SBHREG__ICONT_SBH_TCCR__RESERVED4   
 *
 * @BRIEF        Reserved - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define ICONT_SBHREG__ICONT_SBH_TCCR__RESERVED4       BITFIELD(21, 21)
#define ICONT_SBHREG__ICONT_SBH_TCCR__RESERVED4__POS  21

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ICONT_SBHREG__ICONT_SBH_TCCR__VDMA_G_SELECT   
 *
 * @BRIEF        VDMA Group Selector - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define ICONT_SBHREG__ICONT_SBH_TCCR__VDMA_G_SELECT   BITFIELD(20, 13)
#define ICONT_SBHREG__ICONT_SBH_TCCR__VDMA_G_SELECT__POS 13

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ICONT_SBHREG__ICONT_SBH_TCCR__RESERVED2   
 *
 * @BRIEF        Reserved - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define ICONT_SBHREG__ICONT_SBH_TCCR__RESERVED2       BITFIELD(12, 12)
#define ICONT_SBHREG__ICONT_SBH_TCCR__RESERVED2__POS  12

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ICONT_SBHREG__ICONT_SBH_TCCR__VDMA_SG_SELECT   
 *
 * @BRIEF        VDMA Super Group Enable - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define ICONT_SBHREG__ICONT_SBH_TCCR__VDMA_SG_SELECT  BITFIELD(11, 10)
#define ICONT_SBHREG__ICONT_SBH_TCCR__VDMA_SG_SELECT__POS 10

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ICONT_SBHREG__ICONT_SBH_TCCR__DM_LCHN_0_EN   
 *
 * @BRIEF        Enable Data Mover Logical channel n to 0 (n=NB_DM_LCH-1) - 
 *               (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define ICONT_SBHREG__ICONT_SBH_TCCR__DM_LCHN_0_EN    BITFIELD(7, 4)
#define ICONT_SBHREG__ICONT_SBH_TCCR__DM_LCHN_0_EN__POS 4

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ICONT_SBHREG__ICONT_SBH_TCCR__RESERVED   
 *
 * @BRIEF        Reserved - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define ICONT_SBHREG__ICONT_SBH_TCCR__RESERVED        BITFIELD(3, 3)
#define ICONT_SBHREG__ICONT_SBH_TCCR__RESERVED__POS   3

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ICONT_SBHREG__ICONT_SBH_TCCR__TASK_TYPE   
 *
 * @BRIEF        Task Type - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define ICONT_SBHREG__ICONT_SBH_TCCR__TASK_TYPE       BITFIELD(2, 0)
#define ICONT_SBHREG__ICONT_SBH_TCCR__TASK_TYPE__POS  0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ICONT_SBHREG__ICONT_SBH_COUNTER__COUNT   
 *
 * @BRIEF        Value to preload on counter - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define ICONT_SBHREG__ICONT_SBH_COUNTER__COUNT        BITFIELD(7, 0)
#define ICONT_SBHREG__ICONT_SBH_COUNTER__COUNT__POS   0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ICONT_SBHREG__ICONT_SBH_DMLCH_CFG__VDMA_GROUP_ID   
 *
 * @BRIEF        VDMA group identifier. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define ICONT_SBHREG__ICONT_SBH_DMLCH_CFG__VDMA_GROUP_ID BITFIELD(4, 0)
#define ICONT_SBHREG__ICONT_SBH_DMLCH_CFG__VDMA_GROUP_ID__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ICONT_SBHREG__ICONT_SBH_BYP_VDMAG_START__VDMAG31_0   
 *
 * @BRIEF        Start VDMA Group - (WO) 
 *
    *//*------------------------------------------------------------------------ */
#define ICONT_SBHREG__ICONT_SBH_BYP_VDMAG_START__VDMAG31_0 BITFIELD(31, 0)
#define ICONT_SBHREG__ICONT_SBH_BYP_VDMAG_START__VDMAG31_0__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ICONT_SBHREG__ICONT_SBH_BYP_VDMAG_END__VDMAG31_0   
 *
 * @BRIEF        VDMA Group is ended - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define ICONT_SBHREG__ICONT_SBH_BYP_VDMAG_END__VDMAG31_0 BITFIELD(31, 0)
#define ICONT_SBHREG__ICONT_SBH_BYP_VDMAG_END__VDMAG31_0__POS 0

    /* 
     * List of register bitfields values for component ICONT_SBHREG
     *
     */

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ICONT_SBHREG__ICONT_SBH_CTRL__BYPASS__DISABLE
 *
 * @BRIEF        SB Bypass mode disabled. (SyncBox are used) - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define ICONT_SBHREG__ICONT_SBH_CTRL__BYPASS__DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ICONT_SBHREG__ICONT_SBH_CTRL__BYPASS__ENABLE
 *
 * @BRIEF        SB Bypass mode enabled. (SyncBox are not used). - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define ICONT_SBHREG__ICONT_SBH_CTRL__BYPASS__ENABLE  0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ICONT_SBHREG__ICONT_SBH_IRQ_EOI__LINE_NUMBER__READ0
 *
 * @BRIEF        Reads always 0 (no EOI memory) - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define ICONT_SBHREG__ICONT_SBH_IRQ_EOI__LINE_NUMBER__READ0 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ICONT_SBHREG__ICONT_SBH_IRQ_EOI__LINE_NUMBER__EOI0
 *
 * @BRIEF        EOI for interrupt output line #0 (end of transfer interrupt 
 *               for SBH bypass mode) - (Write) 
 *
    *//*------------------------------------------------------------------------ */
#define ICONT_SBHREG__ICONT_SBH_IRQ_EOI__LINE_NUMBER__EOI0 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ICONT_SBHREG__ICONT_SBH_IRQ_EOI__LINE_NUMBER__EOI1
 *
 * @BRIEF        EOI for interrupt output line #1 (error interrupt) - (Write) 
 *
    *//*------------------------------------------------------------------------ */
#define ICONT_SBHREG__ICONT_SBH_IRQ_EOI__LINE_NUMBER__EOI1 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ICONT_SBHREG__ICONT_SBH_IRQSTATUS_RAW_0__VDMAG_END__NOACTION
 *
 * @BRIEF        No action - (Write) 
 *
    *//*------------------------------------------------------------------------ */
#define ICONT_SBHREG__ICONT_SBH_IRQSTATUS_RAW_0__VDMAG_END__NOACTION 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ICONT_SBHREG__ICONT_SBH_IRQSTATUS_RAW_0__VDMAG_END__NOEVENT
 *
 * @BRIEF        No event pending - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define ICONT_SBHREG__ICONT_SBH_IRQSTATUS_RAW_0__VDMAG_END__NOEVENT 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ICONT_SBHREG__ICONT_SBH_IRQSTATUS_RAW_0__VDMAG_END__PENDING
 *
 * @BRIEF        Event pending - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define ICONT_SBHREG__ICONT_SBH_IRQSTATUS_RAW_0__VDMAG_END__PENDING 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ICONT_SBHREG__ICONT_SBH_IRQSTATUS_RAW_0__VDMAG_END__SET
 *
 * @BRIEF        Set event (debug) - (Write) 
 *
    *//*------------------------------------------------------------------------ */
#define ICONT_SBHREG__ICONT_SBH_IRQSTATUS_RAW_0__VDMAG_END__SET 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ICONT_SBHREG__ICONT_SBH_IRQSTATUS_0__VDMAG_END__NOACTION
 *
 * @BRIEF        No action - (Write) 
 *
    *//*------------------------------------------------------------------------ */
#define ICONT_SBHREG__ICONT_SBH_IRQSTATUS_0__VDMAG_END__NOACTION 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ICONT_SBHREG__ICONT_SBH_IRQSTATUS_0__VDMAG_END__NOEVENT
 *
 * @BRIEF        No (enabled) event pending - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define ICONT_SBHREG__ICONT_SBH_IRQSTATUS_0__VDMAG_END__NOEVENT 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ICONT_SBHREG__ICONT_SBH_IRQSTATUS_0__VDMAG_END__PENDING
 *
 * @BRIEF        Event pending - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define ICONT_SBHREG__ICONT_SBH_IRQSTATUS_0__VDMAG_END__PENDING 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ICONT_SBHREG__ICONT_SBH_IRQSTATUS_0__VDMAG_END__CLEAR
 *
 * @BRIEF        Clear (raw) event - (Write) 
 *
    *//*------------------------------------------------------------------------ */
#define ICONT_SBHREG__ICONT_SBH_IRQSTATUS_0__VDMAG_END__CLEAR 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ICONT_SBHREG__ICONT_SBH_IRQENABLE_SET_0__VDMAG_END__NOACTION
 *
 * @BRIEF        No action - (Write) 
 *
    *//*------------------------------------------------------------------------ */
#define ICONT_SBHREG__ICONT_SBH_IRQENABLE_SET_0__VDMAG_END__NOACTION 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ICONT_SBHREG__ICONT_SBH_IRQENABLE_SET_0__VDMAG_END__DISABLED
 *
 * @BRIEF        Interrupt disabled (masked) - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define ICONT_SBHREG__ICONT_SBH_IRQENABLE_SET_0__VDMAG_END__DISABLED 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ICONT_SBHREG__ICONT_SBH_IRQENABLE_SET_0__VDMAG_END__ENABLED
 *
 * @BRIEF        Interrupt enabled - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define ICONT_SBHREG__ICONT_SBH_IRQENABLE_SET_0__VDMAG_END__ENABLED 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ICONT_SBHREG__ICONT_SBH_IRQENABLE_SET_0__VDMAG_END__ENABLE
 *
 * @BRIEF        Enable interrupt - (Write) 
 *
    *//*------------------------------------------------------------------------ */
#define ICONT_SBHREG__ICONT_SBH_IRQENABLE_SET_0__VDMAG_END__ENABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ICONT_SBHREG__ICONT_SBH_IRQENABLE_CLR_0__VDMAG_END__NOACTION
 *
 * @BRIEF        No action - (Write) 
 *
    *//*------------------------------------------------------------------------ */
#define ICONT_SBHREG__ICONT_SBH_IRQENABLE_CLR_0__VDMAG_END__NOACTION 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ICONT_SBHREG__ICONT_SBH_IRQENABLE_CLR_0__VDMAG_END__DISABLED
 *
 * @BRIEF        Interrupt disabled (masked) - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define ICONT_SBHREG__ICONT_SBH_IRQENABLE_CLR_0__VDMAG_END__DISABLED 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ICONT_SBHREG__ICONT_SBH_IRQENABLE_CLR_0__VDMAG_END__ENABLED
 *
 * @BRIEF        Interrupt enabled - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define ICONT_SBHREG__ICONT_SBH_IRQENABLE_CLR_0__VDMAG_END__ENABLED 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ICONT_SBHREG__ICONT_SBH_IRQENABLE_CLR_0__VDMAG_END__DISABLE
 *
 * @BRIEF        Disable interrupt - (Write) 
 *
    *//*------------------------------------------------------------------------ */
#define ICONT_SBHREG__ICONT_SBH_IRQENABLE_CLR_0__VDMAG_END__DISABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ICONT_SBHREG__ICONT_SBH_IRQSTATUS_RAW_1__SBH_ERR__NOACTION
 *
 * @BRIEF        No action - (Write) 
 *
    *//*------------------------------------------------------------------------ */
#define ICONT_SBHREG__ICONT_SBH_IRQSTATUS_RAW_1__SBH_ERR__NOACTION 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ICONT_SBHREG__ICONT_SBH_IRQSTATUS_RAW_1__SBH_ERR__NOEVENT
 *
 * @BRIEF        No event pending - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define ICONT_SBHREG__ICONT_SBH_IRQSTATUS_RAW_1__SBH_ERR__NOEVENT 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ICONT_SBHREG__ICONT_SBH_IRQSTATUS_RAW_1__SBH_ERR__PENDING
 *
 * @BRIEF        Event pending - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define ICONT_SBHREG__ICONT_SBH_IRQSTATUS_RAW_1__SBH_ERR__PENDING 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ICONT_SBHREG__ICONT_SBH_IRQSTATUS_RAW_1__SBH_ERR__SET
 *
 * @BRIEF        Set event (debug) - (Write) 
 *
    *//*------------------------------------------------------------------------ */
#define ICONT_SBHREG__ICONT_SBH_IRQSTATUS_RAW_1__SBH_ERR__SET 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ICONT_SBHREG__ICONT_SBH_IRQSTATUS_1__SBH_ERR__NOACTION
 *
 * @BRIEF        No action - (Write) 
 *
    *//*------------------------------------------------------------------------ */
#define ICONT_SBHREG__ICONT_SBH_IRQSTATUS_1__SBH_ERR__NOACTION 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ICONT_SBHREG__ICONT_SBH_IRQSTATUS_1__SBH_ERR__NOEVENT
 *
 * @BRIEF        No (enabled) event pending - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define ICONT_SBHREG__ICONT_SBH_IRQSTATUS_1__SBH_ERR__NOEVENT 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ICONT_SBHREG__ICONT_SBH_IRQSTATUS_1__SBH_ERR__PENDING
 *
 * @BRIEF        Event pending - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define ICONT_SBHREG__ICONT_SBH_IRQSTATUS_1__SBH_ERR__PENDING 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ICONT_SBHREG__ICONT_SBH_IRQSTATUS_1__SBH_ERR__CLEAR
 *
 * @BRIEF        Clear (raw) event - (Write) 
 *
    *//*------------------------------------------------------------------------ */
#define ICONT_SBHREG__ICONT_SBH_IRQSTATUS_1__SBH_ERR__CLEAR 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ICONT_SBHREG__ICONT_SBH_IRQENABLE_SET_1__SBH_ERR__NOACTION
 *
 * @BRIEF        No action - (Write) 
 *
    *//*------------------------------------------------------------------------ */
#define ICONT_SBHREG__ICONT_SBH_IRQENABLE_SET_1__SBH_ERR__NOACTION 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ICONT_SBHREG__ICONT_SBH_IRQENABLE_SET_1__SBH_ERR__DISABLED
 *
 * @BRIEF        Interrupt disabled (masked) - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define ICONT_SBHREG__ICONT_SBH_IRQENABLE_SET_1__SBH_ERR__DISABLED 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ICONT_SBHREG__ICONT_SBH_IRQENABLE_SET_1__SBH_ERR__ENABLED
 *
 * @BRIEF        Interrupt enabled - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define ICONT_SBHREG__ICONT_SBH_IRQENABLE_SET_1__SBH_ERR__ENABLED 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ICONT_SBHREG__ICONT_SBH_IRQENABLE_SET_1__SBH_ERR__ENABLE
 *
 * @BRIEF        Enable interrupt - (Write) 
 *
    *//*------------------------------------------------------------------------ */
#define ICONT_SBHREG__ICONT_SBH_IRQENABLE_SET_1__SBH_ERR__ENABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ICONT_SBHREG__ICONT_SBH_IRQENABLE_CLR_1__SBH_ERR__NOACTION
 *
 * @BRIEF        No action - (Write) 
 *
    *//*------------------------------------------------------------------------ */
#define ICONT_SBHREG__ICONT_SBH_IRQENABLE_CLR_1__SBH_ERR__NOACTION 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ICONT_SBHREG__ICONT_SBH_IRQENABLE_CLR_1__SBH_ERR__DISABLED
 *
 * @BRIEF        Interrupt disabled (masked) - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define ICONT_SBHREG__ICONT_SBH_IRQENABLE_CLR_1__SBH_ERR__DISABLED 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ICONT_SBHREG__ICONT_SBH_IRQENABLE_CLR_1__SBH_ERR__ENABLED
 *
 * @BRIEF        Interrupt enabled - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define ICONT_SBHREG__ICONT_SBH_IRQENABLE_CLR_1__SBH_ERR__ENABLED 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ICONT_SBHREG__ICONT_SBH_IRQENABLE_CLR_1__SBH_ERR__DISABLE
 *
 * @BRIEF        Disable interrupt - (Write) 
 *
    *//*------------------------------------------------------------------------ */
#define ICONT_SBHREG__ICONT_SBH_IRQENABLE_CLR_1__SBH_ERR__DISABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ICONT_SBHREG__ICONT_SBH_TCCR__VDMA_SG_SELECT__00
 *
 * @BRIEF        Enabled VDMA Groups are in the range of 0 to 7 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define ICONT_SBHREG__ICONT_SBH_TCCR__VDMA_SG_SELECT__00 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ICONT_SBHREG__ICONT_SBH_TCCR__VDMA_SG_SELECT__01
 *
 * @BRIEF        Enabled VDMA Groups are in the range of 8 to 15 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define ICONT_SBHREG__ICONT_SBH_TCCR__VDMA_SG_SELECT__01 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ICONT_SBHREG__ICONT_SBH_TCCR__VDMA_SG_SELECT__10
 *
 * @BRIEF        Enabled VDMA Groups are in the range of 16 to 23 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define ICONT_SBHREG__ICONT_SBH_TCCR__VDMA_SG_SELECT__10 0x2ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ICONT_SBHREG__ICONT_SBH_TCCR__VDMA_SG_SELECT__11
 *
 * @BRIEF        Enabled VDMA Groups are in the range of 24 to 31 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define ICONT_SBHREG__ICONT_SBH_TCCR__VDMA_SG_SELECT__11 0x3ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ICONT_SBHREG__ICONT_SBH_TCCR__TASK_TYPE__000
 *
 * @BRIEF        Immediate Task End - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define ICONT_SBHREG__ICONT_SBH_TCCR__TASK_TYPE__000  0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ICONT_SBHREG__ICONT_SBH_TCCR__TASK_TYPE__001
 *
 * @BRIEF        CPU only activated - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define ICONT_SBHREG__ICONT_SBH_TCCR__TASK_TYPE__001  0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ICONT_SBHREG__ICONT_SBH_TCCR__TASK_TYPE__010
 *
 * @BRIEF        VDMA only activated - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define ICONT_SBHREG__ICONT_SBH_TCCR__TASK_TYPE__010  0x2ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ICONT_SBHREG__ICONT_SBH_TCCR__TASK_TYPE__011
 *
 * @BRIEF        DM then CPU activated - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define ICONT_SBHREG__ICONT_SBH_TCCR__TASK_TYPE__011  0x3ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ICONT_SBHREG__ICONT_SBH_TCCR__TASK_TYPE__100
 *
 * @BRIEF        DM then VDMA only activated - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define ICONT_SBHREG__ICONT_SBH_TCCR__TASK_TYPE__100  0x4ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ICONT_SBHREG__ICONT_SBH_TCCR__TASK_TYPE__101
 *
 * @BRIEF        CPU then VDMA only activated - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define ICONT_SBHREG__ICONT_SBH_TCCR__TASK_TYPE__101  0x5ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ICONT_SBHREG__ICONT_SBH_TCCR__TASK_TYPE__110
 *
 * @BRIEF        CPU then DM activated - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define ICONT_SBHREG__ICONT_SBH_TCCR__TASK_TYPE__110  0x6ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ICONT_SBHREG__ICONT_SBH_TCCR__TASK_TYPE__111
 *
 * @BRIEF        CPU then DM then VDMA activated - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define ICONT_SBHREG__ICONT_SBH_TCCR__TASK_TYPE__111  0x7ul

#ifdef __cplusplus
}
#endif
#endif                                                     /* __ICONT_SBHREG_CRED_H 
                                                            */

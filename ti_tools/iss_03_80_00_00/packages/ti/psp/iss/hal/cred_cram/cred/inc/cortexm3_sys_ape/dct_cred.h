/** ==================================================================
 *  @file   dct_cred.h                                                  
 *                                                                    
 *  @path   /ti/psp/iss/hal/cred_cram/cred/inc/cortexm3_sys_ape/                                                  
 *                                                                    
 *  @desc   This  File contains.                                      
 * ===================================================================
 *  Copyright (c) Texas Instruments Inc 2011, 2012                    
 *                                                                    
 *  Use of this software is controlled by the terms and conditions found
 *  in the license agreement under which this software has been supplied
 * ===================================================================*/

/* ============================================================================ 
 * TEXAS INSTRUMENTS INCORPORATED PROPRIETARY INFORMATION Property of Texas
 * Instruments For Unrestricted Internal Use Only Unauthorized reproduction
 * and/or distribution is strictly prohibited.  This product is protected
 * under copyright law and trade secret law as an unpublished work.  Created
 * 2008, (C) Copyright 2008 Texas Instruments.  All rights reserved. */

/**
 *  @Component:   DCT
 *
 *  @Filename:    dct_cred.h
 *
 *  @Description: Component description is not available
 *
 *  Generated by: Socrates CRED generator prototype
 *
    *//* ====================================================================== */

#ifndef __DCT_CRED_H
#define __DCT_CRED_H

#ifdef __cplusplus
extern "C" {
#endif

    /* 
     * Instance DCT of component DCT mapped in MONICA at address 0x55060800
     */

                                                                              /*-------------------------------------------------------------------------*//**
 * @DEFINITION   BITFIELD
 *
 * @BRIEF        The bitfield must be defined according to register width
 *               of the component - 64/32/16/8
 *
    *//*------------------------------------------------------------------------ */
#undef BITFIELD
#define BITFIELD BITFIELD_32

    /* 
     *  List of Register arrays for component DCT
     *
     */

    /* 
     *  List of bundle arrays for component DCT
     *
     */

    /* 
     *  List of bundles for component DCT
     *
     */

    /* 
     * List of registers for component DCT
     *
     */

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DCT__DCT_REVISION
 *
 * @BRIEF        Module revision 
 *
    *//*------------------------------------------------------------------------ */
#define DCT__DCT_REVISION                                  0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DCT__DCT_CTRL
 *
 * @BRIEF        Control 
 *
    *//*------------------------------------------------------------------------ */
#define DCT__DCT_CTRL                                      0x4ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DCT__DCT_CFG
 *
 * @BRIEF        Configuration 
 *
    *//*------------------------------------------------------------------------ */
#define DCT__DCT_CFG                                       0x8ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DCT__DCT_SPTR
 *
 * @BRIEF        Spatial-domain data pointer, byte address 
 *
    *//*------------------------------------------------------------------------ */
#define DCT__DCT_SPTR                                      0xCul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DCT__DCT_FPTR
 *
 * @BRIEF        Frequency-domain data pointer, byte address 
 *
    *//*------------------------------------------------------------------------ */
#define DCT__DCT_FPTR                                      0x10ul

    /* 
     * List of register bitfields for component DCT
     *
     */

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DCT__DCT_REVISION__REV   
 *
 * @BRIEF        Revision number - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define DCT__DCT_REVISION__REV                        BITFIELD(7, 0)
#define DCT__DCT_REVISION__REV__POS                   0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DCT__DCT_CTRL__BUSY   
 *
 * @BRIEF        Idle/busy status (read-only) 
 *               0 = idle 
 *               1 = busy - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define DCT__DCT_CTRL__BUSY                           BITFIELD(15, 15)
#define DCT__DCT_CTRL__BUSY__POS                      15

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DCT__DCT_CTRL__EN   
 *
 * @BRIEF        Write 1 when TRIG_SRC=0 to start module operation.  Read 
 *               back 0 always - (WO) 
 *
    *//*------------------------------------------------------------------------ */
#define DCT__DCT_CTRL__EN                             BITFIELD(0, 0)
#define DCT__DCT_CTRL__EN__POS                        0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DCT__DCT_CFG__NMCUS   
 *
 * @BRIEF        Number of MCUs (for FMT=0,1) or blocks (for FMT=2) 
 *               0 = 1 MCU or block 
 *               1 = 2 MCUs or blocks 
 *               ... 
 *               63 = 64 MCUs or blocks - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DCT__DCT_CFG__NMCUS                           BITFIELD(13, 8)
#define DCT__DCT_CFG__NMCUS__POS                      8

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DCT__DCT_CFG__AUTOGATING   
 *
 * @BRIEF        Internal clock gating on OCP and functional clocks 
 *               0 = clocks are free running. 
 *               1 = clocks are gated off in subblocks that are not needed 
 *               for operation. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DCT__DCT_CFG__AUTOGATING                      BITFIELD(5, 5)
#define DCT__DCT_CFG__AUTOGATING__POS                 5

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DCT__DCT_CFG__TRIG_SRC   
 *
 * @BRIEF        Trigger source, 0 = MMR, 1 = hardware start signal - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DCT__DCT_CFG__TRIG_SRC                        BITFIELD(4, 4)
#define DCT__DCT_CFG__TRIG_SRC__POS                   4

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DCT__DCT_CFG__INTEN   
 *
 * @BRIEF        Interrupt enable, 0 = disable, 1 = enable - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DCT__DCT_CFG__INTEN                           BITFIELD(3, 3)
#define DCT__DCT_CFG__INTEN__POS                      3

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DCT__DCT_CFG__FMT   
 *
 * @BRIEF        Data format 
 *               0 = YUV420 
 *               1 = YUV422 
 *               2 = sequential blocks - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DCT__DCT_CFG__FMT                             BITFIELD(2, 1)
#define DCT__DCT_CFG__FMT__POS                        1

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DCT__DCT_CFG__MODE   
 *
 * @BRIEF        0 = DCT, 1 = IDCT - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DCT__DCT_CFG__MODE                            BITFIELD(0, 0)
#define DCT__DCT_CFG__MODE__POS                       0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DCT__DCT_SPTR__ADDR   
 *
 * @BRIEF        Address in 256-bit words. 
 *               Intention is that software write a byte address into the 
 *               register.  Hardware ignores the lowest 5 bits and bits 12..5 
 *               specifies the 256-bit/word memory address. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DCT__DCT_SPTR__ADDR                           BITFIELD(12, 5)
#define DCT__DCT_SPTR__ADDR__POS                      5

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DCT__DCT_FPTR__ADDR   
 *
 * @BRIEF        Address in 128-bit words. 
 *               Intention is that software write a byte address into the 
 *               register.  Hardware ignores the lowest 4 bits and bits 13..4 
 *               specifies the 128-bit/word memory address. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DCT__DCT_FPTR__ADDR                           BITFIELD(13, 4)
#define DCT__DCT_FPTR__ADDR__POS                      4

    /* 
     * List of register bitfields values for component DCT
     *
     */

#ifdef __cplusplus
}
#endif
#endif                                                     /* __DCT_CRED_H */

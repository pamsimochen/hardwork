/** ==================================================================
 *  @file   dmic_cred.h                                                  
 *                                                                    
 *  @path   /ti/psp/iss/hal/cred_cram/cred/inc/cortexm3_sys_ape/                                                  
 *                                                                    
 *  @desc   This  File contains.                                      
 * ===================================================================
 *  Copyright (c) Texas Instruments Inc 2011, 2012                    
 *                                                                    
 *  Use of this software is controlled by the terms and conditions found
 *  in the license agreement under which this software has been supplied
 * ===================================================================*/

/* ============================================================================ 
 * TEXAS INSTRUMENTS INCORPORATED PROPRIETARY INFORMATION Property of Texas
 * Instruments For Unrestricted Internal Use Only Unauthorized reproduction
 * and/or distribution is strictly prohibited.  This product is protected
 * under copyright law and trade secret law as an unpublished work.  Created
 * 2008, (C) Copyright 2008 Texas Instruments.  All rights reserved. */

/**
 *  @Component:   DMIC
 *
 *  @Filename:    dmic_cred.h
 *
 *  @Description: Component description is not available
 *
 *  Generated by: Socrates CRED generator prototype
 *
    *//* ====================================================================== */

#ifndef __DMIC_CRED_H
#define __DMIC_CRED_H

#ifdef __cplusplus
extern "C" {
#endif

    /* 
     * Instance DMIC of component DMIC mapped in MONICA at address 0x4902E000
     */

                                                                              /*-------------------------------------------------------------------------*//**
 * @DEFINITION   BITFIELD
 *
 * @BRIEF        The bitfield must be defined according to register width
 *               of the component - 64/32/16/8
 *
    *//*------------------------------------------------------------------------ */
#undef BITFIELD
#define BITFIELD BITFIELD_32

    /* 
     *  List of Register arrays for component DMIC
     *
     */

    /* 
     *  List of bundle arrays for component DMIC
     *
     */

    /* 
     *  List of bundles for component DMIC
     *
     */

    /* 
     * List of registers for component DMIC
     *
     */

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_REVISION
 *
 * @BRIEF        IP Revision Identifier (X.Y.R) 
 *               Used by software to track features, bugs, and compatibility 
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_REVISION                                0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_SYSCONFIG
 *
 * @BRIEF        This register allows controlling various parameters of the 
 *               OCP interface 
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_SYSCONFIG                               0x10ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_IRQ_EOI
 *
 * @BRIEF        Software End-Of-Interrupt: Allows the generation of further 
 *               pulses on the interrupt line, if an new interrupt event is 
 *               pending, when using the pulsed output. 
 *               Unused when using the level interrupt line (depending on 
 *               module integration). 
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_IRQ_EOI                                 0x20ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_IRQSTATUS_RAW
 *
 * @BRIEF        Component (i.e. main) interrupt request status. 
 *               Check the corresponding secondary status register. 
 *               Raw status is set even if event is not enabled. 
 *               Write 1 to set the (raw) status, mostly for debug. 
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_IRQSTATUS_RAW                           0x24ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_IRQSTATUS
 *
 * @BRIEF        Component (i.e. main) interrupt request status. 
 *               Check the corresponding secondary status register. 
 *               Enabled status isn't set unless event is enabled. 
 *               Write 1 to clear the status after interrupt has been 
 *               serviced (raw status gets cleared, i.e. even if not 
 *               enabled). 
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_IRQSTATUS                               0x28ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_IRQENABLE_SET
 *
 * @BRIEF        Component (i.e. main) interrupt request enable 
 *               Write 1 to set (enable interrupt). 
 *               Readout equal to corresponding _SET register.  
 *               _SET register is cleared when write "1" in _CLR register. 
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_IRQENABLE_SET                           0x2Cul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_IRQENABLE_CLR
 *
 * @BRIEF        Component (i.e. main) interrupt request enable 
 *               Write 1 to clear (disable interrupt). 
 *               Readout equal to corresponding _SET register.  
 *               _SET register is cleared when write "1" in _CLR register. 
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_IRQENABLE_CLR                           0x30ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_IRQWAKEEN
 *
 * @BRIEF        Register description is not available
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_IRQWAKEEN                               0x34ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_DMAENABLE_SET
 *
 * @BRIEF        Components DMA enable (1 bit per DMA-capable channel)\ 
 *               Write 1 to set (enable DMA). 
 *               Readout equal to corresponding _SET register.  
 *               _SET register is cleared when write "1" in _CLR register. 
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_DMAENABLE_SET                           0x38ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_DMAENABLE_CLR
 *
 * @BRIEF        Components DMA enable (1 bit per DMA-capable channel)\ 
 *               Write 1 to clear (disable DMA). 
 *               Readout equal to corresponding _SET register.  
 *               _SET register is cleared when write "1" in _CLR register. 
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_DMAENABLE_CLR                           0x3Cul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_DMAWAKEEN
 *
 * @BRIEF        Register description is not available
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_DMAWAKEEN                               0x40ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_CTRL
 *
 * @BRIEF        Register description is not available
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_CTRL                                    0x44ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_DATA
 *
 * @BRIEF        Data of the dmic path 
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_DATA                                    0x48ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_FIFO_CTRL
 *
 * @BRIEF        Register description is not available
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_FIFO_CTRL                               0x4Cul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_FIFO_DMIC1R_DATA
 *
 * @BRIEF        Data of the First  FIFO_DMIC right channel 
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_FIFO_DMIC1R_DATA                        0x50ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_FIFO_DMIC1L_DATA
 *
 * @BRIEF        Data of the First  FIFO_DMIC left channel 
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_FIFO_DMIC1L_DATA                        0x54ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_FIFO_DMIC2R_DATA
 *
 * @BRIEF        Data of the First  FIFO_DMIC right channel 
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_FIFO_DMIC2R_DATA                        0x58ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_FIFO_DMIC2L_DATA
 *
 * @BRIEF        Data of the First  FIFO_DMIC left channel 
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_FIFO_DMIC2L_DATA                        0x5Cul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_FIFO_DMIC3R_DATA
 *
 * @BRIEF        Data of the First  FIFO_DMIC right channel 
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_FIFO_DMIC3R_DATA                        0x60ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_FIFO_DMIC3L_DATA
 *
 * @BRIEF        Data of the First  FIFO_DMIC left channel 
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_FIFO_DMIC3L_DATA                        0x64ul

    /* 
     * List of register bitfields for component DMIC
     *
     */

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_REVISION__SCHEME   
 *
 * @BRIEF        Used to distinguish between old scheme and current. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_REVISION__SCHEME                   BITFIELD(31, 30)
#define DMIC__DMIC_REVISION__SCHEME__POS              30

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_REVISION__RESERVED   
 *
 * @BRIEF        Bitfield description is not available - (RO)
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_REVISION__RESERVED                 BITFIELD(29, 28)
#define DMIC__DMIC_REVISION__RESERVED__POS            28

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_REVISION__FUNC   
 *
 * @BRIEF        Function indicates a software compatible module family.   
 *               If there is no level of software compatibility a new Func 
 *               number (and hence REVISION) should be assigned. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_REVISION__FUNC                     BITFIELD(27, 16)
#define DMIC__DMIC_REVISION__FUNC__POS                16

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_REVISION__R_RTL   
 *
 * @BRIEF        RTL Version (R), maintained by IP design owner.  
 *               RTL follows a numbering such as X.Y.R.Z which are explained 
 *               in this table.  
 *               R changes ONLY when:  
 *               (1) PDS uploads occur which may have been due to spec 
 *               changes  
 *               (2) Bug fixes occur  
 *               (3) Resets to '0' when X or Y changes.  
 *               Design team has an internal 'Z' (customer invisible) number 
 *               which increments on every drop that happens due to DV and 
 *               RTL updates. Z resets to 0 when R increments. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_REVISION__R_RTL                    BITFIELD(15, 11)
#define DMIC__DMIC_REVISION__R_RTL__POS               11

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_REVISION__X_MAJOR   
 *
 * @BRIEF        Major Revision (X), maintained by IP specification owner.  
 *               X changes ONLY when:  
 *               (1) There is a major feature addition. An example would be 
 *               adding Master Mode to Utopia Level2. The Func field (or 
 *               Class/Type in old PID format) will remain the same.  
 *               X does NOT change due to:  
 *               (1) Bug fixes  
 *               (2) Change in feature parameters. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_REVISION__X_MAJOR                  BITFIELD(10, 8)
#define DMIC__DMIC_REVISION__X_MAJOR__POS             8

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_REVISION__CUSTOM   
 *
 * @BRIEF        Indicates a special version for a particular device. 
 *               Consequence of use may avoid use of standard Chip Support 
 *               Library (CSL) / Drivers. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_REVISION__CUSTOM                   BITFIELD(7, 6)
#define DMIC__DMIC_REVISION__CUSTOM__POS              6

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_REVISION__Y_MINOR   
 *
 * @BRIEF        Minor Revision (Y), maintained by IP specification owner.  
 *               Y changes ONLY when:  
 *               (1) Features are scaled (up or down). Flexibility exists in 
 *               that this feature scalability may either be represented in 
 *               the Y change or a specific register in the IP that indicates 
 *               which features are exactly available.  
 *               (2) When feature creeps from Is-Not list to Is list. But 
 *               this may not be the case once it sees silicon; in which case 
 *               X will change.  
 *               Y does NOT change due to:  
 *               (1) Bug fixes  
 *               (2) Typos or clarifications  
 *               (3) major functional/feature change/addition/deletion. 
 *               Instead these changes may be reflected via R, S, X as 
 *               applicable.  
 *               Spec owner maintains a customer-invisible number 'S' which 
 *               changes due to:  
 *               (1) Typos/clarifications  
 *               (2) Bug documentation. Note that this bug is not due to a 
 *               spec change but due to implementation. Nevertheless, the 
 *               spec tracks the IP bugs. An RTL release (say for silicon 
 *               PG1.1) that occurs due to bug fix should document the 
 *               corresponding spec number (X.Y.S) in its release notes. - 
 *               (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_REVISION__Y_MINOR                  BITFIELD(5, 0)
#define DMIC__DMIC_REVISION__Y_MINOR__POS             0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_SYSCONFIG__SIDLEMODE   
 *
 * @BRIEF        Configuration of the local target state management 
 *               (idelreq/idelack control) - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_SYSCONFIG__SIDLEMODE               BITFIELD(3, 2)
#define DMIC__DMIC_SYSCONFIG__SIDLEMODE__POS          2

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_SYSCONFIG__FREEMU   
 *
 * @BRIEF        Sensitivity to emulation (debug) suspend input 
 *               signal. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_SYSCONFIG__FREEMU                  BITFIELD(1, 1)
#define DMIC__DMIC_SYSCONFIG__FREEMU__POS             1

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_SYSCONFIG__SOFTRESET   
 *
 * @BRIEF        Module Software Reset. 
 *               The bit is automatically reset by the hardware. 
 *               It has same effect as the main hardware reset. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_SYSCONFIG__SOFTRESET               BITFIELD(0, 0)
#define DMIC__DMIC_SYSCONFIG__SOFTRESET__POS          0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_IRQ_EOI__LINE_NUMBER   
 *
 * @BRIEF        Write the number of the interrupt line to apply a SW EOI to 
 *               it.  
 *               Note that there is only a single line (i.e. number 0). - 
 *               (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_IRQ_EOI__LINE_NUMBER               BITFIELD(7, 0)
#define DMIC__DMIC_IRQ_EOI__LINE_NUMBER__POS          0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_IRQSTATUS_RAW__DMIC_IRQ_EMPTY   
 *
 * @BRIEF        Bitfield description is not available - (RW)
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_IRQSTATUS_RAW__DMIC_IRQ_EMPTY      BITFIELD(3, 3)
#define DMIC__DMIC_IRQSTATUS_RAW__DMIC_IRQ_EMPTY__POS 3

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_IRQSTATUS_RAW__DMIC_IRQ_ALST_FULL   
 *
 * @BRIEF        Bitfield description is not available - (RW)
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_IRQSTATUS_RAW__DMIC_IRQ_ALST_FULL  BITFIELD(2, 2)
#define DMIC__DMIC_IRQSTATUS_RAW__DMIC_IRQ_ALST_FULL__POS 2

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_IRQSTATUS_RAW__DMIC_IRQ_FULL   
 *
 * @BRIEF        Bitfield description is not available - (RW)
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_IRQSTATUS_RAW__DMIC_IRQ_FULL       BITFIELD(1, 1)
#define DMIC__DMIC_IRQSTATUS_RAW__DMIC_IRQ_FULL__POS  1

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_IRQSTATUS_RAW__DMIC_IRQ   
 *
 * @BRIEF        Bitfield description is not available - (RW)
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_IRQSTATUS_RAW__DMIC_IRQ            BITFIELD(0, 0)
#define DMIC__DMIC_IRQSTATUS_RAW__DMIC_IRQ__POS       0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_IRQSTATUS__DMIC_IRQ_EMPTY   
 *
 * @BRIEF        Bitfield description is not available - (RW)
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_IRQSTATUS__DMIC_IRQ_EMPTY          BITFIELD(3, 3)
#define DMIC__DMIC_IRQSTATUS__DMIC_IRQ_EMPTY__POS     3

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_IRQSTATUS__DMIC_IRQ_ALST_FULL   
 *
 * @BRIEF        This interrupt status is set when only one fifo space is 
 *               still available. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_IRQSTATUS__DMIC_IRQ_ALST_FULL      BITFIELD(2, 2)
#define DMIC__DMIC_IRQSTATUS__DMIC_IRQ_ALST_FULL__POS 2

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_IRQSTATUS__DMIC_IRQ_FULL   
 *
 * @BRIEF        This interrupt status is set when fifo is full and a new 
 *               write access has been performed by filter. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_IRQSTATUS__DMIC_IRQ_FULL           BITFIELD(1, 1)
#define DMIC__DMIC_IRQSTATUS__DMIC_IRQ_FULL__POS      1

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_IRQSTATUS__DMIC_IRQ   
 *
 * @BRIEF        This interrupt status is set when fifo threshold value 
 *               defined in DMIC_FIFO_CTRL is reached. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_IRQSTATUS__DMIC_IRQ                BITFIELD(0, 0)
#define DMIC__DMIC_IRQSTATUS__DMIC_IRQ__POS           0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_IRQENABLE_SET__DMIC_IRQ_EMPTY_MASK   
 *
 * @BRIEF        Bitfield description is not available - (RW)
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_IRQENABLE_SET__DMIC_IRQ_EMPTY_MASK BITFIELD(3, 3)
#define DMIC__DMIC_IRQENABLE_SET__DMIC_IRQ_EMPTY_MASK__POS 3

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_IRQENABLE_SET__DMIC_IRQ_ALST_FULL_MASK   
 *
 * @BRIEF        Bitfield description is not available - (RW)
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_IRQENABLE_SET__DMIC_IRQ_ALST_FULL_MASK BITFIELD(2, 2)
#define DMIC__DMIC_IRQENABLE_SET__DMIC_IRQ_ALST_FULL_MASK__POS 2

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_IRQENABLE_SET__DMIC_IRQ_FULL_MASK   
 *
 * @BRIEF        Bitfield description is not available - (RW)
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_IRQENABLE_SET__DMIC_IRQ_FULL_MASK  BITFIELD(1, 1)
#define DMIC__DMIC_IRQENABLE_SET__DMIC_IRQ_FULL_MASK__POS 1

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_IRQENABLE_SET__DMIC_IRQ_MASK   
 *
 * @BRIEF        Bitfield description is not available - (RW)
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_IRQENABLE_SET__DMIC_IRQ_MASK       BITFIELD(0, 0)
#define DMIC__DMIC_IRQENABLE_SET__DMIC_IRQ_MASK__POS  0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_IRQENABLE_CLR__DMIC_IRQ_EMPTY_MASK   
 *
 * @BRIEF        Bitfield description is not available - (RW)
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_IRQENABLE_CLR__DMIC_IRQ_EMPTY_MASK BITFIELD(3, 3)
#define DMIC__DMIC_IRQENABLE_CLR__DMIC_IRQ_EMPTY_MASK__POS 3

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_IRQENABLE_CLR__DMIC_IRQ_ALST_FULL_MASK   
 *
 * @BRIEF        Bitfield description is not available - (RW)
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_IRQENABLE_CLR__DMIC_IRQ_ALST_FULL_MASK BITFIELD(2, 2)
#define DMIC__DMIC_IRQENABLE_CLR__DMIC_IRQ_ALST_FULL_MASK__POS 2

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_IRQENABLE_CLR__DMIC_IRQ_FULL_MASK   
 *
 * @BRIEF        Bitfield description is not available - (RW)
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_IRQENABLE_CLR__DMIC_IRQ_FULL_MASK  BITFIELD(1, 1)
#define DMIC__DMIC_IRQENABLE_CLR__DMIC_IRQ_FULL_MASK__POS 1

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_IRQENABLE_CLR__DMIC_IRQ_MASK   
 *
 * @BRIEF        Bitfield description is not available - (RW)
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_IRQENABLE_CLR__DMIC_IRQ_MASK       BITFIELD(0, 0)
#define DMIC__DMIC_IRQENABLE_CLR__DMIC_IRQ_MASK__POS  0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_IRQWAKEEN__IRQ_WAKEUP_EN   
 *
 * @BRIEF        Write 1 to allow wakeup by IRQ source (register threshold 
 *               value reached). - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_IRQWAKEEN__IRQ_WAKEUP_EN           BITFIELD(0, 0)
#define DMIC__DMIC_IRQWAKEEN__IRQ_WAKEUP_EN__POS      0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_DMAENABLE_SET__DMA_ENABLE   
 *
 * @BRIEF        Write 1 to set (enable DMA request) - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_DMAENABLE_SET__DMA_ENABLE          BITFIELD(0, 0)
#define DMIC__DMIC_DMAENABLE_SET__DMA_ENABLE__POS     0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_DMAENABLE_CLR__DMA_ENABLE   
 *
 * @BRIEF        Write 1 to clr  (disable DMA request) - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_DMAENABLE_CLR__DMA_ENABLE          BITFIELD(0, 0)
#define DMIC__DMIC_DMAENABLE_CLR__DMA_ENABLE__POS     0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_DMAWAKEEN__DMA_WAKEUP_EN   
 *
 * @BRIEF        Write 1 to allow wakeup by DMA source (register threshold 
 *               value reached). - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_DMAWAKEEN__DMA_WAKEUP_EN           BITFIELD(0, 0)
#define DMIC__DMIC_DMAWAKEEN__DMA_WAKEUP_EN__POS      0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_CTRL__SW_DMIC_RST   
 *
 * @BRIEF        Software reset of the dmic path. When "1" the dmic path is 
 *               reseted. Clear of the reset  is done by writing "0" in the 
 *               register - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_CTRL__SW_DMIC_RST                  BITFIELD(10, 10)
#define DMIC__DMIC_CTRL__SW_DMIC_RST__POS             10

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_CTRL__DMIC_CLK_DIV   
 *
 * @BRIEF        Select Ratio between source clock  PI_DMIC_CLK and 
 *               PO_DMIC_CLK , and ratio between FS and PO_DMIC_CLK - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_CTRL__DMIC_CLK_DIV                 BITFIELD(9, 7)
#define DMIC__DMIC_CTRL__DMIC_CLK_DIV__POS            7

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_CTRL__DMIC_POLAR3   
 *
 * @BRIEF        Bitfield description is not available - (RW)
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_CTRL__DMIC_POLAR3                  BITFIELD(6, 6)
#define DMIC__DMIC_CTRL__DMIC_POLAR3__POS             6

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_CTRL__DMIC_POLAR2   
 *
 * @BRIEF        Bitfield description is not available - (RW)
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_CTRL__DMIC_POLAR2                  BITFIELD(5, 5)
#define DMIC__DMIC_CTRL__DMIC_POLAR2__POS             5

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_CTRL__DMIC_POLAR1   
 *
 * @BRIEF        Bitfield description is not available - (RW)
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_CTRL__DMIC_POLAR1                  BITFIELD(4, 4)
#define DMIC__DMIC_CTRL__DMIC_POLAR1__POS             4

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_CTRL__DMICOUTFORMAT   
 *
 * @BRIEF        When "0" the data going out from the FIFO are left shifted 
 *               from 8 bits.  
 *               When "1"  the data going are signed extended on 32 bits - 
 *               (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_CTRL__DMICOUTFORMAT                BITFIELD(3, 3)
#define DMIC__DMIC_CTRL__DMICOUTFORMAT__POS           3

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_CTRL__DMIC_UP3_EN   
 *
 * @BRIEF        When "1" the uplink path 3  is power up - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_CTRL__DMIC_UP3_EN                  BITFIELD(2, 2)
#define DMIC__DMIC_CTRL__DMIC_UP3_EN__POS             2

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_CTRL__DMIC_UP2_EN   
 *
 * @BRIEF        When "1" the uplink path 2  is power up - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_CTRL__DMIC_UP2_EN                  BITFIELD(1, 1)
#define DMIC__DMIC_CTRL__DMIC_UP2_EN__POS             1

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_CTRL__DMIC_UP1_EN   
 *
 * @BRIEF        When "1" the uplink path 1  is power up - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_CTRL__DMIC_UP1_EN                  BITFIELD(0, 0)
#define DMIC__DMIC_CTRL__DMIC_UP1_EN__POS             0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_DATA__DMIC_DATA   
 *
 * @BRIEF        Data of the first dmic path. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_DATA__DMIC_DATA                    BITFIELD(31, 0)
#define DMIC__DMIC_DATA__DMIC_DATA__POS               0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_FIFO_CTRL__VUP_FIFO_LEV_B   
 *
 * @BRIEF        Pointer of the B side FIFO Uplink (OCP clock domain) - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_FIFO_CTRL__VUP_FIFO_LEV_B          BITFIELD(15, 12)
#define DMIC__DMIC_FIFO_CTRL__VUP_FIFO_LEV_B__POS     12

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_FIFO_CTRL__VUP_FIFO_LEV_A   
 *
 * @BRIEF        Pointer of the A side FIFO Uplink(Func clock domain) - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_FIFO_CTRL__VUP_FIFO_LEV_A          BITFIELD(9, 6)
#define DMIC__DMIC_FIFO_CTRL__VUP_FIFO_LEV_A__POS     6

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_FIFO_CTRL__DMIC_TRESH   
 *
 * @BRIEF        Threshold of the uplink FIFO - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_FIFO_CTRL__DMIC_TRESH              BITFIELD(3, 0)
#define DMIC__DMIC_FIFO_CTRL__DMIC_TRESH__POS         0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_FIFO_DMIC1R_DATA__FIFO_DMIC1R_DAT   
 *
 * @BRIEF        Data of the right  FIFO_DMIC path1. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_FIFO_DMIC1R_DATA__FIFO_DMIC1R_DAT  BITFIELD(23, 0)
#define DMIC__DMIC_FIFO_DMIC1R_DATA__FIFO_DMIC1R_DAT__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_FIFO_DMIC1L_DATA__FIFO_DMIC1R_DAT   
 *
 * @BRIEF        Data of the right  FIFO_DMIC path1. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_FIFO_DMIC1L_DATA__FIFO_DMIC1R_DAT  BITFIELD(23, 0)
#define DMIC__DMIC_FIFO_DMIC1L_DATA__FIFO_DMIC1R_DAT__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_FIFO_DMIC2R_DATA__FIFO_DMIC2R_DAT   
 *
 * @BRIEF        Data of the right  FIFO_DMIC path2. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_FIFO_DMIC2R_DATA__FIFO_DMIC2R_DAT  BITFIELD(23, 0)
#define DMIC__DMIC_FIFO_DMIC2R_DATA__FIFO_DMIC2R_DAT__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_FIFO_DMIC2L_DATA__FIFO_DMIC2L_DAT   
 *
 * @BRIEF        Data of the right  FIFO_DMIC path2. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_FIFO_DMIC2L_DATA__FIFO_DMIC2L_DAT  BITFIELD(23, 0)
#define DMIC__DMIC_FIFO_DMIC2L_DATA__FIFO_DMIC2L_DAT__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_FIFO_DMIC3R_DATA__FIFO_DMIC3R_DAT   
 *
 * @BRIEF        Data of the right  FIFO_DMIC path3. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_FIFO_DMIC3R_DATA__FIFO_DMIC3R_DAT  BITFIELD(23, 0)
#define DMIC__DMIC_FIFO_DMIC3R_DATA__FIFO_DMIC3R_DAT__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_FIFO_DMIC3L_DATA__FIFO_DMIC3R_DAT   
 *
 * @BRIEF        Data of the right  FIFO_DMIC path3. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_FIFO_DMIC3L_DATA__FIFO_DMIC3R_DAT  BITFIELD(23, 0)
#define DMIC__DMIC_FIFO_DMIC3L_DATA__FIFO_DMIC3R_DAT__POS 0

    /* 
     * List of register bitfields values for component DMIC
     *
     */

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_REVISION__SCHEME__LEGACY
 *
 * @BRIEF        Legacy ASP or WTBU scheme - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_REVISION__SCHEME__LEGACY           0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_REVISION__SCHEME__H08
 *
 * @BRIEF        Highlander 0.8 scheme - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_REVISION__SCHEME__H08              0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_REVISION__CUSTOM__STANDARD
 *
 * @BRIEF        Non custom (standard) revision - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_REVISION__CUSTOM__STANDARD         0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_SYSCONFIG__SIDLEMODE__FORCE_IDLE
 *
 * @BRIEF        FORCE  Idle. IDLE request is acknowledged  
 *               unconditionally and immediately  
 *               (Default 'Dumb' mode for safety) - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_SYSCONFIG__SIDLEMODE__FORCE_IDLE   0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_SYSCONFIG__SIDLEMODE__NO_IDLE
 *
 * @BRIEF        NO idle. IDLE request is never acknowledged - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_SYSCONFIG__SIDLEMODE__NO_IDLE      0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_SYSCONFIG__SIDLEMODE__SMART_IDLE
 *
 * @BRIEF        SMART Idle. The acknowledgement to an IDLE request is given 
 *               based on the internal activity. 
 *               No wakeup capability. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_SYSCONFIG__SIDLEMODE__SMART_IDLE   0x2ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_SYSCONFIG__SIDLEMODE__SMART_IDLE_WAKEUP
 *
 * @BRIEF        Idle request acked pending internal conditions, asynchronous 
 *               wakeup  enabled. 
 *               Wakeup capable. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_SYSCONFIG__SIDLEMODE__SMART_IDLE_WAKEUP 0x3ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_SYSCONFIG__FREEMU__NEWENUM1
 *
 * @BRIEF        IP module is sensitive to emulation suspend - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_SYSCONFIG__FREEMU__NEWENUM1        0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_SYSCONFIG__FREEMU__NEWENUM2
 *
 * @BRIEF        IP module is not sensitive to emulation suspend - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_SYSCONFIG__FREEMU__NEWENUM2        0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_SYSCONFIG__SOFTRESET__NO_ACTION
 *
 * @BRIEF        No Action - (Write) 
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_SYSCONFIG__SOFTRESET__NO_ACTION    0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_SYSCONFIG__SOFTRESET__NORMAL
 *
 * @BRIEF        Reset done, no pending action - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_SYSCONFIG__SOFTRESET__NORMAL       0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_SYSCONFIG__SOFTRESET__RST_ON_GOING
 *
 * @BRIEF        Reset (software or other) ongoing - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_SYSCONFIG__SOFTRESET__RST_ON_GOING 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_SYSCONFIG__SOFTRESET__RESET
 *
 * @BRIEF        Initiate software reset - (Write) 
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_SYSCONFIG__SOFTRESET__RESET        0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_IRQ_EOI__LINE_NUMBER__READ0
 *
 * @BRIEF        Read always returns zeros - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_IRQ_EOI__LINE_NUMBER__READ0        0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_IRQ_EOI__LINE_NUMBER__EOI0
 *
 * @BRIEF        SW EOI on interrupt line - (Write) 
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_IRQ_EOI__LINE_NUMBER__EOI0         0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_IRQ_EOI__LINE_NUMBER__EOI1
 *
 * @BRIEF        No action - (Write) 
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_IRQ_EOI__LINE_NUMBER__EOI1         0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_IRQSTATUS_RAW__DMIC_IRQ_EMPTY__NONE
 *
 * @BRIEF        No event pending - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_IRQSTATUS_RAW__DMIC_IRQ_EMPTY__NONE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_IRQSTATUS_RAW__DMIC_IRQ_EMPTY__NOACTION
 *
 * @BRIEF        No action - (Write) 
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_IRQSTATUS_RAW__DMIC_IRQ_EMPTY__NOACTION 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_IRQSTATUS_RAW__DMIC_IRQ_EMPTY__SET
 *
 * @BRIEF        set - (Write) 
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_IRQSTATUS_RAW__DMIC_IRQ_EMPTY__SET 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_IRQSTATUS_RAW__DMIC_IRQ_EMPTY__PENDING
 *
 * @BRIEF        IRQ event pending - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_IRQSTATUS_RAW__DMIC_IRQ_EMPTY__PENDING 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_IRQSTATUS_RAW__DMIC_IRQ_ALST_FULL__NONE
 *
 * @BRIEF        No event pending - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_IRQSTATUS_RAW__DMIC_IRQ_ALST_FULL__NONE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_IRQSTATUS_RAW__DMIC_IRQ_ALST_FULL__NOACTION
 *
 * @BRIEF        No action - (Write) 
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_IRQSTATUS_RAW__DMIC_IRQ_ALST_FULL__NOACTION 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_IRQSTATUS_RAW__DMIC_IRQ_ALST_FULL__SET
 *
 * @BRIEF        set - (Write) 
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_IRQSTATUS_RAW__DMIC_IRQ_ALST_FULL__SET 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_IRQSTATUS_RAW__DMIC_IRQ_ALST_FULL__PENDING
 *
 * @BRIEF        IRQ event pending - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_IRQSTATUS_RAW__DMIC_IRQ_ALST_FULL__PENDING 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_IRQSTATUS_RAW__DMIC_IRQ_FULL__NONE
 *
 * @BRIEF        No event pending - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_IRQSTATUS_RAW__DMIC_IRQ_FULL__NONE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_IRQSTATUS_RAW__DMIC_IRQ_FULL__NOACTION
 *
 * @BRIEF        No action - (Write) 
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_IRQSTATUS_RAW__DMIC_IRQ_FULL__NOACTION 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_IRQSTATUS_RAW__DMIC_IRQ_FULL__SET
 *
 * @BRIEF        set - (Write) 
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_IRQSTATUS_RAW__DMIC_IRQ_FULL__SET  0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_IRQSTATUS_RAW__DMIC_IRQ_FULL__PENDING
 *
 * @BRIEF        IRQ event pending - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_IRQSTATUS_RAW__DMIC_IRQ_FULL__PENDING 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_IRQSTATUS_RAW__DMIC_IRQ__NONE
 *
 * @BRIEF        No event pending - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_IRQSTATUS_RAW__DMIC_IRQ__NONE      0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_IRQSTATUS_RAW__DMIC_IRQ__NOACTION
 *
 * @BRIEF        No action - (Write) 
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_IRQSTATUS_RAW__DMIC_IRQ__NOACTION  0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_IRQSTATUS_RAW__DMIC_IRQ__SET
 *
 * @BRIEF        set - (Write) 
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_IRQSTATUS_RAW__DMIC_IRQ__SET       0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_IRQSTATUS_RAW__DMIC_IRQ__PENDING
 *
 * @BRIEF        IRQ event pending - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_IRQSTATUS_RAW__DMIC_IRQ__PENDING   0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_IRQSTATUS__DMIC_IRQ_EMPTY__NONE
 *
 * @BRIEF        No event pending - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_IRQSTATUS__DMIC_IRQ_EMPTY__NONE    0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_IRQSTATUS__DMIC_IRQ_EMPTY__NOACTION
 *
 * @BRIEF        No action - (Write) 
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_IRQSTATUS__DMIC_IRQ_EMPTY__NOACTION 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_IRQSTATUS__DMIC_IRQ_EMPTY__CLEAR
 *
 * @BRIEF        Clear pending event, if any - (Write) 
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_IRQSTATUS__DMIC_IRQ_EMPTY__CLEAR   0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_IRQSTATUS__DMIC_IRQ_EMPTY__PENDING
 *
 * @BRIEF        IRQ event pending - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_IRQSTATUS__DMIC_IRQ_EMPTY__PENDING 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_IRQSTATUS__DMIC_IRQ_ALST_FULL__NONE
 *
 * @BRIEF        No event pending - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_IRQSTATUS__DMIC_IRQ_ALST_FULL__NONE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_IRQSTATUS__DMIC_IRQ_ALST_FULL__NOACTION
 *
 * @BRIEF        No action - (Write) 
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_IRQSTATUS__DMIC_IRQ_ALST_FULL__NOACTION 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_IRQSTATUS__DMIC_IRQ_ALST_FULL__CLEAR
 *
 * @BRIEF        Clear pending event, if any - (Write) 
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_IRQSTATUS__DMIC_IRQ_ALST_FULL__CLEAR 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_IRQSTATUS__DMIC_IRQ_ALST_FULL__PENDING
 *
 * @BRIEF        IRQ event pending - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_IRQSTATUS__DMIC_IRQ_ALST_FULL__PENDING 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_IRQSTATUS__DMIC_IRQ_FULL__NONE
 *
 * @BRIEF        No event pending - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_IRQSTATUS__DMIC_IRQ_FULL__NONE     0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_IRQSTATUS__DMIC_IRQ_FULL__NOACTION
 *
 * @BRIEF        No action - (Write) 
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_IRQSTATUS__DMIC_IRQ_FULL__NOACTION 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_IRQSTATUS__DMIC_IRQ_FULL__CLEAR
 *
 * @BRIEF        Clear pending event, if any - (Write) 
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_IRQSTATUS__DMIC_IRQ_FULL__CLEAR    0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_IRQSTATUS__DMIC_IRQ_FULL__PENDING
 *
 * @BRIEF        IRQ event pending - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_IRQSTATUS__DMIC_IRQ_FULL__PENDING  0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_IRQSTATUS__DMIC_IRQ__NONE
 *
 * @BRIEF        No event pending - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_IRQSTATUS__DMIC_IRQ__NONE          0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_IRQSTATUS__DMIC_IRQ__NOACTION
 *
 * @BRIEF        No action - (Write) 
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_IRQSTATUS__DMIC_IRQ__NOACTION      0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_IRQSTATUS__DMIC_IRQ__CLEAR
 *
 * @BRIEF        Clear pending event, if any - (Write) 
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_IRQSTATUS__DMIC_IRQ__CLEAR         0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_IRQSTATUS__DMIC_IRQ__PENDING
 *
 * @BRIEF        IRQ event pending - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_IRQSTATUS__DMIC_IRQ__PENDING       0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_IRQENABLE_SET__DMIC_IRQ_EMPTY_MASK__DISABLED
 *
 * @BRIEF        interupt disabled - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_IRQENABLE_SET__DMIC_IRQ_EMPTY_MASK__DISABLED 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_IRQENABLE_SET__DMIC_IRQ_EMPTY_MASK__NOACTION
 *
 * @BRIEF        No action - (Write) 
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_IRQENABLE_SET__DMIC_IRQ_EMPTY_MASK__NOACTION 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_IRQENABLE_SET__DMIC_IRQ_EMPTY_MASK__ENABLE
 *
 * @BRIEF        enable interrupt - (Write) 
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_IRQENABLE_SET__DMIC_IRQ_EMPTY_MASK__ENABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_IRQENABLE_SET__DMIC_IRQ_EMPTY_MASK__ENABLED
 *
 * @BRIEF        Enumeration value description is not available - (Read)
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_IRQENABLE_SET__DMIC_IRQ_EMPTY_MASK__ENABLED 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_IRQENABLE_SET__DMIC_IRQ_ALST_FULL_MASK__DISABLED
 *
 * @BRIEF        interupt disabled - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_IRQENABLE_SET__DMIC_IRQ_ALST_FULL_MASK__DISABLED 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_IRQENABLE_SET__DMIC_IRQ_ALST_FULL_MASK__NOACTION
 *
 * @BRIEF        No action - (Write) 
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_IRQENABLE_SET__DMIC_IRQ_ALST_FULL_MASK__NOACTION 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_IRQENABLE_SET__DMIC_IRQ_ALST_FULL_MASK__ENABLE
 *
 * @BRIEF        enable interrupt - (Write) 
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_IRQENABLE_SET__DMIC_IRQ_ALST_FULL_MASK__ENABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_IRQENABLE_SET__DMIC_IRQ_ALST_FULL_MASK__ENABLED
 *
 * @BRIEF        interrupt enabled - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_IRQENABLE_SET__DMIC_IRQ_ALST_FULL_MASK__ENABLED 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_IRQENABLE_SET__DMIC_IRQ_FULL_MASK__DISABLED
 *
 * @BRIEF        interupt disabled - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_IRQENABLE_SET__DMIC_IRQ_FULL_MASK__DISABLED 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_IRQENABLE_SET__DMIC_IRQ_FULL_MASK__NOACTION
 *
 * @BRIEF        No action - (Write) 
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_IRQENABLE_SET__DMIC_IRQ_FULL_MASK__NOACTION 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_IRQENABLE_SET__DMIC_IRQ_FULL_MASK__ENABLE
 *
 * @BRIEF        enable interrupt - (Write) 
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_IRQENABLE_SET__DMIC_IRQ_FULL_MASK__ENABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_IRQENABLE_SET__DMIC_IRQ_FULL_MASK__ENABLED
 *
 * @BRIEF        interrupt enabled - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_IRQENABLE_SET__DMIC_IRQ_FULL_MASK__ENABLED 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_IRQENABLE_SET__DMIC_IRQ_MASK__DISABLED
 *
 * @BRIEF        interupt disabled - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_IRQENABLE_SET__DMIC_IRQ_MASK__DISABLED 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_IRQENABLE_SET__DMIC_IRQ_MASK__NOACTION
 *
 * @BRIEF        No action - (Write) 
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_IRQENABLE_SET__DMIC_IRQ_MASK__NOACTION 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_IRQENABLE_SET__DMIC_IRQ_MASK__ENABLE
 *
 * @BRIEF        enable interrupt - (Write) 
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_IRQENABLE_SET__DMIC_IRQ_MASK__ENABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_IRQENABLE_SET__DMIC_IRQ_MASK__ENABLED
 *
 * @BRIEF        interrupt enabled - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_IRQENABLE_SET__DMIC_IRQ_MASK__ENABLED 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_IRQENABLE_CLR__DMIC_IRQ_EMPTY_MASK__DISABLED
 *
 * @BRIEF        interupt disabled - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_IRQENABLE_CLR__DMIC_IRQ_EMPTY_MASK__DISABLED 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_IRQENABLE_CLR__DMIC_IRQ_EMPTY_MASK__NOACTION
 *
 * @BRIEF        No Action - (Write) 
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_IRQENABLE_CLR__DMIC_IRQ_EMPTY_MASK__NOACTION 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_IRQENABLE_CLR__DMIC_IRQ_EMPTY_MASK__DISABLE
 *
 * @BRIEF        disable interrupt - (Write) 
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_IRQENABLE_CLR__DMIC_IRQ_EMPTY_MASK__DISABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_IRQENABLE_CLR__DMIC_IRQ_EMPTY_MASK__ENABLED
 *
 * @BRIEF        interupt enabled - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_IRQENABLE_CLR__DMIC_IRQ_EMPTY_MASK__ENABLED 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_IRQENABLE_CLR__DMIC_IRQ_ALST_FULL_MASK__DISABLED
 *
 * @BRIEF        interupt disabled - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_IRQENABLE_CLR__DMIC_IRQ_ALST_FULL_MASK__DISABLED 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_IRQENABLE_CLR__DMIC_IRQ_ALST_FULL_MASK__NOACTION
 *
 * @BRIEF        No action - (Write) 
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_IRQENABLE_CLR__DMIC_IRQ_ALST_FULL_MASK__NOACTION 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_IRQENABLE_CLR__DMIC_IRQ_ALST_FULL_MASK__DISABLE
 *
 * @BRIEF        disable interrupt - (Write) 
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_IRQENABLE_CLR__DMIC_IRQ_ALST_FULL_MASK__DISABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_IRQENABLE_CLR__DMIC_IRQ_ALST_FULL_MASK__ENABLED
 *
 * @BRIEF        interrupt enabled - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_IRQENABLE_CLR__DMIC_IRQ_ALST_FULL_MASK__ENABLED 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_IRQENABLE_CLR__DMIC_IRQ_FULL_MASK__DISABLED
 *
 * @BRIEF        interupt disabled - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_IRQENABLE_CLR__DMIC_IRQ_FULL_MASK__DISABLED 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_IRQENABLE_CLR__DMIC_IRQ_FULL_MASK__NOACTION
 *
 * @BRIEF        No action - (Write) 
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_IRQENABLE_CLR__DMIC_IRQ_FULL_MASK__NOACTION 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_IRQENABLE_CLR__DMIC_IRQ_FULL_MASK__DISABLE
 *
 * @BRIEF        disable interrupt - (Write) 
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_IRQENABLE_CLR__DMIC_IRQ_FULL_MASK__DISABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_IRQENABLE_CLR__DMIC_IRQ_FULL_MASK__ENABLED
 *
 * @BRIEF        interrupt enabled - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_IRQENABLE_CLR__DMIC_IRQ_FULL_MASK__ENABLED 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_IRQENABLE_CLR__DMIC_IRQ_MASK__DISABLED
 *
 * @BRIEF        interupt disabled - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_IRQENABLE_CLR__DMIC_IRQ_MASK__DISABLED 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_IRQENABLE_CLR__DMIC_IRQ_MASK__NOACTION
 *
 * @BRIEF        No action - (Write) 
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_IRQENABLE_CLR__DMIC_IRQ_MASK__NOACTION 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_IRQENABLE_CLR__DMIC_IRQ_MASK__DISABLE
 *
 * @BRIEF        disable interrupt - (Write) 
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_IRQENABLE_CLR__DMIC_IRQ_MASK__DISABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_IRQENABLE_CLR__DMIC_IRQ_MASK__ENABLED
 *
 * @BRIEF        interrupt enabled - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_IRQENABLE_CLR__DMIC_IRQ_MASK__ENABLED 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_DMAENABLE_SET__DMA_ENABLE__DISABLED
 *
 * @BRIEF        interupt disabled - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_DMAENABLE_SET__DMA_ENABLE__DISABLED 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_DMAENABLE_SET__DMA_ENABLE__NOACTION
 *
 * @BRIEF        No action - (Write) 
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_DMAENABLE_SET__DMA_ENABLE__NOACTION 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_DMAENABLE_SET__DMA_ENABLE__ENABLE
 *
 * @BRIEF        enable interrupt - (Write) 
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_DMAENABLE_SET__DMA_ENABLE__ENABLE  0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_DMAENABLE_SET__DMA_ENABLE__ENABLED
 *
 * @BRIEF        interrupt enabled - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_DMAENABLE_SET__DMA_ENABLE__ENABLED 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_DMAENABLE_CLR__DMA_ENABLE__DISABLED
 *
 * @BRIEF        interupt disabled - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_DMAENABLE_CLR__DMA_ENABLE__DISABLED 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_DMAENABLE_CLR__DMA_ENABLE__NOACTION
 *
 * @BRIEF        No action - (Write) 
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_DMAENABLE_CLR__DMA_ENABLE__NOACTION 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_DMAENABLE_CLR__DMA_ENABLE__DISABLE
 *
 * @BRIEF        disable interrupt - (Write) 
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_DMAENABLE_CLR__DMA_ENABLE__DISABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_DMAENABLE_CLR__DMA_ENABLE__ENABLED
 *
 * @BRIEF        interrupt enabled - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_DMAENABLE_CLR__DMA_ENABLE__ENABLED 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_CTRL__DMIC_POLAR3__LOW_LEVEL
 *
 * @BRIEF        When "0" the left data is generated in the MIC3 on PO_DMIC 
 *               _CLK low level - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_CTRL__DMIC_POLAR3__LOW_LEVEL       0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_CTRL__DMIC_POLAR3__HIGH_LEVEL
 *
 * @BRIEF        When "1" the left data is generated in the MIC3 on PO_DMIC 
 *               _CLK high level - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_CTRL__DMIC_POLAR3__HIGH_LEVEL      0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_CTRL__DMIC_POLAR2__LOW_LEVEL
 *
 * @BRIEF        When "0" the left data is generated in the MIC2 on PO_DMIC 
 *               _CLK low level - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_CTRL__DMIC_POLAR2__LOW_LEVEL       0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_CTRL__DMIC_POLAR2__HIGH_LEVEL
 *
 * @BRIEF        When "1" the left data is generated in the MIC2 on PO_DMIC 
 *               _CLK high level - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_CTRL__DMIC_POLAR2__HIGH_LEVEL      0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_CTRL__DMIC_POLAR1__LOW_LEVEL
 *
 * @BRIEF        When "0" the left data is generated in the MIC1 on PO_DMIC 
 *               _CLK low level - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_CTRL__DMIC_POLAR1__LOW_LEVEL       0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DMIC__DMIC_CTRL__DMIC_POLAR1__HIGH_LEVEL
 *
 * @BRIEF        When "1" the left data is generated in the MIC1 on PO_DMIC 
 *               _CLK high level - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DMIC__DMIC_CTRL__DMIC_POLAR1__HIGH_LEVEL      0x1ul

#ifdef __cplusplus
}
#endif
#endif                                                     /* __DMIC_CRED_H */

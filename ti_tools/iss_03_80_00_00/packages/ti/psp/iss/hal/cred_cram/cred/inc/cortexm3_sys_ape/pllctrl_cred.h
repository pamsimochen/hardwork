/** ==================================================================
 *  @file   pllctrl_cred.h                                                  
 *                                                                    
 *  @path   /ti/psp/iss/hal/cred_cram/cred/inc/cortexm3_sys_ape/                                                  
 *                                                                    
 *  @desc   This  File contains.                                      
 * ===================================================================
 *  Copyright (c) Texas Instruments Inc 2011, 2012                    
 *                                                                    
 *  Use of this software is controlled by the terms and conditions found
 *  in the license agreement under which this software has been supplied
 * ===================================================================*/

/* ============================================================================ 
 * TEXAS INSTRUMENTS INCORPORATED PROPRIETARY INFORMATION Property of Texas
 * Instruments For Unrestricted Internal Use Only Unauthorized reproduction
 * and/or distribution is strictly prohibited.  This product is protected
 * under copyright law and trade secret law as an unpublished work.  Created
 * 2008, (C) Copyright 2008 Texas Instruments.  All rights reserved. */

/**
 *  @Component:   PLLCTRL
 *
 *  @Filename:    pllctrl_cred.h
 *
 *  @Description:   
 *
 *  Generated by: Socrates CRED generator prototype
 *
    *//* ====================================================================== */

#ifndef __PLLCTRL_CRED_H
#define __PLLCTRL_CRED_H

#ifdef __cplusplus
extern "C" {
#endif

    /* 
     * Instance DSS_SS_FROM_L4_PER__PLLCTRL1 of component PLLCTRL mapped in MONICA at address 0x48044300
     * Instance DSS_SS_FROM_L4_PER__PLLCTRL2 of component PLLCTRL mapped in MONICA at address 0x48045300
     * Instance DSS_SS_FROM_L4_PER__HDMI__PLLCTRL of component PLLCTRL mapped in MONICA at address 0x48046200
     * Instance DSS_SS_FROM_L3__PLLCTRL1 of component PLLCTRL mapped in MONICA at address 0x58004300
     * Instance DSS_SS_FROM_L3__PLLCTRL2 of component PLLCTRL mapped in MONICA at address 0x58005300
     * Instance DSS_SS_FROM_L3__HDMI__PLLCTRL of component PLLCTRL mapped in MONICA at address 0x58006200
     */

                                                                              /*-------------------------------------------------------------------------*//**
 * @DEFINITION   BITFIELD
 *
 * @BRIEF        The bitfield must be defined according to register width
 *               of the component - 64/32/16/8
 *
    *//*------------------------------------------------------------------------ */
#undef BITFIELD
#define BITFIELD BITFIELD_32

    /* 
     *  List of Register arrays for component PLLCTRL
     *
     */

    /* 
     *  List of bundle arrays for component PLLCTRL
     *
     */

    /* 
     *  List of bundles for component PLLCTRL
     *
     */

    /* 
     * List of registers for component PLLCTRL
     *
     */

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_CONTROL
 *
 * @BRIEF        This register controls the PLL reset/power and modes 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_CONTROL                               0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_STATUS
 *
 * @BRIEF        This register contains the status information 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_STATUS                                0x4ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_GO
 *
 * @BRIEF        This register contains the GO bit 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_GO                                    0x8ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_CONFIGURATION1
 *
 * @BRIEF        This register contains the latched PLL and HSDIVDER 
 *               configuration bits  
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_CONFIGURATION1                        0xCul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_CONFIGURATION2
 *
 * @BRIEF        This register contains the unlatched PLL and HSDIVDER 
 *               configuration bits  
 *               These bits are "shadowed" when automatic mode is selected 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_CONFIGURATION2                        0x10ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_CONFIGURATION3
 *
 * @BRIEF        HSDIVIDER configuration bits fo rthe M5 and M6 dividers 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_CONFIGURATION3                        0x14ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_SSC_CONFIGURATION1
 *
 * @BRIEF        Configuration for PLL Spread Spectrum Clocking modulation 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_SSC_CONFIGURATION1                    0x18ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_SSC_CONFIGURATION2
 *
 * @BRIEF        Register description is not available
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_SSC_CONFIGURATION2                    0x1Cul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_CONFIGURATION4
 *
 * @BRIEF        Allows setting the fractional M divider and M2 divider for 
 *               PLL. 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_CONFIGURATION4                        0x20ul

    /* 
     * List of register bitfields for component PLLCTRL
     *
     */

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_CONTROL__HSDIV_SYSRESET   
 *
 * @BRIEF        Force HSDIVIDER SYSRESET - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_CONTROL__HSDIV_SYSRESET          BITFIELD(4, 4)
#define PLLCTRL__PLL_CONTROL__HSDIV_SYSRESET__POS     4

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_CONTROL__PLL_SYSRESET   
 *
 * @BRIEF        Force ADPLLV2 SYSRESET - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_CONTROL__PLL_SYSRESET            BITFIELD(3, 3)
#define PLLCTRL__PLL_CONTROL__PLL_SYSRESET__POS       3

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_CONTROL__PLL_HALTMODE   
 *
 * @BRIEF        Allow PLL to be halted if no activity. 
 *               Reserved when PLLCTRL_AUTO is 0. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_CONTROL__PLL_HALTMODE            BITFIELD(2, 2)
#define PLLCTRL__PLL_CONTROL__PLL_HALTMODE__POS       2

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_CONTROL__PLL_GATEMODE   
 *
 * @BRIEF        Allow PLL clock gating for power saving 
 *               Reserved when PLLCTRL_AUTO is 0. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_CONTROL__PLL_GATEMODE            BITFIELD(1, 1)
#define PLLCTRL__PLL_CONTROL__PLL_GATEMODE__POS       1

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_CONTROL__PLL_AUTOMODE   
 *
 * @BRIEF        Automatic update mode. 
 *               If this bit is set then the configuration updates will be 
 *               synchronised to DISPCUpdateSync. 
 *               If this bit is clear configuration updates will be done 
 *               immediately. 
 *               Reserved when PLLCTRL_AUTO is 0. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_CONTROL__PLL_AUTOMODE            BITFIELD(0, 0)
#define PLLCTRL__PLL_CONTROL__PLL_AUTOMODE__POS       0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_STATUS__SSC_EN_ACK   
 *
 * @BRIEF        Spread Spectrum Clocking acknowledge - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_STATUS__SSC_EN_ACK               BITFIELD(12, 12)
#define PLLCTRL__PLL_STATUS__SSC_EN_ACK__POS          12

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_STATUS__M7_CLOCK_ACK   
 *
 * @BRIEF        Acknowledge for enable of DSS clock 
 *               Verify the status before selecting this source in the DSS 
 *               clock mux - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_STATUS__M7_CLOCK_ACK             BITFIELD(11, 11)
#define PLLCTRL__PLL_STATUS__M7_CLOCK_ACK__POS        11

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_STATUS__M6_CLOCK_ACK   
 *
 * @BRIEF        Acknowledge for enable of DSS clock 
 *               Verify the status before selecting this source in the DSS 
 *               clock mux - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_STATUS__M6_CLOCK_ACK             BITFIELD(10, 10)
#define PLLCTRL__PLL_STATUS__M6_CLOCK_ACK__POS        10

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_STATUS__BYPASSACKZ   
 *
 * @BRIEF        State of bypass mode on PHY and HSDIVIDER - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_STATUS__BYPASSACKZ               BITFIELD(9, 9)
#define PLLCTRL__PLL_STATUS__BYPASSACKZ__POS          9

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_STATUS__M5_CLOCK_ACK   
 *
 * @BRIEF        Acknowledge for enable of DSI Protcol Engine clock 
 *               Verify the status before selecting this source in the DSI 
 *               Protcol Engine clock mux - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_STATUS__M5_CLOCK_ACK             BITFIELD(8, 8)
#define PLLCTRL__PLL_STATUS__M5_CLOCK_ACK__POS        8

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_STATUS__M4_CLOCK_ACK   
 *
 * @BRIEF        Acknowledge for enable of DSS clock 
 *               Verify the status before selecting this source in the DSS 
 *               clock mux - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_STATUS__M4_CLOCK_ACK             BITFIELD(7, 7)
#define PLLCTRL__PLL_STATUS__M4_CLOCK_ACK__POS        7

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_STATUS__PLL_BYPASS   
 *
 * @BRIEF        DSI PLL Bypass status - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_STATUS__PLL_BYPASS               BITFIELD(6, 6)
#define PLLCTRL__PLL_STATUS__PLL_BYPASS__POS          6

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_STATUS__PLL_HIGHJITTER   
 *
 * @BRIEF        PLL High Jitter status - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_STATUS__PLL_HIGHJITTER           BITFIELD(5, 5)
#define PLLCTRL__PLL_STATUS__PLL_HIGHJITTER__POS      5

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_STATUS__PLL_LIMP   
 *
 * @BRIEF        PLL Limp status - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_STATUS__PLL_LIMP                 BITFIELD(4, 4)
#define PLLCTRL__PLL_STATUS__PLL_LIMP__POS            4

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_STATUS__PLL_LOSSREF   
 *
 * @BRIEF        PLL Reference Loss status - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_STATUS__PLL_LOSSREF              BITFIELD(3, 3)
#define PLLCTRL__PLL_STATUS__PLL_LOSSREF__POS         3

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_STATUS__PLL_RECAL   
 *
 * @BRIEF        PLL re-calibration status 
 *               If this bit is active, the PLL needs to be re-calibrated - 
 *               (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_STATUS__PLL_RECAL                BITFIELD(2, 2)
#define PLLCTRL__PLL_STATUS__PLL_RECAL__POS           2

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_STATUS__PLL_LOCK   
 *
 * @BRIEF        PLL Lock status 
 *               See the programming guide for the use of this bit - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_STATUS__PLL_LOCK                 BITFIELD(1, 1)
#define PLLCTRL__PLL_STATUS__PLL_LOCK__POS            1

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_STATUS__PLLCTRL_RESET_DONE   
 *
 * @BRIEF        PLLCTRL reset done status - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_STATUS__PLLCTRL_RESET_DONE       BITFIELD(0, 0)
#define PLLCTRL__PLL_STATUS__PLLCTRL_RESET_DONE__POS  0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_GO__PLL_GO   
 *
 * @BRIEF        Request (re-)locking sequence of the PLL. 
 *               If the AutoMode bit is set, then this will be deferred until 
 *               DISPCUpdate Sync goes active - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_GO__PLL_GO                       BITFIELD(0, 0)
#define PLLCTRL__PLL_GO__PLL_GO__POS                  0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_CONFIGURATION1__M5_CLOCK_DIV   
 *
 * @BRIEF        Divider value for Protocol Engine clock source 
 *               M5REG - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_CONFIGURATION1__M5_CLOCK_DIV     BITFIELD(30, 26)
#define PLLCTRL__PLL_CONFIGURATION1__M5_CLOCK_DIV__POS 26

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_CONFIGURATION1__M4_CLOCK_DIV   
 *
 * @BRIEF        Divider value for DSS clock source 
 *               M4REG - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_CONFIGURATION1__M4_CLOCK_DIV     BITFIELD(25, 21)
#define PLLCTRL__PLL_CONFIGURATION1__M4_CLOCK_DIV__POS 21

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_CONFIGURATION1__PLL_REGM   
 *
 * @BRIEF        M Divider for PLL - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_CONFIGURATION1__PLL_REGM         BITFIELD(20, 9)
#define PLLCTRL__PLL_CONFIGURATION1__PLL_REGM__POS    9

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_CONFIGURATION1__PLL_REGN   
 *
 * @BRIEF        N Divider for PLL (Reference) - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_CONFIGURATION1__PLL_REGN         BITFIELD(8, 1)
#define PLLCTRL__PLL_CONFIGURATION1__PLL_REGN__POS    1

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_CONFIGURATION1__PLL_STOPMODE   
 *
 * @BRIEF        PLL STOPMODE - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_CONFIGURATION1__PLL_STOPMODE     BITFIELD(0, 0)
#define PLLCTRL__PLL_CONFIGURATION1__PLL_STOPMODE__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_CONFIGURATION2__M7_CLOCK_PWDN   
 *
 * @BRIEF        Power down for M7 clock source - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_CONFIGURATION2__M7_CLOCK_PWDN    BITFIELD(26, 26)
#define PLLCTRL__PLL_CONFIGURATION2__M7_CLOCK_PWDN__POS 26

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_CONFIGURATION2__M7_CLOCK_EN   
 *
 * @BRIEF        Enable for M7 clock source - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_CONFIGURATION2__M7_CLOCK_EN      BITFIELD(25, 25)
#define PLLCTRL__PLL_CONFIGURATION2__M7_CLOCK_EN__POS 25

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_CONFIGURATION2__M6_CLOCK_PWDN   
 *
 * @BRIEF        Power down for M6 clock source - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_CONFIGURATION2__M6_CLOCK_PWDN    BITFIELD(24, 24)
#define PLLCTRL__PLL_CONFIGURATION2__M6_CLOCK_PWDN__POS 24

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_CONFIGURATION2__M6_CLOCK_EN   
 *
 * @BRIEF        Enable for M6 clock source - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_CONFIGURATION2__M6_CLOCK_EN      BITFIELD(23, 23)
#define PLLCTRL__PLL_CONFIGURATION2__M6_CLOCK_EN__POS 23

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_CONFIGURATION2__REFSEL   
 *
 * @BRIEF        Selects the reference clock with optional divide by 2 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_CONFIGURATION2__REFSEL           BITFIELD(22, 21)
#define PLLCTRL__PLL_CONFIGURATION2__REFSEL__POS      21

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_CONFIGURATION2__HSDIVBYPASS   
 *
 * @BRIEF        Forces HSDIVIDER to bypass mode - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_CONFIGURATION2__HSDIVBYPASS      BITFIELD(20, 20)
#define PLLCTRL__PLL_CONFIGURATION2__HSDIVBYPASS__POS 20

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_CONFIGURATION2__M5_CLOCK_PWDN   
 *
 * @BRIEF        Power down for Protocol Engine clock source - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_CONFIGURATION2__M5_CLOCK_PWDN    BITFIELD(19, 19)
#define PLLCTRL__PLL_CONFIGURATION2__M5_CLOCK_PWDN__POS 19

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_CONFIGURATION2__M5_CLOCK_EN   
 *
 * @BRIEF        Enable for Protocol Engine clock source - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_CONFIGURATION2__M5_CLOCK_EN      BITFIELD(18, 18)
#define PLLCTRL__PLL_CONFIGURATION2__M5_CLOCK_EN__POS 18

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_CONFIGURATION2__M4_CLOCK_PWDN   
 *
 * @BRIEF        Power down for M4 clock source - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_CONFIGURATION2__M4_CLOCK_PWDN    BITFIELD(17, 17)
#define PLLCTRL__PLL_CONFIGURATION2__M4_CLOCK_PWDN__POS 17

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_CONFIGURATION2__M4_CLOCK_EN   
 *
 * @BRIEF        Enable for M4 clock source - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_CONFIGURATION2__M4_CLOCK_EN      BITFIELD(16, 16)
#define PLLCTRL__PLL_CONFIGURATION2__M4_CLOCK_EN__POS 16

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_CONFIGURATION2__BYPASSEN   
 *
 * @BRIEF        Selects DSS functional clock as DSIPHY clock source - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_CONFIGURATION2__BYPASSEN         BITFIELD(15, 15)
#define PLLCTRL__PLL_CONFIGURATION2__BYPASSEN__POS    15

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_CONFIGURATION2__PHY_CLKINEN   
 *
 * @BRIEF        PHY clock control - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_CONFIGURATION2__PHY_CLKINEN      BITFIELD(14, 14)
#define PLLCTRL__PLL_CONFIGURATION2__PHY_CLKINEN__POS 14

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_CONFIGURATION2__PLL_REFEN   
 *
 * @BRIEF        PLL reference clock control - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_CONFIGURATION2__PLL_REFEN        BITFIELD(13, 13)
#define PLLCTRL__PLL_CONFIGURATION2__PLL_REFEN__POS   13

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_CONFIGURATION2__PLL_HIGHFREQ   
 *
 * @BRIEF        Enables a division of pixel clock by 2 before input to the 
 *               PLL 
 *               Required for pixel clock frequencies above 32 MHz (21 MHZ if 
 *               N = 0) - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_CONFIGURATION2__PLL_HIGHFREQ     BITFIELD(12, 12)
#define PLLCTRL__PLL_CONFIGURATION2__PLL_HIGHFREQ__POS 12

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_CONFIGURATION2__PLL_CLKSEL   
 *
 * @BRIEF        Reference clock selection - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_CONFIGURATION2__PLL_CLKSEL       BITFIELD(11, 11)
#define PLLCTRL__PLL_CONFIGURATION2__PLL_CLKSEL__POS  11

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_CONFIGURATION2__PLL_LOCKSEL   
 *
 * @BRIEF        Selects the lock criteria for the PLL - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_CONFIGURATION2__PLL_LOCKSEL      BITFIELD(10, 9)
#define PLLCTRL__PLL_CONFIGURATION2__PLL_LOCKSEL__POS 9

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_CONFIGURATION2__PLL_DRIFTGUARDEN   
 *
 * @BRIEF        PLL DRIFTGUARDEN - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_CONFIGURATION2__PLL_DRIFTGUARDEN BITFIELD(8, 8)
#define PLLCTRL__PLL_CONFIGURATION2__PLL_DRIFTGUARDEN__POS 8

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_CONFIGURATION2__PLL_LOWCURRSTBY   
 *
 * @BRIEF        PLL LOW CURRENT STANDBY - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_CONFIGURATION2__PLL_LOWCURRSTBY  BITFIELD(6, 6)
#define PLLCTRL__PLL_CONFIGURATION2__PLL_LOWCURRSTBY__POS 6

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_CONFIGURATION2__PLL_PLLLPMODE   
 *
 * @BRIEF        Select the power / performance of the PLL - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_CONFIGURATION2__PLL_PLLLPMODE    BITFIELD(5, 5)
#define PLLCTRL__PLL_CONFIGURATION2__PLL_PLLLPMODE__POS 5

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_CONFIGURATION2__PLL_SELFREQDCO   
 *
 * @BRIEF        DCO frequency range selector for ADPLLLJ 
 *               0x2 Set if DCO frequency is between 500MHz and 1000MHz 
 *               0x4 Set if DCO frequency is between 1000MHz and 2000MHz 
 *               Others Reserved - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_CONFIGURATION2__PLL_SELFREQDCO   BITFIELD(3, 1)
#define PLLCTRL__PLL_CONFIGURATION2__PLL_SELFREQDCO__POS 1

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_CONFIGURATION2__PLL_IDLE   
 *
 * @BRIEF        PLL IDLE: - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_CONFIGURATION2__PLL_IDLE         BITFIELD(0, 0)
#define PLLCTRL__PLL_CONFIGURATION2__PLL_IDLE__POS    0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_CONFIGURATION3__PLL_SD   
 *
 * @BRIEF        Sigma delta divider setting for ADPLLLJ based on the PLL 
 *               lock configuration. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_CONFIGURATION3__PLL_SD           BITFIELD(17, 10)
#define PLLCTRL__PLL_CONFIGURATION3__PLL_SD__POS      10

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_CONFIGURATION3__M7_CLOCK_DIV   
 *
 * @BRIEF        Divider value for M7 divider. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_CONFIGURATION3__M7_CLOCK_DIV     BITFIELD(9, 5)
#define PLLCTRL__PLL_CONFIGURATION3__M7_CLOCK_DIV__POS 5

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_CONFIGURATION3__M6_CLOCK_DIV   
 *
 * @BRIEF        Divider value for M6 divider. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_CONFIGURATION3__M6_CLOCK_DIV     BITFIELD(4, 0)
#define PLLCTRL__PLL_CONFIGURATION3__M6_CLOCK_DIV__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_SSC_CONFIGURATION1__DOWNSPREAD   
 *
 * @BRIEF        Forces the clock spreading only in the down spectrum. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_SSC_CONFIGURATION1__DOWNSPREAD   BITFIELD(2, 2)
#define PLLCTRL__PLL_SSC_CONFIGURATION1__DOWNSPREAD__POS 2

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_SSC_CONFIGURATION1__MOD_TYPE   
 *
 * @BRIEF        Spread Spectrum Clockiing modulation type - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_SSC_CONFIGURATION1__MOD_TYPE     BITFIELD(1, 1)
#define PLLCTRL__PLL_SSC_CONFIGURATION1__MOD_TYPE__POS 1

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_SSC_CONFIGURATION1__EN_SSC   
 *
 * @BRIEF        Spread Spectrum Clockiing enable - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_SSC_CONFIGURATION1__EN_SSC       BITFIELD(0, 0)
#define PLLCTRL__PLL_SSC_CONFIGURATION1__EN_SSC__POS  0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_SSC_CONFIGURATION2__MODFREQDIVIDER   
 *
 * @BRIEF        Modulation Frequency Divider control for dithering. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_SSC_CONFIGURATION2__MODFREQDIVIDER BITFIELD(29, 20)
#define PLLCTRL__PLL_SSC_CONFIGURATION2__MODFREQDIVIDER__POS 20

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_SSC_CONFIGURATION2__DELTAM   
 *
 * @BRIEF        DeltaM control for dithering - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_SSC_CONFIGURATION2__DELTAM       BITFIELD(19, 0)
#define PLLCTRL__PLL_SSC_CONFIGURATION2__DELTAM__POS  0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_CONFIGURATION4__PLL_REGM2   
 *
 * @BRIEF        M2 divider to configure HDMIPLL.REGM2 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_CONFIGURATION4__PLL_REGM2        BITFIELD(24, 18)
#define PLLCTRL__PLL_CONFIGURATION4__PLL_REGM2__POS   18

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_CONFIGURATION4__PLL_REGM_F   
 *
 * @BRIEF        Fractional part of M divider. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_CONFIGURATION4__PLL_REGM_F       BITFIELD(17, 0)
#define PLLCTRL__PLL_CONFIGURATION4__PLL_REGM_F__POS  0

    /* 
     * List of register bitfields values for component PLLCTRL
     *
     */

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_CONTROL__HSDIV_SYSRESET__HSDIV_OP
 *
 * @BRIEF        HSDIVIDER SYSRESET controlled by power FSM - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_CONTROL__HSDIV_SYSRESET__HSDIV_OP 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_CONTROL__HSDIV_SYSRESET__HSDIV_SYSRST_ACT
 *
 * @BRIEF        HSDIVIDER SYSRESET forced active - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_CONTROL__HSDIV_SYSRESET__HSDIV_SYSRST_ACT 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_CONTROL__PLL_SYSRESET__PLL_OP
 *
 * @BRIEF        PLL SYSRESET controlled by power FSM - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_CONTROL__PLL_SYSRESET__PLL_OP    0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_CONTROL__PLL_SYSRESET__PLL_SYSRST_ACT
 *
 * @BRIEF        PLL SYSRESET forced active - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_CONTROL__PLL_SYSRESET__PLL_SYSRST_ACT 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_CONTROL__PLL_HALTMODE__PLL_RUN
 *
 * @BRIEF        PLL will not be halted - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_CONTROL__PLL_HALTMODE__PLL_RUN   0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_CONTROL__PLL_HALTMODE__PLL_HALT
 *
 * @BRIEF        PLL will be halted based on activity - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_CONTROL__PLL_HALTMODE__PLL_HALT  0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_CONTROL__PLL_GATEMODE__DSIPHY_CLK_ACT
 *
 * @BRIEF        DSIPHY clock on - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_CONTROL__PLL_GATEMODE__DSIPHY_CLK_ACT 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_CONTROL__PLL_GATEMODE__DSIPHY_CLK_GATE
 *
 * @BRIEF        DSIPHY clock gated by DSI Protocol Engine activity - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_CONTROL__PLL_GATEMODE__DSIPHY_CLK_GATE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_CONTROL__PLL_AUTOMODE__MAN_MODE
 *
 * @BRIEF        Manual mode - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_CONTROL__PLL_AUTOMODE__MAN_MODE  0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_CONTROL__PLL_AUTOMODE__AUTO_MODE
 *
 * @BRIEF        Automatic mode - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_CONTROL__PLL_AUTOMODE__AUTO_MODE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_STATUS__SSC_EN_ACK__SSC_INACT
 *
 * @BRIEF        Spread Spectrum Clocking inactive - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_STATUS__SSC_EN_ACK__SSC_INACT    0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_STATUS__SSC_EN_ACK__SSC_ACT
 *
 * @BRIEF        Spread Spectrum Clocking active - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_STATUS__SSC_EN_ACK__SSC_ACT      0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_STATUS__M7_CLOCK_ACK__M7_CLK_INACT
 *
 * @BRIEF        M7 clock inactive - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_STATUS__M7_CLOCK_ACK__M7_CLK_INACT 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_STATUS__M7_CLOCK_ACK__M7_CLK_ACT
 *
 * @BRIEF        M7 clock active - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_STATUS__M7_CLOCK_ACK__M7_CLK_ACT 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_STATUS__M6_CLOCK_ACK__M6_CLK_INACT
 *
 * @BRIEF        M6 clock inactive - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_STATUS__M6_CLOCK_ACK__M6_CLK_INACT 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_STATUS__M6_CLOCK_ACK__M6_CLK_ACT
 *
 * @BRIEF        M6 clock active - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_STATUS__M6_CLOCK_ACK__M6_CLK_ACT 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_STATUS__BYPASSACKZ__BYPASS_ACK
 *
 * @BRIEF        DSIPHY/HDMIPHY and HSDIVIDER have switched to using the 
 *               bypass clocks. - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_STATUS__BYPASSACKZ__BYPASS_ACK   0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_STATUS__BYPASSACKZ__BYPASS_NAK
 *
 * @BRIEF        PLL outputs are still being used by DSIPHY or HSDIVIDER - 
 *               (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_STATUS__BYPASSACKZ__BYPASS_NAK   0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_STATUS__M5_CLOCK_ACK__M5_CLK_INACT
 *
 * @BRIEF        M5 Protocol Engine clock inactive - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_STATUS__M5_CLOCK_ACK__M5_CLK_INACT 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_STATUS__M5_CLOCK_ACK__M5_CLK_ACT
 *
 * @BRIEF        M5 Protocol Engine clock active - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_STATUS__M5_CLOCK_ACK__M5_CLK_ACT 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_STATUS__M4_CLOCK_ACK__M4_CLK_INACT
 *
 * @BRIEF        M4 clock inactive - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_STATUS__M4_CLOCK_ACK__M4_CLK_INACT 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_STATUS__M4_CLOCK_ACK__M4_CLK_ACT
 *
 * @BRIEF        M4 clock active - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_STATUS__M4_CLOCK_ACK__M4_CLK_ACT 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_STATUS__PLL_BYPASS__BYPASS_IN
 *
 * @BRIEF        PLL not bypassing - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_STATUS__PLL_BYPASS__BYPASS_IN    0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_STATUS__PLL_BYPASS__BYPASS_ACT
 *
 * @BRIEF        PLL bypass - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_STATUS__PLL_BYPASS__BYPASS_ACT   0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_STATUS__PLL_HIGHJITTER__NORMAL_JITTER
 *
 * @BRIEF        PLL in normal jitter condition 
 *                - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_STATUS__PLL_HIGHJITTER__NORMAL_JITTER 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_STATUS__PLL_HIGHJITTER__HIGH_JIITTER
 *
 * @BRIEF        PLL in high jitter condition: 
 *               Phase error > 24% - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_STATUS__PLL_HIGHJITTER__HIGH_JIITTER 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_STATUS__PLL_LIMP__LIMP_INACT
 *
 * @BRIEF        LIMP mode inactive - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_STATUS__PLL_LIMP__LIMP_INACT     0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_STATUS__PLL_LIMP__LIMP_ACT
 *
 * @BRIEF        LIMP mode active - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_STATUS__PLL_LIMP__LIMP_ACT       0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_STATUS__PLL_LOSSREF__REF_INP_ACT
 *
 * @BRIEF        Reference input active - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_STATUS__PLL_LOSSREF__REF_INP_ACT 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_STATUS__PLL_LOSSREF__REF_INP_INACT
 *
 * @BRIEF        Reference input inactive - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_STATUS__PLL_LOSSREF__REF_INP_INACT 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_STATUS__PLL_RECAL__RECAL_NOT_REQUIRED
 *
 * @BRIEF        Recalibration is not required - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_STATUS__PLL_RECAL__RECAL_NOT_REQUIRED 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_STATUS__PLL_RECAL__RECAL_REQUIRED
 *
 * @BRIEF        Recalibration is required - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_STATUS__PLL_RECAL__RECAL_REQUIRED 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_STATUS__PLL_LOCK__DSI_PLL_NOLOCK
 *
 * @BRIEF        PLL is not locked - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_STATUS__PLL_LOCK__DSI_PLL_NOLOCK 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_STATUS__PLL_LOCK__DSI_PLL_LOCK
 *
 * @BRIEF        PLL is locked - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_STATUS__PLL_LOCK__DSI_PLL_LOCK   0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_STATUS__PLLCTRL_RESET_DONE__NOTRD
 *
 * @BRIEF        Reset is in progress - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_STATUS__PLLCTRL_RESET_DONE__NOTRD 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_STATUS__PLLCTRL_RESET_DONE__RDONE
 *
 * @BRIEF        Reset has completed - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_STATUS__PLLCTRL_RESET_DONE__RDONE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_GO__PLL_GO__DONE
 *
 * @BRIEF        No pending action - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_GO__PLL_GO__DONE                 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_GO__PLL_GO__GO
 *
 * @BRIEF        Request PLL (re-)locking/locking pending - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_GO__PLL_GO__GO                   0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_CONFIGURATION1__PLL_STOPMODE__STOP_NOTSEL
 *
 * @BRIEF        STOPMODE is not selected - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_CONFIGURATION1__PLL_STOPMODE__STOP_NOTSEL 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_CONFIGURATION1__PLL_STOPMODE__STOP_SEL
 *
 * @BRIEF        STOPMODE is selected - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_CONFIGURATION1__PLL_STOPMODE__STOP_SEL 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_CONFIGURATION2__M7_CLOCK_PWDN__M7_CLK_ACT
 *
 * @BRIEF        M7 clock divider is active - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_CONFIGURATION2__M7_CLOCK_PWDN__M7_CLK_ACT 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_CONFIGURATION2__M7_CLOCK_PWDN__M7_CLK_PWDN
 *
 * @BRIEF        M7 clock divider is powered-down - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_CONFIGURATION2__M7_CLOCK_PWDN__M7_CLK_PWDN 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_CONFIGURATION2__M7_CLOCK_EN__M7_CLK_DIS
 *
 * @BRIEF        M7 clock divider is disbled - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_CONFIGURATION2__M7_CLOCK_EN__M7_CLK_DIS 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_CONFIGURATION2__M7_CLOCK_EN__M7_CLK_EN
 *
 * @BRIEF        M7 clock divider is enabled - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_CONFIGURATION2__M7_CLOCK_EN__M7_CLK_EN 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_CONFIGURATION2__M6_CLOCK_PWDN__M6_CLK_ACT
 *
 * @BRIEF        M6 clock divider is active - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_CONFIGURATION2__M6_CLOCK_PWDN__M6_CLK_ACT 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_CONFIGURATION2__M6_CLOCK_PWDN__M6_CLK_PWDN
 *
 * @BRIEF        M6 clock divider is powered-down - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_CONFIGURATION2__M6_CLOCK_PWDN__M6_CLK_PWDN 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_CONFIGURATION2__M6_CLOCK_EN__M6_CLK_DIS
 *
 * @BRIEF        M6 clock divider is disbled - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_CONFIGURATION2__M6_CLOCK_EN__M6_CLK_DIS 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_CONFIGURATION2__M6_CLOCK_EN__M6_CLK_EN
 *
 * @BRIEF        M6 clock divider is enabled - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_CONFIGURATION2__M6_CLOCK_EN__M6_CLK_EN 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_CONFIGURATION2__REFSEL__REF_PCLK
 *
 * @BRIEF        Select PCLK reference - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_CONFIGURATION2__REFSEL__REF_PCLK 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_CONFIGURATION2__REFSEL__REF_1
 *
 * @BRIEF        Select REF1 reference - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_CONFIGURATION2__REFSEL__REF_1    0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_CONFIGURATION2__REFSEL__REF_2
 *
 * @BRIEF        Select REF2 Reference - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_CONFIGURATION2__REFSEL__REF_2    0x2ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_CONFIGURATION2__REFSEL__REF_SYSCLK
 *
 * @BRIEF        Select SYSCLK reference - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_CONFIGURATION2__REFSEL__REF_SYSCLK 0x3ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_CONFIGURATION2__HSDIVBYPASS__HSDIV_NORMAL
 *
 * @BRIEF        HSDIVIDER in normal operation.  Bypass controlled by PLL. - 
 *               (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_CONFIGURATION2__HSDIVBYPASS__HSDIV_NORMAL 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_CONFIGURATION2__HSDIVBYPASS__HSDIV_FORCE_BYP
 *
 * @BRIEF        HSDIVIDER forced to bypass mode. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_CONFIGURATION2__HSDIVBYPASS__HSDIV_FORCE_BYP 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_CONFIGURATION2__M5_CLOCK_PWDN__DSIPROTO_CLK_ACT
 *
 * @BRIEF        DSI Protocol Engine clock divider is active - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_CONFIGURATION2__M5_CLOCK_PWDN__DSIPROTO_CLK_ACT 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_CONFIGURATION2__M5_CLOCK_PWDN__DSIPROTO_CLK_PWDN
 *
 * @BRIEF        DSI Protocol Engine clock divider is powered-down - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_CONFIGURATION2__M5_CLOCK_PWDN__DSIPROTO_CLK_PWDN 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_CONFIGURATION2__M5_CLOCK_EN__DSIPROTO_CLK_DIS
 *
 * @BRIEF        DSI Protocol Engine clock divider is disabled - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_CONFIGURATION2__M5_CLOCK_EN__DSIPROTO_CLK_DIS 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_CONFIGURATION2__M5_CLOCK_EN__DSIPROTO_CLK_EN
 *
 * @BRIEF        DSI Protocol Engine clock divider is enabled - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_CONFIGURATION2__M5_CLOCK_EN__DSIPROTO_CLK_EN 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_CONFIGURATION2__M4_CLOCK_PWDN__DSS_CLK_ACT
 *
 * @BRIEF        DSS clock divider is active - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_CONFIGURATION2__M4_CLOCK_PWDN__DSS_CLK_ACT 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_CONFIGURATION2__M4_CLOCK_PWDN__DSS_CLK_PWDN
 *
 * @BRIEF        DSS clock divider is powered-down - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_CONFIGURATION2__M4_CLOCK_PWDN__DSS_CLK_PWDN 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_CONFIGURATION2__M4_CLOCK_EN__DSS_CLK_DIS
 *
 * @BRIEF        DSS clock divider is disbled - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_CONFIGURATION2__M4_CLOCK_EN__DSS_CLK_DIS 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_CONFIGURATION2__M4_CLOCK_EN__DSS_CLK_EN
 *
 * @BRIEF        DSS clock divider is enabled - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_CONFIGURATION2__M4_CLOCK_EN__DSS_CLK_EN 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_CONFIGURATION2__BYPASSEN__CLK_PLL
 *
 * @BRIEF        PLL controls DSIPHY clock source: 
 *               PLL DCO if PLL is locked 
 *               DSS functional clock if not locked - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_CONFIGURATION2__BYPASSEN__CLK_PLL 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_CONFIGURATION2__BYPASSEN__CLK_BYPASS
 *
 * @BRIEF        Force DSS functional clock to be used as  DSIPHY clock 
 *               source - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_CONFIGURATION2__BYPASSEN__CLK_BYPASS 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_CONFIGURATION2__PHY_CLKINEN__DSIPHY_CLK_DIS
 *
 * @BRIEF        DSIPHY clock is disabled - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_CONFIGURATION2__PHY_CLKINEN__DSIPHY_CLK_DIS 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_CONFIGURATION2__PHY_CLKINEN__DSIPHY_CLK_EN
 *
 * @BRIEF        DSIPHY clock is enabled - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_CONFIGURATION2__PHY_CLKINEN__DSIPHY_CLK_EN 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_CONFIGURATION2__PLL_REFEN__REF_DIS
 *
 * @BRIEF        PLL reference clock disabled - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_CONFIGURATION2__PLL_REFEN__REF_DIS 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_CONFIGURATION2__PLL_REFEN__REF_EN
 *
 * @BRIEF        PLL reference clock enabled - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_CONFIGURATION2__PLL_REFEN__REF_EN 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_CONFIGURATION2__PLL_HIGHFREQ__DIV_BY_1
 *
 * @BRIEF        Pixel clock is not divided - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_CONFIGURATION2__PLL_HIGHFREQ__DIV_BY_1 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_CONFIGURATION2__PLL_HIGHFREQ__DIV_BY_2
 *
 * @BRIEF        Pixel clock is divided by 2 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_CONFIGURATION2__PLL_HIGHFREQ__DIV_BY_2 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_CONFIGURATION2__PLL_CLKSEL__SYSCLK_REF
 *
 * @BRIEF        Selects SYSCLK as PLL reference clock - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_CONFIGURATION2__PLL_CLKSEL__SYSCLK_REF 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_CONFIGURATION2__PLL_CLKSEL__PCLK_REF
 *
 * @BRIEF        Selects Pixel Clock (PCLK) as PLL reference clock - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_CONFIGURATION2__PLL_CLKSEL__PCLK_REF 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_CONFIGURATION2__PLL_LOCKSEL__PHASELOCK
 *
 * @BRIEF        Phase Lock - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_CONFIGURATION2__PLL_LOCKSEL__PHASELOCK 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_CONFIGURATION2__PLL_LOCKSEL__FREQLOCK
 *
 * @BRIEF        Frequency Lock - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_CONFIGURATION2__PLL_LOCKSEL__FREQLOCK 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_CONFIGURATION2__PLL_LOCKSEL__SPARE
 *
 * @BRIEF        Spare - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_CONFIGURATION2__PLL_LOCKSEL__SPARE 0x2ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_CONFIGURATION2__PLL_DRIFTGUARDEN__DRIFT_GUARD_DIS
 *
 * @BRIEF        Only RECAL flag is asserted in case of temperature drift. 
 *               The programmer should take appropriate action. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_CONFIGURATION2__PLL_DRIFTGUARDEN__DRIFT_GUARD_DIS 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_CONFIGURATION2__PLL_DRIFTGUARDEN__DRIFT_GUARD_EN
 *
 * @BRIEF        Temperature drift will initiate automatic recalibration. 
 *               RECAL flag will be asserted while this is taking place. - 
 *               (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_CONFIGURATION2__PLL_DRIFTGUARDEN__DRIFT_GUARD_EN 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_CONFIGURATION2__PLL_LOWCURRSTBY__LOWCURRSTBY_NOTSEL
 *
 * @BRIEF        LOWCURRSTBY is not selected - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_CONFIGURATION2__PLL_LOWCURRSTBY__LOWCURRSTBY_NOTSEL 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_CONFIGURATION2__PLL_LOWCURRSTBY__LOWCURRSTBY_SEL
 *
 * @BRIEF        LOWCURRSTBY is selected - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_CONFIGURATION2__PLL_LOWCURRSTBY__LOWCURRSTBY_SEL 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_CONFIGURATION2__PLL_PLLLPMODE__FULL_PERF
 *
 * @BRIEF        Full performance, minimised jitter - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_CONFIGURATION2__PLL_PLLLPMODE__FULL_PERF 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_CONFIGURATION2__PLL_PLLLPMODE__REDUCE_PERF
 *
 * @BRIEF        Reduced power, increased jitter - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_CONFIGURATION2__PLL_PLLLPMODE__REDUCE_PERF 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_CONFIGURATION2__PLL_IDLE__IDLE_NOTSEL
 *
 * @BRIEF        IDLE is not selected - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_CONFIGURATION2__PLL_IDLE__IDLE_NOTSEL 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_CONFIGURATION2__PLL_IDLE__IDLE_SEL
 *
 * @BRIEF        IDLE is selected - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_CONFIGURATION2__PLL_IDLE__IDLE_SEL 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_SSC_CONFIGURATION1__DOWNSPREAD__NOTFORCED
 *
 * @BRIEF        Clock spreading not forced. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_SSC_CONFIGURATION1__DOWNSPREAD__NOTFORCED 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_SSC_CONFIGURATION1__DOWNSPREAD__FORCEDOWN
 *
 * @BRIEF        Spectrum spreading only in down direction. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_SSC_CONFIGURATION1__DOWNSPREAD__FORCEDOWN 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_SSC_CONFIGURATION1__MOD_TYPE__SSC_MOD
 *
 * @BRIEF        Spread Spectrum Clocking triangular modulation - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_SSC_CONFIGURATION1__MOD_TYPE__SSC_MOD 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_SSC_CONFIGURATION1__MOD_TYPE__DITHER_MOD
 *
 * @BRIEF        Dither trapezoizal modulation - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_SSC_CONFIGURATION1__MOD_TYPE__DITHER_MOD 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_SSC_CONFIGURATION1__EN_SSC__SSC_OFF
 *
 * @BRIEF        Spread Spectrum Clockiing disabled - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_SSC_CONFIGURATION1__EN_SSC__SSC_OFF 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   PLLCTRL__PLL_SSC_CONFIGURATION1__EN_SSC__SSC_ON
 *
 * @BRIEF        Spread Spectrum Clockiing enabled - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define PLLCTRL__PLL_SSC_CONFIGURATION1__EN_SSC__SSC_ON 0x1ul

#ifdef __cplusplus
}
#endif
#endif                                                     /* __PLLCTRL_CRED_H 
                                                            */

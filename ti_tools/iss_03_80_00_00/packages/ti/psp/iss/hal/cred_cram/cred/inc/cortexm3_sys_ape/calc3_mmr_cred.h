/** ==================================================================
 *  @file   calc3_mmr_cred.h                                                  
 *                                                                    
 *  @path   /ti/psp/iss/hal/cred_cram/cred/inc/cortexm3_sys_ape/                                                  
 *                                                                    
 *  @desc   This  File contains.                                      
 * ===================================================================
 *  Copyright (c) Texas Instruments Inc 2011, 2012                    
 *                                                                    
 *  Use of this software is controlled by the terms and conditions found
 *  in the license agreement under which this software has been supplied
 * ===================================================================*/

/* ============================================================================ 
 * TEXAS INSTRUMENTS INCORPORATED PROPRIETARY INFORMATION Property of Texas
 * Instruments For Unrestricted Internal Use Only Unauthorized reproduction
 * and/or distribution is strictly prohibited.  This product is protected
 * under copyright law and trade secret law as an unpublished work.  Created
 * 2008, (C) Copyright 2008 Texas Instruments.  All rights reserved. */

/**
 *  @Component:   CALC3_MMR
 *
 *  @Filename:    calc3_mmr_cred.h
 *
 *  @Description: Component description is not available
 *
 *  Generated by: Socrates CRED generator prototype
 *
    *//* ====================================================================== */

#ifndef __CALC3_MMR_CRED_H
#define __CALC3_MMR_CRED_H

#ifdef __cplusplus
extern "C" {
#endif

    /* 
     * Instance CALC3_CFG__MMR of component CALC3_MMR mapped in MONICA at address 0x5A058000
     */

                                                                              /*-------------------------------------------------------------------------*//**
 * @DEFINITION   BITFIELD
 *
 * @BRIEF        The bitfield must be defined according to register width
 *               of the component - 64/32/16/8
 *
    *//*------------------------------------------------------------------------ */
#undef BITFIELD
#define BITFIELD BITFIELD_32

    /* 
     *  List of Register arrays for component CALC3_MMR
     *
     */

    /* 
     *  List of bundle arrays for component CALC3_MMR
     *
     */

    /* 
     *  List of bundles for component CALC3_MMR
     *
     */

    /* 
     * List of registers for component CALC3_MMR
     *
     */

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CALC3_MMR__CALC_PID
 *
 * @BRIEF        CALC3 PID register 
 *
    *//*------------------------------------------------------------------------ */
#define CALC3_MMR__CALC_PID                                0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CALC3_MMR__CALC_COUNT
 *
 * @BRIEF        CALC3 cycle counter register 
 *
    *//*------------------------------------------------------------------------ */
#define CALC3_MMR__CALC_COUNT                              0x4ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CALC3_MMR__CALC_CTRL
 *
 * @BRIEF        CALC3 control register 
 *
    *//*------------------------------------------------------------------------ */
#define CALC3_MMR__CALC_CTRL                               0x8ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CALC3_MMR__CALC_TEST
 *
 * @BRIEF        CALC3 test register 
 *               It is only for debug purpose. 
 *
    *//*------------------------------------------------------------------------ */
#define CALC3_MMR__CALC_TEST                               0xCul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CALC3_MMR__CALC_MODE
 *
 * @BRIEF        CALC3 mode select register 
 *
    *//*------------------------------------------------------------------------ */
#define CALC3_MMR__CALC_MODE                               0x10ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CALC3_MMR__CALC_FWDQ_RND_INTRA
 *
 * @BRIEF        CALC3 forward quantiation's rounding coefficients and shift 
 *               offsets for intra MB 
 *
    *//*------------------------------------------------------------------------ */
#define CALC3_MMR__CALC_FWDQ_RND_INTRA                     0x14ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CALC3_MMR__CALC_FWDQ_RND_INTER
 *
 * @BRIEF        CALC3 forward quantiation's rounding coefficients and shift 
 *               offsets for inter MB 
 *
    *//*------------------------------------------------------------------------ */
#define CALC3_MMR__CALC_FWDQ_RND_INTER                     0x18ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CALC3_MMR__CALC_VP7_MB_FEATURE_DATA_3
 *
 * @BRIEF        It is a pre-assigned parameter register for the 
 *               destination pitch of VP7, which is defined as 
 *               MbFeatureData[3][0-3] 
 *               in the frame header. For other codecs, it is reserved. 
 *
    *//*------------------------------------------------------------------------ */
#define CALC3_MMR__CALC_VP7_MB_FEATURE_DATA_3              0x1Cul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CALC3_MMR__CALC_FWDQ_RND_INTRA_DC
 *
 * @BRIEF        Round offset value setting for fwd Q, intra and DC 
 *               coefficient. 
 *
    *//*------------------------------------------------------------------------ */
#define CALC3_MMR__CALC_FWDQ_RND_INTRA_DC                  0x20ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CALC3_MMR__CALC_FWDQ_RND_INTER_DC
 *
 * @BRIEF        Round offset value setting for fwd Q, inter and DC 
 *               coefficient. 
 *
    *//*------------------------------------------------------------------------ */
#define CALC3_MMR__CALC_FWDQ_RND_INTER_DC                  0x24ul

    /* 
     * List of register bitfields for component CALC3_MMR
     *
     */

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CALC3_MMR__CALC_PID__CALC_SCHEME   
 *
 * @BRIEF        Bitfield description is not available - (RO)
 *
    *//*------------------------------------------------------------------------ */
#define CALC3_MMR__CALC_PID__CALC_SCHEME              BITFIELD(31, 30)
#define CALC3_MMR__CALC_PID__CALC_SCHEME__POS         30

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CALC3_MMR__CALC_PID__CALC_FUNC   
 *
 * @BRIEF        Bitfield description is not available - (RO)
 *
    *//*------------------------------------------------------------------------ */
#define CALC3_MMR__CALC_PID__CALC_FUNC                BITFIELD(27, 16)
#define CALC3_MMR__CALC_PID__CALC_FUNC__POS           16

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CALC3_MMR__CALC_PID__CALC_RTLVERSION   
 *
 * @BRIEF        Bitfield description is not available - (RO)
 *
    *//*------------------------------------------------------------------------ */
#define CALC3_MMR__CALC_PID__CALC_RTLVERSION          BITFIELD(15, 11)
#define CALC3_MMR__CALC_PID__CALC_RTLVERSION__POS     11

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CALC3_MMR__CALC_PID__CALC_MAJORREVISION   
 *
 * @BRIEF        Bitfield description is not available - (RO)
 *
    *//*------------------------------------------------------------------------ */
#define CALC3_MMR__CALC_PID__CALC_MAJORREVISION       BITFIELD(10, 8)
#define CALC3_MMR__CALC_PID__CALC_MAJORREVISION__POS  8

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CALC3_MMR__CALC_PID__CALC_CUSTOM   
 *
 * @BRIEF        Bitfield description is not available - (RO)
 *
    *//*------------------------------------------------------------------------ */
#define CALC3_MMR__CALC_PID__CALC_CUSTOM              BITFIELD(7, 6)
#define CALC3_MMR__CALC_PID__CALC_CUSTOM__POS         6

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CALC3_MMR__CALC_PID__CALC_MINERRIVISION   
 *
 * @BRIEF        Bitfield description is not available - (RO)
 *
    *//*------------------------------------------------------------------------ */
#define CALC3_MMR__CALC_PID__CALC_MINERRIVISION       BITFIELD(5, 0)
#define CALC3_MMR__CALC_PID__CALC_MINERRIVISION__POS  0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CALC3_MMR__CALC_COUNT__CALC_CE   
 *
 * @BRIEF        Cycle Counter enable 
 *               [1] : active  
 *               [0] : non active - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CALC3_MMR__CALC_COUNT__CALC_CE                BITFIELD(31, 31)
#define CALC3_MMR__CALC_COUNT__CALC_CE__POS           31

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CALC3_MMR__CALC_COUNT__CALC_CRST   
 *
 * @BRIEF        Counter Reset  
 *               [1] : Reset counter 
 *               [0] : No effect - (WO) 
 *
    *//*------------------------------------------------------------------------ */
#define CALC3_MMR__CALC_COUNT__CALC_CRST              BITFIELD(30, 30)
#define CALC3_MMR__CALC_COUNT__CALC_CRST__POS         30

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CALC3_MMR__CALC_COUNT__CALC_COUNT   
 *
 * @BRIEF        Cycle Counter 
 *               16-bit counter. 
 *               Cycle counter is increasing during CALC_EN = 1 in CALC_CTRL. 
 *               It reflects the counter value. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define CALC3_MMR__CALC_COUNT__CALC_COUNT             BITFIELD(15, 0)
#define CALC3_MMR__CALC_COUNT__CALC_COUNT__POS        0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CALC3_MMR__CALC_CTRL__CALC_EN   
 *
 * @BRIEF        CALC3 Module status and start bit 
 *               Write [0] : Ignored    Write [1] : Start CALC3 module 
 *               Read [0] : Idle        Read [1] : Busy - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CALC3_MMR__CALC_CTRL__CALC_EN                 BITFIELD(0, 0)
#define CALC3_MMR__CALC_CTRL__CALC_EN__POS            0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CALC3_MMR__CALC_TEST__CALC_CMD_OPECNT   
 *
 * @BRIEF        MB counter register for MBAFF mode 
 *               For H.264 MBAFF, this status bit is used for CALC3 core and 
 *               command wrapper. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define CALC3_MMR__CALC_TEST__CALC_CMD_OPECNT         BITFIELD(24, 24)
#define CALC3_MMR__CALC_TEST__CALC_CMD_OPECNT__POS    24

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CALC3_MMR__CALC_TEST__CALC_CMD_MNG_DIS   
 *
 * @BRIEF        CALC3 command wrapper function of data management (e.g., 
 *               neighboring pixel copying) disable flag. 
 *               [0] : Command wrapper's data management enable. 
 *               [1] : Command wrapper's data management disable. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CALC3_MMR__CALC_TEST__CALC_CMD_MNG_DIS        BITFIELD(13, 13)
#define CALC3_MMR__CALC_TEST__CALC_CMD_MNG_DIS__POS   13

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CALC3_MMR__CALC_TEST__CALC_CMD_GEN_DIS   
 *
 * @BRIEF        CALC3 command wrapper function of CALC3 core specific 
 *               command generation disable flag. 
 *               [0] : Command wrapper's its generation function enable. 
 *               [1] : Command wrapper's its generation function disable. - 
 *               (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CALC3_MMR__CALC_TEST__CALC_CMD_GEN_DIS        BITFIELD(12, 12)
#define CALC3_MMR__CALC_TEST__CALC_CMD_GEN_DIS__POS   12

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CALC3_MMR__CALC_TEST__CALC_2ND_MB_DIS   
 *
 * @BRIEF        CALC3 2nd Mb disable flag ( it is effective only for MBAFF ) 
 *               [1] : 2nd Mb operation for MBAFF is disable for CALC3 core 
 *               and command wrapper 
 *               [0] : 2nd Mb operation for MBAFF is enable for CALC3 core 
 *               and command wrapper - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CALC3_MMR__CALC_TEST__CALC_2ND_MB_DIS         BITFIELD(6, 6)
#define CALC3_MMR__CALC_TEST__CALC_2ND_MB_DIS__POS    6

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CALC3_MMR__CALC_TEST__CALC_TIT_DIS   
 *
 * @BRIEF        CALC3 transform function disable flag 
 *               [1] : Transform function is skipped in CALC3 core 
 *               [0] : Transform function is enable in CALC3 core - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CALC3_MMR__CALC_TEST__CALC_TIT_DIS            BITFIELD(5, 5)
#define CALC3_MMR__CALC_TEST__CALC_TIT_DIS__POS       5

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CALC3_MMR__CALC_TEST__CALC_QIQ_DIS   
 *
 * @BRIEF        CALC3 QIQ function disable flag 
 *               [1] : QIQ function is skipped in CALC3 core 
 *               [0] : QIQ function is enable in CALC3 core - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CALC3_MMR__CALC_TEST__CALC_QIQ_DIS            BITFIELD(4, 4)
#define CALC3_MMR__CALC_TEST__CALC_QIQ_DIS__POS       4

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CALC3_MMR__CALC_TEST__CALC_CORE_DIS   
 *
 * @BRIEF        CALC3 core disable flag. 
 *               [0] : CALC core enable 
 *               [1] : CALC core disable - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CALC3_MMR__CALC_TEST__CALC_CORE_DIS           BITFIELD(0, 0)
#define CALC3_MMR__CALC_TEST__CALC_CORE_DIS__POS      0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CALC3_MMR__CALC_MODE__CALC_H263_ANNEXI   
 *
 * @BRIEF        H.263 AnnexI mode set flag 
 *               It is effective for H.263 dec only. 
 *               [0] : H263 Annex I configuration disable  
 *               for CALC3 core 
 *               [1] : H263 Annex I configuration enable for CALC3 core - 
 *               (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CALC3_MMR__CALC_MODE__CALC_H263_ANNEXI        BITFIELD(31, 31)
#define CALC3_MMR__CALC_MODE__CALC_H263_ANNEXI__POS   31

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CALC3_MMR__CALC_MODE__CALC_MPEG4_QUANT_TYPE   
 *
 * @BRIEF        MPEG4 QuantType set flag 
 *               It is effective for MPEG4 only. 
 *               [0] : QuantType = 0 
 *               [1] : QuantType = 1 
 *               It is set for the quantization manner, H.263 like (quantType 
 *               = 0) or MPEG like(quantType = 1). 
 *               Based on the current syntax, user shall set it. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CALC3_MMR__CALC_MODE__CALC_MPEG4_QUANT_TYPE   BITFIELD(30, 30)
#define CALC3_MMR__CALC_MODE__CALC_MPEG4_QUANT_TYPE__POS 30

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CALC3_MMR__CALC_MODE__CALC_VC1_NONUNIQUANT   
 *
 * @BRIEF        VC1 NonUniformQuantize set flag 
 *               It is effective for VC1 only  
 *               [0] : Uniform Quantize 
 *               [1] : NonUniform Quantize 
 *               It is set for the quantization manner, uniform or nonuniform 
 *               for VC1. 
 *               Based on the current syntax, user shall set it. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CALC3_MMR__CALC_MODE__CALC_VC1_NONUNIQUANT    BITFIELD(29, 29)
#define CALC3_MMR__CALC_MODE__CALC_VC1_NONUNIQUANT__POS 29

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CALC3_MMR__CALC_MODE__CALC_VC1_DC_DEF_NONZERO   
 *
 * @BRIEF        VC1 DcDefaultNonZero set flag 
 *               It is effective for VC1 only. 
 *               [0] : DcDefault = 0 
 *               [1] : DcDefault != 0 
 *               It is set for the DC default value for the DC prediction for 
 *               VC1. 
 *               if( Simple or Main Profile && Ipicture && NoOverlap) 
 *               set to 1 
 *               else 
 *               set to 0 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CALC3_MMR__CALC_MODE__CALC_VC1_DC_DEF_NONZERO BITFIELD(28, 28)
#define CALC3_MMR__CALC_MODE__CALC_VC1_DC_DEF_NONZERO__POS 28

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CALC3_MMR__CALC_MODE__CALC_CODEC_TYPE   
 *
 * @BRIEF        Codec type set register 
 *               [0] : JPEG 
 *               [1] : MPEG1 
 *               [2] : MPEG2 
 *               [3] : H.263 
 *               [4] : MPEG4 
 *               [5] : VC1 
 *               [6] : H.264 
 *               [7] : AVS1.0 
 *               [8] : Real Video 
 *               [9] : On2Vp6 
 *               [10] : On2Vp7 
 *               [11-15]: Reserved 
 *               For MPEG4 and shortVideoHeader=1, set H.263 mode. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CALC3_MMR__CALC_MODE__CALC_CODEC_TYPE         BITFIELD(27, 24)
#define CALC3_MMR__CALC_MODE__CALC_CODEC_TYPE__POS    24

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CALC3_MMR__CALC_MODE__CALC_CBPCNT0_INTER_EN   
 *
 * @BRIEF        CBPControl #0 enable flag for Inter Block 
 *               [0] : disable 
 *               [1] : enable 
 *               It is effective for enc only. 
 *               For an 8x8 block (w/o DcTransform) and its block of inter, 
 *               if all the non-zero coeffs among quantized 64 coeffs are 
 *               less than one in abs domain and the number of the ones 
 *               coeffs <= threshold_0, this corresponded CBP sets to zero, 
 *               where threshold_0 = CALC_CBPCNT0_INTER_THR + 1. 
 *               Its threshold of threshold_0 can be set in the 
 *               CALC_CBPCNT0_INTER_THR register. 
 *               Note that the abs one coefficients does not turn to zero in 
 *               the residual data, the CBP is only controlled to zero. - 
 *               (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CALC3_MMR__CALC_MODE__CALC_CBPCNT0_INTER_EN   BITFIELD(23, 23)
#define CALC3_MMR__CALC_MODE__CALC_CBPCNT0_INTER_EN__POS 23

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CALC3_MMR__CALC_MODE__CALC_CBPCNT0_LUMA_DCTRANS_EN   
 *
 * @BRIEF        CBPControl #0 enable flag for Luma DC Trans mode 
 *               [0] : disable 
 *               [1] : enable 
 *               It is effective for enc and DC transform used in Luma 16x16 
 *               block. 
 *               When DcTransform is effective for Luma and this flag = 1, if 
 *               all the non-zero coeffs among quantized 60 AC coeffs (w/o 
 *               4DC coeffs) in an 8x8 luma block are one in abs domain and 
 *               the number of ones coeffs is less than threshold_1, this 
 *               corresponded CBP sets to zero, where threshold_1 = 
 *               CALC_CBPCNT0_LUMA_DCTRANS_THR + 1. 
 *               Its threshold of threshold_1 can be set in the 
 *               CALC_CBPCNT0_LUMA_DCTRANS_THR register. 
 *               Note that the abs one coefficients are not turns to zero in 
 *               the residual data, the CBP is only controlled to zero. - 
 *               (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CALC3_MMR__CALC_MODE__CALC_CBPCNT0_LUMA_DCTRANS_EN BITFIELD(22, 22)
#define CALC3_MMR__CALC_MODE__CALC_CBPCNT0_LUMA_DCTRANS_EN__POS 22

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CALC3_MMR__CALC_MODE__CALC_CBPCNT0_CHRO_DCTRANS_EN   
 *
 * @BRIEF        CBPControl #0 enable flag for Chroma DC Trans mode 
 *               [0] : disable 
 *               [1] : enable 
 *               It is effective for enc and DC transform used in Cb and Cr 
 *               blocks. 
 *               When DcTransform is effective for Cb/Cr and this flag = 1, 
 *               if all the non-zero coeffs among quantized 60 AC coeffs (w/o 
 *               4DC coeffs) in the 8x8 block are one in abs domain and the 
 *               number of ones coeffs is less than threshold_2, this 
 *               corresponded CBP sets to zero, , where threshold_2 = 
 *               CALC_CBPCNT0_CHRO_DCTRANS_THR + 1. 
 *               Its threshold of threshold_2 is set in the 
 *               CALC_CBPCNT0_CHRO_DCTRANS_THR register. 
 *               Note that the abs one coefficients are not turns to zero in 
 *               the residual data, the CBP is only controlled to zero. - 
 *               (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CALC3_MMR__CALC_MODE__CALC_CBPCNT0_CHRO_DCTRANS_EN BITFIELD(21, 21)
#define CALC3_MMR__CALC_MODE__CALC_CBPCNT0_CHRO_DCTRANS_EN__POS 21

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CALC3_MMR__CALC_MODE__CALC_CBPCNT0_INTER_THR   
 *
 * @BRIEF        # of abs ones coeffs threshold for CALC_CBPCNT0_INTER_EN 
 *               It is effective for CALC_CBPCNT0_INTER_EN = 1 
 *               [0] : threshold_0 = 1 
 *               [1] : threshold_0 = 2 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CALC3_MMR__CALC_MODE__CALC_CBPCNT0_INTER_THR  BITFIELD(20, 20)
#define CALC3_MMR__CALC_MODE__CALC_CBPCNT0_INTER_THR__POS 20

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CALC3_MMR__CALC_MODE__CALC_CBPCNT0_LUMA_DCTRANS_THR   
 *
 * @BRIEF        # of abs ones coeffs threshold for 
 *               CALC_CBPCNT0_LUMA_DCTRANS_EN 
 *               It is effective for CALC_CBPCNT0_LUMA_DCTRANS_EN = 1 
 *               [0] : threshold_1 = 1 
 *               [1] : threshold_1 = 2 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CALC3_MMR__CALC_MODE__CALC_CBPCNT0_LUMA_DCTRANS_THR BITFIELD(19, 19)
#define CALC3_MMR__CALC_MODE__CALC_CBPCNT0_LUMA_DCTRANS_THR__POS 19

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CALC3_MMR__CALC_MODE__CALC_CBPCNT0_CHRO_DCTRANS_THR   
 *
 * @BRIEF        # of abs ones coeffs threshold for 
 *               CALC_CBPCNT0_CHRO_DCTRANS_EN 
 *               It is effective for CALC_CBPCNT0_CHRO_DCTRANS_EN = 1 
 *               [0] : threshold_2 = 1 
 *               [1] : threshold_2 = 2 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CALC3_MMR__CALC_MODE__CALC_CBPCNT0_CHRO_DCTRANS_THR BITFIELD(18, 18)
#define CALC3_MMR__CALC_MODE__CALC_CBPCNT0_CHRO_DCTRANS_THR__POS 18

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CALC3_MMR__CALC_MODE__CALC_CBPCNT1_EN   
 *
 * @BRIEF        CBP Control #1 enable flag 
 *               [0] : OFF 
 *               [1] : ON 
 *               It is effective for enc 
 *               If all the inverse transformed coefficients are zeros in the 
 *               transformed size, the corresponded CBP controls to zero. 
 *               Note that the abs one coefficients are not turns to zero in 
 *               the residual data, the CBP is only controlled to zero. - 
 *               (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CALC3_MMR__CALC_MODE__CALC_CBPCNT1_EN         BITFIELD(17, 17)
#define CALC3_MMR__CALC_MODE__CALC_CBPCNT1_EN__POS    17

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CALC3_MMR__CALC_MODE__CALC_ENC   
 *
 * @BRIEF        Enc or Dec mode flag 
 *               [0] : Dec 
 *               [1] : Enc 
 *               Note that a part of codecs is supported only for dec. 
 *               RealVideo, VP6/7, H.263 AnnexI mode are supported only for 
 *               dec. 
 *               Enc mode is reserved for them. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CALC3_MMR__CALC_MODE__CALC_ENC                BITFIELD(16, 16)
#define CALC3_MMR__CALC_MODE__CALC_ENC__POS           16

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CALC3_MMR__CALC_MODE__CALC_MPEG2_QSCLTYPE   
 *
 * @BRIEF        q_scale_type of MPEG2 set register for command wrapper. 
 *               It is effective for MPEG2. 
 *               [0] : q_scale_type = 0 
 *               [1] : q_scale_type = 1 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CALC3_MMR__CALC_MODE__CALC_MPEG2_QSCLTYPE     BITFIELD(15, 15)
#define CALC3_MMR__CALC_MODE__CALC_MPEG2_QSCLTYPE__POS 15

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CALC3_MMR__CALC_MODE__CALC_MPEG2_INTRADCPREC   
 *
 * @BRIEF        intra_dc_precision of MPEG2 set register for command 
 *               wrapper. 
 *               It is effective for MPEG1 and MPEG2. 
 *               [0] : intra_dc_precision = 0 
 *               [1] : intra_dc_precision = 1 
 *               [2] : intra_dc_precision = 2 
 *               [3] : intra_dc_precision = 3 
 *               For MPEG1, it shall be set to zero. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CALC3_MMR__CALC_MODE__CALC_MPEG2_INTRADCPREC  BITFIELD(14, 13)
#define CALC3_MMR__CALC_MODE__CALC_MPEG2_INTRADCPREC__POS 13

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CALC3_MMR__CALC_MODE__CALC_ACPRED_DIS   
 *
 * @BRIEF        AC prediction disable flag for command wrapper. 
 *               It is effecitve for MPEG4 and VC1 enc. 
 *               [0] : AC prediction estimation enable for enc 
 *               [1] : AC prediction estimation disable for enc 
 *               Note that H.263 AnnexI enc not support. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CALC3_MMR__CALC_MODE__CALC_ACPRED_DIS         BITFIELD(12, 12)
#define CALC3_MMR__CALC_MODE__CALC_ACPRED_DIS__POS    12

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CALC3_MMR__CALC_MODE__CALC_H264_CONST_INTRA   
 *
 * @BRIEF        Constraint intra set of H264 flag for command wrapper. 
 *               It is effective for H.264. 
 *               [0] : Non constraint intra 
 *               [1] : constraint intra - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CALC3_MMR__CALC_MODE__CALC_H264_CONST_INTRA   BITFIELD(11, 11)
#define CALC3_MMR__CALC_MODE__CALC_H264_CONST_INTRA__POS 11

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CALC3_MMR__CALC_MODE__CALC_PICTCODINGTYPE   
 *
 * @BRIEF        Picture coding type set register for command wrapper 
 *               [0] : I Picture 
 *               [1] : P Picture 
 *               [2] : B Picture 
 *               [3] : Reserved. 
 *               It is effective for VC1 and RealVideo. 
 *               For VC1, it defines DcPrediction manner. 
 *               For RV8, it defines quantization parameter for the inverse 
 *               quantization of Dc Transformed coefficient. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CALC3_MMR__CALC_MODE__CALC_PICTCODINGTYPE     BITFIELD(10, 9)
#define CALC3_MMR__CALC_MODE__CALC_PICTCODINGTYPE__POS 9

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CALC3_MMR__CALC_MODE__CALC_RECON_16BIT_EN   
 *
 * @BRIEF        Reconstruct format flag 
 *               [0] : 8bits mode 
 *               [1] : 16bits mode 
 *               For VC1 application, it shall be always set to one. 
 *               Even for an inter block, CALC3 outputs the reconst data in 
 *               16-bit format for its flag of 1.  
 *               We assume that the 8-bit clipping would be done in iLF3. 
 *               For other codecs, it shall be set to zero. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CALC3_MMR__CALC_MODE__CALC_RECON_16BIT_EN     BITFIELD(8, 8)
#define CALC3_MMR__CALC_MODE__CALC_RECON_16BIT_EN__POS 8

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CALC3_MMR__CALC_MODE__CALC_VC1_PROFILE   
 *
 * @BRIEF        VC1 Profile register for command wrapper 
 *               [0] : Simple  
 *               [1] : Main 
 *               [2] : Advanced 
 *               [3] : Reserved 
 *               It is effective for VC1, since DcPrediction manner is 
 *               defined by it. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CALC3_MMR__CALC_MODE__CALC_VC1_PROFILE        BITFIELD(7, 6)
#define CALC3_MMR__CALC_MODE__CALC_VC1_PROFILE__POS   6

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CALC3_MMR__CALC_MODE__CALC_SORENSON_EN   
 *
 * @BRIEF        Sorenson Spark setting regiseter. 
 *               When CALC_CODEC_TYPE = 3 (H.263) and this flag = 1, then, it 
 *               becomes Sorenson Spark mode. 
 *               For this flag = 1, CALC_H263_ANNEXI shall be set to zero. - 
 *               (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CALC3_MMR__CALC_MODE__CALC_SORENSON_EN        BITFIELD(5, 5)
#define CALC3_MMR__CALC_MODE__CALC_SORENSON_EN__POS   5

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CALC3_MMR__CALC_MODE__CALC_JPG_FORMAT   
 *
 * @BRIEF        JPEG color mode setting regiseter. 
 *               It is effective for JPEG. 
 *               [0] : 4:4:4 (1 MCU mode) 
 *               [1] : 4:4:4 (2 MCU mode) 
 *               [2] : 4:2:2 (H0=2 V0=1) 
 *               [3] : 4:2:2 (H0=1 V0=2) 
 *               [4] : 4:2:0 
 *               [5] : Reserved 
 *               [6] : 4:0:0 
 *               [7] : Reserved - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CALC3_MMR__CALC_MODE__CALC_JPG_FORMAT         BITFIELD(4, 2)
#define CALC3_MMR__CALC_MODE__CALC_JPG_FORMAT__POS    2

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CALC3_MMR__CALC_MODE__CALC_PICT_STRUCT   
 *
 * @BRIEF        Picture Structure setting register 
 *               [0] : Frame structure 
 *               [1] : Field structure 
 *               [2] : MBAFF (MbPair sequence) 
 *               [3] : Reserved 
 *               Field structure mode shall be set for interlace field 
 *               picture. 
 *               MBAFF mode shall be set for H.264 MBAFF picture. 
 *               Frame structure mode shall be set for others. 
 *               Note that CALC3 handles top and bottom MBs simultaneously 
 *               with one start pulse for AFF mode.  
 *               With one start pulse, CALC3 handles only one MB except for 
 *               MBAFF mode. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CALC3_MMR__CALC_MODE__CALC_PICT_STRUCT        BITFIELD(1, 0)
#define CALC3_MMR__CALC_MODE__CALC_PICT_STRUCT__POS   0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CALC3_MMR__CALC_FWDQ_RND_INTRA__CALC_Q_RND_COEF_INTRA   
 *
 * @BRIEF        Forward quantiation's rounding coefficients for intra MB. 
 *               Hence, for intra MB and fwdQ, Round Coefficient AC[0] = this 
 *               bit field by command wrapper (Signed 25-bit). - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CALC3_MMR__CALC_FWDQ_RND_INTRA__CALC_Q_RND_COEF_INTRA BITFIELD(31, 7)
#define CALC3_MMR__CALC_FWDQ_RND_INTRA__CALC_Q_RND_COEF_INTRA__POS 7

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CALC3_MMR__CALC_FWDQ_RND_INTRA__CALC_Q_SHIFT_ADJ_INTRA   
 *
 * @BRIEF        It can be applicable for weight matrix used codecs' 
 *               encoding. 
 *               If user would like to apply a non-default intra weight 
 *               matrix and its element is less than that of default value, 
 *               then the user shall set it. Otherwise, zero shall be set. 
 *               Forward Q shift adjustment for inter macroblock. 
 *               (Signed 4bits, valid for MPEG1/2, MPEG4 quantType=1, H.264, 
 *               = q_shift_adj[0] for command wrapper). - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CALC3_MMR__CALC_FWDQ_RND_INTRA__CALC_Q_SHIFT_ADJ_INTRA BITFIELD(3, 0)
#define CALC3_MMR__CALC_FWDQ_RND_INTRA__CALC_Q_SHIFT_ADJ_INTRA__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CALC3_MMR__CALC_FWDQ_RND_INTER__CALC_Q_RND_COEF_INTER   
 *
 * @BRIEF        Forward quantiation's rounding coefficients for inter MB. 
 *               Hence, for inter MB and fwdQ, Round Coefficient AC[0] = this 
 *               bit field  by command wrapper (Table 22/23) (Signed 25-bit). 
 *               - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CALC3_MMR__CALC_FWDQ_RND_INTER__CALC_Q_RND_COEF_INTER BITFIELD(31, 7)
#define CALC3_MMR__CALC_FWDQ_RND_INTER__CALC_Q_RND_COEF_INTER__POS 7

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CALC3_MMR__CALC_FWDQ_RND_INTER__CALC_Q_SHIFT_ADJ_INTER   
 *
 * @BRIEF        It can be applicable for weight matrix used codecs' 
 *               encoding. 
 *               If user would like to apply a non-default inter weight 
 *               matrix and its element is less than that of default value, 
 *               then the user shall set it. Otherwise, zero shall be set. 
 *               Forward Q shift adjustment for inter macroblock. 
 *               (Signed 4bits, valid for MPEG1/2, MPEG4 quantType=1, H.264, 
 *               = q_shift_adj[1] for command wrapper). - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CALC3_MMR__CALC_FWDQ_RND_INTER__CALC_Q_SHIFT_ADJ_INTER BITFIELD(3, 0)
#define CALC3_MMR__CALC_FWDQ_RND_INTER__CALC_Q_SHIFT_ADJ_INTER__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CALC3_MMR__CALC_VP7_MB_FEATURE_DATA_3__MBFEATUREDATA_3_3   
 *
 * @BRIEF        MbFeatureData[MB_LVL_PF=3][3] is set to this register. - 
 *               (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CALC3_MMR__CALC_VP7_MB_FEATURE_DATA_3__MBFEATUREDATA_3_3 BITFIELD(31, 24)
#define CALC3_MMR__CALC_VP7_MB_FEATURE_DATA_3__MBFEATUREDATA_3_3__POS 24

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CALC3_MMR__CALC_VP7_MB_FEATURE_DATA_3__MBFEATUREDATA_3_2   
 *
 * @BRIEF        MbFeatureData[MB_LVL_PF=3][2] is set to this register. - 
 *               (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CALC3_MMR__CALC_VP7_MB_FEATURE_DATA_3__MBFEATUREDATA_3_2 BITFIELD(23, 16)
#define CALC3_MMR__CALC_VP7_MB_FEATURE_DATA_3__MBFEATUREDATA_3_2__POS 16

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CALC3_MMR__CALC_VP7_MB_FEATURE_DATA_3__MBFEATUREDATA_3_1   
 *
 * @BRIEF        MbFeatureData[MB_LVL_PF=3][1] is set to this register. - 
 *               (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CALC3_MMR__CALC_VP7_MB_FEATURE_DATA_3__MBFEATUREDATA_3_1 BITFIELD(15, 8)
#define CALC3_MMR__CALC_VP7_MB_FEATURE_DATA_3__MBFEATUREDATA_3_1__POS 8

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CALC3_MMR__CALC_VP7_MB_FEATURE_DATA_3__MBFEATUREDATA_3_0   
 *
 * @BRIEF        MbFeatureData[MB_LVL_PF=3][0] is set to this register. - 
 *               (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CALC3_MMR__CALC_VP7_MB_FEATURE_DATA_3__MBFEATUREDATA_3_0 BITFIELD(7, 0)
#define CALC3_MMR__CALC_VP7_MB_FEATURE_DATA_3__MBFEATUREDATA_3_0__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CALC3_MMR__CALC_FWDQ_RND_INTRA_DC__CALC_Q_RND_COEF_INTRA_DC   
 *
 * @BRIEF        Forward quantiation's rounding coefficients for intra MB and 
 *               its DC coefficients. 
 *               Hence, for intra MB, fwdQ and DC coefficients,  
 *               FwdQ uses it as its rounding coefficient. 
 *               Fwd Round Coefficient DC[0] = this bit field by command 
 *               wrapper(Table. 21/22)(Signed 25-bit). - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CALC3_MMR__CALC_FWDQ_RND_INTRA_DC__CALC_Q_RND_COEF_INTRA_DC BITFIELD(31, 7)
#define CALC3_MMR__CALC_FWDQ_RND_INTRA_DC__CALC_Q_RND_COEF_INTRA_DC__POS 7

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CALC3_MMR__CALC_FWDQ_RND_INTER_DC__CALC_Q_RND_COEF_INTER_DC   
 *
 * @BRIEF        Forward quantiation's rounding coefficients for inter MB and 
 *               its DC coefficients. 
 *               Hence, for inter MB, fwdQ and DC coefficients,  
 *               FwdQ uses it as its rounding coefficient. 
 *               Round Coefficient DC[0] = this bit field (Table. 21/22) 
 *               (Signed 25-bit). - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CALC3_MMR__CALC_FWDQ_RND_INTER_DC__CALC_Q_RND_COEF_INTER_DC BITFIELD(31, 7)
#define CALC3_MMR__CALC_FWDQ_RND_INTER_DC__CALC_Q_RND_COEF_INTER_DC__POS 7

    /* 
     * List of register bitfields values for component CALC3_MMR
     *
     */

#ifdef __cplusplus
}
#endif
#endif                                                     /* __CALC3_MMR_CRED_H 
                                                            */

/** ==================================================================
 *  @file   restore_cm1_cred.h                                                  
 *                                                                    
 *  @path   /ti/psp/iss/hal/cred_cram/cred/inc/cortexm3_sys_ape/                                                  
 *                                                                    
 *  @desc   This  File contains.                                      
 * ===================================================================
 *  Copyright (c) Texas Instruments Inc 2011, 2012                    
 *                                                                    
 *  Use of this software is controlled by the terms and conditions found
 *  in the license agreement under which this software has been supplied
 * ===================================================================*/

/* ============================================================================ 
 * TEXAS INSTRUMENTS INCORPORATED PROPRIETARY INFORMATION Property of Texas
 * Instruments For Unrestricted Internal Use Only Unauthorized reproduction
 * and/or distribution is strictly prohibited.  This product is protected
 * under copyright law and trade secret law as an unpublished work.  Created
 * 2008, (C) Copyright 2008 Texas Instruments.  All rights reserved. */

/**
 *  @Component:   RESTORE_CM1
 *
 *  @Filename:    restore_cm1_cred.h
 *
 *  @Description: Component description is not available
 *
 *  Generated by: Socrates CRED generator prototype
 *
    *//* ====================================================================== */

#ifndef __RESTORE_CM1_CRED_H
#define __RESTORE_CM1_CRED_H

#ifdef __cplusplus
extern "C" {
#endif

    /* 
     * Instance RESTORE_CM1 of component RESTORE_CM1 mapped in MONICA at address 0x4A004E00
     */

                                                                              /*-------------------------------------------------------------------------*//**
 * @DEFINITION   BITFIELD
 *
 * @BRIEF        The bitfield must be defined according to register width
 *               of the component - 64/32/16/8
 *
    *//*------------------------------------------------------------------------ */
#undef BITFIELD
#define BITFIELD BITFIELD_32

    /* 
     *  List of Register arrays for component RESTORE_CM1
     *
     */

    /* 
     *  List of bundle arrays for component RESTORE_CM1
     *
     */

    /* 
     *  List of bundles for component RESTORE_CM1
     *
     */

    /* 
     * List of registers for component RESTORE_CM1
     *
     */

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_CLKSEL_CORE_RESTORE
 *
 * @BRIEF        Second address map for register CM_CLKSEL_CORE. 
 *               Used only by automatic restore upon wakeup from device OFF 
 *               mode. 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_CLKSEL_CORE_RESTORE                0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_DIV_M2_DPLL_CORE_RESTORE
 *
 * @BRIEF        Second address map for register CM_DIV_M2_DPLL_CORE. 
 *               Used only by automatic restore upon wakeup from device OFF 
 *               mode. 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_DIV_M2_DPLL_CORE_RESTORE           0x4ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_DIV_M3_DPLL_CORE_RESTORE
 *
 * @BRIEF        Second address map for register CM_DIV_M3_DPLL_CORE. 
 *               Used only by automatic restore upon wakeup from device OFF 
 *               mode. 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_DIV_M3_DPLL_CORE_RESTORE           0x8ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_DIV_M4_DPLL_CORE_RESTORE
 *
 * @BRIEF        Second address map for register CM_DIV_M4_DPLL_CORE. 
 *               Used only by automatic restore upon wakeup from device OFF 
 *               mode. 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_DIV_M4_DPLL_CORE_RESTORE           0xCul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_DIV_M5_DPLL_CORE_RESTORE
 *
 * @BRIEF        Second address map for register CM_DIV_M5_DPLL_CORE. 
 *               Used only by automatic restore upon wakeup from device OFF 
 *               mode. 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_DIV_M5_DPLL_CORE_RESTORE           0x10ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_DIV_M6_DPLL_CORE_RESTORE
 *
 * @BRIEF        Second address map for register CM_DIV_M6_DPLL_CORE. 
 *               Used only by automatic restore upon wakeup from device OFF 
 *               mode. 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_DIV_M6_DPLL_CORE_RESTORE           0x14ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_DIV_M7_DPLL_CORE_RESTORE
 *
 * @BRIEF        Second address map for register CM_DIV_M7_DPLL_CORE. 
 *               Used only by automatic restore upon wakeup from device OFF 
 *               mode. 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_DIV_M7_DPLL_CORE_RESTORE           0x18ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_CLKSEL_DPLL_CORE_RESTORE
 *
 * @BRIEF        Second address map for register CM_CLKSEL_DPLL_CORE. 
 *               Used only by automatic restore upon wakeup from device OFF 
 *               mode. 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_CLKSEL_DPLL_CORE_RESTORE           0x1Cul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_SSC_DELTAMSTEP_DPLL_CORE_RESTORE
 *
 * @BRIEF        Second address map for register CM_SSC_DELTAMSTEP_DPLL_CORE. 
 *               Used only by automatic restore upon wakeup from device OFF 
 *               mode. 
 *               [warm reset insensitive] 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_SSC_DELTAMSTEP_DPLL_CORE_RESTORE   0x20ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_SSC_MODFREQDIV_DPLL_CORE_RESTORE
 *
 * @BRIEF        Second address map for register CM_SSC_MODFREQDIV_DPLL_CORE. 
 *               Used only by automatic restore upon wakeup from device OFF 
 *               mode. 
 *               [warm reset insensitive] 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_SSC_MODFREQDIV_DPLL_CORE_RESTORE   0x24ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_CLKMODE_DPLL_CORE_RESTORE
 *
 * @BRIEF        Second address map for register CM_CLKMODE_DPLL_CORE. 
 *               Used only by automatic restore upon wakeup from device OFF 
 *               mode. 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_CLKMODE_DPLL_CORE_RESTORE          0x28ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_SHADOW_FREQ_CONFIG2_RESTORE
 *
 * @BRIEF        Second address map for register CM_SHADOW_FREQ_CONFIG2. 
 *               Used only by automatic restore upon wakeup from device OFF 
 *               mode. 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_SHADOW_FREQ_CONFIG2_RESTORE        0x2Cul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_SHADOW_FREQ_CONFIG1_RESTORE
 *
 * @BRIEF        Second address map for register CM_SHADOW_FREQ_CONFIG1. 
 *               Used only by automatic restore upon wakeup from device OFF 
 *               mode. 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_SHADOW_FREQ_CONFIG1_RESTORE        0x30ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_AUTOIDLE_DPLL_CORE_RESTORE
 *
 * @BRIEF        Second address map for register CM_AUTOIDLE_DPLL_CORE. 
 *               Used only by automatic restore upon wakeup from device OFF 
 *               mode. 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_AUTOIDLE_DPLL_CORE_RESTORE         0x34ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_MPU_CLKSTCTRL_RESTORE
 *
 * @BRIEF        Second address map for register CM_MPU_CLKSTCTRL. 
 *               Used only by automatic restore upon wakeup from device OFF 
 *               mode. 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_MPU_CLKSTCTRL_RESTORE              0x38ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_CM1_PROFILING_CLKCTRL_RESTORE
 *
 * @BRIEF        Second address map for register CM_CM1_PROFILING_CLKCTRL. 
 *               Used only by automatic restore upon wakeup from device OFF 
 *               mode. 
 *               [warm reset insensitive] 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_CM1_PROFILING_CLKCTRL_RESTORE      0x3Cul

    /* 
     * List of register bitfields for component RESTORE_CM1
     *
     */

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_CLKSEL_CORE_RESTORE__CLKSEL_L4   
 *
 * @BRIEF        Selects L4 interconnect clock (L4_clk) - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_CLKSEL_CORE_RESTORE__CLKSEL_L4 BITFIELD(8, 8)
#define RESTORE_CM1__CM_CLKSEL_CORE_RESTORE__CLKSEL_L4__POS 8

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_CLKSEL_CORE_RESTORE__CLKSEL_L3   
 *
 * @BRIEF        Selects L3 interconnect clock (L3_clk) - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_CLKSEL_CORE_RESTORE__CLKSEL_L3 BITFIELD(4, 4)
#define RESTORE_CM1__CM_CLKSEL_CORE_RESTORE__CLKSEL_L3__POS 4

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_CLKSEL_CORE_RESTORE__CLKSEL_CORE   
 *
 * @BRIEF        Selects CORE_CLK configuration - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_CLKSEL_CORE_RESTORE__CLKSEL_CORE BITFIELD(0, 0)
#define RESTORE_CM1__CM_CLKSEL_CORE_RESTORE__CLKSEL_CORE__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_DIV_M2_DPLL_CORE_RESTORE__ST_DPLL_CLKOUT   
 *
 * @BRIEF        DPLL CLKOUT status - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_DIV_M2_DPLL_CORE_RESTORE__ST_DPLL_CLKOUT BITFIELD(9, 9)
#define RESTORE_CM1__CM_DIV_M2_DPLL_CORE_RESTORE__ST_DPLL_CLKOUT__POS 9

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_DIV_M2_DPLL_CORE_RESTORE__DPLL_CLKOUT_GATE_CTRL   
 *
 * @BRIEF        Control gating of DPLL CLKOUT - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_DIV_M2_DPLL_CORE_RESTORE__DPLL_CLKOUT_GATE_CTRL BITFIELD(8, 8)
#define RESTORE_CM1__CM_DIV_M2_DPLL_CORE_RESTORE__DPLL_CLKOUT_GATE_CTRL__POS 8

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_DIV_M2_DPLL_CORE_RESTORE__DPLL_CLKOUT_DIVCHACK   
 *
 * @BRIEF        Toggle on this status bit after changing DPLL_CLKOUT_DIV 
 *               indicates that the change in divider value has taken effect 
 *               - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_DIV_M2_DPLL_CORE_RESTORE__DPLL_CLKOUT_DIVCHACK BITFIELD(5, 5)
#define RESTORE_CM1__CM_DIV_M2_DPLL_CORE_RESTORE__DPLL_CLKOUT_DIVCHACK__POS 5

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_DIV_M2_DPLL_CORE_RESTORE__DPLL_CLKOUT_DIV   
 *
 * @BRIEF        DPLL M2 post-divider factor (1 to 31). - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_DIV_M2_DPLL_CORE_RESTORE__DPLL_CLKOUT_DIV BITFIELD(4, 0)
#define RESTORE_CM1__CM_DIV_M2_DPLL_CORE_RESTORE__DPLL_CLKOUT_DIV__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_DIV_M3_DPLL_CORE_RESTORE__ST_DPLL_CLKOUTHIF   
 *
 * @BRIEF        DPLL CLKOUTHIF status - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_DIV_M3_DPLL_CORE_RESTORE__ST_DPLL_CLKOUTHIF BITFIELD(9, 9)
#define RESTORE_CM1__CM_DIV_M3_DPLL_CORE_RESTORE__ST_DPLL_CLKOUTHIF__POS 9

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_DIV_M3_DPLL_CORE_RESTORE__DPLL_CLKOUTHIF_GATE_CTRL   
 *
 * @BRIEF        Control gating of DPLL CLKOUTHIF - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_DIV_M3_DPLL_CORE_RESTORE__DPLL_CLKOUTHIF_GATE_CTRL BITFIELD(8, 8)
#define RESTORE_CM1__CM_DIV_M3_DPLL_CORE_RESTORE__DPLL_CLKOUTHIF_GATE_CTRL__POS 8

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_DIV_M3_DPLL_CORE_RESTORE__DPLL_CLKOUTHIF_DIVCHACK   
 *
 * @BRIEF        Toggle on this status bit after changing DPLL_CLKOUTHIF_DIV 
 *               indicates that the change in divider value has taken effect 
 *               - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_DIV_M3_DPLL_CORE_RESTORE__DPLL_CLKOUTHIF_DIVCHACK BITFIELD(5, 5)
#define RESTORE_CM1__CM_DIV_M3_DPLL_CORE_RESTORE__DPLL_CLKOUTHIF_DIVCHACK__POS 5

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_DIV_M3_DPLL_CORE_RESTORE__DPLL_CLKOUTHIF_DIV   
 *
 * @BRIEF        DPLL M3 post-divider factor (1 to 31). - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_DIV_M3_DPLL_CORE_RESTORE__DPLL_CLKOUTHIF_DIV BITFIELD(4, 0)
#define RESTORE_CM1__CM_DIV_M3_DPLL_CORE_RESTORE__DPLL_CLKOUTHIF_DIV__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_DIV_M4_DPLL_CORE_RESTORE__HSDIVIDER_CLKOUT1_PWDN   
 *
 * @BRIEF        Automatic power down for HSDIVIDER M4 divider and hence 
 *               CLKOUT1 output when the o/p clock is gated. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_DIV_M4_DPLL_CORE_RESTORE__HSDIVIDER_CLKOUT1_PWDN BITFIELD(12, 12)
#define RESTORE_CM1__CM_DIV_M4_DPLL_CORE_RESTORE__HSDIVIDER_CLKOUT1_PWDN__POS 12

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_DIV_M4_DPLL_CORE_RESTORE__ST_HSDIVIDER_CLKOUT1   
 *
 * @BRIEF        HSDIVIDER CLKOUT1 status - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_DIV_M4_DPLL_CORE_RESTORE__ST_HSDIVIDER_CLKOUT1 BITFIELD(9, 9)
#define RESTORE_CM1__CM_DIV_M4_DPLL_CORE_RESTORE__ST_HSDIVIDER_CLKOUT1__POS 9

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_DIV_M4_DPLL_CORE_RESTORE__HSDIVIDER_CLKOUT1_GATE_CTRL   
 *
 * @BRIEF        Control gating of HSDIVIDER CLKOUT1 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_DIV_M4_DPLL_CORE_RESTORE__HSDIVIDER_CLKOUT1_GATE_CTRL BITFIELD(8, 8)
#define RESTORE_CM1__CM_DIV_M4_DPLL_CORE_RESTORE__HSDIVIDER_CLKOUT1_GATE_CTRL__POS 8

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_DIV_M4_DPLL_CORE_RESTORE__HSDIVIDER_CLKOUT1_DIVCHACK   
 *
 * @BRIEF        Toggle on this status bit after changing 
 *               HSDIVIDER_CLKOUT1_DIV indicates that the change in divider 
 *               value has taken effect - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_DIV_M4_DPLL_CORE_RESTORE__HSDIVIDER_CLKOUT1_DIVCHACK BITFIELD(5, 5)
#define RESTORE_CM1__CM_DIV_M4_DPLL_CORE_RESTORE__HSDIVIDER_CLKOUT1_DIVCHACK__POS 5

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_DIV_M4_DPLL_CORE_RESTORE__HSDIVIDER_CLKOUT1_DIV   
 *
 * @BRIEF        DPLL (M4+1) post-divider factor (1 to 31). - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_DIV_M4_DPLL_CORE_RESTORE__HSDIVIDER_CLKOUT1_DIV BITFIELD(4, 0)
#define RESTORE_CM1__CM_DIV_M4_DPLL_CORE_RESTORE__HSDIVIDER_CLKOUT1_DIV__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_DIV_M5_DPLL_CORE_RESTORE__HSDIVIDER_CLKOUT2_PWDN   
 *
 * @BRIEF        Automatic power down for HSDIVIDER M5 divider and hence 
 *               CLKOUT2 output when the o/p clock is gated. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_DIV_M5_DPLL_CORE_RESTORE__HSDIVIDER_CLKOUT2_PWDN BITFIELD(12, 12)
#define RESTORE_CM1__CM_DIV_M5_DPLL_CORE_RESTORE__HSDIVIDER_CLKOUT2_PWDN__POS 12

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_DIV_M5_DPLL_CORE_RESTORE__ST_HSDIVIDER_CLKOUT2   
 *
 * @BRIEF        HSDIVIDER CLKOUT2 status - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_DIV_M5_DPLL_CORE_RESTORE__ST_HSDIVIDER_CLKOUT2 BITFIELD(9, 9)
#define RESTORE_CM1__CM_DIV_M5_DPLL_CORE_RESTORE__ST_HSDIVIDER_CLKOUT2__POS 9

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_DIV_M5_DPLL_CORE_RESTORE__HSDIVIDER_CLKOUT2_GATE_CTRL   
 *
 * @BRIEF        Control gating of HSDIVIDER CLKOUT2 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_DIV_M5_DPLL_CORE_RESTORE__HSDIVIDER_CLKOUT2_GATE_CTRL BITFIELD(8, 8)
#define RESTORE_CM1__CM_DIV_M5_DPLL_CORE_RESTORE__HSDIVIDER_CLKOUT2_GATE_CTRL__POS 8

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_DIV_M5_DPLL_CORE_RESTORE__HSDIVIDER_CLKOUT2_DIVCHACK   
 *
 * @BRIEF        Toggle on this status bit after changing 
 *               HSDIVIDER_CLKOUT2_DIV indicates that the change in divider 
 *               value has taken effect - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_DIV_M5_DPLL_CORE_RESTORE__HSDIVIDER_CLKOUT2_DIVCHACK BITFIELD(5, 5)
#define RESTORE_CM1__CM_DIV_M5_DPLL_CORE_RESTORE__HSDIVIDER_CLKOUT2_DIVCHACK__POS 5

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_DIV_M5_DPLL_CORE_RESTORE__HSDIVIDER_CLKOUT2_DIV   
 *
 * @BRIEF        DPLL (M5+1) post-divider factor (1 to 31). - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_DIV_M5_DPLL_CORE_RESTORE__HSDIVIDER_CLKOUT2_DIV BITFIELD(4, 0)
#define RESTORE_CM1__CM_DIV_M5_DPLL_CORE_RESTORE__HSDIVIDER_CLKOUT2_DIV__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_DIV_M6_DPLL_CORE_RESTORE__HSDIVIDER_CLKOUT3_PWDN   
 *
 * @BRIEF        Automatic power down for HSDIVIDER M6 divider and hence 
 *               CLKOUT3 output when the o/p clock is gated. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_DIV_M6_DPLL_CORE_RESTORE__HSDIVIDER_CLKOUT3_PWDN BITFIELD(12, 12)
#define RESTORE_CM1__CM_DIV_M6_DPLL_CORE_RESTORE__HSDIVIDER_CLKOUT3_PWDN__POS 12

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_DIV_M6_DPLL_CORE_RESTORE__ST_HSDIVIDER_CLKOUT3   
 *
 * @BRIEF        HSDIVIDER CLKOUT3 status - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_DIV_M6_DPLL_CORE_RESTORE__ST_HSDIVIDER_CLKOUT3 BITFIELD(9, 9)
#define RESTORE_CM1__CM_DIV_M6_DPLL_CORE_RESTORE__ST_HSDIVIDER_CLKOUT3__POS 9

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_DIV_M6_DPLL_CORE_RESTORE__HSDIVIDER_CLKOUT3_GATE_CTRL   
 *
 * @BRIEF        Control gating of HSDIVIDER CLKOUT3 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_DIV_M6_DPLL_CORE_RESTORE__HSDIVIDER_CLKOUT3_GATE_CTRL BITFIELD(8, 8)
#define RESTORE_CM1__CM_DIV_M6_DPLL_CORE_RESTORE__HSDIVIDER_CLKOUT3_GATE_CTRL__POS 8

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_DIV_M6_DPLL_CORE_RESTORE__HSDIVIDER_CLKOUT3_DIVCHACK   
 *
 * @BRIEF        Toggle on this status bit after changing 
 *               HSDIVIDER_CLKOUT3_DIV indicates that the change in divider 
 *               value has taken effect - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_DIV_M6_DPLL_CORE_RESTORE__HSDIVIDER_CLKOUT3_DIVCHACK BITFIELD(5, 5)
#define RESTORE_CM1__CM_DIV_M6_DPLL_CORE_RESTORE__HSDIVIDER_CLKOUT3_DIVCHACK__POS 5

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_DIV_M6_DPLL_CORE_RESTORE__HSDIVIDER_CLKOUT3_DIV   
 *
 * @BRIEF        DPLL (M6+1) post-divider factor (1 to 31). - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_DIV_M6_DPLL_CORE_RESTORE__HSDIVIDER_CLKOUT3_DIV BITFIELD(4, 0)
#define RESTORE_CM1__CM_DIV_M6_DPLL_CORE_RESTORE__HSDIVIDER_CLKOUT3_DIV__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_DIV_M7_DPLL_CORE_RESTORE__HSDIVIDER_CLKOUT4_PWDN   
 *
 * @BRIEF        Automatic power down for HSDIVIDER M7 divider and hence 
 *               CLKOUT4 output when the o/p clock is gated. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_DIV_M7_DPLL_CORE_RESTORE__HSDIVIDER_CLKOUT4_PWDN BITFIELD(12, 12)
#define RESTORE_CM1__CM_DIV_M7_DPLL_CORE_RESTORE__HSDIVIDER_CLKOUT4_PWDN__POS 12

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_DIV_M7_DPLL_CORE_RESTORE__ST_HSDIVIDER_CLKOUT4   
 *
 * @BRIEF        HSDIVIDER CLKOUT4 status - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_DIV_M7_DPLL_CORE_RESTORE__ST_HSDIVIDER_CLKOUT4 BITFIELD(9, 9)
#define RESTORE_CM1__CM_DIV_M7_DPLL_CORE_RESTORE__ST_HSDIVIDER_CLKOUT4__POS 9

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_DIV_M7_DPLL_CORE_RESTORE__HSDIVIDER_CLKOUT4_GATE_CTRL   
 *
 * @BRIEF        Control gating of HSDIVIDER CLKOUT4 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_DIV_M7_DPLL_CORE_RESTORE__HSDIVIDER_CLKOUT4_GATE_CTRL BITFIELD(8, 8)
#define RESTORE_CM1__CM_DIV_M7_DPLL_CORE_RESTORE__HSDIVIDER_CLKOUT4_GATE_CTRL__POS 8

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_DIV_M7_DPLL_CORE_RESTORE__HSDIVIDER_CLKOUT4_DIVCHACK   
 *
 * @BRIEF        Toggle on this status bit after changing 
 *               HSDIVIDER_CLKOUT4_DIV indicates that the change in divider 
 *               value has taken effect - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_DIV_M7_DPLL_CORE_RESTORE__HSDIVIDER_CLKOUT4_DIVCHACK BITFIELD(5, 5)
#define RESTORE_CM1__CM_DIV_M7_DPLL_CORE_RESTORE__HSDIVIDER_CLKOUT4_DIVCHACK__POS 5

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_DIV_M7_DPLL_CORE_RESTORE__HSDIVIDER_CLKOUT4_DIV   
 *
 * @BRIEF        DPLL (M7+1) post-divider factor (1 to 31). - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_DIV_M7_DPLL_CORE_RESTORE__HSDIVIDER_CLKOUT4_DIV BITFIELD(4, 0)
#define RESTORE_CM1__CM_DIV_M7_DPLL_CORE_RESTORE__HSDIVIDER_CLKOUT4_DIV__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_CLKSEL_DPLL_CORE_RESTORE__DPLL_BYP_CLKSEL   
 *
 * @BRIEF        Allows control of the BYPASS clock of the PLL and the 
 *               associated HSDIVIDER. In case of a dedicated DDRPHY PLL and 
 *               HSDIVIDER to generate EMIF PHY clock, this register selects 
 *               the bypass clock source of that HSDIVIDER as well. 
 *               Same as ULOWCLKEN on DPLL.  
 *               In DPLL Locked mode,  
 *                 0 - No impact 
 *                 1 - No impact 
 *               In DPLL Bypass mode, 
 *                 0 - CLKINP is selected as the BYPASS clock for 
 *               CLKOUT/CLKOUTX2 
 *                 1 - CLKINPULOW is selected as the BYPASS clock for 
 *               CLKOUT/CLKOUTX2 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_CLKSEL_DPLL_CORE_RESTORE__DPLL_BYP_CLKSEL BITFIELD(23, 23)
#define RESTORE_CM1__CM_CLKSEL_DPLL_CORE_RESTORE__DPLL_BYP_CLKSEL__POS 23

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_CLKSEL_DPLL_CORE_RESTORE__DPLL_CLKOUTHIF_CLKSEL   
 *
 * @BRIEF        Selects the source of the DPLL CLKOUTHIF clock. Same as 
 *               CLKINPHIFSEL pin on the DPLL - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_CLKSEL_DPLL_CORE_RESTORE__DPLL_CLKOUTHIF_CLKSEL BITFIELD(20, 20)
#define RESTORE_CM1__CM_CLKSEL_DPLL_CORE_RESTORE__DPLL_CLKOUTHIF_CLKSEL__POS 20

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_CLKSEL_DPLL_CORE_RESTORE__DPLL_MULT   
 *
 * @BRIEF        DPLL multiplier factor (2 to 2047). This register is 
 *               automatically cleared to 0 when the DPLL_EN field in the 
 *               *CLKMODE_DPLL* register is set to select MN Bypass mode. 
 *               (equal to input M of DPLL; M=2 to 2047 => DPLL multiplies by 
 *               M). - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_CLKSEL_DPLL_CORE_RESTORE__DPLL_MULT BITFIELD(18, 8)
#define RESTORE_CM1__CM_CLKSEL_DPLL_CORE_RESTORE__DPLL_MULT__POS 8

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_CLKSEL_DPLL_CORE_RESTORE__DPLL_DIV   
 *
 * @BRIEF        DPLL divider factor (0 to 127) 
 *               (equal to input N of DPLL; actual division factor is N+1). - 
 *               (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_CLKSEL_DPLL_CORE_RESTORE__DPLL_DIV BITFIELD(6, 0)
#define RESTORE_CM1__CM_CLKSEL_DPLL_CORE_RESTORE__DPLL_DIV__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_SSC_DELTAMSTEP_DPLL_CORE_RESTORE__DELTAMSTEP   
 *
 * @BRIEF        DeltaMStep is split into fractional and integer part. 
 *               For Triangular Spread Spectrum: 
 *               [19:18] for integer part,  [17:0] for fractional part 
 *               For Square Wave Spread Spectrum 
 *               [19:14] for integer part,  [13:0] for fractional part - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_SSC_DELTAMSTEP_DPLL_CORE_RESTORE__DELTAMSTEP BITFIELD(19, 0)
#define RESTORE_CM1__CM_SSC_DELTAMSTEP_DPLL_CORE_RESTORE__DELTAMSTEP__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_SSC_MODFREQDIV_DPLL_CORE_RESTORE__MODFREQDIV_EXPONENT   
 *
 * @BRIEF        Set the Exponent component of MODFREQDIV factor - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_SSC_MODFREQDIV_DPLL_CORE_RESTORE__MODFREQDIV_EXPONENT BITFIELD(10, 8)
#define RESTORE_CM1__CM_SSC_MODFREQDIV_DPLL_CORE_RESTORE__MODFREQDIV_EXPONENT__POS 8

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_SSC_MODFREQDIV_DPLL_CORE_RESTORE__MODFREQDIV_MANTISSA   
 *
 * @BRIEF        Set the Mantissa component of MODFREQDIV factor - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_SSC_MODFREQDIV_DPLL_CORE_RESTORE__MODFREQDIV_MANTISSA BITFIELD(6, 0)
#define RESTORE_CM1__CM_SSC_MODFREQDIV_DPLL_CORE_RESTORE__MODFREQDIV_MANTISSA__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_CLKMODE_DPLL_CORE_RESTORE__DPLL_SSC_TYPE   
 *
 * @BRIEF        Select between Triangular and SquareWave Spread Spectrum 
 *               Clocking - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_CLKMODE_DPLL_CORE_RESTORE__DPLL_SSC_TYPE BITFIELD(15, 15)
#define RESTORE_CM1__CM_CLKMODE_DPLL_CORE_RESTORE__DPLL_SSC_TYPE__POS 15

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_CLKMODE_DPLL_CORE_RESTORE__DPLL_SSC_DOWNSPREAD   
 *
 * @BRIEF        Control if only low frequency spread is required - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_CLKMODE_DPLL_CORE_RESTORE__DPLL_SSC_DOWNSPREAD BITFIELD(14, 14)
#define RESTORE_CM1__CM_CLKMODE_DPLL_CORE_RESTORE__DPLL_SSC_DOWNSPREAD__POS 14

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_CLKMODE_DPLL_CORE_RESTORE__DPLL_SSC_ACK   
 *
 * @BRIEF        Acknowledgement from the DPLL regarding start and stop of 
 *               Spread Spectrum Clocking feature - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_CLKMODE_DPLL_CORE_RESTORE__DPLL_SSC_ACK BITFIELD(13, 13)
#define RESTORE_CM1__CM_CLKMODE_DPLL_CORE_RESTORE__DPLL_SSC_ACK__POS 13

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_CLKMODE_DPLL_CORE_RESTORE__DPLL_SSC_EN   
 *
 * @BRIEF        Enable or disable Spread Spectrum Clocking - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_CLKMODE_DPLL_CORE_RESTORE__DPLL_SSC_EN BITFIELD(12, 12)
#define RESTORE_CM1__CM_CLKMODE_DPLL_CORE_RESTORE__DPLL_SSC_EN__POS 12

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_CLKMODE_DPLL_CORE_RESTORE__DPLL_REGM4XEN   
 *
 * @BRIEF        Enable the REGM4XEN mode of the DPLL. Please check the DPLL 
 *               documentation to check when this mode can be enabled. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_CLKMODE_DPLL_CORE_RESTORE__DPLL_REGM4XEN BITFIELD(11, 11)
#define RESTORE_CM1__CM_CLKMODE_DPLL_CORE_RESTORE__DPLL_REGM4XEN__POS 11

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_CLKMODE_DPLL_CORE_RESTORE__DPLL_LPMODE_EN   
 *
 * @BRIEF        Set the DPLL in Low Power mode. Check the DPLL documentation 
 *               to see when this can be enabled. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_CLKMODE_DPLL_CORE_RESTORE__DPLL_LPMODE_EN BITFIELD(10, 10)
#define RESTORE_CM1__CM_CLKMODE_DPLL_CORE_RESTORE__DPLL_LPMODE_EN__POS 10

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_CLKMODE_DPLL_CORE_RESTORE__DPLL_RELOCK_RAMP_EN   
 *
 * @BRIEF        If enabled, the clock ramping feature is used applied during 
 *               the lock process, as well as the relock process.  
 *               If disabled, the clock ramping feature is used only during 
 *               the first lock. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_CLKMODE_DPLL_CORE_RESTORE__DPLL_RELOCK_RAMP_EN BITFIELD(9, 9)
#define RESTORE_CM1__CM_CLKMODE_DPLL_CORE_RESTORE__DPLL_RELOCK_RAMP_EN__POS 9

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_CLKMODE_DPLL_CORE_RESTORE__DPLL_DRIFTGUARD_EN   
 *
 * @BRIEF        This bit allows to enable or disable the automatic 
 *               recalibration feature of the DPLL. The DPLL 
 *               will automatically start a recalibration process upon 
 *               assertion of the DPLL's RECAL flag if this bit is set. - 
 *               (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_CLKMODE_DPLL_CORE_RESTORE__DPLL_DRIFTGUARD_EN BITFIELD(8, 8)
#define RESTORE_CM1__CM_CLKMODE_DPLL_CORE_RESTORE__DPLL_DRIFTGUARD_EN__POS 8

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_CLKMODE_DPLL_CORE_RESTORE__DPLL_RAMP_RATE   
 *
 * @BRIEF        Selects the time in terms of DPLL REFCLKs spent at each 
 *               stage of the clock ramping process - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_CLKMODE_DPLL_CORE_RESTORE__DPLL_RAMP_RATE BITFIELD(7, 5)
#define RESTORE_CM1__CM_CLKMODE_DPLL_CORE_RESTORE__DPLL_RAMP_RATE__POS 5

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_CLKMODE_DPLL_CORE_RESTORE__DPLL_RAMP_LEVEL   
 *
 * @BRIEF        The DPLL provides an output clock frequency ramping feature 
 *               when switching from bypass clock to normal clock during lock 
 *               and re-lock. The frequency ramping will happen in a maximum 
 *               of 4 steps in frequency before the DPLL's frequency lock 
 *               indicator is asserted. 
 *               This register is used to enable/disable the DPLL ramping 
 *               feature. If enabled, it is also used to select the algorithm 
 *               used for clock ramping - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_CLKMODE_DPLL_CORE_RESTORE__DPLL_RAMP_LEVEL BITFIELD(4, 3)
#define RESTORE_CM1__CM_CLKMODE_DPLL_CORE_RESTORE__DPLL_RAMP_LEVEL__POS 3

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_CLKMODE_DPLL_CORE_RESTORE__DPLL_EN   
 *
 * @BRIEF        DPLL control. Upon Warm Reset, the PRCM DPLL control state 
 *               machine updates this register to reflect MN Bypass mode. - 
 *               (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_CLKMODE_DPLL_CORE_RESTORE__DPLL_EN BITFIELD(2, 0)
#define RESTORE_CM1__CM_CLKMODE_DPLL_CORE_RESTORE__DPLL_EN__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_SHADOW_FREQ_CONFIG2_RESTORE__DPLL_CORE_M5_DIV   
 *
 * @BRIEF        Shadow register for 
 *               CM_DIV_M5_DPLL_CORE.HSDIVIDER_CLKOUT2_DIV. The main register 
 *               is automatically loaded with the shadow register value after 
 *               GPMC IDLE if the CM_SHADOW_FREQ_CONFIG1.FREQ_UPDATE field is 
 *               set to '1' and GPMC_FREQ_UPDATE is set to '1'. Divide value 
 *               from 1 to 31. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_SHADOW_FREQ_CONFIG2_RESTORE__DPLL_CORE_M5_DIV BITFIELD(7, 3)
#define RESTORE_CM1__CM_SHADOW_FREQ_CONFIG2_RESTORE__DPLL_CORE_M5_DIV__POS 3

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_SHADOW_FREQ_CONFIG2_RESTORE__CLKSEL_L3   
 *
 * @BRIEF        Shadow register for CM_CLKSEL_CORE.CLKSEL_L3. The main 
 *               register is automatically loaded with the shadow register 
 *               value after GPMC IDLE if the 
 *               CM_SHADOW_FREQ_CONFIG1.FREQ_UPDATE field is set to '1' and 
 *               GPMC_FREQ_UPDATE is set to '1'. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_SHADOW_FREQ_CONFIG2_RESTORE__CLKSEL_L3 BITFIELD(2, 2)
#define RESTORE_CM1__CM_SHADOW_FREQ_CONFIG2_RESTORE__CLKSEL_L3__POS 2

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_SHADOW_FREQ_CONFIG2_RESTORE__CLKSEL_CORE   
 *
 * @BRIEF        Shadow register for CM_CLKSEL_CORE.CLKSEL_CORE. The main 
 *               register is automatically loaded with the shadow register 
 *               value after GPMC IDLE if the 
 *               CM_SHADOW_FREQ_CONFIG1.FREQ_UPDATE field is set to '1' and 
 *               GPMC_FREQ_UPDATE is set to '1'. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_SHADOW_FREQ_CONFIG2_RESTORE__CLKSEL_CORE BITFIELD(1, 1)
#define RESTORE_CM1__CM_SHADOW_FREQ_CONFIG2_RESTORE__CLKSEL_CORE__POS 1

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_SHADOW_FREQ_CONFIG2_RESTORE__GPMC_FREQ_UPDATE   
 *
 * @BRIEF        Controls whether or not GPMC has to be put automatically 
 *               into idle during the frequency change operation. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_SHADOW_FREQ_CONFIG2_RESTORE__GPMC_FREQ_UPDATE BITFIELD(0, 0)
#define RESTORE_CM1__CM_SHADOW_FREQ_CONFIG2_RESTORE__GPMC_FREQ_UPDATE__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_SHADOW_FREQ_CONFIG1_RESTORE__DPLL_CORE_M2_DIV   
 *
 * @BRIEF        Shadow register for CM_DIV_M2_DPLL_CORE.DPLL_CLKOUT_DIV. The 
 *               main register is automatically loaded with the shadow 
 *               register value after EMIF IDLE if the FREQ_UPDATE field is 
 *               set to '1'. 
 *               Divide value from 1 to 31. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_SHADOW_FREQ_CONFIG1_RESTORE__DPLL_CORE_M2_DIV BITFIELD(15, 11)
#define RESTORE_CM1__CM_SHADOW_FREQ_CONFIG1_RESTORE__DPLL_CORE_M2_DIV__POS 11

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_SHADOW_FREQ_CONFIG1_RESTORE__DPLL_CORE_DPLL_EN   
 *
 * @BRIEF        Shadow register for CM_CLKMODE_DPLL_CORE.DPLL_EN. The main 
 *               register is automatically loaded with the shadow register 
 *               value after EMIF IDLE if the FREQ_UPDATE field is set to 
 *               '1'. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_SHADOW_FREQ_CONFIG1_RESTORE__DPLL_CORE_DPLL_EN BITFIELD(10, 8)
#define RESTORE_CM1__CM_SHADOW_FREQ_CONFIG1_RESTORE__DPLL_CORE_DPLL_EN__POS 8

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_SHADOW_FREQ_CONFIG1_RESTORE__DLL_RESET   
 *
 * @BRIEF        Specify if DLL should be reset or not during the frequency 
 *               change hardware sequence. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_SHADOW_FREQ_CONFIG1_RESTORE__DLL_RESET BITFIELD(3, 3)
#define RESTORE_CM1__CM_SHADOW_FREQ_CONFIG1_RESTORE__DLL_RESET__POS 3

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_SHADOW_FREQ_CONFIG1_RESTORE__DLL_OVERRIDE   
 *
 * @BRIEF        Shadow register for CM_DLL_CTRL.DLL_OVERRIDE.The main 
 *               register is automatically loaded with the shadow register 
 *               value after EMIF IDLE if the FREQ_UPDATE field is set to 
 *               '1'. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_SHADOW_FREQ_CONFIG1_RESTORE__DLL_OVERRIDE BITFIELD(2, 2)
#define RESTORE_CM1__CM_SHADOW_FREQ_CONFIG1_RESTORE__DLL_OVERRIDE__POS 2

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_SHADOW_FREQ_CONFIG1_RESTORE__FREQ_UPDATE   
 *
 * @BRIEF        Writing '1' indicates that a new configuration is available. 
 *               It is automatically cleared by h/w after the configuration 
 *               has been applied. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_SHADOW_FREQ_CONFIG1_RESTORE__FREQ_UPDATE BITFIELD(0, 0)
#define RESTORE_CM1__CM_SHADOW_FREQ_CONFIG1_RESTORE__FREQ_UPDATE__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_AUTOIDLE_DPLL_CORE_RESTORE__AUTO_DPLL_MODE   
 *
 * @BRIEF        DPLL automatic control. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_AUTOIDLE_DPLL_CORE_RESTORE__AUTO_DPLL_MODE BITFIELD(2, 0)
#define RESTORE_CM1__CM_AUTOIDLE_DPLL_CORE_RESTORE__AUTO_DPLL_MODE__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_MPU_CLKSTCTRL_RESTORE__CLKACTIVITY_MPU_DPLL_CLK   
 *
 * @BRIEF        This field indicates the state of the MPU_DPLL_CLK clock in 
 *               the domain. 
 *               [warm reset insensitive] - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_MPU_CLKSTCTRL_RESTORE__CLKACTIVITY_MPU_DPLL_CLK BITFIELD(8, 8)
#define RESTORE_CM1__CM_MPU_CLKSTCTRL_RESTORE__CLKACTIVITY_MPU_DPLL_CLK__POS 8

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_MPU_CLKSTCTRL_RESTORE__CLKTRCTRL   
 *
 * @BRIEF        Controls the clock state transition of the MPU clock domain. 
 *               - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_MPU_CLKSTCTRL_RESTORE__CLKTRCTRL BITFIELD(1, 0)
#define RESTORE_CM1__CM_MPU_CLKSTCTRL_RESTORE__CLKTRCTRL__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_CM1_PROFILING_CLKCTRL_RESTORE__IDLEST   
 *
 * @BRIEF        Module idle status - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_CM1_PROFILING_CLKCTRL_RESTORE__IDLEST BITFIELD(17, 16)
#define RESTORE_CM1__CM_CM1_PROFILING_CLKCTRL_RESTORE__IDLEST__POS 16

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_CM1_PROFILING_CLKCTRL_RESTORE__MODULEMODE   
 *
 * @BRIEF        Control the way mandatory clocks are managed. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_CM1_PROFILING_CLKCTRL_RESTORE__MODULEMODE BITFIELD(1, 0)
#define RESTORE_CM1__CM_CM1_PROFILING_CLKCTRL_RESTORE__MODULEMODE__POS 0

    /* 
     * List of register bitfields values for component RESTORE_CM1
     *
     */

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_CLKSEL_CORE_RESTORE__CLKSEL_L4__L3_CLK_DIV_1
 *
 * @BRIEF        L4_CLK is L3_CLK divided by 1 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_CLKSEL_CORE_RESTORE__CLKSEL_L4__L3_CLK_DIV_1 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_CLKSEL_CORE_RESTORE__CLKSEL_L4__L3_CLK_DIV_2
 *
 * @BRIEF        L4_CLK is L3_CLK divided by 2 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_CLKSEL_CORE_RESTORE__CLKSEL_L4__L3_CLK_DIV_2 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_CLKSEL_CORE_RESTORE__CLKSEL_L3__CORE_CLK_DIV_1
 *
 * @BRIEF        L3_CLK is CORE_CLK divided by 1 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_CLKSEL_CORE_RESTORE__CLKSEL_L3__CORE_CLK_DIV_1 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_CLKSEL_CORE_RESTORE__CLKSEL_L3__CORE_CLK_DIV_2
 *
 * @BRIEF        L3_CLK is CORE_CLK divided by 2 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_CLKSEL_CORE_RESTORE__CLKSEL_L3__CORE_CLK_DIV_2 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_CLKSEL_CORE_RESTORE__CLKSEL_CORE__CORE_X2_CLK_DIV_1
 *
 * @BRIEF        CORE_CLK is CORE_X2_CLK divided by 1 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_CLKSEL_CORE_RESTORE__CLKSEL_CORE__CORE_X2_CLK_DIV_1 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_CLKSEL_CORE_RESTORE__CLKSEL_CORE__CORE_X2_CLK_DIV_2
 *
 * @BRIEF        CORE_CLK is CORE_X2_CLK divided by 2 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_CLKSEL_CORE_RESTORE__CLKSEL_CORE__CORE_X2_CLK_DIV_2 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_DIV_M2_DPLL_CORE_RESTORE__ST_DPLL_CLKOUT__CLK_ENABLED
 *
 * @BRIEF        The clock output is enabled - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_DIV_M2_DPLL_CORE_RESTORE__ST_DPLL_CLKOUT__CLK_ENABLED 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_DIV_M2_DPLL_CORE_RESTORE__ST_DPLL_CLKOUT__CLK_GATED
 *
 * @BRIEF        The clock output is gated - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_DIV_M2_DPLL_CORE_RESTORE__ST_DPLL_CLKOUT__CLK_GATED 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_DIV_M2_DPLL_CORE_RESTORE__DPLL_CLKOUT_GATE_CTRL__CLK_AUTOGATE
 *
 * @BRIEF        Automatically gate this clock when there is no dependency 
 *               for it - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_DIV_M2_DPLL_CORE_RESTORE__DPLL_CLKOUT_GATE_CTRL__CLK_AUTOGATE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_DIV_M2_DPLL_CORE_RESTORE__DPLL_CLKOUT_GATE_CTRL__CLK_ENABLE
 *
 * @BRIEF        Force this clock to stay enabled even if there is no request 
 *               - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_DIV_M2_DPLL_CORE_RESTORE__DPLL_CLKOUT_GATE_CTRL__CLK_ENABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_DIV_M2_DPLL_CORE_RESTORE__DPLL_CLKOUT_DIV__RESERVED
 *
 * @BRIEF        Reserved - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_DIV_M2_DPLL_CORE_RESTORE__DPLL_CLKOUT_DIV__RESERVED 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_DIV_M3_DPLL_CORE_RESTORE__ST_DPLL_CLKOUTHIF__CLK_ENABLED
 *
 * @BRIEF        The clock output is enabled - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_DIV_M3_DPLL_CORE_RESTORE__ST_DPLL_CLKOUTHIF__CLK_ENABLED 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_DIV_M3_DPLL_CORE_RESTORE__ST_DPLL_CLKOUTHIF__CLK_GATED
 *
 * @BRIEF        The clock output is gated - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_DIV_M3_DPLL_CORE_RESTORE__ST_DPLL_CLKOUTHIF__CLK_GATED 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_DIV_M3_DPLL_CORE_RESTORE__DPLL_CLKOUTHIF_GATE_CTRL__CLK_AUTOGATE
 *
 * @BRIEF        Gate unconditionnaly this clock and stop requesting it - 
 *               (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_DIV_M3_DPLL_CORE_RESTORE__DPLL_CLKOUTHIF_GATE_CTRL__CLK_AUTOGATE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_DIV_M3_DPLL_CORE_RESTORE__DPLL_CLKOUTHIF_GATE_CTRL__CLK_ENABLE
 *
 * @BRIEF        Request this clock and un-gate it when available - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_DIV_M3_DPLL_CORE_RESTORE__DPLL_CLKOUTHIF_GATE_CTRL__CLK_ENABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_DIV_M3_DPLL_CORE_RESTORE__DPLL_CLKOUTHIF_DIV__RESERVED
 *
 * @BRIEF        Reserved - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_DIV_M3_DPLL_CORE_RESTORE__DPLL_CLKOUTHIF_DIV__RESERVED 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_DIV_M4_DPLL_CORE_RESTORE__HSDIVIDER_CLKOUT1_PWDN__ALWAYS_ACTIVE
 *
 * @BRIEF        Keep M4 divider powered on even when CLKOUT1 is gated. - 
 *               (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_DIV_M4_DPLL_CORE_RESTORE__HSDIVIDER_CLKOUT1_PWDN__ALWAYS_ACTIVE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_DIV_M4_DPLL_CORE_RESTORE__HSDIVIDER_CLKOUT1_PWDN__AUTO_PWDN
 *
 * @BRIEF        Automatically power down M4 divider when CLKOUT1 is gated. - 
 *               (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_DIV_M4_DPLL_CORE_RESTORE__HSDIVIDER_CLKOUT1_PWDN__AUTO_PWDN 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_DIV_M4_DPLL_CORE_RESTORE__ST_HSDIVIDER_CLKOUT1__CLK_ENABLED
 *
 * @BRIEF        The clock output is enabled - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_DIV_M4_DPLL_CORE_RESTORE__ST_HSDIVIDER_CLKOUT1__CLK_ENABLED 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_DIV_M4_DPLL_CORE_RESTORE__ST_HSDIVIDER_CLKOUT1__CLK_GATED
 *
 * @BRIEF        The clock output is gated - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_DIV_M4_DPLL_CORE_RESTORE__ST_HSDIVIDER_CLKOUT1__CLK_GATED 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_DIV_M4_DPLL_CORE_RESTORE__HSDIVIDER_CLKOUT1_GATE_CTRL__CLK_AUTOGATE
 *
 * @BRIEF        Automatically gate this clock when there is no dependency 
 *               for it - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_DIV_M4_DPLL_CORE_RESTORE__HSDIVIDER_CLKOUT1_GATE_CTRL__CLK_AUTOGATE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_DIV_M4_DPLL_CORE_RESTORE__HSDIVIDER_CLKOUT1_GATE_CTRL__CLK_ENABLE
 *
 * @BRIEF        Force this clock to stay enabled even if there is no request 
 *               - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_DIV_M4_DPLL_CORE_RESTORE__HSDIVIDER_CLKOUT1_GATE_CTRL__CLK_ENABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_DIV_M4_DPLL_CORE_RESTORE__HSDIVIDER_CLKOUT1_DIV__RESERVED
 *
 * @BRIEF        Reserved - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_DIV_M4_DPLL_CORE_RESTORE__HSDIVIDER_CLKOUT1_DIV__RESERVED 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_DIV_M5_DPLL_CORE_RESTORE__HSDIVIDER_CLKOUT2_PWDN__ALWAYS_ACTIVE
 *
 * @BRIEF        Keep M5 divider powered on even when CLKOUT2 is gated. - 
 *               (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_DIV_M5_DPLL_CORE_RESTORE__HSDIVIDER_CLKOUT2_PWDN__ALWAYS_ACTIVE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_DIV_M5_DPLL_CORE_RESTORE__HSDIVIDER_CLKOUT2_PWDN__AUTO_PWDN
 *
 * @BRIEF        Automatically power down M5 divider when CLKOUT2 is gated. - 
 *               (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_DIV_M5_DPLL_CORE_RESTORE__HSDIVIDER_CLKOUT2_PWDN__AUTO_PWDN 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_DIV_M5_DPLL_CORE_RESTORE__ST_HSDIVIDER_CLKOUT2__CLK_ENABLED
 *
 * @BRIEF        The clock output is enabled - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_DIV_M5_DPLL_CORE_RESTORE__ST_HSDIVIDER_CLKOUT2__CLK_ENABLED 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_DIV_M5_DPLL_CORE_RESTORE__ST_HSDIVIDER_CLKOUT2__CLK_GATED
 *
 * @BRIEF        The clock output is gated - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_DIV_M5_DPLL_CORE_RESTORE__ST_HSDIVIDER_CLKOUT2__CLK_GATED 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_DIV_M5_DPLL_CORE_RESTORE__HSDIVIDER_CLKOUT2_GATE_CTRL__CLK_AUTOGATE
 *
 * @BRIEF        Automatically gate this clock when there is no dependency 
 *               for it - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_DIV_M5_DPLL_CORE_RESTORE__HSDIVIDER_CLKOUT2_GATE_CTRL__CLK_AUTOGATE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_DIV_M5_DPLL_CORE_RESTORE__HSDIVIDER_CLKOUT2_GATE_CTRL__CLK_ENABLE
 *
 * @BRIEF        Force this clock to stay enabled even if there is no request 
 *               - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_DIV_M5_DPLL_CORE_RESTORE__HSDIVIDER_CLKOUT2_GATE_CTRL__CLK_ENABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_DIV_M5_DPLL_CORE_RESTORE__HSDIVIDER_CLKOUT2_DIV__RESERVED
 *
 * @BRIEF        Reserved - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_DIV_M5_DPLL_CORE_RESTORE__HSDIVIDER_CLKOUT2_DIV__RESERVED 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_DIV_M6_DPLL_CORE_RESTORE__HSDIVIDER_CLKOUT3_PWDN__ALWAYS_ACTIVE
 *
 * @BRIEF        Keep M6 divider powered on even when CLKOUT3 is gated. - 
 *               (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_DIV_M6_DPLL_CORE_RESTORE__HSDIVIDER_CLKOUT3_PWDN__ALWAYS_ACTIVE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_DIV_M6_DPLL_CORE_RESTORE__HSDIVIDER_CLKOUT3_PWDN__AUTO_PWDN
 *
 * @BRIEF        Automatically power down M6 divider when CLKOUT3 is gated. - 
 *               (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_DIV_M6_DPLL_CORE_RESTORE__HSDIVIDER_CLKOUT3_PWDN__AUTO_PWDN 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_DIV_M6_DPLL_CORE_RESTORE__ST_HSDIVIDER_CLKOUT3__CLK_ENABLED
 *
 * @BRIEF        The clock output is enabled - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_DIV_M6_DPLL_CORE_RESTORE__ST_HSDIVIDER_CLKOUT3__CLK_ENABLED 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_DIV_M6_DPLL_CORE_RESTORE__ST_HSDIVIDER_CLKOUT3__CLK_GATED
 *
 * @BRIEF        The clock output is gated - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_DIV_M6_DPLL_CORE_RESTORE__ST_HSDIVIDER_CLKOUT3__CLK_GATED 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_DIV_M6_DPLL_CORE_RESTORE__HSDIVIDER_CLKOUT3_GATE_CTRL__CLK_AUTOGATE
 *
 * @BRIEF        Automatically gate this clock when there is no dependency 
 *               for it - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_DIV_M6_DPLL_CORE_RESTORE__HSDIVIDER_CLKOUT3_GATE_CTRL__CLK_AUTOGATE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_DIV_M6_DPLL_CORE_RESTORE__HSDIVIDER_CLKOUT3_GATE_CTRL__CLK_ENABLE
 *
 * @BRIEF        Force this clock to stay enabled even if there is no request 
 *               - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_DIV_M6_DPLL_CORE_RESTORE__HSDIVIDER_CLKOUT3_GATE_CTRL__CLK_ENABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_DIV_M6_DPLL_CORE_RESTORE__HSDIVIDER_CLKOUT3_DIV__RESERVED
 *
 * @BRIEF        Reserved - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_DIV_M6_DPLL_CORE_RESTORE__HSDIVIDER_CLKOUT3_DIV__RESERVED 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_DIV_M7_DPLL_CORE_RESTORE__HSDIVIDER_CLKOUT4_PWDN__ALWAYS_ACTIVE
 *
 * @BRIEF        Keep M6 divider powered on even when CLKOUT3 is gated. - 
 *               (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_DIV_M7_DPLL_CORE_RESTORE__HSDIVIDER_CLKOUT4_PWDN__ALWAYS_ACTIVE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_DIV_M7_DPLL_CORE_RESTORE__HSDIVIDER_CLKOUT4_PWDN__AUTO_PWDN
 *
 * @BRIEF        Automatically power down M6 divider when CLKOUT3 is gated. - 
 *               (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_DIV_M7_DPLL_CORE_RESTORE__HSDIVIDER_CLKOUT4_PWDN__AUTO_PWDN 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_DIV_M7_DPLL_CORE_RESTORE__ST_HSDIVIDER_CLKOUT4__CLK_ENABLED
 *
 * @BRIEF        The clock output is enabled - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_DIV_M7_DPLL_CORE_RESTORE__ST_HSDIVIDER_CLKOUT4__CLK_ENABLED 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_DIV_M7_DPLL_CORE_RESTORE__ST_HSDIVIDER_CLKOUT4__CLK_GATED
 *
 * @BRIEF        The clock output is gated - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_DIV_M7_DPLL_CORE_RESTORE__ST_HSDIVIDER_CLKOUT4__CLK_GATED 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_DIV_M7_DPLL_CORE_RESTORE__HSDIVIDER_CLKOUT4_GATE_CTRL__CLK_AUTOGATE
 *
 * @BRIEF        Automatically gate this clock when there is no dependency 
 *               for it - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_DIV_M7_DPLL_CORE_RESTORE__HSDIVIDER_CLKOUT4_GATE_CTRL__CLK_AUTOGATE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_DIV_M7_DPLL_CORE_RESTORE__HSDIVIDER_CLKOUT4_GATE_CTRL__CLK_ENABLE
 *
 * @BRIEF        Force this clock to stay enabled even if there is no request 
 *               - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_DIV_M7_DPLL_CORE_RESTORE__HSDIVIDER_CLKOUT4_GATE_CTRL__CLK_ENABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_DIV_M7_DPLL_CORE_RESTORE__HSDIVIDER_CLKOUT4_DIV__RESERVED
 *
 * @BRIEF        Reserved - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_DIV_M7_DPLL_CORE_RESTORE__HSDIVIDER_CLKOUT4_DIV__RESERVED 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_CLKSEL_DPLL_CORE_RESTORE__DPLL_CLKOUTHIF_CLKSEL__SEL_DCO
 *
 * @BRIEF        CLKOUTHIF is generated from the DPLL oscillator (DCO) - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_CLKSEL_DPLL_CORE_RESTORE__DPLL_CLKOUTHIF_CLKSEL__SEL_DCO 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_CLKSEL_DPLL_CORE_RESTORE__DPLL_CLKOUTHIF_CLKSEL__SEL_CLKINPHIF
 *
 * @BRIEF        CLKOUTHIF is generated from CLKINPHIF - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_CLKSEL_DPLL_CORE_RESTORE__DPLL_CLKOUTHIF_CLKSEL__SEL_CLKINPHIF 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_CLKSEL_DPLL_CORE_RESTORE__DPLL_MULT__0
 *
 * @BRIEF        Reserved - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_CLKSEL_DPLL_CORE_RESTORE__DPLL_MULT__0 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_CLKSEL_DPLL_CORE_RESTORE__DPLL_MULT__1
 *
 * @BRIEF        Reserved - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_CLKSEL_DPLL_CORE_RESTORE__DPLL_MULT__1 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_CLKMODE_DPLL_CORE_RESTORE__DPLL_SSC_TYPE__TRIANGULAR
 *
 * @BRIEF        Triangular Spread Spectrum Clocking is selected - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_CLKMODE_DPLL_CORE_RESTORE__DPLL_SSC_TYPE__TRIANGULAR 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_CLKMODE_DPLL_CORE_RESTORE__DPLL_SSC_TYPE__SQUARE
 *
 * @BRIEF        Square Wave Spread Spectrum Clocking is selected 
 *               (only available under proper licensing agreement) - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_CLKMODE_DPLL_CORE_RESTORE__DPLL_SSC_TYPE__SQUARE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_CLKMODE_DPLL_CORE_RESTORE__DPLL_SSC_DOWNSPREAD__FULL_SPREAD
 *
 * @BRIEF        When SSC is enabled, clock frequency is spread on both sides 
 *               of the programmed frequency - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_CLKMODE_DPLL_CORE_RESTORE__DPLL_SSC_DOWNSPREAD__FULL_SPREAD 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_CLKMODE_DPLL_CORE_RESTORE__DPLL_SSC_DOWNSPREAD__LOW_SPREAD
 *
 * @BRIEF        When SSC is enabled, clock frequency is spread only on the 
 *               lower side of the programmed frequency - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_CLKMODE_DPLL_CORE_RESTORE__DPLL_SSC_DOWNSPREAD__LOW_SPREAD 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_CLKMODE_DPLL_CORE_RESTORE__DPLL_SSC_ACK__DISABLED
 *
 * @BRIEF        SSC has been turned off on PLL o/ps - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_CLKMODE_DPLL_CORE_RESTORE__DPLL_SSC_ACK__DISABLED 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_CLKMODE_DPLL_CORE_RESTORE__DPLL_SSC_ACK__ENABLED
 *
 * @BRIEF        SSC has been turned on on PLL o/ps - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_CLKMODE_DPLL_CORE_RESTORE__DPLL_SSC_ACK__ENABLED 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_CLKMODE_DPLL_CORE_RESTORE__DPLL_SSC_EN__DISABLED
 *
 * @BRIEF        SSC disabled - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_CLKMODE_DPLL_CORE_RESTORE__DPLL_SSC_EN__DISABLED 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_CLKMODE_DPLL_CORE_RESTORE__DPLL_SSC_EN__ENABLED
 *
 * @BRIEF        SSC enabled - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_CLKMODE_DPLL_CORE_RESTORE__DPLL_SSC_EN__ENABLED 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_CLKMODE_DPLL_CORE_RESTORE__DPLL_REGM4XEN__DISABLED
 *
 * @BRIEF        REGM4XEN mode of the DPLL is disabled - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_CLKMODE_DPLL_CORE_RESTORE__DPLL_REGM4XEN__DISABLED 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_CLKMODE_DPLL_CORE_RESTORE__DPLL_LPMODE_EN__DISABLED
 *
 * @BRIEF        Low power mode of the DPLL is disabled - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_CLKMODE_DPLL_CORE_RESTORE__DPLL_LPMODE_EN__DISABLED 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_CLKMODE_DPLL_CORE_RESTORE__DPLL_LPMODE_EN__ENABLED
 *
 * @BRIEF        Low power mode of the DPLL is enabled - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_CLKMODE_DPLL_CORE_RESTORE__DPLL_LPMODE_EN__ENABLED 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_CLKMODE_DPLL_CORE_RESTORE__DPLL_DRIFTGUARD_EN__DIASBLED
 *
 * @BRIEF        DRIFTGUARD feature is disabled - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_CLKMODE_DPLL_CORE_RESTORE__DPLL_DRIFTGUARD_EN__DIASBLED 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_CLKMODE_DPLL_CORE_RESTORE__DPLL_DRIFTGUARD_EN__ENABLED
 *
 * @BRIEF        DRIFTGUARD feature is enabled - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_CLKMODE_DPLL_CORE_RESTORE__DPLL_DRIFTGUARD_EN__ENABLED 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_CLKMODE_DPLL_CORE_RESTORE__DPLL_RAMP_RATE__REFCLKX2
 *
 * @BRIEF        2 REFCLKs - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_CLKMODE_DPLL_CORE_RESTORE__DPLL_RAMP_RATE__REFCLKX2 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_CLKMODE_DPLL_CORE_RESTORE__DPLL_RAMP_RATE__REFCLKX4
 *
 * @BRIEF        4 REFCLKs - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_CLKMODE_DPLL_CORE_RESTORE__DPLL_RAMP_RATE__REFCLKX4 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_CLKMODE_DPLL_CORE_RESTORE__DPLL_RAMP_RATE__REFCLKX8
 *
 * @BRIEF        8 REFCLKs - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_CLKMODE_DPLL_CORE_RESTORE__DPLL_RAMP_RATE__REFCLKX8 0x2ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_CLKMODE_DPLL_CORE_RESTORE__DPLL_RAMP_RATE__REFCLKX16
 *
 * @BRIEF        16 REFCLKs - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_CLKMODE_DPLL_CORE_RESTORE__DPLL_RAMP_RATE__REFCLKX16 0x3ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_CLKMODE_DPLL_CORE_RESTORE__DPLL_RAMP_RATE__REFCLKX32
 *
 * @BRIEF        32 REFCLKs - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_CLKMODE_DPLL_CORE_RESTORE__DPLL_RAMP_RATE__REFCLKX32 0x4ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_CLKMODE_DPLL_CORE_RESTORE__DPLL_RAMP_RATE__REFCLKX64
 *
 * @BRIEF        64 REFCLKs - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_CLKMODE_DPLL_CORE_RESTORE__DPLL_RAMP_RATE__REFCLKX64 0x5ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_CLKMODE_DPLL_CORE_RESTORE__DPLL_RAMP_RATE__REFCLKX128
 *
 * @BRIEF        128 REFCLKs - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_CLKMODE_DPLL_CORE_RESTORE__DPLL_RAMP_RATE__REFCLKX128 0x6ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_CLKMODE_DPLL_CORE_RESTORE__DPLL_RAMP_RATE__REFCLKX512
 *
 * @BRIEF        512 REFCLKs - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_CLKMODE_DPLL_CORE_RESTORE__DPLL_RAMP_RATE__REFCLKX512 0x7ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_CLKMODE_DPLL_CORE_RESTORE__DPLL_RAMP_LEVEL__RAMP_DISABLE
 *
 * @BRIEF        CLKOUT     => No ramping 
 *               CLKOUTX2 => No ramping - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_CLKMODE_DPLL_CORE_RESTORE__DPLL_RAMP_LEVEL__RAMP_DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_CLKMODE_DPLL_CORE_RESTORE__DPLL_RAMP_LEVEL__RAMP_ALGO1
 *
 * @BRIEF        CLKOUT     => Bypass clk -> Fout/8 -> Fout/4 -> Fout/2 -> 
 *               Fout 
 *               CLKOUTX2 => Bypass clk -> Foutx2/8 -> Foutx2/4 -> Foutx2/2 
 *               -> Foutx2 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_CLKMODE_DPLL_CORE_RESTORE__DPLL_RAMP_LEVEL__RAMP_ALGO1 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_CLKMODE_DPLL_CORE_RESTORE__DPLL_RAMP_LEVEL__RAMP_ALGO2
 *
 * @BRIEF        CLKOUT     => Bypass clk -> Fout/4 -> Fout/2 -> Fout/1.5 -> 
 *               Fout 
 *               CLKOUTX2 => Bypass clk -> Foutx2/4 -> Foutx2/2 -> Foutx2/1.5 
 *               -> Foutx2 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_CLKMODE_DPLL_CORE_RESTORE__DPLL_RAMP_LEVEL__RAMP_ALGO2 0x2ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_CLKMODE_DPLL_CORE_RESTORE__DPLL_RAMP_LEVEL__RESERVED
 *
 * @BRIEF        Reserved - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_CLKMODE_DPLL_CORE_RESTORE__DPLL_RAMP_LEVEL__RESERVED 0x3ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_CLKMODE_DPLL_CORE_RESTORE__DPLL_EN__RESERVED
 *
 * @BRIEF        Reserved - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_CLKMODE_DPLL_CORE_RESTORE__DPLL_EN__RESERVED 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_CLKMODE_DPLL_CORE_RESTORE__DPLL_EN__RESERVED1
 *
 * @BRIEF        Reserved - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_CLKMODE_DPLL_CORE_RESTORE__DPLL_EN__RESERVED1 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_CLKMODE_DPLL_CORE_RESTORE__DPLL_EN__RESERVED2
 *
 * @BRIEF        Reserved - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_CLKMODE_DPLL_CORE_RESTORE__DPLL_EN__RESERVED2 0x2ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_CLKMODE_DPLL_CORE_RESTORE__DPLL_EN__RESERVED3
 *
 * @BRIEF        Reserved - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_CLKMODE_DPLL_CORE_RESTORE__DPLL_EN__RESERVED3 0x3ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_CLKMODE_DPLL_CORE_RESTORE__DPLL_EN__DPLL_MN_BYP_MODE
 *
 * @BRIEF        Put the DPLL in MN Bypass mode. The DPLL_MULT register bits 
 *               are reset to 0 automatically by putting the DPLL in this 
 *               mode. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_CLKMODE_DPLL_CORE_RESTORE__DPLL_EN__DPLL_MN_BYP_MODE 0x4ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_CLKMODE_DPLL_CORE_RESTORE__DPLL_EN__DPLL_LP_BYP_MODE
 *
 * @BRIEF        Put the DPLL in Idle Bypass Low Power mode. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_CLKMODE_DPLL_CORE_RESTORE__DPLL_EN__DPLL_LP_BYP_MODE 0x5ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_CLKMODE_DPLL_CORE_RESTORE__DPLL_EN__DPLL_FR_BYP_MODE
 *
 * @BRIEF        Put the DPLL in Idle Bypass Fast Relock mode. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_CLKMODE_DPLL_CORE_RESTORE__DPLL_EN__DPLL_FR_BYP_MODE 0x6ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_CLKMODE_DPLL_CORE_RESTORE__DPLL_EN__DPLL_LOCK_MODE
 *
 * @BRIEF        Enables the DPLL in Lock mode - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_CLKMODE_DPLL_CORE_RESTORE__DPLL_EN__DPLL_LOCK_MODE 0x7ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_SHADOW_FREQ_CONFIG2_RESTORE__DPLL_CORE_M5_DIV__RESERVED
 *
 * @BRIEF        Reserved - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_SHADOW_FREQ_CONFIG2_RESTORE__DPLL_CORE_M5_DIV__RESERVED 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_SHADOW_FREQ_CONFIG2_RESTORE__CLKSEL_L3__CORE_CLK_DIV_1
 *
 * @BRIEF        L3_CLK is CORE_CLK divided by 1 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_SHADOW_FREQ_CONFIG2_RESTORE__CLKSEL_L3__CORE_CLK_DIV_1 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_SHADOW_FREQ_CONFIG2_RESTORE__CLKSEL_L3__CORE_CLK_DIV_2
 *
 * @BRIEF        L3_CLK is CORE_CLK divided by 2 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_SHADOW_FREQ_CONFIG2_RESTORE__CLKSEL_L3__CORE_CLK_DIV_2 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_SHADOW_FREQ_CONFIG2_RESTORE__CLKSEL_CORE__CORE_X2_CLK_DIV_1
 *
 * @BRIEF        CORE_CLK is CORE_X2_CLK divided by 1 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_SHADOW_FREQ_CONFIG2_RESTORE__CLKSEL_CORE__CORE_X2_CLK_DIV_1 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_SHADOW_FREQ_CONFIG2_RESTORE__CLKSEL_CORE__CORE_X2_CLK_DIV_2
 *
 * @BRIEF        CORE_CLK is CORE_X2_CLK divided by 2 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_SHADOW_FREQ_CONFIG2_RESTORE__CLKSEL_CORE__CORE_X2_CLK_DIV_2 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_SHADOW_FREQ_CONFIG2_RESTORE__GPMC_FREQ_UPDATE__DISABLED
 *
 * @BRIEF        GPMC is not put automatically into idle during frequency 
 *               change operation. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_SHADOW_FREQ_CONFIG2_RESTORE__GPMC_FREQ_UPDATE__DISABLED 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_SHADOW_FREQ_CONFIG2_RESTORE__GPMC_FREQ_UPDATE__ENABLED
 *
 * @BRIEF        GPMC is put automatically into idle during frequency change 
 *               operation. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_SHADOW_FREQ_CONFIG2_RESTORE__GPMC_FREQ_UPDATE__ENABLED 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_SHADOW_FREQ_CONFIG1_RESTORE__DPLL_CORE_M2_DIV__RESERVED
 *
 * @BRIEF        Reserved - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_SHADOW_FREQ_CONFIG1_RESTORE__DPLL_CORE_M2_DIV__RESERVED 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_SHADOW_FREQ_CONFIG1_RESTORE__DPLL_CORE_DPLL_EN__RESERVED
 *
 * @BRIEF        Reserved - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_SHADOW_FREQ_CONFIG1_RESTORE__DPLL_CORE_DPLL_EN__RESERVED 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_SHADOW_FREQ_CONFIG1_RESTORE__DPLL_CORE_DPLL_EN__RESERVED1
 *
 * @BRIEF        Reserved - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_SHADOW_FREQ_CONFIG1_RESTORE__DPLL_CORE_DPLL_EN__RESERVED1 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_SHADOW_FREQ_CONFIG1_RESTORE__DPLL_CORE_DPLL_EN__RESERVED2
 *
 * @BRIEF        Reserved - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_SHADOW_FREQ_CONFIG1_RESTORE__DPLL_CORE_DPLL_EN__RESERVED2 0x2ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_SHADOW_FREQ_CONFIG1_RESTORE__DPLL_CORE_DPLL_EN__RESERVED3
 *
 * @BRIEF        Reserved - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_SHADOW_FREQ_CONFIG1_RESTORE__DPLL_CORE_DPLL_EN__RESERVED3 0x3ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_SHADOW_FREQ_CONFIG1_RESTORE__DPLL_CORE_DPLL_EN__DPLL_MN_BYP_MODE
 *
 * @BRIEF        Put the DPLL in MN Bypass mode. The DPLL_MULT register bits 
 *               are reset to 0 automatically by putting the DPLL in this 
 *               mode. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_SHADOW_FREQ_CONFIG1_RESTORE__DPLL_CORE_DPLL_EN__DPLL_MN_BYP_MODE 0x4ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_SHADOW_FREQ_CONFIG1_RESTORE__DPLL_CORE_DPLL_EN__DPLL_LP_BYP_MODE
 *
 * @BRIEF        Put the DPLL in Idle Bypass Low Power mode. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_SHADOW_FREQ_CONFIG1_RESTORE__DPLL_CORE_DPLL_EN__DPLL_LP_BYP_MODE 0x5ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_SHADOW_FREQ_CONFIG1_RESTORE__DPLL_CORE_DPLL_EN__DPLL_FR_BYP_MODE
 *
 * @BRIEF        Put the DPLL in Idle Bypass Fast Relock mode. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_SHADOW_FREQ_CONFIG1_RESTORE__DPLL_CORE_DPLL_EN__DPLL_FR_BYP_MODE 0x6ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_SHADOW_FREQ_CONFIG1_RESTORE__DPLL_CORE_DPLL_EN__DPLL_LOCK_MODE
 *
 * @BRIEF        Enables the DPLL in Lock mode - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_SHADOW_FREQ_CONFIG1_RESTORE__DPLL_CORE_DPLL_EN__DPLL_LOCK_MODE 0x7ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_SHADOW_FREQ_CONFIG1_RESTORE__DLL_RESET__NO_RESET
 *
 * @BRIEF        DLL is not reset during the frequency change hardware 
 *               sequence - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_SHADOW_FREQ_CONFIG1_RESTORE__DLL_RESET__NO_RESET 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_SHADOW_FREQ_CONFIG1_RESTORE__DLL_RESET__RESET
 *
 * @BRIEF        DLL is reset automatically during the frequency change 
 *               hardware sequence - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_SHADOW_FREQ_CONFIG1_RESTORE__DLL_RESET__RESET 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_SHADOW_FREQ_CONFIG1_RESTORE__DLL_OVERRIDE__NO_OVR
 *
 * @BRIEF        Lock and code outputs are not overriden - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_SHADOW_FREQ_CONFIG1_RESTORE__DLL_OVERRIDE__NO_OVR 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_SHADOW_FREQ_CONFIG1_RESTORE__DLL_OVERRIDE__OVR
 *
 * @BRIEF        Lock output is overriden to '1' and code output is overriden 
 *               with a value coming from control module. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_SHADOW_FREQ_CONFIG1_RESTORE__DLL_OVERRIDE__OVR 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_AUTOIDLE_DPLL_CORE_RESTORE__AUTO_DPLL_MODE__AUTO_CTL_DISABLE
 *
 * @BRIEF        DPLL auto control disabled - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_AUTOIDLE_DPLL_CORE_RESTORE__AUTO_DPLL_MODE__AUTO_CTL_DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_AUTOIDLE_DPLL_CORE_RESTORE__AUTO_DPLL_MODE__AUTO_LP_STOP
 *
 * @BRIEF        The DPLL is automatically put in Low Power Stop mode when 
 *               its DPLL generated clocks are not required anymore. It is 
 *               also restarted 
 *               automatically. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_AUTOIDLE_DPLL_CORE_RESTORE__AUTO_DPLL_MODE__AUTO_LP_STOP 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_AUTOIDLE_DPLL_CORE_RESTORE__AUTO_DPLL_MODE__AUTO_FR_STOP
 *
 * @BRIEF        The DPLL is automatically put in Fast Relock Stop mode when 
 *               its DPLL generated clocks are not required anymore. It is 
 *               also restarted 
 *               automatically. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_AUTOIDLE_DPLL_CORE_RESTORE__AUTO_DPLL_MODE__AUTO_FR_STOP 0x2ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_AUTOIDLE_DPLL_CORE_RESTORE__AUTO_DPLL_MODE__RESERVED
 *
 * @BRIEF        Reserved - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_AUTOIDLE_DPLL_CORE_RESTORE__AUTO_DPLL_MODE__RESERVED 0x3ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_AUTOIDLE_DPLL_CORE_RESTORE__AUTO_DPLL_MODE__RESERVED1
 *
 * @BRIEF        Reserved - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_AUTOIDLE_DPLL_CORE_RESTORE__AUTO_DPLL_MODE__RESERVED1 0x4ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_AUTOIDLE_DPLL_CORE_RESTORE__AUTO_DPLL_MODE__AUTO_LP_BYP
 *
 * @BRIEF        The DPLL is automatically put in Idle Bypass Low Power mode 
 *               when its DPLL generated clocks are not required anymore. It 
 *               is also restarted automatically. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_AUTOIDLE_DPLL_CORE_RESTORE__AUTO_DPLL_MODE__AUTO_LP_BYP 0x5ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_AUTOIDLE_DPLL_CORE_RESTORE__AUTO_DPLL_MODE__AUTO_FR_BYP
 *
 * @BRIEF        The DPLL is automatically put in Idle Bypass Fast Relock  
 *               mode when its DPLL generated clocks are not required 
 *               anymore. It is also restarted automatically. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_AUTOIDLE_DPLL_CORE_RESTORE__AUTO_DPLL_MODE__AUTO_FR_BYP 0x6ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_AUTOIDLE_DPLL_CORE_RESTORE__AUTO_DPLL_MODE__RESERVED2
 *
 * @BRIEF        Reserved - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_AUTOIDLE_DPLL_CORE_RESTORE__AUTO_DPLL_MODE__RESERVED2 0x7ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_MPU_CLKSTCTRL_RESTORE__CLKACTIVITY_MPU_DPLL_CLK__INACT
 *
 * @BRIEF        Corresponding clock is definitely gated - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_MPU_CLKSTCTRL_RESTORE__CLKACTIVITY_MPU_DPLL_CLK__INACT 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_MPU_CLKSTCTRL_RESTORE__CLKACTIVITY_MPU_DPLL_CLK__ACT
 *
 * @BRIEF        Corresponding clock is running or gating/ungating transition 
 *               is on-going - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_MPU_CLKSTCTRL_RESTORE__CLKACTIVITY_MPU_DPLL_CLK__ACT 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_MPU_CLKSTCTRL_RESTORE__CLKTRCTRL__NO_SLEEP
 *
 * @BRIEF        NO_SLEEP: Sleep transition cannot be initiated. Wakeup 
 *               transition may however occur. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_MPU_CLKSTCTRL_RESTORE__CLKTRCTRL__NO_SLEEP 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_MPU_CLKSTCTRL_RESTORE__CLKTRCTRL__RESERVED_1
 *
 * @BRIEF        Reserved - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_MPU_CLKSTCTRL_RESTORE__CLKTRCTRL__RESERVED_1 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_MPU_CLKSTCTRL_RESTORE__CLKTRCTRL__SW_WKUP
 *
 * @BRIEF        SW_WKUP: Start a software forced wake-up transition on the 
 *               domain. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_MPU_CLKSTCTRL_RESTORE__CLKTRCTRL__SW_WKUP 0x2ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_MPU_CLKSTCTRL_RESTORE__CLKTRCTRL__HW_AUTO
 *
 * @BRIEF        HW_AUTO: Automatic transition is enabled. Sleep and wakeup 
 *               transition are based upon hardware conditions. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_MPU_CLKSTCTRL_RESTORE__CLKTRCTRL__HW_AUTO 0x3ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_CM1_PROFILING_CLKCTRL_RESTORE__IDLEST__FUNC
 *
 * @BRIEF        Module is fully functional - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_CM1_PROFILING_CLKCTRL_RESTORE__IDLEST__FUNC 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_CM1_PROFILING_CLKCTRL_RESTORE__IDLEST__TRANS
 *
 * @BRIEF        Module is performing transition: wakeup, or sleep, or sleep 
 *               abortion - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_CM1_PROFILING_CLKCTRL_RESTORE__IDLEST__TRANS 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_CM1_PROFILING_CLKCTRL_RESTORE__IDLEST__IDLE
 *
 * @BRIEF        Module is in Idle - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_CM1_PROFILING_CLKCTRL_RESTORE__IDLEST__IDLE 0x2ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_CM1_PROFILING_CLKCTRL_RESTORE__IDLEST__DISABLE
 *
 * @BRIEF        Module is disabled - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_CM1_PROFILING_CLKCTRL_RESTORE__IDLEST__DISABLE 0x3ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_CM1_PROFILING_CLKCTRL_RESTORE__MODULEMODE__DISABLED
 *
 * @BRIEF        Module is disabled by SW. OCP configuration port is not 
 *               accessible. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_CM1_PROFILING_CLKCTRL_RESTORE__MODULEMODE__DISABLED 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_CM1_PROFILING_CLKCTRL_RESTORE__MODULEMODE__AUTO
 *
 * @BRIEF        Module is managed automatically by HW along with CM1 and EMU 
 *               domain. OCP configuration port is accessible only when EMU 
 *               domain is on. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_CM1_PROFILING_CLKCTRL_RESTORE__MODULEMODE__AUTO 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_CM1_PROFILING_CLKCTRL_RESTORE__MODULEMODE__RESERVED_2
 *
 * @BRIEF        Reserved - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_CM1_PROFILING_CLKCTRL_RESTORE__MODULEMODE__RESERVED_2 0x2ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   RESTORE_CM1__CM_CM1_PROFILING_CLKCTRL_RESTORE__MODULEMODE__RESERVED
 *
 * @BRIEF        Reserved - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define RESTORE_CM1__CM_CM1_PROFILING_CLKCTRL_RESTORE__MODULEMODE__RESERVED 0x3ul

#ifdef __cplusplus
}
#endif
#endif                                                     /* __RESTORE_CM1_CRED_H 
                                                            */

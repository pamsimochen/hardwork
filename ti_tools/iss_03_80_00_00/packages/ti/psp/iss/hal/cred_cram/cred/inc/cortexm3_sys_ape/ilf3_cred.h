/** ==================================================================
 *  @file   ilf3_cred.h                                                  
 *                                                                    
 *  @path   /ti/psp/iss/hal/cred_cram/cred/inc/cortexm3_sys_ape/                                                  
 *                                                                    
 *  @desc   This  File contains.                                      
 * ===================================================================
 *  Copyright (c) Texas Instruments Inc 2011, 2012                    
 *                                                                    
 *  Use of this software is controlled by the terms and conditions found
 *  in the license agreement under which this software has been supplied
 * ===================================================================*/

/* ============================================================================ 
 * TEXAS INSTRUMENTS INCORPORATED PROPRIETARY INFORMATION Property of Texas
 * Instruments For Unrestricted Internal Use Only Unauthorized reproduction
 * and/or distribution is strictly prohibited.  This product is protected
 * under copyright law and trade secret law as an unpublished work.  Created
 * 2008, (C) Copyright 2008 Texas Instruments.  All rights reserved. */

/**
 *  @Component:   ILF3
 *
 *  @Filename:    ilf3_cred.h
 *
 *  @Description: iLF3 module registers mapping and description. 
 *
 *  Generated by: Socrates CRED generator prototype
 *
    *//* ====================================================================== */

#ifndef __ILF3_CRED_H
#define __ILF3_CRED_H

#ifdef __cplusplus
extern "C" {
#endif

    /* 
     * Instance ILF3_CFG of component ILF3 mapped in MONICA at address 0x5A052000
     */

                                                                              /*-------------------------------------------------------------------------*//**
 * @DEFINITION   BITFIELD
 *
 * @BRIEF        The bitfield must be defined according to register width
 *               of the component - 64/32/16/8
 *
    *//*------------------------------------------------------------------------ */
#undef BITFIELD
#define BITFIELD BITFIELD_32

    /* 
     *  List of Register arrays for component ILF3
     *
     */

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_MBCONFIG_MBINFO
 *
 * @BRIEF        MBConfig table contains pointers used by program to control 
 *               the iLF units. 
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_MBCONFIG_MBINFO                          0x40ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_MBCONFIG_MBINFO__ELSIZE
 *
 * @BRIEF        ILF_MBCONFIG_MBINFO register array element size in Bytes
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_MBCONFIG_MBINFO__ELSIZE                  0x4ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_MBCONFIG_MBINFO__NELEMS
 *
 * @BRIEF        ILF_MBCONFIG_MBINFO register array number of elements
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_MBCONFIG_MBINFO__NELEMS                  3

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_MBCONFIG_MB
 *
 * @BRIEF        MBConfig table contains pointers used by program to control 
 *               the iLF units. 
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_MBCONFIG_MB                              0x4Cul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_MBCONFIG_MB__ELSIZE
 *
 * @BRIEF        ILF_MBCONFIG_MB register array element size in Bytes
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_MBCONFIG_MB__ELSIZE                      0x4ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_MBCONFIG_MB__NELEMS
 *
 * @BRIEF        ILF_MBCONFIG_MB register array number of elements
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_MBCONFIG_MB__NELEMS                      16

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_MBCONFIG_GDPCONFIG
 *
 * @BRIEF        MBConfig table contains pointers used by program to control 
 *               the iLF units. 
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_MBCONFIG_GDPCONFIG                       0x94ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_MBCONFIG_GDPCONFIG__ELSIZE
 *
 * @BRIEF        ILF_MBCONFIG_GDPCONFIG register array element size in Bytes
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_MBCONFIG_GDPCONFIG__ELSIZE               0x4ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_MBCONFIG_GDPCONFIG__NELEMS
 *
 * @BRIEF        ILF_MBCONFIG_GDPCONFIG register array number of elements
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_MBCONFIG_GDPCONFIG__NELEMS               4

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_SLICESTATUS
 *
 * @BRIEF        MBConfig table contains pointers used by program to control 
 *               the iLF units. 
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_SLICESTATUS                              0xBCul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_SLICESTATUS__ELSIZE
 *
 * @BRIEF        ILF_SLICESTATUS register array element size in Bytes
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_SLICESTATUS__ELSIZE                      0x4ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_SLICESTATUS__NELEMS
 *
 * @BRIEF        ILF_SLICESTATUS register array number of elements
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_SLICESTATUS__NELEMS                      3

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_QP
 *
 * @BRIEF        Quantization parameter. 
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_QP                                       0xE0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_QP__ELSIZE
 *
 * @BRIEF        ILF_QP register array element size in Bytes
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_QP__ELSIZE                               0x4ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_QP__NELEMS
 *
 * @BRIEF        ILF_QP register array number of elements
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_QP__NELEMS                               18

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_QP_IDX
 *
 * @BRIEF        Quantization parameter index. 
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_QP_IDX                                   0x128ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_QP_IDX__ELSIZE
 *
 * @BRIEF        ILF_QP_IDX register array element size in Bytes
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_QP_IDX__ELSIZE                           0x4ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_QP_IDX__NELEMS
 *
 * @BRIEF        ILF_QP_IDX register array number of elements
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_QP_IDX__NELEMS                           40

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_BS
 *
 * @BRIEF        Boundary strength. 
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_BS                                       0x1C8ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_BS__ELSIZE
 *
 * @BRIEF        ILF_BS register array element size in Bytes
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_BS__ELSIZE                               0x4ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_BS__NELEMS
 *
 * @BRIEF        ILF_BS register array number of elements
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_BS__NELEMS                               149

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_IPB
 *
 * @BRIEF        Input buffer bank. 
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_IPB                                      0x41Cul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_IPB__ELSIZE
 *
 * @BRIEF        ILF_IPB register array element size in Bytes
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_IPB__ELSIZE                              0x4ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_IPB__NELEMS
 *
 * @BRIEF        ILF_IPB register array number of elements
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_IPB__NELEMS                              704

    /* 
     *  List of bundle arrays for component ILF3
     *
     */

    /* 
     *  List of bundles for component ILF3
     *
     */

    /* 
     * List of registers for component ILF3
     *
     */

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_REVISION
 *
 * @BRIEF        IP Revision Identifier (X.Y.R) 
 *               Used by software to track features, bugs, and compatibility 
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_REVISION                                 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_SYSCONFIG
 *
 * @BRIEF        Clock management configuration 
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_SYSCONFIG                                0x10ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_IRQ_EOI
 *
 * @BRIEF        End Of Interrupt number specification 
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_IRQ_EOI                                  0x18ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_IRQSTATUS_RAW_0
 *
 * @BRIEF        Per-event raw interrupt status vector, line #0.  
 *               Raw status is set even if event is not enabled. 
 *               Write 1 to set the (raw) status, mostly for debug. 
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_IRQSTATUS_RAW_0                          0x1Cul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_IRQSTATUS_0
 *
 * @BRIEF        Per-event "enabled" interrupt status vector, line #0. 
 *               Enabled status isn't set unless event is enabled. 
 *               Write 1 to clear the status after interrupt has been 
 *               serviced (raw status gets cleared, i.e. even if not 
 *               enabled). 
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_IRQSTATUS_0                              0x20ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_IRQENABLE_SET_0
 *
 * @BRIEF        Per-event interrupt enable bit vector, line #0.  
 *               Write 1 to set (enable interrupt). 
 *               Readout equal to corresponding _CLR register. 
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_IRQENABLE_SET_0                          0x24ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_IRQENABLE_CLR_0
 *
 * @BRIEF        Per-event interrupt enable bit vector, line #0.  
 *               Write 1 to clear (disable interrupt). 
 *               Readout equal to corresponding _SET register. 
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_IRQENABLE_CLR_0                          0x28ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_CONFIG
 *
 * @BRIEF        Configuration register. 
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_CONFIG                                   0x30ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_STATUS
 *
 * @BRIEF        Provides information on the progress of the iLF3 execution. 
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_STATUS                                   0x34ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_MBCONFIG_SLICEINFO01
 *
 * @BRIEF        MBConfig table contains pointers used by program to control 
 *               the iLF units. 
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_MBCONFIG_SLICEINFO01                     0x38ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_MBCONFIG_SLICEINFO2
 *
 * @BRIEF        MBConfig table contains pointers used by program to control 
 *               the iLF units. 
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_MBCONFIG_SLICEINFO2                      0x3Cul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_MBCONFIG_COEFFICIENTS0123
 *
 * @BRIEF        MBConfig table contains pointers used by program to control 
 *               the iLF units. 
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_MBCONFIG_COEFFICIENTS0123                0x8Cul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_MBCONFIG_COEFFICIENTS4567
 *
 * @BRIEF        MBConfig table contains pointers used by program to control 
 *               the iLF units. 
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_MBCONFIG_COEFFICIENTS4567                0x90ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_MBCONFIG_AUTOINC
 *
 * @BRIEF        MBConfig table contains pointers used by program to control 
 *               the iLF units. 
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_MBCONFIG_AUTOINC                         0xB0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_MBCONFIG_NEXTMBCONFIG
 *
 * @BRIEF        MBConfig table contains pointers used by program to control 
 *               the iLF units. 
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_MBCONFIG_NEXTMBCONFIG                    0xB4ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_MBSTATUS
 *
 * @BRIEF        Provides MB properties. 
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_MBSTATUS                                 0xB8ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_COMMAND
 *
 * @BRIEF        iLF3 command register: a write to this register decodes a 
 *               command. 
 *               DATA/COMMAND 
 *                0x1 -> Start() 
 *                0x2 -> Stop() 
 *                0x3 -> DbgEn() 
 *                0x4 -> DbgDis() 
 *                0x5 -> DbgStep() 
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_COMMAND                                  0xFFCul

    /* 
     * List of register bitfields for component ILF3
     *
     */

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_REVISION__SCHEME   
 *
 * @BRIEF        Used to distinguish between old scheme and current. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_REVISION__SCHEME                    BITFIELD(31, 30)
#define ILF3__ILF_REVISION__SCHEME__POS               30

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_REVISION__FUNC   
 *
 * @BRIEF        Function indicates a software compatible module family.   
 *               If there is no level of software compatibility a new Func 
 *               number (and hence REVISION) should be assigned. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_REVISION__FUNC                      BITFIELD(27, 16)
#define ILF3__ILF_REVISION__FUNC__POS                 16

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_REVISION__R_RTL   
 *
 * @BRIEF        RTL Version (R), maintained by IP design owner.  
 *               RTL follows a numbering such as X.Y.R.Z which are explained 
 *               in this table.  
 *               R changes ONLY when:  
 *               (1) PDS uploads occur which may have been due to spec 
 *               changes  
 *               (2) Bug fixes occur  
 *               (3) Resets to '0' when X or Y changes.  
 *               Design team has an internal 'Z' (customer invisible) number 
 *               which increments on every drop that happens due to DV and 
 *               RTL updates. Z resets to 0 when R increments. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_REVISION__R_RTL                     BITFIELD(15, 11)
#define ILF3__ILF_REVISION__R_RTL__POS                11

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_REVISION__X_MAJOR   
 *
 * @BRIEF        Major Revision (X), maintained by IP specification owner.  
 *               X changes ONLY when:  
 *               (1) There is a major feature addition. An example would be 
 *               adding Master Mode to Utopia Level2. The Func field (or 
 *               Class/Type in old PID format) will remain the same.  
 *               X does NOT change due to:  
 *               (1) Bug fixes  
 *               (2) Change in feature parameters. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_REVISION__X_MAJOR                   BITFIELD(10, 8)
#define ILF3__ILF_REVISION__X_MAJOR__POS              8

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_REVISION__CUSTOM   
 *
 * @BRIEF        Indicates a special version for a particular device. 
 *               Consequence of use may avoid use of standard Chip Support 
 *               Library (CSL) / Drivers. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_REVISION__CUSTOM                    BITFIELD(7, 6)
#define ILF3__ILF_REVISION__CUSTOM__POS               6

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_REVISION__Y_MINOR   
 *
 * @BRIEF        Minor Revision (Y), maintained by IP specification owner.  
 *               Y changes ONLY when:  
 *               (1) Features are scaled (up or down). Flexibility exists in 
 *               that this feature scalability may either be represented in 
 *               the Y change or a specific register in the IP that indicates 
 *               which features are exactly available.  
 *               (2) When feature creeps from Is-Not list to Is list. But 
 *               this may not be the case once it sees silicon; in which case 
 *               X will change.  
 *               Y does NOT change due to:  
 *               (1) Bug fixes  
 *               (2) Typos or clarifications  
 *               (3) major functional/feature change/addition/deletion. 
 *               Instead these changes may be reflected via R, S, X as 
 *               applicable.  
 *               Spec owner maintains a customer-invisible number 'S' which 
 *               changes due to:  
 *               (1) Typos/clarifications  
 *               (2) Bug documentation. Note that this bug is not due to a 
 *               spec change but due to implementation. Nevertheless, the 
 *               spec tracks the IP bugs. An RTL release (say for silicon 
 *               PG1.1) that occurs due to bug fix should document the 
 *               corresponding spec number (X.Y.S) in its release notes. - 
 *               (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_REVISION__Y_MINOR                   BITFIELD(5, 0)
#define ILF3__ILF_REVISION__Y_MINOR__POS              0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_SYSCONFIG__IDLEMODE   
 *
 * @BRIEF        Configuration of the local target state management mode. 
 *               By definition, target can handle read/write transaction as 
 *               long as it is out of IDLE state. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_SYSCONFIG__IDLEMODE                 BITFIELD(3, 2)
#define ILF3__ILF_SYSCONFIG__IDLEMODE__POS            2

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_SYSCONFIG__SOFTRESET   
 *
 * @BRIEF        Software reset. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_SYSCONFIG__SOFTRESET                BITFIELD(0, 0)
#define ILF3__ILF_SYSCONFIG__SOFTRESET__POS           0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_IRQ_EOI__LINE_NUMBER   
 *
 * @BRIEF        Software End Of Interrupt (EOI) control. Write number of 
 *               interrupt output. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_IRQ_EOI__LINE_NUMBER                BITFIELD(0, 0)
#define ILF3__ILF_IRQ_EOI__LINE_NUMBER__POS           0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_IRQSTATUS_RAW_0__EVENT0   
 *
 * @BRIEF        settable raw status for event #0 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_IRQSTATUS_RAW_0__EVENT0             BITFIELD(0, 0)
#define ILF3__ILF_IRQSTATUS_RAW_0__EVENT0__POS        0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_IRQSTATUS_0__EVENT0   
 *
 * @BRIEF        clearable, enabled status for event #0 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_IRQSTATUS_0__EVENT0                 BITFIELD(0, 0)
#define ILF3__ILF_IRQSTATUS_0__EVENT0__POS            0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_IRQENABLE_SET_0__ENABLE0   
 *
 * @BRIEF        enable for event #0 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_IRQENABLE_SET_0__ENABLE0            BITFIELD(0, 0)
#define ILF3__ILF_IRQENABLE_SET_0__ENABLE0__POS       0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_IRQENABLE_CLR_0__ENABLE0   
 *
 * @BRIEF        enable for event #0 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_IRQENABLE_CLR_0__ENABLE0            BITFIELD(0, 0)
#define ILF3__ILF_IRQENABLE_CLR_0__ENABLE0__POS       0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_CONFIG__AUTOINCCOUNTER   
 *
 * @BRIEF        This field indicates the current increment in MB for the 
 *               auto-increment mechanism. 
 *               The value at reset is 0 and it is incremented at the end of 
 *               each MB (or MBPair in MBAFF) process. 
 *               When it reaches the MAX_COUNT value in MBCT (@0x78) then is 
 *               returns to '0'. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_CONFIG__AUTOINCCOUNTER              BITFIELD(31, 24)
#define ILF3__ILF_CONFIG__AUTOINCCOUNTER__POS         24

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_CONFIG__MBINFO_SIZE   
 *
 * @BRIEF        Selects one of the 3 different MBinfo size to be loaded. - 
 *               (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_CONFIG__MBINFO_SIZE                 BITFIELD(18, 17)
#define ILF3__ILF_CONFIG__MBINFO_SIZE__POS            17

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_CONFIG__IRQAUTOCLEAR_EN   
 *
 * @BRIEF        1: IRQ auto clear enabled, 
 *               0: IRQ auto clear disabled. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_CONFIG__IRQAUTOCLEAR_EN             BITFIELD(16, 16)
#define ILF3__ILF_CONFIG__IRQAUTOCLEAR_EN__POS        16

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_CONFIG__CODEC   
 *
 * @BRIEF        Indicates the codec to be used. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_CONFIG__CODEC                       BITFIELD(15, 8)
#define ILF3__ILF_CONFIG__CODEC__POS                  8

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_CONFIG__PPA_TASK   
 *
 * @BRIEF        bit 0: Load MB info 
 *               bit 1: Compute BS 
 *               bit 2: Load MB 
 *               bit 3: Filter MB 
 *               bit 4: Store MB - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_CONFIG__PPA_TASK                    BITFIELD(4, 0)
#define ILF3__ILF_CONFIG__PPA_TASK__POS               0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_STATUS__WRITEREGERROR   
 *
 * @BRIEF        This bit is cleared by a Start() command when in INITIALIZED 
 *               or COMPLETED state. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_STATUS__WRITEREGERROR               BITFIELD(27, 27)
#define ILF3__ILF_STATUS__WRITEREGERROR__POS          27

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_STATUS__DEBUGSTATE   
 *
 * @BRIEF        Indicates if iLF3 is in DebugON of DebugOFF mode. 
 *               This bit is connected to PO_DBGATTENTION output port. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_STATUS__DEBUGSTATE                  BITFIELD(26, 26)
#define ILF3__ILF_STATUS__DEBUGSTATE__POS             26

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_STATUS__EXECSTATE   
 *
 * @BRIEF        Execution states. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_STATUS__EXECSTATE                   BITFIELD(25, 24)
#define ILF3__ILF_STATUS__EXECSTATE__POS              24

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_STATUS__CYCLECOUNT   
 *
 * @BRIEF        Total number of cycles executed. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_STATUS__CYCLECOUNT                  BITFIELD(15, 0)
#define ILF3__ILF_STATUS__CYCLECOUNT__POS             0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_MBCONFIG_SLICEINFO01__SLICEINFO1   
 *
 * @BRIEF        Bitfield description is not available - (RW)
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_MBCONFIG_SLICEINFO01__SLICEINFO1    BITFIELD(31, 16)
#define ILF3__ILF_MBCONFIG_SLICEINFO01__SLICEINFO1__POS 16

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_MBCONFIG_SLICEINFO01__SLICEINFO0   
 *
 * @BRIEF        Parameter  - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_MBCONFIG_SLICEINFO01__SLICEINFO0    BITFIELD(15, 0)
#define ILF3__ILF_MBCONFIG_SLICEINFO01__SLICEINFO0__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_MBCONFIG_SLICEINFO2__MBCONFIG_ADDRESS_SLICEINFO2   
 *
 * @BRIEF        Parameter  - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_MBCONFIG_SLICEINFO2__MBCONFIG_ADDRESS_SLICEINFO2 BITFIELD(15, 0)
#define ILF3__ILF_MBCONFIG_SLICEINFO2__MBCONFIG_ADDRESS_SLICEINFO2__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_MBCONFIG_MBINFO__MBCONFIG_ADDRESS_HIGH   
 *
 * @BRIEF        Bitfield description is not available - (RW)
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_MBCONFIG_MBINFO__MBCONFIG_ADDRESS_HIGH BITFIELD(31, 16)
#define ILF3__ILF_MBCONFIG_MBINFO__MBCONFIG_ADDRESS_HIGH__POS 16

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_MBCONFIG_MBINFO__MBCONFIG_ADDRESS_LOW   
 *
 * @BRIEF        Parameter  - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_MBCONFIG_MBINFO__MBCONFIG_ADDRESS_LOW BITFIELD(15, 0)
#define ILF3__ILF_MBCONFIG_MBINFO__MBCONFIG_ADDRESS_LOW__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_MBCONFIG_MB__SHIFT_OR_WE   
 *
 * @BRIEF        Bitfield description is not available - (RW)
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_MBCONFIG_MB__SHIFT_OR_WE            BITFIELD(26, 23)
#define ILF3__ILF_MBCONFIG_MB__SHIFT_OR_WE__POS       23

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_MBCONFIG_MB__STRIDE   
 *
 * @BRIEF        Bitfield description is not available - (RW)
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_MBCONFIG_MB__STRIDE                 BITFIELD(22, 16)
#define ILF3__ILF_MBCONFIG_MB__STRIDE__POS            16

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_MBCONFIG_MB__LUMA_CHROMA_ADDRESS   
 *
 * @BRIEF        Parameter  - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_MBCONFIG_MB__LUMA_CHROMA_ADDRESS    BITFIELD(15, 0)
#define ILF3__ILF_MBCONFIG_MB__LUMA_CHROMA_ADDRESS__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_MBCONFIG_COEFFICIENTS0123__COEFF3   
 *
 * @BRIEF        Bitfield description is not available - (RW)
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_MBCONFIG_COEFFICIENTS0123__COEFF3   BITFIELD(31, 24)
#define ILF3__ILF_MBCONFIG_COEFFICIENTS0123__COEFF3__POS 24

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_MBCONFIG_COEFFICIENTS0123__COEFF2   
 *
 * @BRIEF        Bitfield description is not available - (RW)
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_MBCONFIG_COEFFICIENTS0123__COEFF2   BITFIELD(23, 16)
#define ILF3__ILF_MBCONFIG_COEFFICIENTS0123__COEFF2__POS 16

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_MBCONFIG_COEFFICIENTS0123__COEFF1   
 *
 * @BRIEF        Bitfield description is not available - (RW)
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_MBCONFIG_COEFFICIENTS0123__COEFF1   BITFIELD(15, 8)
#define ILF3__ILF_MBCONFIG_COEFFICIENTS0123__COEFF1__POS 8

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_MBCONFIG_COEFFICIENTS0123__COEFF0   
 *
 * @BRIEF        Parameter  - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_MBCONFIG_COEFFICIENTS0123__COEFF0   BITFIELD(7, 0)
#define ILF3__ILF_MBCONFIG_COEFFICIENTS0123__COEFF0__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_MBCONFIG_COEFFICIENTS4567__COEFF7   
 *
 * @BRIEF        Bitfield description is not available - (RW)
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_MBCONFIG_COEFFICIENTS4567__COEFF7   BITFIELD(31, 24)
#define ILF3__ILF_MBCONFIG_COEFFICIENTS4567__COEFF7__POS 24

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_MBCONFIG_COEFFICIENTS4567__COEFF6   
 *
 * @BRIEF        Bitfield description is not available - (RW)
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_MBCONFIG_COEFFICIENTS4567__COEFF6   BITFIELD(23, 16)
#define ILF3__ILF_MBCONFIG_COEFFICIENTS4567__COEFF6__POS 16

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_MBCONFIG_COEFFICIENTS4567__COEFF5   
 *
 * @BRIEF        Bitfield description is not available - (RW)
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_MBCONFIG_COEFFICIENTS4567__COEFF5   BITFIELD(15, 8)
#define ILF3__ILF_MBCONFIG_COEFFICIENTS4567__COEFF5__POS 8

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_MBCONFIG_COEFFICIENTS4567__COEFF4   
 *
 * @BRIEF        Parameter  - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_MBCONFIG_COEFFICIENTS4567__COEFF4   BITFIELD(7, 0)
#define ILF3__ILF_MBCONFIG_COEFFICIENTS4567__COEFF4__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_MBCONFIG_GDPCONFIG__RND   
 *
 * @BRIEF        Bitfield description is not available - (RW)
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_MBCONFIG_GDPCONFIG__RND             BITFIELD(30, 27)
#define ILF3__ILF_MBCONFIG_GDPCONFIG__RND__POS        27

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_MBCONFIG_GDPCONFIG__RIGHT_SHIFT   
 *
 * @BRIEF        Bitfield description is not available - (RW)
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_MBCONFIG_GDPCONFIG__RIGHT_SHIFT     BITFIELD(26, 24)
#define ILF3__ILF_MBCONFIG_GDPCONFIG__RIGHT_SHIFT__POS 24

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_MBCONFIG_GDPCONFIG__COEFFCONFIG   
 *
 * @BRIEF        Parameter  - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_MBCONFIG_GDPCONFIG__COEFFCONFIG     BITFIELD(23, 0)
#define ILF3__ILF_MBCONFIG_GDPCONFIG__COEFFCONFIG__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_MBCONFIG_AUTOINC__AUTOINC   
 *
 * @BRIEF        Bitfield description is not available - (RW)
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_MBCONFIG_AUTOINC__AUTOINC           BITFIELD(11, 11)
#define ILF3__ILF_MBCONFIG_AUTOINC__AUTOINC__POS      11

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_MBCONFIG_AUTOINC__PIXEL_FORMAT   
 *
 * @BRIEF        Bitfield description is not available - (RW)
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_MBCONFIG_AUTOINC__PIXEL_FORMAT      BITFIELD(10, 8)
#define ILF3__ILF_MBCONFIG_AUTOINC__PIXEL_FORMAT__POS 8

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_MBCONFIG_AUTOINC__MAX_COUNT   
 *
 * @BRIEF        Parameter  - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_MBCONFIG_AUTOINC__MAX_COUNT         BITFIELD(7, 0)
#define ILF3__ILF_MBCONFIG_AUTOINC__MAX_COUNT__POS    0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_MBCONFIG_NEXTMBCONFIG__NEXTMBCONFIGADDRESS   
 *
 * @BRIEF        Parameter  - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_MBCONFIG_NEXTMBCONFIG__NEXTMBCONFIGADDRESS BITFIELD(15, 0)
#define ILF3__ILF_MBCONFIG_NEXTMBCONFIG__NEXTMBCONFIGADDRESS__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_MBSTATUS__ISFIRSTMB   
 *
 * @BRIEF        Indicates which MB of the MB pair is being processed. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_MBSTATUS__ISFIRSTMB                 BITFIELD(25, 25)
#define ILF3__ILF_MBSTATUS__ISFIRSTMB__POS            25

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_MBSTATUS__COMPONENT   
 *
 * @BRIEF        Indicates if IPB contains Luma or Chroma pixels. 
 *               Ex: in H264 
 *               0 : Luma pixels  
 *               1: Chroma pixels 
 *               ex: VP6.2 
 *               0: first call for Luma  
 *               1: second call for Luma 
 *               2: chroma - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_MBSTATUS__COMPONENT                 BITFIELD(24, 23)
#define ILF3__ILF_MBSTATUS__COMPONENT__POS            23

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_MBSTATUS__TOP_LEFT_FIELD   
 *
 * @BRIEF        Indicates the type of the top-left MB pair. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_MBSTATUS__TOP_LEFT_FIELD            BITFIELD(22, 22)
#define ILF3__ILF_MBSTATUS__TOP_LEFT_FIELD__POS       22

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_MBSTATUS__TOP_FIELD   
 *
 * @BRIEF        Indicates the type of the Top MB pair. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_MBSTATUS__TOP_FIELD                 BITFIELD(21, 21)
#define ILF3__ILF_MBSTATUS__TOP_FIELD__POS            21

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_MBSTATUS__LEFT_FIELD   
 *
 * @BRIEF        Indicates the type of the Left MB pair. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_MBSTATUS__LEFT_FIELD                BITFIELD(20, 20)
#define ILF3__ILF_MBSTATUS__LEFT_FIELD__POS           20

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_MBSTATUS__CUR_FIELD   
 *
 * @BRIEF        Indicates the type of the current MB. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_MBSTATUS__CUR_FIELD                 BITFIELD(19, 19)
#define ILF3__ILF_MBSTATUS__CUR_FIELD__POS            19

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_MBSTATUS__ALT_V   
 *
 * @BRIEF        Indicates the type of left edge. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_MBSTATUS__ALT_V                     BITFIELD(18, 17)
#define ILF3__ILF_MBSTATUS__ALT_V__POS                17

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_MBSTATUS__ALT_H   
 *
 * @BRIEF        Indicates the type of the top horizontal edge. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_MBSTATUS__ALT_H                     BITFIELD(16, 16)
#define ILF3__ILF_MBSTATUS__ALT_H__POS                16

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_MBSTATUS__LOAD_SLICEINFO   
 *
 * @BRIEF        This flag indicates if the Slice information needs to be 
 *               updated or not. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_MBSTATUS__LOAD_SLICEINFO            BITFIELD(8, 8)
#define ILF3__ILF_MBSTATUS__LOAD_SLICEINFO__POS       8

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_MBSTATUS__PPA_TASK_STATUS   
 *
 * @BRIEF        '1' means which elementary tasks that has been executed. 
 *               bit 0: Load MB info 
 *               bit 1: Compute BS 
 *               bit 2: Load MB 
 *               bit 3: Filter MB 
 *               bit 4: Store MB - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_MBSTATUS__PPA_TASK_STATUS           BITFIELD(4, 0)
#define ILF3__ILF_MBSTATUS__PPA_TASK_STATUS__POS      0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_SLICESTATUS__SLICEINFO   
 *
 * @BRIEF        Slice information register. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_SLICESTATUS__SLICEINFO              BITFIELD(31, 0)
#define ILF3__ILF_SLICESTATUS__SLICEINFO__POS         0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_QP__QP   
 *
 * @BRIEF        Quantization parameter. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_QP__QP                              BITFIELD(5, 0)
#define ILF3__ILF_QP__QP__POS                         0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_QP_IDX__QP_IDX   
 *
 * @BRIEF        QP index. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_QP_IDX__QP_IDX                      BITFIELD(2, 0)
#define ILF3__ILF_QP_IDX__QP_IDX__POS                 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_BS__BS   
 *
 * @BRIEF        Boundary strength for H264, but those fields are also used 
 *               for filter flag for other codecs  
 *               like VC-1 and OVT, Luma and Chroma when they are differents 
 *               ... 
 *               This lead currently leads in the worst case up to 149 BS 
 *               values. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_BS__BS                              BITFIELD(3, 0)
#define ILF3__ILF_BS__BS__POS                         0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_IPB__IPB_BYTE_EXT   
 *
 * @BRIEF        3 bits extention used in VC-1 OVT process. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_IPB__IPB_BYTE_EXT                   BITFIELD(10, 8)
#define ILF3__ILF_IPB__IPB_BYTE_EXT__POS              8

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_IPB__IPB_BYTE   
 *
 * @BRIEF        Byte element of IPB. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_IPB__IPB_BYTE                       BITFIELD(7, 0)
#define ILF3__ILF_IPB__IPB_BYTE__POS                  0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_COMMAND__CMD   
 *
 * @BRIEF        DATA/COMMAND 
 *                0x1 -> Start() 
 *                0x2 -> Stop() 
 *                0x3 -> DbgEn() 
 *                0x4 -> DbgDis() 
 *                0x5 -> DbgStep() - (WO) 
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_COMMAND__CMD                        BITFIELD(2, 0)
#define ILF3__ILF_COMMAND__CMD__POS                   0

    /* 
     * List of register bitfields values for component ILF3
     *
     */

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_REVISION__SCHEME__LEGACY
 *
 * @BRIEF        Legacy ASP or WTBU scheme - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_REVISION__SCHEME__LEGACY            0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_REVISION__SCHEME__H08
 *
 * @BRIEF        Highlander 0.8 scheme - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_REVISION__SCHEME__H08               0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_REVISION__CUSTOM__STANDARD
 *
 * @BRIEF        Non custom (standard) revision - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_REVISION__CUSTOM__STANDARD          0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_SYSCONFIG__IDLEMODE__FORCE
 *
 * @BRIEF        Force-idle mode: local target's idle state follows 
 *               (acknowledges) the system's idle requests unconditionally, 
 *               i.e. regardless of the IP module's internal requirements. 
 *               Backup mode, for debug only. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_SYSCONFIG__IDLEMODE__FORCE          0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_SYSCONFIG__IDLEMODE__NO
 *
 * @BRIEF        No-idle mode: local target never enters idle state. 
 *               Backup mode, for debug only. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_SYSCONFIG__IDLEMODE__NO             0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_SYSCONFIG__IDLEMODE__SMART
 *
 * @BRIEF        Smart-idle mode: local target's idle state eventually 
 *               follows (acknowledges) the system's idle requests, depending 
 *               on the IP module's internal requirements. 
 *               IP module shall not generate (IRQ- or DMA-request-related) 
 *               wakeup events. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_SYSCONFIG__IDLEMODE__SMART          0x2ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_SYSCONFIG__IDLEMODE__SMARTWAKEUP
 *
 * @BRIEF        Smart-idle wakeup-capable mode: local target's idle state 
 *               eventually follows (acknowledges) the system's idle 
 *               requests, depending on the IP module's internal 
 *               requirements. 
 *               IP module may generate (IRQ- or DMA-request-related) wakeup 
 *               events when in idle state. 
 *               Mode is only relevant if the appropriate IP module "swakeup" 
 *               output(s) is (are) implemented. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_SYSCONFIG__IDLEMODE__SMARTWAKEUP    0x3ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_SYSCONFIG__SOFTRESET__DONE
 *
 * @BRIEF        Reset done, no pending action - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_SYSCONFIG__SOFTRESET__DONE          0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_SYSCONFIG__SOFTRESET__NOACTION
 *
 * @BRIEF        No action - (Write) 
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_SYSCONFIG__SOFTRESET__NOACTION      0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_SYSCONFIG__SOFTRESET__RESET
 *
 * @BRIEF        Initiate software reset - (Write) 
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_SYSCONFIG__SOFTRESET__RESET         0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_SYSCONFIG__SOFTRESET__PENDING
 *
 * @BRIEF        Reset (software or other) ongoing - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_SYSCONFIG__SOFTRESET__PENDING       0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_IRQ_EOI__LINE_NUMBER__READ0
 *
 * @BRIEF        Reads always 0 (no EOI memory) - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_IRQ_EOI__LINE_NUMBER__READ0         0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_IRQ_EOI__LINE_NUMBER__EOI0
 *
 * @BRIEF        EOI for interrupt output line #0 - (Write) 
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_IRQ_EOI__LINE_NUMBER__EOI0          0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_IRQ_EOI__LINE_NUMBER__EOI1
 *
 * @BRIEF        EOI for interrupt output line #1 - (Write) 
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_IRQ_EOI__LINE_NUMBER__EOI1          0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_IRQSTATUS_RAW_0__EVENT0__NOACTION
 *
 * @BRIEF        No action - (Write) 
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_IRQSTATUS_RAW_0__EVENT0__NOACTION   0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_IRQSTATUS_RAW_0__EVENT0__NOEVENT
 *
 * @BRIEF        No event pending - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_IRQSTATUS_RAW_0__EVENT0__NOEVENT    0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_IRQSTATUS_RAW_0__EVENT0__PENDING
 *
 * @BRIEF        Event pending - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_IRQSTATUS_RAW_0__EVENT0__PENDING    0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_IRQSTATUS_RAW_0__EVENT0__SET
 *
 * @BRIEF        Set event (debug) - (Write) 
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_IRQSTATUS_RAW_0__EVENT0__SET        0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_IRQSTATUS_0__EVENT0__NOACTION
 *
 * @BRIEF        No action - (Write) 
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_IRQSTATUS_0__EVENT0__NOACTION       0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_IRQSTATUS_0__EVENT0__NOEVENT
 *
 * @BRIEF        No (enabled) event pending - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_IRQSTATUS_0__EVENT0__NOEVENT        0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_IRQSTATUS_0__EVENT0__PENDING
 *
 * @BRIEF        Event pending - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_IRQSTATUS_0__EVENT0__PENDING        0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_IRQSTATUS_0__EVENT0__CLEAR
 *
 * @BRIEF        Clear (raw) event - (Write) 
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_IRQSTATUS_0__EVENT0__CLEAR          0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_IRQENABLE_SET_0__ENABLE0__NOACTION
 *
 * @BRIEF        No action - (Write) 
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_IRQENABLE_SET_0__ENABLE0__NOACTION  0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_IRQENABLE_SET_0__ENABLE0__DISABLED
 *
 * @BRIEF        Interrupt disabled (masked) - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_IRQENABLE_SET_0__ENABLE0__DISABLED  0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_IRQENABLE_SET_0__ENABLE0__ENABLED
 *
 * @BRIEF        Interrupt enabled - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_IRQENABLE_SET_0__ENABLE0__ENABLED   0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_IRQENABLE_SET_0__ENABLE0__ENABLE
 *
 * @BRIEF        Enable interrupt - (Write) 
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_IRQENABLE_SET_0__ENABLE0__ENABLE    0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_IRQENABLE_CLR_0__ENABLE0__NOACTION
 *
 * @BRIEF        No action - (Write) 
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_IRQENABLE_CLR_0__ENABLE0__NOACTION  0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_IRQENABLE_CLR_0__ENABLE0__DISABLED
 *
 * @BRIEF        Interrupt disabled (masked) - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_IRQENABLE_CLR_0__ENABLE0__DISABLED  0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_IRQENABLE_CLR_0__ENABLE0__ENABLED
 *
 * @BRIEF        Interrupt enabled - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_IRQENABLE_CLR_0__ENABLE0__ENABLED   0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_IRQENABLE_CLR_0__ENABLE0__DISABLE
 *
 * @BRIEF        Disable interrupt - (Write) 
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_IRQENABLE_CLR_0__ENABLE0__DISABLE   0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_CONFIG__MBINFO_SIZE__E1
 *
 * @BRIEF        use bi-pred 16MV MB info size - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_CONFIG__MBINFO_SIZE__E1             0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_CONFIG__MBINFO_SIZE__E2
 *
 * @BRIEF        use 16MV MB info size - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_CONFIG__MBINFO_SIZE__E2             0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_CONFIG__MBINFO_SIZE__E3
 *
 * @BRIEF        use 4MV MB info size. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_CONFIG__MBINFO_SIZE__E3             0x2ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_CONFIG__MBINFO_SIZE__E4
 *
 * @BRIEF        Forbiden value / not functional - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_CONFIG__MBINFO_SIZE__E4             0x3ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_CONFIG__CODEC__E1
 *
 * @BRIEF        H264 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_CONFIG__CODEC__E1                   0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_CONFIG__CODEC__E2
 *
 * @BRIEF        MPEG-1/2 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_CONFIG__CODEC__E2                   0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_CONFIG__CODEC__E3
 *
 * @BRIEF        MPEG-4 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_CONFIG__CODEC__E3                   0x2ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_CONFIG__CODEC__E4
 *
 * @BRIEF        VC1 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_CONFIG__CODEC__E4                   0x3ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_CONFIG__CODEC__E5
 *
 * @BRIEF        AVS - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_CONFIG__CODEC__E5                   0x4ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_CONFIG__CODEC__E6
 *
 * @BRIEF        RV8 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_CONFIG__CODEC__E6                   0x5ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_CONFIG__CODEC__E7
 *
 * @BRIEF        RV9 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_CONFIG__CODEC__E7                   0x6ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_CONFIG__CODEC__E8
 *
 * @BRIEF        RV10 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_CONFIG__CODEC__E8                   0x7ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_CONFIG__CODEC__E9
 *
 * @BRIEF        ON2 VP6 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_CONFIG__CODEC__E9                   0x8ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_CONFIG__CODEC__E10
 *
 * @BRIEF        ON2 VP7 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_CONFIG__CODEC__E10                  0x9ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_CONFIG__CODEC__E11
 *
 * @BRIEF        GDP filter - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_CONFIG__CODEC__E11                  0xFul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_STATUS__WRITEREGERROR__E1
 *
 * @BRIEF        Normal mode. - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_STATUS__WRITEREGERROR__E1           0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_STATUS__WRITEREGERROR__E2
 *
 * @BRIEF        Attempting to write an internal register via an OCP write, 
 *               while in EXECUTING state. - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_STATUS__WRITEREGERROR__E2           0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_STATUS__DEBUGSTATE__E1
 *
 * @BRIEF        iLF3 is in Debug OFF mode - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_STATUS__DEBUGSTATE__E1              0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_STATUS__DEBUGSTATE__E2
 *
 * @BRIEF        iLF3 is in Debug ON mode - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_STATUS__DEBUGSTATE__E2              0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_STATUS__EXECSTATE__E1
 *
 * @BRIEF        Initialized - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_STATUS__EXECSTATE__E1               0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_STATUS__EXECSTATE__E2
 *
 * @BRIEF        Halted - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_STATUS__EXECSTATE__E2               0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_STATUS__EXECSTATE__E3
 *
 * @BRIEF        Executing - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_STATUS__EXECSTATE__E3               0x2ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_STATUS__EXECSTATE__E4
 *
 * @BRIEF        Completed - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_STATUS__EXECSTATE__E4               0x3ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_MBSTATUS__ISFIRSTMB__E1
 *
 * @BRIEF        The current MB is the second MB of the MB pair. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_MBSTATUS__ISFIRSTMB__E1             0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_MBSTATUS__ISFIRSTMB__E2
 *
 * @BRIEF        The current MB is the first MB of the MB pair. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_MBSTATUS__ISFIRSTMB__E2             0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_MBSTATUS__TOP_LEFT_FIELD__E1
 *
 * @BRIEF        top-left MB pair is frame - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_MBSTATUS__TOP_LEFT_FIELD__E1        0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_MBSTATUS__TOP_LEFT_FIELD__E2
 *
 * @BRIEF        top-left MB pair is field - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_MBSTATUS__TOP_LEFT_FIELD__E2        0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_MBSTATUS__TOP_FIELD__E1
 *
 * @BRIEF        top MB pair is frame - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_MBSTATUS__TOP_FIELD__E1             0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_MBSTATUS__TOP_FIELD__E2
 *
 * @BRIEF        top MB pair is field - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_MBSTATUS__TOP_FIELD__E2             0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_MBSTATUS__LEFT_FIELD__E1
 *
 * @BRIEF        left MB pair is frame - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_MBSTATUS__LEFT_FIELD__E1            0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_MBSTATUS__LEFT_FIELD__E2
 *
 * @BRIEF        left MB pair is field - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_MBSTATUS__LEFT_FIELD__E2            0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_MBSTATUS__CUR_FIELD__E1
 *
 * @BRIEF        Current MB pair is Frame - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_MBSTATUS__CUR_FIELD__E1             0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_MBSTATUS__CUR_FIELD__E2
 *
 * @BRIEF        Current MB pair is Field - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_MBSTATUS__CUR_FIELD__E2             0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_MBSTATUS__ALT_V__E1
 *
 * @BRIEF        left edge is not alternate - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_MBSTATUS__ALT_V__E1                 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_MBSTATUS__ALT_V__E2
 *
 * @BRIEF        left edge is frame/field - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_MBSTATUS__ALT_V__E2                 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_MBSTATUS__ALT_V__E3
 *
 * @BRIEF        left edge is field/frame - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_MBSTATUS__ALT_V__E3                 0x2ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_MBSTATUS__ALT_V__E4
 *
 * @BRIEF        forbiden / not functional - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_MBSTATUS__ALT_V__E4                 0x3ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_MBSTATUS__ALT_H__E1
 *
 * @BRIEF        top horizontal edge is not frame/field - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_MBSTATUS__ALT_H__E1                 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_MBSTATUS__ALT_H__E2
 *
 * @BRIEF        top horizontal edge is frame/field - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_MBSTATUS__ALT_H__E2                 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_MBSTATUS__LOAD_SLICEINFO__E1
 *
 * @BRIEF        Slice_info is up to date, no load required. - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_MBSTATUS__LOAD_SLICEINFO__E1        0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_MBSTATUS__LOAD_SLICEINFO__E2
 *
 * @BRIEF        Slice_info is out of date, load is required. - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_MBSTATUS__LOAD_SLICEINFO__E2        0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   ILF3__ILF_SLICESTATUS__SLICEINFO__SLICE_DATA
 *
 * @BRIEF        This register contains Slice information, to be used by Pico 
 *               engine. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define ILF3__ILF_SLICESTATUS__SLICEINFO__SLICE_DATA  0x0ul

#ifdef __cplusplus
}
#endif
#endif                                                     /* __ILF3_CRED_H */

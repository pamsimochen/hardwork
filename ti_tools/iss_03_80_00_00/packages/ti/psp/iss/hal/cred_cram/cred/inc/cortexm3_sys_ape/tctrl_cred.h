/** ==================================================================
 *  @file   tctrl_cred.h                                                  
 *                                                                    
 *  @path   /ti/psp/iss/hal/cred_cram/cred/inc/cortexm3_sys_ape/                                                  
 *                                                                    
 *  @desc   This  File contains.                                      
 * ===================================================================
 *  Copyright (c) Texas Instruments Inc 2011, 2012                    
 *                                                                    
 *  Use of this software is controlled by the terms and conditions found
 *  in the license agreement under which this software has been supplied
 * ===================================================================*/

/* ============================================================================ 
 * TEXAS INSTRUMENTS INCORPORATED PROPRIETARY INFORMATION Property of Texas
 * Instruments For Unrestricted Internal Use Only Unauthorized reproduction
 * and/or distribution is strictly prohibited.  This product is protected
 * under copyright law and trade secret law as an unpublished work.  Created
 * 2008, (C) Copyright 2008 Texas Instruments.  All rights reserved. */

/**
 *  @Component:   TCTRL
 *
 *  @Filename:    tctrl_cred.h
 *
 *  @Description: Component description is not available
 *
 *  Generated by: Socrates CRED generator prototype
 *
    *//* ====================================================================== */

#ifndef __TCTRL_CRED_H
#define __TCTRL_CRED_H

#ifdef __cplusplus
extern "C" {
#endif

    /* 
     * Instance TCTRL of component TCTRL mapped in MONICA at address 0x55040400
     */

                                                                              /*-------------------------------------------------------------------------*//**
 * @DEFINITION   BITFIELD
 *
 * @BRIEF        The bitfield must be defined according to register width
 *               of the component - 64/32/16/8
 *
    *//*------------------------------------------------------------------------ */
#undef BITFIELD
#define BITFIELD BITFIELD_32

    /* 
     *  List of Register arrays for component TCTRL
     *
     */

    /* 
     *  List of bundle arrays for component TCTRL
     *
     */

    /* 
     *  List of bundles for component TCTRL
     *
     */

    /* 
     * List of registers for component TCTRL
     *
     */

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   TCTRL__TCTRL_REVISION
 *
 * @BRIEF        OCP-SOCKET REVISION REGISTER 
 *               This register contains the IP revision code in binary coded 
 *               digital. For example, we have: 0x01 = revision 0.1 and 0x21 
 *               = revision 2.1 
 *
    *//*------------------------------------------------------------------------ */
#define TCTRL__TCTRL_REVISION                              0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   TCTRL__TCTRL_SYSCONFIG
 *
 * @BRIEF        OCP-SOCKET SYSTEM CONFIGURATION REGISTER 
 *
    *//*------------------------------------------------------------------------ */
#define TCTRL__TCTRL_SYSCONFIG                             0x4ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   TCTRL__TCTRL_SYSSTATUS
 *
 * @BRIEF        OCP-SOCKET SYSTEM STATUS REGISTER 
 *
    *//*------------------------------------------------------------------------ */
#define TCTRL__TCTRL_SYSSTATUS                             0x8ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   TCTRL__TCTRL_STRB_LENGTH
 *
 * @BRIEF        TIMING CONTROL - STROBE LENGTH REGISTER 
 *               This register is used by the TIMING CTRL module to generate 
 *               the STROBE signal. 
 *
    *//*------------------------------------------------------------------------ */
#define TCTRL__TCTRL_STRB_LENGTH                           0x10ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   TCTRL__TCTRL_PSTRB_LENGTH
 *
 * @BRIEF        TIMING CONTROL - PRESTROBE LENGTH REGISTER 
 *               This register is used by the TIMING CTRL module to generate 
 *               the PRESTROBE signal. 
 *
    *//*------------------------------------------------------------------------ */
#define TCTRL__TCTRL_PSTRB_LENGTH                          0x14ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   TCTRL__TCTRL_SHUT_LENGTH
 *
 * @BRIEF        TIMING CONTROL - SHUTTER LENGTH REGISTER 
 *               This register is used by the TIMING CTRL module to generate 
 *               the SHUTTER signal. 
 *
    *//*------------------------------------------------------------------------ */
#define TCTRL__TCTRL_SHUT_LENGTH                           0x18ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   TCTRL__TCTRL_GRESET_LENGTH
 *
 * @BRIEF        TIMING CONTROL - GLOBAL SHUTTER LENGTH REGISTER 
 *               This register is used by the TIMING CTRL module to generate 
 *               the CAM.GRESET signal. 
 *
    *//*------------------------------------------------------------------------ */
#define TCTRL__TCTRL_GRESET_LENGTH                         0x1Cul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   TCTRL__TCTRL_STRB_DELAY
 *
 * @BRIEF        TIMING CONTROL - STROBE DELAY REGISTER 
 *               This register is used by the TIMING CTRL module to generate 
 *               the STROBE signal. 
 *
    *//*------------------------------------------------------------------------ */
#define TCTRL__TCTRL_STRB_DELAY                            0x20ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   TCTRL__TCTRL_PSTRB_DELAY
 *
 * @BRIEF        TIMING CONTROL - PRE STROBE DELAY REGISTER 
 *               This register is used by the TIMING CTRL module to generate 
 *               the PRESTROBE signal. 
 *
    *//*------------------------------------------------------------------------ */
#define TCTRL__TCTRL_PSTRB_DELAY                           0x24ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   TCTRL__TCTRL_SHUT_DELAY
 *
 * @BRIEF        TIMING CONTROL - SHUTTER DELAY REGISTER 
 *               This register is used by the TIMING CTRL module to generate 
 *               the SHUTTER signal. 
 *
    *//*------------------------------------------------------------------------ */
#define TCTRL__TCTRL_SHUT_DELAY                            0x28ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   TCTRL__TCTRL_CTRL
 *
 * @BRIEF        TIMING CONTROL - CONTROL REGISTER 
 *
    *//*------------------------------------------------------------------------ */
#define TCTRL__TCTRL_CTRL                                  0x30ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   TCTRL__TCTRL_PSTRB_REPLAY
 *
 * @BRIEF        TIMING CONTROL - PRESTROBE REPLAY REGISTER 
 *               This register is used by the TIMING CTRL module to generate 
 *               the prestrobe signal. 
 *
    *//*------------------------------------------------------------------------ */
#define TCTRL__TCTRL_PSTRB_REPLAY                          0x34ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   TCTRL__TCTRL_FRAME
 *
 * @BRIEF        TIMING CONTROL - FRAME REGISTER 
 *               This register is used by the TIMING CTRL module to generate 
 *               the SHUTTER, PRESTROBE and STROBE signals. 
 *
    *//*------------------------------------------------------------------------ */
#define TCTRL__TCTRL_FRAME                                 0x38ul

    /* 
     * List of register bitfields for component TCTRL
     *
     */

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   TCTRL__TCTRL_REVISION__REV   
 *
 * @BRIEF        IP revision. 
 *               [7:4] major revision 
 *               [3:0] minor revision 
 *                - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define TCTRL__TCTRL_REVISION__REV                    BITFIELD(7, 0)
#define TCTRL__TCTRL_REVISION__REV__POS               0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   TCTRL__TCTRL_SYSCONFIG__SOFT_RESET   
 *
 * @BRIEF        Software reset. Set the bit to 1 to trigger the module 
 *               reset. The bit is automatically reset be the hw. During 
 *               reads return 0. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define TCTRL__TCTRL_SYSCONFIG__SOFT_RESET            BITFIELD(1, 1)
#define TCTRL__TCTRL_SYSCONFIG__SOFT_RESET__POS       1

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   TCTRL__TCTRL_SYSCONFIG__AUTO_IDLE   
 *
 * @BRIEF        Internal OCP & functional clock gating strategy - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define TCTRL__TCTRL_SYSCONFIG__AUTO_IDLE             BITFIELD(0, 0)
#define TCTRL__TCTRL_SYSCONFIG__AUTO_IDLE__POS        0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   TCTRL__TCTRL_SYSSTATUS__RESET_DONE   
 *
 * @BRIEF        Internal reset monitoring - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define TCTRL__TCTRL_SYSSTATUS__RESET_DONE            BITFIELD(0, 0)
#define TCTRL__TCTRL_SYSSTATUS__RESET_DONE__POS       0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   TCTRL__TCTRL_STRB_LENGTH__LENGTH   
 *
 * @BRIEF        Sets the length of the CAM.STROBE signal assertion in cycles 
 *               of the CNTCLK clock. The CNTCLK frequency is generated with 
 *               the TCTRL_CTRL.DIVC bit field. After signal assertion, the 
 *               TCTRL_CTRL.STRBEN bit is automatically cleared. The possible 
 *               values are 0 to 2^24-1 cycles. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define TCTRL__TCTRL_STRB_LENGTH__LENGTH              BITFIELD(23, 0)
#define TCTRL__TCTRL_STRB_LENGTH__LENGTH__POS         0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   TCTRL__TCTRL_PSTRB_LENGTH__LENGTH   
 *
 * @BRIEF        Sets the length of the CAM.PRESTROBE signal assertion in 
 *               cycles of the CNTCLK clock. The CNTCLK frequency is 
 *               generated with the TCTRL_CTRL.DIVC bit field. After signal 
 *               assertion, the TCTRL_CTRL.PSTRBEN bit is automatically 
 *               cleared. The possible values are 0 to 2^24-1 cycles. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define TCTRL__TCTRL_PSTRB_LENGTH__LENGTH             BITFIELD(23, 0)
#define TCTRL__TCTRL_PSTRB_LENGTH__LENGTH__POS        0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   TCTRL__TCTRL_SHUT_LENGTH__LENGTH   
 *
 * @BRIEF        Sets the length of the CAM.SHUTTER signal assertion in 
 *               cycles of the CNTCLK clock. The CNTCLK frequency is 
 *               generated with the TCTRL_CTRL.DIVC bit field. After signal 
 *               assertion, the TCTRL_CTRL.SHUTEN bit is automatically 
 *               cleared. The possible values are 0 to 2^24-1 cycles. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define TCTRL__TCTRL_SHUT_LENGTH__LENGTH              BITFIELD(23, 0)
#define TCTRL__TCTRL_SHUT_LENGTH__LENGTH__POS         0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   TCTRL__TCTRL_GRESET_LENGTH__LENGTH   
 *
 * @BRIEF        Sets the length of the CAM.GLOBAL_RESET signal assertion in 
 *               cycles of the CNTCLK clock.  
 *               The CNTCLK frequency is generated with the TCTRL_CTRL.DIVC 
 *               bit field. After signal assertion, the TCTRL_CTRL.GRESETEN 
 *               bit is automatically cleared. The possible values are 0 to 
 *               2^24-1 cycles. 
 *               The polarity of the CAM.GLOBAL_RESET signal is set by the 
 *               TCTRL_CTRL.GRESETPOL bit. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define TCTRL__TCTRL_GRESET_LENGTH__LENGTH            BITFIELD(23, 0)
#define TCTRL__TCTRL_GRESET_LENGTH__LENGTH__POS       0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   TCTRL__TCTRL_STRB_DELAY__DELAY   
 *
 * @BRIEF        Sets the delay for the CAM.STROBE signal assertion in cycles 
 *               of the CNTCLK clock. The CNTCLK frequency is generated with 
 *               the TCTRL_CTRL.DIVC bit field. The possible values are 0 to 
 *               2^25-1 cycles. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define TCTRL__TCTRL_STRB_DELAY__DELAY                BITFIELD(24, 0)
#define TCTRL__TCTRL_STRB_DELAY__DELAY__POS           0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   TCTRL__TCTRL_PSTRB_DELAY__DELAY   
 *
 * @BRIEF        Sets the delay for the CAM.PSTROBE signal assertion in 
 *               cycles of the CNTCLK clock. The CNTCLK frequency is 
 *               generated with the TCTRL_CTRL.DIVC bit field. The possible 
 *               values are 0 to 2^25-1 cycles. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define TCTRL__TCTRL_PSTRB_DELAY__DELAY               BITFIELD(24, 0)
#define TCTRL__TCTRL_PSTRB_DELAY__DELAY__POS          0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   TCTRL__TCTRL_SHUT_DELAY__DELAY   
 *
 * @BRIEF        Sets the delay for the CAM.SHUTTER signal assertion in 
 *               cycles of the CNTCLK clock. The CNTCLK frequency is 
 *               generated with the TCTRL_CTRL.DIVC bit field. The possible 
 *               values are 0 to 2^25-1 cycles. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define TCTRL__TCTRL_SHUT_DELAY__DELAY                BITFIELD(24, 0)
#define TCTRL__TCTRL_SHUT_DELAY__DELAY__POS           0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   TCTRL__TCTRL_CTRL__GRESETDIR   
 *
 * @BRIEF        Sets the direction of the GLOBAL_RESET signal. 
 *               0x0: INPUT. GLOBAL_RESET is an input to the TIMING CONTROL 
 *               module. GLOBAL_RESET is externally generated. 
 *               0x1: OUTPUT. GLOBAL_RESET is an output of the TIMING CONTROL 
 *               module. GLOBAL_RESET is internally generated. If GRESETEN is 
 *               set to 1, the internally generated GLOBAL_RESET will trigger 
 *               the generation of the PRESTROBE, STROBE and SHUTTER signals. 
 *               The frame counters are ignored. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define TCTRL__TCTRL_CTRL__GRESETDIR                  BITFIELD(31, 31)
#define TCTRL__TCTRL_CTRL__GRESETDIR__POS             31

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   TCTRL__TCTRL_CTRL__GRESETPOL   
 *
 * @BRIEF        Sets the polarity of the global reset signal: 
 *               CAM.GLOBAL_RESET. It applies whatever the direction of the 
 *               GLOBAL_RESET signal: input or output. 
 *               0x0: active high 
 *               0x1: active low 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define TCTRL__TCTRL_CTRL__GRESETPOL                  BITFIELD(30, 30)
#define TCTRL__TCTRL_CTRL__GRESETPOL__POS             30

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   TCTRL__TCTRL_CTRL__GRESETEN   
 *
 * @BRIEF        Triggers the generation of the CAM.GLOBAL_RESET signal. The 
 *               signal is asserted immediately. If enabled, the 
 *               CAM.GLOBAL_RESET signal will be asserted for 
 *               TCTRL_GRESET_LENGTH cycles. After the signal assertion, the 
 *               enable bit is automatically cleared to 0. 
 *               The polarity of the GLOBAL_RESET signal is set with 
 *               TCTRL_CTRL.GRESETPOL. 
 *               Enabling this bit triggers the generation of the CAM.SHUTTER 
 *               and CAM.STROBE signals (if previously enabled). The frame 
 *               counters shall be set to 0 when this bit is set to 1 and 
 *               GRESETDIR is set a OUTPUT. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define TCTRL__TCTRL_CTRL__GRESETEN                   BITFIELD(29, 29)
#define TCTRL__TCTRL_CTRL__GRESETEN__POS              29

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   TCTRL__TCTRL_CTRL__INSEL   
 *
 * @BRIEF        Sets the mode that will trigger the SHUTTER, PRESTROBE and 
 *               STROBE signals. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define TCTRL__TCTRL_CTRL__INSEL                      BITFIELD(28, 27)
#define TCTRL__TCTRL_CTRL__INSEL__POS                 27

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   TCTRL__TCTRL_CTRL__STRBPSTRBPOL   
 *
 * @BRIEF        Sets the polarity of the strobe and prestrobe signals. - 
 *               (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define TCTRL__TCTRL_CTRL__STRBPSTRBPOL               BITFIELD(26, 26)
#define TCTRL__TCTRL_CTRL__STRBPSTRBPOL__POS          26

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   TCTRL__TCTRL_CTRL__SHUTPOL   
 *
 * @BRIEF        Sets the polarity of the mechanical shutter signal: 
 *               CAM.SHUTTER - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define TCTRL__TCTRL_CTRL__SHUTPOL                    BITFIELD(24, 24)
#define TCTRL__TCTRL_CTRL__SHUTPOL__POS               24

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   TCTRL__TCTRL_CTRL__STRBEN   
 *
 * @BRIEF        Flash strobe signal enable. If enabled, the STROBE signal 
 *               will be asserted after TCTRL_FRAME.STRB frames have been 
 *               received and a delay of TCTRL_STRB_DELAY cycles have passed. 
 *               The STROBE signal is asserted for TCTRL_STRB_LENGTH cycles. 
 *               After the signal assertion, the enable bit is automatically 
 *               cleared to 0. 
 *               This signal shall not be disabled by software. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define TCTRL__TCTRL_CTRL__STRBEN                     BITFIELD(23, 23)
#define TCTRL__TCTRL_CTRL__STRBEN__POS                23

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   TCTRL__TCTRL_CTRL__PSTRBEN   
 *
 * @BRIEF        Flash prestrobe signal enable. If enabled, the PRESTROBE 
 *               signal will be asserted after TCTRL_FRAME.PSTRB frames have 
 *               been received and a delay of TCTRL_PSTRB_DELAY cycles have 
 *               passed. The PRESTROBE signal is asserted for 
 *               TCTRL_PSTRB_LENGTH cycles. After the signal assertion, the 
 *               enable bit is automatically cleared to 0. 
 *               This signal shall not be disabled by software. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define TCTRL__TCTRL_CTRL__PSTRBEN                    BITFIELD(22, 22)
#define TCTRL__TCTRL_CTRL__PSTRBEN__POS               22

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   TCTRL__TCTRL_CTRL__SHUTEN   
 *
 * @BRIEF        Mechanical shutter signal enable. If enabled, the SHUTTER 
 *               signal will be asserted after TCTRL_FRAME.SHUT frames have 
 *               been received and a delay of TCTRL_SHUT_DELAY cycles have 
 *               passed. The SHUTTER signal is asserted for TCTRL_SHUT_LENGTH 
 *               cycles. After the signal assertion, the enable bit is 
 *               automatically cleared to 0. 
 *               This signal shall not be disabled by software. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define TCTRL__TCTRL_CTRL__SHUTEN                     BITFIELD(21, 21)
#define TCTRL__TCTRL_CTRL__SHUTEN__POS                21

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   TCTRL__TCTRL_CTRL__DIVC   
 *
 * @BRIEF        Sets the clock divisor value for the CNTCLK clock generation 
 *               based on the CLK input clock.  
 *               CNTCLK is an internal clock used by the TIMING CTRL module 
 *               counters.  
 *               Usually, CNTCLK = CLK / DIVC, except for some particular 
 *               values shown hereafter. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define TCTRL__TCTRL_CTRL__DIVC                       BITFIELD(18, 10)
#define TCTRL__TCTRL_CTRL__DIVC__POS                  10

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   TCTRL__TCTRL_PSTRB_REPLAY__COUNTER   
 *
 * @BRIEF        Sets the number of PRESTROBE pulses after the original 
 *               pulse.  
 *               If this bit is set to 0, the PRESTROBE signal behavior is 
 *               only controlled by TCTRL_FRAME.STRB, TCTRL_PSTRB_DELAY and 
 *               TCTRL_PSTRB_LENGTH. If TCTRL_PSTRB_LENGTH=0, there is no 
 *               replay. 
 *               This bit is useful when one wants to enable red-eye removal. 
 *               - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define TCTRL__TCTRL_PSTRB_REPLAY__COUNTER            BITFIELD(31, 25)
#define TCTRL__TCTRL_PSTRB_REPLAY__COUNTER__POS       25

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   TCTRL__TCTRL_PSTRB_REPLAY__DELAY   
 *
 * @BRIEF        Sets the delay for the PRESTROBE signal re-assertion in 
 *               cycles of the CNTCLK clock. The CNTCLK frequency is 
 *               generated with the TCTRL_CTRL.DIVC bit field. The possible 
 *               values are 0 to 2^25-1 cycles. 
 *               If TCTRL_PSTRB_LENGTH=0, there is no replay. This bit field 
 *               shall not be set to 0 if the COUNTER is set to a value 
 *               different of 0. 
 *               This bit is useful when one wants to enable red-eye removal. 
 *               - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define TCTRL__TCTRL_PSTRB_REPLAY__DELAY              BITFIELD(24, 0)
#define TCTRL__TCTRL_PSTRB_REPLAY__DELAY__POS         0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   TCTRL__TCTRL_FRAME__STRB   
 *
 * @BRIEF        Frame counter for the STROBE signal generation. From 0 to 63 
 *               frames. 
 *               This bit field is ignored if TCTRL.INSEL=GRESET. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define TCTRL__TCTRL_FRAME__STRB                      BITFIELD(17, 12)
#define TCTRL__TCTRL_FRAME__STRB__POS                 12

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   TCTRL__TCTRL_FRAME__PSTRB   
 *
 * @BRIEF        Frame counter for the PRESTROBE signal generation. From 0 to 
 *               63 frames. 
 *               This bit field is ignored if TCTRL.INSEL=GRESET. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define TCTRL__TCTRL_FRAME__PSTRB                     BITFIELD(11, 6)
#define TCTRL__TCTRL_FRAME__PSTRB__POS                6

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   TCTRL__TCTRL_FRAME__SHUT   
 *
 * @BRIEF        Frame counter for the SHUTTER signal generation. From 0 to 
 *               63 frames. 
 *               This bit field is ignored if TCTRL.INSEL=GRESET. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define TCTRL__TCTRL_FRAME__SHUT                      BITFIELD(5, 0)
#define TCTRL__TCTRL_FRAME__SHUT__POS                 0

    /* 
     * List of register bitfields values for component TCTRL
     *
     */

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   TCTRL__TCTRL_SYSCONFIG__SOFT_RESET__NORMAL
 *
 * @BRIEF        Normal mode. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define TCTRL__TCTRL_SYSCONFIG__SOFT_RESET__NORMAL    0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   TCTRL__TCTRL_SYSCONFIG__SOFT_RESET__RESET
 *
 * @BRIEF        The module is reset. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define TCTRL__TCTRL_SYSCONFIG__SOFT_RESET__RESET     0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   TCTRL__TCTRL_SYSCONFIG__AUTO_IDLE__FREE
 *
 * @BRIEF        OCP & functional clocks are free-running - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define TCTRL__TCTRL_SYSCONFIG__AUTO_IDLE__FREE       0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   TCTRL__TCTRL_SYSCONFIG__AUTO_IDLE__GATED
 *
 * @BRIEF        Automatic clock gating strategy is applied, based on the OCP 
 *               interface activity for interface clock and on the functional 
 *               activity for functional Clocks. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define TCTRL__TCTRL_SYSCONFIG__AUTO_IDLE__GATED      0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   TCTRL__TCTRL_SYSSTATUS__RESET_DONE__ONGOING
 *
 * @BRIEF        Internal module reset is ongoing. - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define TCTRL__TCTRL_SYSSTATUS__RESET_DONE__ONGOING   0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   TCTRL__TCTRL_SYSSTATUS__RESET_DONE__COMPLETED
 *
 * @BRIEF        Reset completed. - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define TCTRL__TCTRL_SYSSTATUS__RESET_DONE__COMPLETED 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   TCTRL__TCTRL_CTRL__INSEL__CAMEVT0
 *
 * @BRIEF        Synchronization event from camera 0 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define TCTRL__TCTRL_CTRL__INSEL__CAMEVT0             0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   TCTRL__TCTRL_CTRL__INSEL__CAMEVT1
 *
 * @BRIEF        Synchronization event from camera 1 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define TCTRL__TCTRL_CTRL__INSEL__CAMEVT1             0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   TCTRL__TCTRL_CTRL__INSEL__CAMEVT2
 *
 * @BRIEF        Synchronization event from camera 2 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define TCTRL__TCTRL_CTRL__INSEL__CAMEVT2             0x2ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   TCTRL__TCTRL_CTRL__INSEL__GRESET
 *
 * @BRIEF        GRESET. The CAM.GLOBAL_RESET input signal will trigger the 
 *               SHUTTER, PRESTROBE and STROBE signals. In this mode, there 
 *               are no frame counters. The delay counters start decrementing 
 *               as soon as the GLOBAL_RESET signal is asserted. 
 *               The polarity of the GLOBAL_RESET signal is set with 
 *               TCTRL_CTRL.GRESETPOL. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define TCTRL__TCTRL_CTRL__INSEL__GRESET              0x3ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   TCTRL__TCTRL_CTRL__STRBPSTRBPOL__HIGH
 *
 * @BRIEF        Active high - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define TCTRL__TCTRL_CTRL__STRBPSTRBPOL__HIGH         0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   TCTRL__TCTRL_CTRL__STRBPSTRBPOL__LOW
 *
 * @BRIEF        Active low - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define TCTRL__TCTRL_CTRL__STRBPSTRBPOL__LOW          0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   TCTRL__TCTRL_CTRL__SHUTPOL__HIGH
 *
 * @BRIEF        Active high - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define TCTRL__TCTRL_CTRL__SHUTPOL__HIGH              0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   TCTRL__TCTRL_CTRL__SHUTPOL__LOW
 *
 * @BRIEF        Active low - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define TCTRL__TCTRL_CTRL__SHUTPOL__LOW               0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   TCTRL__TCTRL_CTRL__DIVC__NOCLOCK
 *
 * @BRIEF        No clock. CNTCLK is gated. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define TCTRL__TCTRL_CTRL__DIVC__NOCLOCK              0x0ul

#ifdef __cplusplus
}
#endif
#endif                                                     /* __TCTRL_CRED_H */

/** ==================================================================
 *  @file   ccp2_receiver_cred.h                                                  
 *                                                                    
 *  @path   /ti/psp/iss/hal/cred_cram/cred/inc/cortexm3_sys_ape/                                                  
 *                                                                    
 *  @desc   This  File contains.                                      
 * ===================================================================
 *  Copyright (c) Texas Instruments Inc 2011, 2012                    
 *                                                                    
 *  Use of this software is controlled by the terms and conditions found
 *  in the license agreement under which this software has been supplied
 * ===================================================================*/

/* ============================================================================ 
 * TEXAS INSTRUMENTS INCORPORATED PROPRIETARY INFORMATION Property of Texas
 * Instruments For Unrestricted Internal Use Only Unauthorized reproduction
 * and/or distribution is strictly prohibited.  This product is protected
 * under copyright law and trade secret law as an unpublished work.  Created
 * 2008, (C) Copyright 2008 Texas Instruments.  All rights reserved. */

/**
 *  @Component:   CCP2_RECEIVER
 *
 *  @Filename:    ccp2_receiver_cred.h
 *
 *  @Description: CCP2 RECEIVER module 
 *
 *  Generated by: Socrates CRED generator prototype
 *
    *//* ====================================================================== */

#ifndef __CCP2_RECEIVER_CRED_H
#define __CCP2_RECEIVER_CRED_H

#ifdef __cplusplus
extern "C" {
#endif

    /* 
     * Instance CCP2_RECEIVER of component CCP2_RECEIVER mapped in MONICA at address 0x55041C00
     */

                                                                              /*-------------------------------------------------------------------------*//**
 * @DEFINITION   BITFIELD
 *
 * @BRIEF        The bitfield must be defined according to register width
 *               of the component - 64/32/16/8
 *
    *//*------------------------------------------------------------------------ */
#undef BITFIELD
#define BITFIELD BITFIELD_32

    /* 
     *  List of Register arrays for component CCP2_RECEIVER
     *
     */

    /* 
     *  List of bundle arrays for component CCP2_RECEIVER
     *
     */

    /* 
     *  List of bundles for component CCP2_RECEIVER
     *
     */

    /* 
     * List of registers for component CCP2_RECEIVER
     *
     */

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_REVISION
 *
 * @BRIEF        MODULE REVISION 
 *               This register contains the IP revision code in binary coded 
 *               digital. For example, we have: 0x01 = revision 0.1 and 0x21 
 *               = revision 2.1 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_REVISION                       0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_SYSCONFIG
 *
 * @BRIEF        SYSTEM CONFIGURATION REGISTER 
 *               This register is the OCP-socket system configuration 
 *               register. 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_SYSCONFIG                      0x4ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_SYSSTATUS
 *
 * @BRIEF        SYSTEM STATUS REGISTER 
 *               This register provides status information about the module, 
 *               excluding the interrupt status register. 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_SYSSTATUS                      0x8ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC01_IRQENABLE
 *
 * @BRIEF        INTERRUPT ENABLE REGISTER - LOG CHAN 0 & 1 
 *               This register regroups all the events related to logical 
 *               channel 0 and logical channel 1. The events related to 
 *               logical channel 0 trigger SINTERRUPTN[0]. The events related 
 *               to logical channel 1 trigger SINTERRUPTN[1]. The channel 
 *               shall be enabled for events to be generated on that channel. 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC01_IRQENABLE                 0xCul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC01_IRQSTATUS
 *
 * @BRIEF        INTERRUPT STATUS REGISTER - LOG CHAN 0 & 1 
 *               This register regroups all the events related to logical 
 *               channel 0 and logical channel 1. The events related to 
 *               logical channel 0 trigger SINTERRUPTN[0]. The events related 
 *               to logical channel 1 trigger SINTERRUPTN[1]. The channel 
 *               shall be enabled for events to be generated on that channel. 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC01_IRQSTATUS                 0x10ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC23_IRQENABLE
 *
 * @BRIEF        INTERRUPT ENABLE REGISTER - LOG CHAN 2 & 3 
 *               This register regroups all the events related to logical 
 *               channel 2 and logical channel 3. The events related to 
 *               logical channel 2 trigger SINTERRUPTN[2]. The events related 
 *               to logical channel 3 trigger SINTERRUPTN[3]. The channel 
 *               shall be enabled for events to be generated on that channel. 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC23_IRQENABLE                 0x14ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC23_IRQSTATUS
 *
 * @BRIEF        INTERRUPT STATUS REGISTER - LOG CHAN 2 & 3 
 *               This register regroups all the events related to logical 
 *               channel 2 and logical channel 3. The events related to 
 *               logical channel 2 trigger SINTERRUPTN[2]. The events related 
 *               to logical channel 3 trigger SINTERRUPTN[3]. The channel 
 *               shall be enabled for events to be generated on that channel. 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC23_IRQSTATUS                 0x18ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LCM_IRQENABLE
 *
 * @BRIEF        INTERRUPT ENABLE REGISTER - Memory channel 
 *               This register regroups all the events related to the memory 
 *               channel 2. The events related to memory channel trigger 
 *               SINTERRUPTN[8]. The channel shall be enabled for events to 
 *               be generated on that channel. 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LCM_IRQENABLE                  0x2Cul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LCM_IRQSTATUS
 *
 * @BRIEF        INTERRUPT STATUS REGISTER - Memory channel 
 *               This register regroups all the events related to memory 
 *               channel. The events related to memory channel trigger 
 *               SINTERRUPTN[8]. The channel shall be enabled for events to 
 *               be generated on that channel. 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LCM_IRQSTATUS                  0x30ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_CTRL
 *
 * @BRIEF        GLOBAL CONTROL REGISTER 
 *               This register controls the CCP2 RECEIVER module. This 
 *               register shall not be modified dynamically (except IF_EN bit 
 *               field). 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_CTRL                           0x40ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_DBG
 *
 * @BRIEF        DEBUG REGISTER 
 *               This register provides a way to debug the CCP2 RECEIVER 
 *               module with no image sensor connected to the module. The 
 *               debug mode is enabled by CCP2_CTRL.DBG_EN.  
 *               Each write to this register provides a full 32bit word to 
 *               the CCP2 RECEIVER, even when only 8 or 16 bits are written. 
 *               The newly written value is merged with the previous value 
 *               (check the example in the programming model section). 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_DBG                            0x44ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_GNQ
 *
 * @BRIEF        GENERIC PARAMETER REGISTER 
 *               This register provide a way to read the generic parameters 
 *               used in the design. 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_GNQ                            0x48ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_CTRL1
 *
 * @BRIEF        GLOBAL CONTROL REGISTER (2) 
 *               This register controls the CCP2 RECEIVER module. 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_CTRL1                          0x4Cul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC0_CTRL
 *
 * @BRIEF        CONTROL REGISTER - LOG CHAN 0 
 *               This register controls the logical channel 0. This register 
 *               is shadowed: modifications are taken into account after the 
 *               next FSC sync code. 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC0_CTRL                       0x50ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC0_CODE
 *
 * @BRIEF        CODE REGISTER - LOG CHAN 0 
 *               This register sets the codes that are used in the 32-bit 
 *               synchronization codes to recognize the logical channel, 
 *               frame start, frame end, line start and line end codes. This 
 *               register applies for logical channel 0 only. The default 
 *               values are usually not supposed to be modified. Updating 
 *               this register with new codes under a flowing serial 
 *               transmission on that channel will cause unexpected result. 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC0_CODE                       0x54ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC0_STAT_START
 *
 * @BRIEF        STATUS LINE START REGISTER - LOG CHAN 0 
 *               This register is shadowed: modifications are taken into 
 *               account after the next FSC sync code. 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC0_STAT_START                 0x58ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC0_STAT_SIZE
 *
 * @BRIEF        STATUS LINE SIZE REGISTER - LOG CHAN 0 
 *               This register is shadowed: modifications are taken into 
 *               account after the next FSC sync code. 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC0_STAT_SIZE                  0x5Cul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC0_SOF_ADDR
 *
 * @BRIEF        SOF STATUS LINE MEM ADDRESS REGISTER - LOG CHAN 0 
 *               This register sets the 32-bit memory address where the SOF 
 *               data are stored. Note that the 5 LSBs are ignored: the 
 *               address shall be aligned on a 32-byte boundary.  
 *               This register is shadowed: modifications are taken into 
 *               account after the next FSC sync code. 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC0_SOF_ADDR                   0x60ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC0_EOF_ADDR
 *
 * @BRIEF        EOF STATUS LINE MEM ADDRESS REGISTER - LOG CHAN 0 
 *               This register sets the 32-bit memory address where the EOF 
 *               data are stored. Note that the 5 LSBs are ignored: the 
 *               address shall be aligned on a 32-byte boundary.  
 *               This register is shadowed: modifications are taken into 
 *               account after the next FSC sync code. 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC0_EOF_ADDR                   0x64ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC0_DAT_START
 *
 * @BRIEF        DATA START REGISTER - LOG CHAN 0 
 *               This register is shadowed: modifications are taken into 
 *               account after the next FSC sync code. 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC0_DAT_START                  0x68ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC0_DAT_SIZE
 *
 * @BRIEF        DATA SIZE REGISTER - LOG CHAN 0 
 *               This register is shadowed: modifications are taken into 
 *               account after the next FSC sync code. 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC0_DAT_SIZE                   0x6Cul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC0_DAT_PING_ADDR
 *
 * @BRIEF        DATA MEM PING ADDRESS REGISTER - LOG CHAN 0 
 *               This register sets the 32-bit memory address where the pixel 
 *               data are stored. The destination is double buffered: this 
 *               register sets the PING address. Double buffering is enabled 
 *               when the addresses CCP2_LC0_DAT_PING_ADDR and 
 *               CCP2_LC0_DAT_PONG_ADDR are different. 
 *               Note that the 5 LSBs are ignored: the address shall be 
 *               aligned on a 32-byte boundary. 
 *               This register is shadowed: modifications are taken into 
 *               account after the next FSC sync code.  
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC0_DAT_PING_ADDR              0x70ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC0_DAT_PONG_ADDR
 *
 * @BRIEF        DATA MEM PONG ADDRESS REGISTER - LOG CHAN 0 
 *               This register sets the 32-bit memory address where the pixel 
 *               data are stored. The destination is double buffered: this 
 *               register sets the PONG address. Double buffering is enabled 
 *               when the addresses CCP2_LC0_DAT_PING_ADDR and 
 *               CCP2_LC0_DAT_PONG_ADDR are different. 
 *               Note that the 5 LSBs are ignored: the address shall be 
 *               aligned on a 32-byte boundary. 
 *               This register is shadowed: modifications are taken into 
 *               account after the next FSC sync code.  
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC0_DAT_PONG_ADDR              0x74ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC0_DAT_OFST
 *
 * @BRIEF        DATA MEM ADDRESS OFFSET REGISTER - LOG CHAN 0 
 *               This register sets the offset, which is applied on the 
 *               destination address after each line is written to memory. 
 *               This register applies for both CCP2_LC0_DAT_PING_ADDR and 
 *               CCP2_LC0_DAT_PONG_ADDR. 
 *               For example, it enables to perform 2D data transfers of the 
 *               pixel data into a frame buffer. In such case, the pixel data 
 *               and frame buffer data shall have the same data format. 
 *               Note that the 5 LSBs are ignored: the offset shall be a 
 *               multiple of 32 bytes. 
 *               Only full 64-bits words are written to memory at the end of 
 *               lines. 
 *               This register is shadowed: modifications are taken into 
 *               account after the next FSC sync code. 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC0_DAT_OFST                   0x78ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC1_CTRL
 *
 * @BRIEF        CONTROL REGISTER - LOG CHAN 1 
 *               This register controls the logical channel 1. This register 
 *               is shadowed: modifications are taken into account after the 
 *               next FSC sync code. 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC1_CTRL                       0x80ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC1_CODE
 *
 * @BRIEF        CODE REGISTER - LOG CHAN 1 
 *               This register sets the codes that are used in the 32-bit 
 *               synchronization codes to recognize the logical channel, 
 *               frame start, frame end, line start and line end codes. This 
 *               register applies for logical channel 1 only. The default 
 *               values are usually not supposed to be modified. Updating 
 *               this register with new codes under a flowing serial 
 *               transmission on that channel will cause unexpected result. 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC1_CODE                       0x84ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC1_STAT_START
 *
 * @BRIEF        STATUS LINE START REGISTER - LOG CHAN 1 
 *               This register is shadowed: modifications are taken into 
 *               account after the next FSC sync code. 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC1_STAT_START                 0x88ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC1_STAT_SIZE
 *
 * @BRIEF        STATUS LINE SIZE REGISTER - LOG CHAN 1 
 *               This register is shadowed: modifications are taken into 
 *               account after the next FSC sync code. 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC1_STAT_SIZE                  0x8Cul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC1_SOF_ADDR
 *
 * @BRIEF        SOF STATUS LINE MEM ADDRESS REGISTER - LOG CHAN 1 
 *               This register sets the 32-bit memory address where the SOF 
 *               data are stored. Note that the 5 LSBs are ignored: the 
 *               address shall be aligned on a 32-byte boundary.  
 *               This register is shadowed: modifications are taken into 
 *               account after the next FSC sync code. 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC1_SOF_ADDR                   0x90ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC1_EOF_ADDR
 *
 * @BRIEF        EOF STATUS LINE MEM ADDRESS REGISTER - LOG CHAN 1 
 *               This register sets the 32-bit memory address where the EOF 
 *               data are stored. Note that the 5 LSBs are ignored: the 
 *               address shall be aligned on a 32-byte boundary.  
 *               This register is shadowed: modifications are taken into 
 *               account after the next FSC sync code. 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC1_EOF_ADDR                   0x94ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC1_DAT_START
 *
 * @BRIEF        DATA START REGISTER - LOG CHAN 1 
 *               This register is shadowed: modifications are taken into 
 *               account after the next FSC sync code. 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC1_DAT_START                  0x98ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC1_DAT_SIZE
 *
 * @BRIEF        DATA SIZE REGISTER - LOG CHAN 1 
 *               This register is shadowed: modifications are taken into 
 *               account after the next FSC sync code. 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC1_DAT_SIZE                   0x9Cul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC1_DAT_PING_ADDR
 *
 * @BRIEF        DATA MEM PING ADDRESS REGISTER - LOG CHAN 1 
 *               This register sets the 32-bit memory address where the pixel 
 *               data are stored. The destination is double buffered: this 
 *               register sets the PING address. Double buffering is enabled 
 *               when the addresses CCP2_LC1_DAT_PING_ADDR and 
 *               CCP2_LC1_DAT_PONG_ADDR are different. 
 *               Note that the 5 LSBs are ignored: the address shall be 
 *               aligned on a 32-byte boundary. 
 *               This register is shadowed: modifications are taken into 
 *               account after the next FSC sync code.  
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC1_DAT_PING_ADDR              0xA0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC1_DAT_PONG_ADDR
 *
 * @BRIEF        DATA MEM PONG ADDRESS REGISTER - LOG CHAN 1 
 *               This register sets the 32-bit memory address where the pixel 
 *               data are stored. The destination is double buffered: this 
 *               register sets the PONG address. Double buffering is enabled 
 *               when the addresses CCP2_LC1_DAT_PING_ADDR and 
 *               CCP2_LC1_DAT_PONG_ADDR are different. 
 *               Note that the 5 LSBs are ignored: the address shall be 
 *               aligned on a 32-byte boundary. 
 *               This register is shadowed: modifications are taken into 
 *               account after the next FSC sync code.  
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC1_DAT_PONG_ADDR              0xA4ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC1_DAT_OFST
 *
 * @BRIEF        DATA MEM ADDRESS OFFSET REGISTER - LOG CHAN 1 
 *               This register sets the offset, which is applied on the 
 *               destination address after each line is written to memory. 
 *               For example, it enables to perform 2D data transfers of the 
 *               pixel data into a frame buffer. In such case, the pixel data 
 *               and frame buffer data shall have the same data format. 
 *               Note that the 5 LSBs are ignored: the offset shall be a 
 *               multiple of 32 bytes. 
 *               Only full 64-bits words are written to memory at the end of 
 *               lines. 
 *               This register is shadowed: modifications are taken into 
 *               account after the next FSC sync code. 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC1_DAT_OFST                   0xA8ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC2_CTRL
 *
 * @BRIEF        CONTROL REGISTER - LOG CHAN 2 
 *               This register controls the logical channel 2. This register 
 *               is shadowed: modifications are taken into account after the 
 *               next FSC sync code. 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC2_CTRL                       0xB0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC2_CODE
 *
 * @BRIEF        CODE REGISTER - LOG CHAN 2 
 *               This register sets the codes that are used in the 32-bit 
 *               synchronization codes to recognize the logical channel, 
 *               frame start, frame end, line start and line end codes. This 
 *               register applies for logical channel 2 only. The default 
 *               values are usually not supposed to be modified. Updating 
 *               this register with new codes under a flowing serial 
 *               transmission on that channel will cause unexpected result. 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC2_CODE                       0xB4ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC2_STAT_START
 *
 * @BRIEF        STATUS LINE START REGISTER - LOG CHAN 2 
 *               This register is shadowed: modifications are taken into 
 *               account after the next FSC sync code. 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC2_STAT_START                 0xB8ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC2_STAT_SIZE
 *
 * @BRIEF        STATUS LINE SIZE REGISTER - LOG CHAN 2 
 *               This register is shadowed: modifications are taken into 
 *               account after the next FSC sync code. 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC2_STAT_SIZE                  0xBCul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC2_SOF_ADDR
 *
 * @BRIEF        SOF STATUS LINE MEM ADDRESS REGISTER - LOG CHAN 2 
 *               This register sets the 32-bit memory address where the SOF 
 *               data are stored. Note that the 5 LSBs are ignored: the 
 *               address shall be aligned on a 32-byte boundary. 
 *               This register is shadowed: modifications are taken into 
 *               account after the next FSC sync code. 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC2_SOF_ADDR                   0xC0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC2_EOF_ADDR
 *
 * @BRIEF        EOF STATUS LINE MEM ADDRESS REGISTER - LOG CHAN 2 
 *               This register sets the 32-bit memory address where the EOF 
 *               data are stored. Note that the 5 LSBs are ignored: the 
 *               address shall be aligned on a 32-byte boundary.  
 *               This register is shadowed: modifications are taken into 
 *               account after the next FSC sync code. 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC2_EOF_ADDR                   0xC4ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC2_DAT_START
 *
 * @BRIEF        DATA START REGISTER - LOG CHAN 2 
 *               This register is shadowed: modifications are taken into 
 *               account after the next FSC sync code. 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC2_DAT_START                  0xC8ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC2_DAT_SIZE
 *
 * @BRIEF        DATA SIZE REGISTER - LOG CHAN 2 
 *               This register is shadowed: modifications are taken into 
 *               account after the next FSC sync code. 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC2_DAT_SIZE                   0xCCul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC2_DAT_PING_ADDR
 *
 * @BRIEF        DATA MEM PING ADDRESS REGISTER - LOG CHAN 2 
 *               This register sets the 32-bit memory address where the pixel 
 *               data are stored. The destination is double buffered: this 
 *               register sets the PING address. Double buffering is enabled 
 *               when the addresses CCP2_LC2_DAT_PING_ADDR and 
 *               CCP2_LC2_DAT_PONG_ADDR are different. 
 *               Note that the 5 LSBs are ignored: the address shall be 
 *               aligned on a 32-byte boundary. 
 *               This register is shadowed: modifications are taken into 
 *               account after the next FSC sync code.  
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC2_DAT_PING_ADDR              0xD0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC2_DAT_PONG_ADDR
 *
 * @BRIEF        DATA MEM PONG ADDRESS REGISTER - LOG CHAN 2 
 *               This register sets the 32-bit memory address where the pixel 
 *               data are stored. The destination is double buffered: this 
 *               register sets the PONG address. Double buffering is enabled 
 *               when the addresses CCP2_LC2_DAT_PING_ADDR and 
 *               CCP2_LC2_DAT_PONG_ADDR are different. 
 *               Note that the 5 LSBs are ignored: the address shall be 
 *               aligned on a 32-byte boundary. 
 *               This register is shadowed: modifications are taken into 
 *               account after the next FSC sync code.  
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC2_DAT_PONG_ADDR              0xD4ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC2_DAT_OFST
 *
 * @BRIEF        DATA MEM ADDRESS OFFSET REGISTER - LOG CHAN 2 
 *               This register sets the offset, which is applied on the 
 *               destination address after each line is written to memory.  
 *               For example, it enables to perform 2D data transfers of the 
 *               pixel data into a frame buffer. In such case, the pixel data 
 *               and frame buffer data shall have the same data format. 
 *               Note that the 5 LSBs are ignored: the offset shall be a 
 *               multiple of 32 bytes. 
 *               Only full 64-bits words are written to memory at the end of 
 *               lines. 
 *               This register is shadowed: modifications are taken into 
 *               account after the next FSC sync code. 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC2_DAT_OFST                   0xD8ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC3_CTRL
 *
 * @BRIEF        CONTROL REGISTER - LOG CHAN 3 
 *               This register controls the logical channel 3. This register 
 *               is shadowed: modifications are taken into account after the 
 *               next FSC sync code. 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC3_CTRL                       0xE0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC3_CODE
 *
 * @BRIEF        CODE REGISTER - LOG CHAN 3 
 *               This register sets the codes that are used in the 32-bit 
 *               synchronization codes to recognize the logical channel, 
 *               frame start, frame end, line start and line end codes. This 
 *               register applies for logical channel 3 only. The default 
 *               values are usually not supposed to be modified. Updating 
 *               this register with new codes under a flowing serial 
 *               transmission on that channel will cause unexpected result. 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC3_CODE                       0xE4ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC3_STAT_START
 *
 * @BRIEF        STATUS LINE START REGISTER - LOG CHAN 3 
 *               This register is shadowed: modifications are taken into 
 *               account after the next FSC sync code. 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC3_STAT_START                 0xE8ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC3_STAT_SIZE
 *
 * @BRIEF        STATUS LINE SIZE REGISTER - LOG CHAN 3 
 *               This register is shadowed: modifications are taken into 
 *               account after the next FSC sync code. 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC3_STAT_SIZE                  0xECul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC3_SOF_ADDR
 *
 * @BRIEF        SOF STATUS LINE MEM ADDRESS REGISTER - LOG CHAN 3 
 *               This register sets the 32-bit memory address where the SOF 
 *               data are stored. Note that the 5 LSBs are ignored: the 
 *               address shall be aligned on a 32-byte boundary. 
 *               This register is shadowed: modifications are taken into 
 *               account after the next FSC sync code. 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC3_SOF_ADDR                   0xF0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC3_EOF_ADDR
 *
 * @BRIEF        EOF STATUS LINE MEM ADDRESS REGISTER - LOG CHAN 3 
 *               This register sets the 32-bit memory address where the EOF 
 *               data are stored. Note that the 5 LSBs are ignored: the 
 *               address shall be aligned on a 32-byte boundary. 
 *               This register is shadowed: modifications are taken into 
 *               account after the next FSC sync code. 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC3_EOF_ADDR                   0xF4ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC3_DAT_START
 *
 * @BRIEF        DATA START REGISTER - LOG CHAN 3 
 *               This register is shadowed: modifications are taken into 
 *               account after the next FSC sync code. 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC3_DAT_START                  0xF8ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC3_DAT_SIZE
 *
 * @BRIEF        DATA SIZE REGISTER - LOG CHAN 3 
 *               This register is shadowed: modifications are taken into 
 *               account after the next FSC sync code. 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC3_DAT_SIZE                   0xFCul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC3_DAT_PING_ADDR
 *
 * @BRIEF        DATA MEM PING ADDRESS REGISTER - LOG CHAN 3 
 *               This register sets the 32-bit memory address where the pixel 
 *               data are stored. The destination is double buffered: this 
 *               register sets the PING address. Double buffering is enabled 
 *               when the addresses CCP2_LC3_DAT_PING_ADDR and 
 *               CCP2_LC3_DAT_PONG_ADDR are different. 
 *               Note that the 5 LSBs are ignored: the address shall be 
 *               aligned on a 32-byte boundary.  
 *               This register is shadowed: modifications are taken into 
 *               account after the next FSC sync code. 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC3_DAT_PING_ADDR              0x100ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC3_DAT_PONG_ADDR
 *
 * @BRIEF        DATA MEM PONG ADDRESS REGISTER - LOG CHAN 3 
 *               This register sets the 32-bit memory address where the pixel 
 *               data are stored. The destination is double buffered: this 
 *               register sets the PONG address. Double buffering is enabled 
 *               when the addresses CCP2_LC3_DAT_PING_ADDR and 
 *               CCP2_LC3_DAT_PONG_ADDR are different. 
 *               Note that the 5 LSBs are ignored: the address shall be 
 *               aligned on a 32-byte boundary. 
 *               This register is shadowed: modifications are taken into 
 *               account after the next FSC sync code. 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC3_DAT_PONG_ADDR              0x104ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC3_DAT_OFST
 *
 * @BRIEF        DATA MEM ADDRESS OFFSET REGISTER - LOG CHAN 3 
 *               This register sets the offset, which is applied on the 
 *               destination address after each line is written to memory. 
 *               For example, it enables to perform 2D data transfers of the 
 *               pixel data into a frame buffer. In such case, the pixel data 
 *               and frame buffer data shall have the same data format. 
 *               Note that the 5 LSBs are ignored: the offset shall be a 
 *               multiple of 32 bytes. 
 *               Only full 64-bits words are written to memory at the end of 
 *               lines. 
 *               This register is shadowed: modifications are taken into 
 *               account after the next FSC sync code. 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC3_DAT_OFST                   0x108ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LCM_CTRL
 *
 * @BRIEF        Control register for the memory channel. It defines the data 
 *               format of the source frame stored in memory and how this 
 *               frame is processed. 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LCM_CTRL                       0x1D0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LCM_VSIZE
 *
 * @BRIEF        Memory channel vertical framing register 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LCM_VSIZE                      0x1D4ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LCM_HSIZE
 *
 * @BRIEF        Memory read channel horizontal framing register. 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LCM_HSIZE                      0x1D8ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LCM_PREFETCH
 *
 * @BRIEF        This register defines the amount of data to be fetched from 
 *               memory.  
 *               Is has to be consistent with the CCP2_LCM_HSIZE register 
 *               (check programming model) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LCM_PREFETCH                   0x1DCul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LCM_SRC_ADDR
 *
 * @BRIEF        Memory channel source address register 
 *               This register sets the 32-bit memory address where the pixel 
 *               data are stored. 
 *               Note that the 5 LSBs are ignored: the address shall be 
 *               aligned on a 32-byte boundary. 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LCM_SRC_ADDR                   0x1E0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LCM_SRC_OFST
 *
 * @BRIEF        Memory channel source offset register. 
 *               This register sets the offset, which is applied on the 
 *               source address after each line is read from memory.  
 *               For example, it enables to perform 2D data transfers of the 
 *               pixel data from a frame buffer. In such case, the pixel data 
 *               and frame buffer data shall have the same data format. 
 *               Note that the 5 LSBs are ignored: the offset shall be a 
 *               multiple of 32 bytes. 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LCM_SRC_OFST                   0x1E4ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LCM_DST_ADDR
 *
 * @BRIEF        Memory channel destination address. 
 *               This register sets the 32-bit memory address where the pixel 
 *               data are stored. 
 *               Note that the 5 LSBs are ignored: the address shall be 
 *               aligned on a 32-byte boundary. 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LCM_DST_ADDR                   0x1E8ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LCM_DST_OFST
 *
 * @BRIEF        Memory channel destination offset register. 
 *               This register sets the offset, which is applied on the 
 *               destination address after each line is written to memory.  
 *               For example, it enables to perform 2D data transfers of the 
 *               pixel data into a frame buffer. In such case, the pixel data 
 *               and frame buffer data shall have the same data format. 
 *               Note that the 5 LSBs are ignored: the offset shall be a 
 *               multiple of 32 bytes. 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LCM_DST_OFST                   0x1ECul

    /* 
     * List of register bitfields for component CCP2_RECEIVER
     *
     */

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_REVISION__REV   
 *
 * @BRIEF        IP revision 
 *               [7:4] Major revision 
 *               [3:0] Minor revision - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_REVISION__REV             BITFIELD(7, 0)
#define CCP2_RECEIVER__CCP2_REVISION__REV__POS        0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_SYSCONFIG__MSTANDBY_MODE   
 *
 * @BRIEF        Sets the behavior of the master port power management 
 *               signals. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_SYSCONFIG__MSTANDBY_MODE  BITFIELD(13, 12)
#define CCP2_RECEIVER__CCP2_SYSCONFIG__MSTANDBY_MODE__POS 12

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_SYSCONFIG__SOFT_RESET   
 *
 * @BRIEF        Software reset. Set the bit to 1 to trigger a module reset. 
 *               The bit is automatically reset by the hw. During reads 
 *               return 0. 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_SYSCONFIG__SOFT_RESET     BITFIELD(1, 1)
#define CCP2_RECEIVER__CCP2_SYSCONFIG__SOFT_RESET__POS 1

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_SYSCONFIG__AUTO_IDLE   
 *
 * @BRIEF        Internal OCP clock gating strategy. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_SYSCONFIG__AUTO_IDLE      BITFIELD(0, 0)
#define CCP2_RECEIVER__CCP2_SYSCONFIG__AUTO_IDLE__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_SYSSTATUS__RESET_DONE   
 *
 * @BRIEF        Internal reset monitoring - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_SYSSTATUS__RESET_DONE     BITFIELD(0, 0)
#define CCP2_RECEIVER__CCP2_SYSSTATUS__RESET_DONE__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC1_OCPERROR_IRQ   
 *
 * @BRIEF        An OCP error occurred on the master write port. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC1_OCPERROR_IRQ BITFIELD(31, 31)
#define CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC1_OCPERROR_IRQ__POS 31

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC1_FS_IRQ   
 *
 * @BRIEF        Logical channel 1 - Frame start sync code detection. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC1_FS_IRQ BITFIELD(27, 27)
#define CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC1_FS_IRQ__POS 27

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC1_LE_IRQ   
 *
 * @BRIEF        Logical channel 1 - Line end sync code detection. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC1_LE_IRQ BITFIELD(26, 26)
#define CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC1_LE_IRQ__POS 26

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC1_LS_IRQ   
 *
 * @BRIEF        Logical channel 1 - Line start sync code detection. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC1_LS_IRQ BITFIELD(25, 25)
#define CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC1_LS_IRQ__POS 25

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC1_FE_IRQ   
 *
 * @BRIEF        Logical channel 1 - Frame end sync code detection. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC1_FE_IRQ BITFIELD(24, 24)
#define CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC1_FE_IRQ__POS 24

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC1_COUNT_IRQ   
 *
 * @BRIEF        Logical channel 1 - Frame counter reached. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC1_COUNT_IRQ BITFIELD(23, 23)
#define CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC1_COUNT_IRQ__POS 23

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC1_FIFO_OVF_IRQ   
 *
 * @BRIEF        Logical channel 1 - FIFO overflow error. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC1_FIFO_OVF_IRQ BITFIELD(21, 21)
#define CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC1_FIFO_OVF_IRQ__POS 21

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC1_CRC_IRQ   
 *
 * @BRIEF        Logical channel 1 - CRC error. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC1_CRC_IRQ BITFIELD(20, 20)
#define CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC1_CRC_IRQ__POS 20

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC1_FSP_IRQ   
 *
 * @BRIEF        Logical channel 1 - FSP error. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC1_FSP_IRQ BITFIELD(19, 19)
#define CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC1_FSP_IRQ__POS 19

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC1_FW_IRQ   
 *
 * @BRIEF        Logical channel 1 - Frame width error. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC1_FW_IRQ BITFIELD(18, 18)
#define CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC1_FW_IRQ__POS 18

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC1_FSC_IRQ   
 *
 * @BRIEF        Logical channel 1 - False sync code error. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC1_FSC_IRQ BITFIELD(17, 17)
#define CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC1_FSC_IRQ__POS 17

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC1_SSC_IRQ   
 *
 * @BRIEF        Logical channel 1 - Shifted sync code error. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC1_SSC_IRQ BITFIELD(16, 16)
#define CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC1_SSC_IRQ__POS 16

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC0_OCPERROR_IRQ   
 *
 * @BRIEF        An OCP error occurred on the master write port. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC0_OCPERROR_IRQ BITFIELD(15, 15)
#define CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC0_OCPERROR_IRQ__POS 15

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC0_FS_IRQ   
 *
 * @BRIEF        Logical channel 0 - Frame start sync code detection. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC0_FS_IRQ BITFIELD(11, 11)
#define CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC0_FS_IRQ__POS 11

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC0_LE_IRQ   
 *
 * @BRIEF        Logical channel 0 - Line end sync code detection. 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC0_LE_IRQ BITFIELD(10, 10)
#define CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC0_LE_IRQ__POS 10

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC0_LS_IRQ   
 *
 * @BRIEF        Logical channel 0 - Line start sync code detection. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC0_LS_IRQ BITFIELD(9, 9)
#define CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC0_LS_IRQ__POS 9

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC0_FE_IRQ   
 *
 * @BRIEF        Logical channel 0 - Frame end sync code detection. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC0_FE_IRQ BITFIELD(8, 8)
#define CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC0_FE_IRQ__POS 8

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC0_COUNT_IRQ   
 *
 * @BRIEF        Logical channel 0 - Frame counter reached. 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC0_COUNT_IRQ BITFIELD(7, 7)
#define CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC0_COUNT_IRQ__POS 7

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC0_FIFO_OVF_IRQ   
 *
 * @BRIEF        Logical channel 0 - FIFO overflow error. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC0_FIFO_OVF_IRQ BITFIELD(5, 5)
#define CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC0_FIFO_OVF_IRQ__POS 5

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC0_CRC_IRQ   
 *
 * @BRIEF        Logical channel 0 - CRC error. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC0_CRC_IRQ BITFIELD(4, 4)
#define CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC0_CRC_IRQ__POS 4

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC0_FSP_IRQ   
 *
 * @BRIEF        Logical channel 0 - FSP error. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC0_FSP_IRQ BITFIELD(3, 3)
#define CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC0_FSP_IRQ__POS 3

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC0_FW_IRQ   
 *
 * @BRIEF        Logical channel 0 - Frame width error. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC0_FW_IRQ BITFIELD(2, 2)
#define CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC0_FW_IRQ__POS 2

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC0_FSC_IRQ   
 *
 * @BRIEF        Logical channel 0 - False sync code error. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC0_FSC_IRQ BITFIELD(1, 1)
#define CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC0_FSC_IRQ__POS 1

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC0_SSC_IRQ   
 *
 * @BRIEF        Logical channel 0 - Shifted sync code error. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC0_SSC_IRQ BITFIELD(0, 0)
#define CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC0_SSC_IRQ__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC1_OCPERROR_IRQ   
 *
 * @BRIEF        An OCP error occurred on the master write port. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC1_OCPERROR_IRQ BITFIELD(31, 31)
#define CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC1_OCPERROR_IRQ__POS 31

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC1_FS_IRQ   
 *
 * @BRIEF        Logical channel 1 - Frame start sync code detection status. 
 *               - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC1_FS_IRQ BITFIELD(27, 27)
#define CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC1_FS_IRQ__POS 27

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC1_LE_IRQ   
 *
 * @BRIEF        Logical channel 1 - Line end sync code detection status. - 
 *               (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC1_LE_IRQ BITFIELD(26, 26)
#define CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC1_LE_IRQ__POS 26

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC1_LS_IRQ   
 *
 * @BRIEF        Logical channel 1 - Line start sync code detection status. - 
 *               (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC1_LS_IRQ BITFIELD(25, 25)
#define CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC1_LS_IRQ__POS 25

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC1_FE_IRQ   
 *
 * @BRIEF        Logical channel 1 - Frame end sync code detection status. - 
 *               (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC1_FE_IRQ BITFIELD(24, 24)
#define CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC1_FE_IRQ__POS 24

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC1_COUNT_IRQ   
 *
 * @BRIEF        Logical channel 1 - Frame counter reached status. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC1_COUNT_IRQ BITFIELD(23, 23)
#define CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC1_COUNT_IRQ__POS 23

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC1_FIFO_OVF_IRQ   
 *
 * @BRIEF        Logical channel 1 - FIFO overflow error status. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC1_FIFO_OVF_IRQ BITFIELD(21, 21)
#define CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC1_FIFO_OVF_IRQ__POS 21

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC1_CRC_IRQ   
 *
 * @BRIEF        Logical channel 1 - CRC error status. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC1_CRC_IRQ BITFIELD(20, 20)
#define CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC1_CRC_IRQ__POS 20

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC1_FSP_IRQ   
 *
 * @BRIEF        Logical channel 1 - FSP error status. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC1_FSP_IRQ BITFIELD(19, 19)
#define CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC1_FSP_IRQ__POS 19

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC1_FW_IRQ   
 *
 * @BRIEF        Logical channel 1 - Frame width error status. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC1_FW_IRQ BITFIELD(18, 18)
#define CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC1_FW_IRQ__POS 18

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC1_FSC_IRQ   
 *
 * @BRIEF        Logical channel 1 - False sync code error status. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC1_FSC_IRQ BITFIELD(17, 17)
#define CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC1_FSC_IRQ__POS 17

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC1_SSC_IRQ   
 *
 * @BRIEF        Logical channel 1 - Shifted sync code error status. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC1_SSC_IRQ BITFIELD(16, 16)
#define CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC1_SSC_IRQ__POS 16

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC0_OCPERROR_IRQ   
 *
 * @BRIEF        An OCP error occurred on the master write port. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC0_OCPERROR_IRQ BITFIELD(15, 15)
#define CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC0_OCPERROR_IRQ__POS 15

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC0_FS_IRQ   
 *
 * @BRIEF        Logical channel 0 - Frame start sync code detection status. 
 *               - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC0_FS_IRQ BITFIELD(11, 11)
#define CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC0_FS_IRQ__POS 11

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC0_LE_IRQ   
 *
 * @BRIEF        Logical channel 0 - Line end sync code detection status. 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC0_LE_IRQ BITFIELD(10, 10)
#define CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC0_LE_IRQ__POS 10

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC0_LS_IRQ   
 *
 * @BRIEF        Logical channel 0 - Line start sync code detection status. - 
 *               (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC0_LS_IRQ BITFIELD(9, 9)
#define CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC0_LS_IRQ__POS 9

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC0_FE_IRQ   
 *
 * @BRIEF        Logical channel 0 - Frame end sync code detection status. - 
 *               (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC0_FE_IRQ BITFIELD(8, 8)
#define CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC0_FE_IRQ__POS 8

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC0_COUNT_IRQ   
 *
 * @BRIEF        Logical channel 0 - Frame counter reached status 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC0_COUNT_IRQ BITFIELD(7, 7)
#define CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC0_COUNT_IRQ__POS 7

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC0_FIFO_OVF_IRQ   
 *
 * @BRIEF        Logical channel 0 - FIFO overflow error status. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC0_FIFO_OVF_IRQ BITFIELD(5, 5)
#define CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC0_FIFO_OVF_IRQ__POS 5

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC0_CRC_IRQ   
 *
 * @BRIEF        Logical channel 0 - CRC error status. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC0_CRC_IRQ BITFIELD(4, 4)
#define CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC0_CRC_IRQ__POS 4

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC0_FSP_IRQ   
 *
 * @BRIEF        Logical channel 0 - FSP error status. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC0_FSP_IRQ BITFIELD(3, 3)
#define CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC0_FSP_IRQ__POS 3

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC0_FW_IRQ   
 *
 * @BRIEF        Logical channel 0 - Frame width error status. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC0_FW_IRQ BITFIELD(2, 2)
#define CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC0_FW_IRQ__POS 2

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC0_FSC_IRQ   
 *
 * @BRIEF        Logical channel 0 - False sync code error status. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC0_FSC_IRQ BITFIELD(1, 1)
#define CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC0_FSC_IRQ__POS 1

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC0_SSC_IRQ   
 *
 * @BRIEF        Logical channel 0 - Shifted sync code error status. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC0_SSC_IRQ BITFIELD(0, 0)
#define CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC0_SSC_IRQ__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC3_OCPERROR_IRQ   
 *
 * @BRIEF        An OCP error occurred on the master write port. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC3_OCPERROR_IRQ BITFIELD(31, 31)
#define CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC3_OCPERROR_IRQ__POS 31

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC3_FS_IRQ   
 *
 * @BRIEF        Logical channel 3 - Frame start sync code detection. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC3_FS_IRQ BITFIELD(27, 27)
#define CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC3_FS_IRQ__POS 27

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC3_LE_IRQ   
 *
 * @BRIEF        Logical channel 3 - Line end sync code detection. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC3_LE_IRQ BITFIELD(26, 26)
#define CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC3_LE_IRQ__POS 26

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC3_LS_IRQ   
 *
 * @BRIEF        Logical channel 3 - Line start sync code detection. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC3_LS_IRQ BITFIELD(25, 25)
#define CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC3_LS_IRQ__POS 25

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC3_FE_IRQ   
 *
 * @BRIEF        Logical channel 3 - Frame end sync code detection. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC3_FE_IRQ BITFIELD(24, 24)
#define CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC3_FE_IRQ__POS 24

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC3_COUNT_IRQ   
 *
 * @BRIEF        Logical channel 3 - Frame counter reached. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC3_COUNT_IRQ BITFIELD(23, 23)
#define CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC3_COUNT_IRQ__POS 23

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC3_FIFO_OVF_IRQ   
 *
 * @BRIEF        Logical channel 3 - FIFO overflow error. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC3_FIFO_OVF_IRQ BITFIELD(21, 21)
#define CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC3_FIFO_OVF_IRQ__POS 21

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC3_CRC_IRQ   
 *
 * @BRIEF        Logical channel 3 - CRC error. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC3_CRC_IRQ BITFIELD(20, 20)
#define CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC3_CRC_IRQ__POS 20

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC3_FSP_IRQ   
 *
 * @BRIEF        Logical channel 3 - FSP error. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC3_FSP_IRQ BITFIELD(19, 19)
#define CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC3_FSP_IRQ__POS 19

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC3_FW_IRQ   
 *
 * @BRIEF        Logical channel 3 - Frame width error. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC3_FW_IRQ BITFIELD(18, 18)
#define CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC3_FW_IRQ__POS 18

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC3_FSC_IRQ   
 *
 * @BRIEF        Logical channel 3 - False sync code error. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC3_FSC_IRQ BITFIELD(17, 17)
#define CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC3_FSC_IRQ__POS 17

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC3_SSC_IRQ   
 *
 * @BRIEF        Logical channel 3 - Shifted sync code error. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC3_SSC_IRQ BITFIELD(16, 16)
#define CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC3_SSC_IRQ__POS 16

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC2_OCPERROR_IRQ   
 *
 * @BRIEF        An OCP error occurred on the master write port. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC2_OCPERROR_IRQ BITFIELD(15, 15)
#define CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC2_OCPERROR_IRQ__POS 15

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC2_FS_IRQ   
 *
 * @BRIEF        Logical channel 2 - Frame start sync code detection. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC2_FS_IRQ BITFIELD(11, 11)
#define CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC2_FS_IRQ__POS 11

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC2_LE_IRQ   
 *
 * @BRIEF        Logical channel 2 - Line end sync code detection. 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC2_LE_IRQ BITFIELD(10, 10)
#define CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC2_LE_IRQ__POS 10

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC2_LS_IRQ   
 *
 * @BRIEF        Logical channel 2 - Line start sync code detection. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC2_LS_IRQ BITFIELD(9, 9)
#define CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC2_LS_IRQ__POS 9

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC2_FE_IRQ   
 *
 * @BRIEF        Logical channel 2 - Frame end sync code detection. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC2_FE_IRQ BITFIELD(8, 8)
#define CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC2_FE_IRQ__POS 8

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC2_COUNT_IRQ   
 *
 * @BRIEF        Logical channel 2 - Frame counter reached. 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC2_COUNT_IRQ BITFIELD(7, 7)
#define CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC2_COUNT_IRQ__POS 7

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC2_FIFO_OVF_IRQ   
 *
 * @BRIEF        Logical channel 2 - FIFO overflow error. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC2_FIFO_OVF_IRQ BITFIELD(5, 5)
#define CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC2_FIFO_OVF_IRQ__POS 5

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC2_CRC_IRQ   
 *
 * @BRIEF        Logical channel 2 - CRC error. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC2_CRC_IRQ BITFIELD(4, 4)
#define CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC2_CRC_IRQ__POS 4

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC2_FSP_IRQ   
 *
 * @BRIEF        Logical channel 2 - FSP error. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC2_FSP_IRQ BITFIELD(3, 3)
#define CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC2_FSP_IRQ__POS 3

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC2_FW_IRQ   
 *
 * @BRIEF        Logical channel 2 - Frame width error. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC2_FW_IRQ BITFIELD(2, 2)
#define CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC2_FW_IRQ__POS 2

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC2_FSC_IRQ   
 *
 * @BRIEF        Logical channel 2 - False sync code error. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC2_FSC_IRQ BITFIELD(1, 1)
#define CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC2_FSC_IRQ__POS 1

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC2_SSC_IRQ   
 *
 * @BRIEF        Logical channel 2 - Shifted sync code error. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC2_SSC_IRQ BITFIELD(0, 0)
#define CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC2_SSC_IRQ__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC3_OCPERROR_IRQ   
 *
 * @BRIEF        An OCP error occurred on the master write port. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC3_OCPERROR_IRQ BITFIELD(31, 31)
#define CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC3_OCPERROR_IRQ__POS 31

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC3_FS_IRQ   
 *
 * @BRIEF        Logical channel 3 - Frame start sync code detection status. 
 *               - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC3_FS_IRQ BITFIELD(27, 27)
#define CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC3_FS_IRQ__POS 27

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC3_LE_IRQ   
 *
 * @BRIEF        Logical channel 3 - Line end sync code detection status. - 
 *               (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC3_LE_IRQ BITFIELD(26, 26)
#define CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC3_LE_IRQ__POS 26

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC3_LS_IRQ   
 *
 * @BRIEF        Logical channel 3 - Line start sync code detection status. - 
 *               (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC3_LS_IRQ BITFIELD(25, 25)
#define CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC3_LS_IRQ__POS 25

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC3_FE_IRQ   
 *
 * @BRIEF        Logical channel 3 - Frame end sync code detection status. - 
 *               (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC3_FE_IRQ BITFIELD(24, 24)
#define CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC3_FE_IRQ__POS 24

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC3_COUNT_IRQ   
 *
 * @BRIEF        Logical channel 3 - Frame counter reached status. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC3_COUNT_IRQ BITFIELD(23, 23)
#define CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC3_COUNT_IRQ__POS 23

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC3_FIFO_OVF_IRQ   
 *
 * @BRIEF        Logical channel 3 - FIFO overflow error status. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC3_FIFO_OVF_IRQ BITFIELD(21, 21)
#define CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC3_FIFO_OVF_IRQ__POS 21

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC3_CRC_IRQ   
 *
 * @BRIEF        Logical channel 3 - CRC error status. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC3_CRC_IRQ BITFIELD(20, 20)
#define CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC3_CRC_IRQ__POS 20

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC3_FSP_IRQ   
 *
 * @BRIEF        Logical channel 3 - FSP error status. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC3_FSP_IRQ BITFIELD(19, 19)
#define CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC3_FSP_IRQ__POS 19

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC3_FW_IRQ   
 *
 * @BRIEF        Logical channel 3 - Frame width error status. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC3_FW_IRQ BITFIELD(18, 18)
#define CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC3_FW_IRQ__POS 18

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC3_FSC_IRQ   
 *
 * @BRIEF        Logical channel 3 - False sync code error status. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC3_FSC_IRQ BITFIELD(17, 17)
#define CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC3_FSC_IRQ__POS 17

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC3_SSC_IRQ   
 *
 * @BRIEF        Logical channel 3 - Shifted sync code error status. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC3_SSC_IRQ BITFIELD(16, 16)
#define CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC3_SSC_IRQ__POS 16

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC2_OCPERROR_IRQ   
 *
 * @BRIEF        An OCP error occurred on the master write port. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC2_OCPERROR_IRQ BITFIELD(15, 15)
#define CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC2_OCPERROR_IRQ__POS 15

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC2_FS_IRQ   
 *
 * @BRIEF        Logical channel 2 - Frame start sync code detection status. 
 *               - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC2_FS_IRQ BITFIELD(11, 11)
#define CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC2_FS_IRQ__POS 11

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC2_LE_IRQ   
 *
 * @BRIEF        Logical channel 2 - Line end sync code detection status. 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC2_LE_IRQ BITFIELD(10, 10)
#define CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC2_LE_IRQ__POS 10

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC2_LS_IRQ   
 *
 * @BRIEF        Logical channel 2 - Line start sync code detection status. - 
 *               (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC2_LS_IRQ BITFIELD(9, 9)
#define CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC2_LS_IRQ__POS 9

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC2_FE_IRQ   
 *
 * @BRIEF        Logical channel 2 - Frame end sync code detection status. - 
 *               (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC2_FE_IRQ BITFIELD(8, 8)
#define CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC2_FE_IRQ__POS 8

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC2_COUNT_IRQ   
 *
 * @BRIEF        Logical channel 2 - Frame counter reached status 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC2_COUNT_IRQ BITFIELD(7, 7)
#define CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC2_COUNT_IRQ__POS 7

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC2_FIFO_OVF_IRQ   
 *
 * @BRIEF        Logical channel 2 - FIFO overflow error status. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC2_FIFO_OVF_IRQ BITFIELD(5, 5)
#define CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC2_FIFO_OVF_IRQ__POS 5

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC2_CRC_IRQ   
 *
 * @BRIEF        Logical channel 2 - CRC error status. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC2_CRC_IRQ BITFIELD(4, 4)
#define CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC2_CRC_IRQ__POS 4

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC2_FSP_IRQ   
 *
 * @BRIEF        Logical channel 2 - FSP error status. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC2_FSP_IRQ BITFIELD(3, 3)
#define CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC2_FSP_IRQ__POS 3

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC2_FW_IRQ   
 *
 * @BRIEF        Logical channel 2 - Frame width error status. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC2_FW_IRQ BITFIELD(2, 2)
#define CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC2_FW_IRQ__POS 2

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC2_FSC_IRQ   
 *
 * @BRIEF        Logical channel 2 - False sync code error status. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC2_FSC_IRQ BITFIELD(1, 1)
#define CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC2_FSC_IRQ__POS 1

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC2_SSC_IRQ   
 *
 * @BRIEF        Logical channel 2 - Shifted sync code error status. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC2_SSC_IRQ BITFIELD(0, 0)
#define CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC2_SSC_IRQ__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LCM_IRQENABLE__LCM_OCPERROR   
 *
 * @BRIEF        An OCP error has been returned for a read (OCP read master) 
 *               or write (OCP write master) transaction related to LCM 
 *               operation - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LCM_IRQENABLE__LCM_OCPERROR BITFIELD(1, 1)
#define CCP2_RECEIVER__CCP2_LCM_IRQENABLE__LCM_OCPERROR__POS 1

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LCM_IRQENABLE__LCM_EOF   
 *
 * @BRIEF        Memory read channel - End of frame - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LCM_IRQENABLE__LCM_EOF    BITFIELD(0, 0)
#define CCP2_RECEIVER__CCP2_LCM_IRQENABLE__LCM_EOF__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LCM_IRQSTATUS__LCM_OCPERROR   
 *
 * @BRIEF        An OCP error has been returned for a read (OCP read master) 
 *               or write (OCP write master) transaction related to LCM 
 *               operation - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LCM_IRQSTATUS__LCM_OCPERROR BITFIELD(1, 1)
#define CCP2_RECEIVER__CCP2_LCM_IRQSTATUS__LCM_OCPERROR__POS 1

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LCM_IRQSTATUS__LCM_EOF   
 *
 * @BRIEF        Memory read channel - End of frame - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LCM_IRQSTATUS__LCM_EOF    BITFIELD(0, 0)
#define CCP2_RECEIVER__CCP2_LCM_IRQSTATUS__LCM_EOF__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_CTRL__FRACDIV   
 *
 * @BRIEF        Fractional clock divider control for the video port. 
 *               The mean video port clock is  VPBASECLOCK * FRACDIV/65536. 
 *               Valid range: 1-65536 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_CTRL__FRACDIV             BITFIELD(31, 15)
#define CCP2_RECEIVER__CCP2_CTRL__FRACDIV__POS        15

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_CTRL__POSTED   
 *
 * @BRIEF        Selects between posted and non posted writes. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_CTRL__POSTED              BITFIELD(14, 14)
#define CCP2_RECEIVER__CCP2_CTRL__POSTED__POS         14

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_CTRL__DBG_EN   
 *
 * @BRIEF        Enables the debug mode. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_CTRL__DBG_EN              BITFIELD(13, 13)
#define CCP2_RECEIVER__CCP2_CTRL__DBG_EN__POS         13

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_CTRL__VP_CLK_POL   
 *
 * @BRIEF        VP clock polarity - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_CTRL__VP_CLK_POL          BITFIELD(12, 12)
#define CCP2_RECEIVER__CCP2_CTRL__VP_CLK_POL__POS     12

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_CTRL__VP_ONLY_EN   
 *
 * @BRIEF        VP only enable. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_CTRL__VP_ONLY_EN          BITFIELD(11, 11)
#define CCP2_RECEIVER__CCP2_CTRL__VP_ONLY_EN__POS     11

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_CTRL__INV   
 *
 * @BRIEF        Strobe / clock inversion control signal - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_CTRL__INV                 BITFIELD(10, 10)
#define CCP2_RECEIVER__CCP2_CTRL__INV__POS            10

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_CTRL__VP_CLK_FORCE_ON   
 *
 * @BRIEF        Controls video port clock gating during frame blanking 
 *               periods. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_CTRL__VP_CLK_FORCE_ON     BITFIELD(9, 9)
#define CCP2_RECEIVER__CCP2_CTRL__VP_CLK_FORCE_ON__POS 9

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_CTRL__BURST   
 *
 * @BRIEF        Forces the write burst size used by the module. 
 *               The write burst size shall never exceed the output FIFO 
 *               size. The output FIFO size can be read with the 
 *               CCP2_GNQ.FIFODEPTH bit field. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_CTRL__BURST               BITFIELD(7, 5)
#define CCP2_RECEIVER__CCP2_CTRL__BURST__POS          5

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_CTRL__MODE   
 *
 * @BRIEF        Selects the receiver operating mode. 
 *               This bit is only writable when the CCP2MODE input is 1. - 
 *               (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_CTRL__MODE                BITFIELD(4, 4)
#define CCP2_RECEIVER__CCP2_CTRL__MODE__POS           4

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_CTRL__FRAME   
 *
 * @BRIEF        Set the modality in which IF_EN works. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_CTRL__FRAME               BITFIELD(3, 3)
#define CCP2_RECEIVER__CCP2_CTRL__FRAME__POS          3

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_CTRL__IO_OUT_SEL   
 *
 * @BRIEF        IO cell output mode selection. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_CTRL__IO_OUT_SEL          BITFIELD(2, 2)
#define CCP2_RECEIVER__CCP2_CTRL__IO_OUT_SEL__POS     2

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_CTRL__PHY_SEL   
 *
 * @BRIEF        Physical layer protocol selection. Applies for all logical 
 *               channels - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_CTRL__PHY_SEL             BITFIELD(1, 1)
#define CCP2_RECEIVER__CCP2_CTRL__PHY_SEL__POS        1

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_CTRL__IF_EN   
 *
 * @BRIEF        Enables the physical interface to the module. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_CTRL__IF_EN               BITFIELD(0, 0)
#define CCP2_RECEIVER__CCP2_CTRL__IF_EN__POS          0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_DBG__DBG   
 *
 * @BRIEF        32-bit input value. 
 *               Write only register. Reads return 0. - (WO) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_DBG__DBG                  BITFIELD(31, 0)
#define CCP2_RECEIVER__CCP2_DBG__DBG__POS             0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_GNQ__OCPREADPORT   
 *
 * @BRIEF        The OCP master read port, the DPCM encoder and ALAW 
 *               decompression are only present when this bit is set. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_GNQ__OCPREADPORT          BITFIELD(5, 5)
#define CCP2_RECEIVER__CCP2_GNQ__OCPREADPORT__POS     5

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_GNQ__FIFODEPTH   
 *
 * @BRIEF        Output FIFO size in multiple of 64 bits. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_GNQ__FIFODEPTH            BITFIELD(4, 2)
#define CCP2_RECEIVER__CCP2_GNQ__FIFODEPTH__POS       2

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_GNQ__NBCHANNELS   
 *
 * @BRIEF        Number of logical channels supported by the module. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_GNQ__NBCHANNELS           BITFIELD(1, 0)
#define CCP2_RECEIVER__CCP2_GNQ__NBCHANNELS__POS      0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_CTRL1__LEVH   
 *
 * @BRIEF        Controls generation of MFlag[1:0]: 
 *               00: FIFO_LEV<=LEVL 
 *               01: unused 
 *               10: LEVL<FIFO_LEV and FIFO_LEV<=LEVH 
 *               11: LEVH<FIFO_LEV 
 *               Allowed values 0..FIFO_SIZE. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_CTRL1__LEVH               BITFIELD(30, 24)
#define CCP2_RECEIVER__CCP2_CTRL1__LEVH__POS          24

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_CTRL1__LEVL   
 *
 * @BRIEF        Controls generation of MFlag[1:0]: 
 *               00: FIFO_LEV<=LEVL 
 *               01: unused 
 *               10: LEVL<FIFO_LEV and FIFO_LEV<=LEVH 
 *               11: LEVH<FIFO_LEV 
 *               Allowed values 0..FIFO_SIZE. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_CTRL1__LEVL               BITFIELD(22, 16)
#define CCP2_RECEIVER__CCP2_CTRL1__LEVL__POS          16

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_CTRL1__BLANKING   
 *
 * @BRIEF        Controls the number of clock pulses provided during vertical 
 *               and horizontal clock periods. 
 *               When the blanking period provided by the camera is lower 
 *               than the value set here,  
 *               the blanking period is shortened by the CCP2_RECEIVER to 
 *               prevent internal FIFO overflow.  
 *               SW must increase the sensor blanking period in that case. - 
 *               (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_CTRL1__BLANKING           BITFIELD(1, 0)
#define CCP2_RECEIVER__CCP2_CTRL1__BLANKING__POS      0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC0_CTRL__COUNT   
 *
 * @BRIEF        Sets the number of frame to acquire. Once the frame 
 *               acquisition starts, the COUNT value is decremented after 
 *               every frame. When COUNT reaches 0, the COUNT_IRQ interrupt 
 *               is triggered and CHAN_EN is set to '0'. 
 *               Writes to this bit field are controlled by the COUNT_UNLOCK 
 *               bit. COUNT can be overwritten dynamically with a new count 
 *               value. 
 *               0: Infinite number of frames (no count). 
 *               1: 1 frame to acquire 
 *               ... 
 *               255: 255 frames to acquire. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC0_CTRL__COUNT           BITFIELD(31, 24)
#define CCP2_RECEIVER__CCP2_LC0_CTRL__COUNT__POS      24

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC0_CTRL__CRC_EN   
 *
 * @BRIEF        Enables the cyclic redundancy check. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC0_CTRL__CRC_EN          BITFIELD(19, 19)
#define CCP2_RECEIVER__CCP2_LC0_CTRL__CRC_EN__POS     19

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC0_CTRL__DPCM_PRED   
 *
 * @BRIEF        Selects the DPCM predictor to be used for the RAW6+DPCM10, 
 *               RAW7+DPCM10 and RAW8+DPCM12 data formats.  
 *               The RAW8+DPCM10 data format always use the simple predictor. 
 *               - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC0_CTRL__DPCM_PRED       BITFIELD(18, 18)
#define CCP2_RECEIVER__CCP2_LC0_CTRL__DPCM_PRED__POS  18

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC0_CTRL__PING_PONG   
 *
 * @BRIEF        Indicates whether the PING or PONG destination address 
 *               (CCP2_LC0_DAT_PING_ADDR or CCP2_LC0_DAT_PONG_ADDR) was used 
 *               to write the last frame. This bit field toggles after every 
 *               FEC sync code. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC0_CTRL__PING_PONG       BITFIELD(17, 17)
#define CCP2_RECEIVER__CCP2_LC0_CTRL__PING_PONG__POS  17

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC0_CTRL__COUNT_UNLOCK   
 *
 * @BRIEF        Unlock writes to the COUNT bit field. - (WO) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC0_CTRL__COUNT_UNLOCK    BITFIELD(16, 16)
#define CCP2_RECEIVER__CCP2_LC0_CTRL__COUNT_UNLOCK__POS 16

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC0_CTRL__ALPHA   
 *
 * @BRIEF        Alpha value for RGB888 and RBG444. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC0_CTRL__ALPHA           BITFIELD(15, 8)
#define CCP2_RECEIVER__CCP2_LC0_CTRL__ALPHA__POS      8

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC0_CTRL__FORMAT   
 *
 * @BRIEF        Data format selection. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC0_CTRL__FORMAT          BITFIELD(7, 2)
#define CCP2_RECEIVER__CCP2_LC0_CTRL__FORMAT__POS     2

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC0_CTRL__REGION_EN   
 *
 * @BRIEF        Enables the setting of regions of interest in the frame: SOF 
 *               region, EOF region and DAT region. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC0_CTRL__REGION_EN       BITFIELD(1, 1)
#define CCP2_RECEIVER__CCP2_LC0_CTRL__REGION_EN__POS  1

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC0_CTRL__CHAN_EN   
 *
 * @BRIEF        Enables the logical channel - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC0_CTRL__CHAN_EN         BITFIELD(0, 0)
#define CCP2_RECEIVER__CCP2_LC0_CTRL__CHAN_EN__POS    0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC0_CODE__CHAN_ID   
 *
 * @BRIEF        Log chan 0 identifier. 
 *               The channel identifier is located btw bits 4 to 7 in the 
 *               32-bit synchronization codes. 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC0_CODE__CHAN_ID         BITFIELD(19, 16)
#define CCP2_RECEIVER__CCP2_LC0_CODE__CHAN_ID__POS    16

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC0_CODE__FEC   
 *
 * @BRIEF        Log chan 0 frame end sync code identifier. 
 *               The sync code identifier is located btw bits 0 to 3 in the 
 *               32-bit  synchronization codes. 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC0_CODE__FEC             BITFIELD(15, 12)
#define CCP2_RECEIVER__CCP2_LC0_CODE__FEC__POS        12

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC0_CODE__FSC   
 *
 * @BRIEF        Log chan 0 frame start sync code identifier. 
 *               The sync code identifier is located btw bits 0 to 3 in the 
 *               32-bit  synchronization codes. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC0_CODE__FSC             BITFIELD(11, 8)
#define CCP2_RECEIVER__CCP2_LC0_CODE__FSC__POS        8

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC0_CODE__LEC   
 *
 * @BRIEF        Log chan 0 line end sync code identifier. 
 *               The sync code identifier is located btw bits 0 to 3 in the 
 *               32-bit  synchronization codes. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC0_CODE__LEC             BITFIELD(7, 4)
#define CCP2_RECEIVER__CCP2_LC0_CODE__LEC__POS        4

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC0_CODE__LSC   
 *
 * @BRIEF        Log chan 0 line start sync code identifier. 
 *               The sync code identifier is located btw bits 0 to 3 in the 
 *               32-bit  synchronization codes. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC0_CODE__LSC             BITFIELD(3, 0)
#define CCP2_RECEIVER__CCP2_LC0_CODE__LSC__POS        0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC0_STAT_START__EOF   
 *
 * @BRIEF        Sets the vertical position of the EOF status lines in 
 *               regards of the FSC sync code. From 0 to 4095. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC0_STAT_START__EOF       BITFIELD(27, 16)
#define CCP2_RECEIVER__CCP2_LC0_STAT_START__EOF__POS  16

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC0_STAT_START__SOF   
 *
 * @BRIEF        Sets the vertical position of the EOF status lines in 
 *               regards of the FSC sync code. Should always be 0. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC0_STAT_START__SOF       BITFIELD(11, 0)
#define CCP2_RECEIVER__CCP2_LC0_STAT_START__SOF__POS  0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC0_STAT_SIZE__EOF   
 *
 * @BRIEF        Sets the number of EOF status lines 
 *               From 0 to 4095 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC0_STAT_SIZE__EOF        BITFIELD(27, 16)
#define CCP2_RECEIVER__CCP2_LC0_STAT_SIZE__EOF__POS   16

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC0_STAT_SIZE__SOF   
 *
 * @BRIEF        Sets the number of SOF status line(s) 
 *               From 0 to 4095 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC0_STAT_SIZE__SOF        BITFIELD(11, 0)
#define CCP2_RECEIVER__CCP2_LC0_STAT_SIZE__SOF__POS   0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC0_SOF_ADDR__ADDR   
 *
 * @BRIEF        27 most significant bits of the 32-bit address. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC0_SOF_ADDR__ADDR        BITFIELD(31, 5)
#define CCP2_RECEIVER__CCP2_LC0_SOF_ADDR__ADDR__POS   5

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC0_EOF_ADDR__ADDR   
 *
 * @BRIEF        27 most significant bits of the 32-bit address. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC0_EOF_ADDR__ADDR        BITFIELD(31, 5)
#define CCP2_RECEIVER__CCP2_LC0_EOF_ADDR__ADDR__POS   5

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC0_DAT_START__VERT   
 *
 * @BRIEF        Sets the vertical position of the data in regards of the FSC 
 *               sync code. From 0 to 4095 lines. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC0_DAT_START__VERT       BITFIELD(27, 16)
#define CCP2_RECEIVER__CCP2_LC0_DAT_START__VERT__POS  16

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC0_DAT_SIZE__VERT   
 *
 * @BRIEF        Sets the vertical size of the data window. 
 *               From 0 to 4095 lines. If VERT = "0", no data is output. 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC0_DAT_SIZE__VERT        BITFIELD(27, 16)
#define CCP2_RECEIVER__CCP2_LC0_DAT_SIZE__VERT__POS   16

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC0_DAT_PING_ADDR__ADDR   
 *
 * @BRIEF        27 most significant bits of the 32-bit address. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC0_DAT_PING_ADDR__ADDR   BITFIELD(31, 5)
#define CCP2_RECEIVER__CCP2_LC0_DAT_PING_ADDR__ADDR__POS 5

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC0_DAT_PONG_ADDR__ADDR   
 *
 * @BRIEF        27 most significant bits of the 32-bit address. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC0_DAT_PONG_ADDR__ADDR   BITFIELD(31, 5)
#define CCP2_RECEIVER__CCP2_LC0_DAT_PONG_ADDR__ADDR__POS 5

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC0_DAT_OFST__OFST   
 *
 * @BRIEF        Line offset programmed in bytes. 
 *               If OFST = 0, the data is written contiguously in memory. 
 *               Otherwise, OFST sets the destination offset between the 
 *               first pixel of the previous line and the first pixel of the 
 *               current line. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC0_DAT_OFST__OFST        BITFIELD(31, 5)
#define CCP2_RECEIVER__CCP2_LC0_DAT_OFST__OFST__POS   5

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC1_CTRL__COUNT   
 *
 * @BRIEF        Sets the number of frame to acquire. Once the frame 
 *               acquisition starts, the COUNT value is decremented after 
 *               every frame. When COUNT reaches 0, the COUNT_IRQ interrupt 
 *               is triggered and CHAN_EN is set to '0'. 
 *               Writes to this bit field are controlled by the COUNT_UNLOCK 
 *               bit. COUNT can be overwritten dynamically with a new count 
 *               value. 
 *               0: Infinite number of frames (no count). 
 *               1: 1 frame to acquire 
 *               ... 
 *               255: 255 frames to acquire. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC1_CTRL__COUNT           BITFIELD(31, 24)
#define CCP2_RECEIVER__CCP2_LC1_CTRL__COUNT__POS      24

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC1_CTRL__CRC_EN   
 *
 * @BRIEF        Enables the cyclic redundancy check. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC1_CTRL__CRC_EN          BITFIELD(19, 19)
#define CCP2_RECEIVER__CCP2_LC1_CTRL__CRC_EN__POS     19

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC1_CTRL__DPCM_PRED   
 *
 * @BRIEF        Selects the DPCM predictor to be used for the RAW6+DPCM10, 
 *               RAW7+DPCM10 and RAW8+DPCM12 data formats.  
 *               The RAW8+DPCM10 data format always use the simple predictor. 
 *               - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC1_CTRL__DPCM_PRED       BITFIELD(18, 18)
#define CCP2_RECEIVER__CCP2_LC1_CTRL__DPCM_PRED__POS  18

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC1_CTRL__PING_PONG   
 *
 * @BRIEF        Indicates whether the PING or PONG destination address 
 *               (CCP2_LC1_DAT_PING_ADDR or CCP2_LC1_DAT_PONG_ADDR) was used 
 *               to write the last frame. This bit field toggles after every 
 *               FEC sync code. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC1_CTRL__PING_PONG       BITFIELD(17, 17)
#define CCP2_RECEIVER__CCP2_LC1_CTRL__PING_PONG__POS  17

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC1_CTRL__COUNT_UNLOCK   
 *
 * @BRIEF        Unlock writes to the COUNT bit field. - (WO) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC1_CTRL__COUNT_UNLOCK    BITFIELD(16, 16)
#define CCP2_RECEIVER__CCP2_LC1_CTRL__COUNT_UNLOCK__POS 16

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC1_CTRL__ALPHA   
 *
 * @BRIEF        Alpha value for RGB888 and RBG444. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC1_CTRL__ALPHA           BITFIELD(15, 8)
#define CCP2_RECEIVER__CCP2_LC1_CTRL__ALPHA__POS      8

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC1_CTRL__FORMAT   
 *
 * @BRIEF        Data format selection. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC1_CTRL__FORMAT          BITFIELD(7, 2)
#define CCP2_RECEIVER__CCP2_LC1_CTRL__FORMAT__POS     2

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC1_CTRL__REGION_EN   
 *
 * @BRIEF        Enables the setting of regions of interest in the frame: SOF 
 *               region, EOF region and DAT region. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC1_CTRL__REGION_EN       BITFIELD(1, 1)
#define CCP2_RECEIVER__CCP2_LC1_CTRL__REGION_EN__POS  1

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC1_CTRL__CHAN_EN   
 *
 * @BRIEF        Enables the logical channel - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC1_CTRL__CHAN_EN         BITFIELD(0, 0)
#define CCP2_RECEIVER__CCP2_LC1_CTRL__CHAN_EN__POS    0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC1_CODE__CHAN_ID   
 *
 * @BRIEF        Log chan 1 identifier. 
 *               The channel identifier is located btw bits 4 to 7 in the 
 *               32-bit synchronization codes. 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC1_CODE__CHAN_ID         BITFIELD(19, 16)
#define CCP2_RECEIVER__CCP2_LC1_CODE__CHAN_ID__POS    16

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC1_CODE__FEC   
 *
 * @BRIEF        Log chan 1 frame end sync code identifier. 
 *               The sync code identifier is located btw bits 0 to 3 in the 
 *               32-bit  synchronization codes. 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC1_CODE__FEC             BITFIELD(15, 12)
#define CCP2_RECEIVER__CCP2_LC1_CODE__FEC__POS        12

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC1_CODE__FSC   
 *
 * @BRIEF        Log chan 1 frame start sync code identifier. 
 *               The sync code identifier is located btw bits 0 to 3 in the 
 *               32-bit  synchronization codes. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC1_CODE__FSC             BITFIELD(11, 8)
#define CCP2_RECEIVER__CCP2_LC1_CODE__FSC__POS        8

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC1_CODE__LEC   
 *
 * @BRIEF        Log chan 1 line end sync code identifier. 
 *               The sync code identifier is located btw bits 0 to 3 in the 
 *               32-bit  synchronization codes. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC1_CODE__LEC             BITFIELD(7, 4)
#define CCP2_RECEIVER__CCP2_LC1_CODE__LEC__POS        4

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC1_CODE__LSC   
 *
 * @BRIEF        Log chan 1 line start sync code identifier. 
 *               The sync code identifier is located btw bits 0 to 3 in the 
 *               32-bit  synchronization codes. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC1_CODE__LSC             BITFIELD(3, 0)
#define CCP2_RECEIVER__CCP2_LC1_CODE__LSC__POS        0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC1_STAT_START__EOF   
 *
 * @BRIEF        Sets the vertical position of the EOF status lines in 
 *               regards of the FSC sync code. From 0 to 4095. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC1_STAT_START__EOF       BITFIELD(27, 16)
#define CCP2_RECEIVER__CCP2_LC1_STAT_START__EOF__POS  16

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC1_STAT_START__SOF   
 *
 * @BRIEF        Sets the vertical position of the EOF status lines in 
 *               regards of the FSC sync code. Should always be 0. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC1_STAT_START__SOF       BITFIELD(11, 0)
#define CCP2_RECEIVER__CCP2_LC1_STAT_START__SOF__POS  0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC1_STAT_SIZE__EOF   
 *
 * @BRIEF        Sets the number of EOF status lines 
 *               From 0 to 4095 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC1_STAT_SIZE__EOF        BITFIELD(27, 16)
#define CCP2_RECEIVER__CCP2_LC1_STAT_SIZE__EOF__POS   16

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC1_STAT_SIZE__SOF   
 *
 * @BRIEF        Sets the number of SOF status line(s) 
 *               From 0 to 4095 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC1_STAT_SIZE__SOF        BITFIELD(11, 0)
#define CCP2_RECEIVER__CCP2_LC1_STAT_SIZE__SOF__POS   0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC1_SOF_ADDR__ADDR   
 *
 * @BRIEF        27 most significant bits of the 32-bit address. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC1_SOF_ADDR__ADDR        BITFIELD(31, 5)
#define CCP2_RECEIVER__CCP2_LC1_SOF_ADDR__ADDR__POS   5

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC1_EOF_ADDR__ADDR   
 *
 * @BRIEF        27 most significant bits of the 32-bit address. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC1_EOF_ADDR__ADDR        BITFIELD(31, 5)
#define CCP2_RECEIVER__CCP2_LC1_EOF_ADDR__ADDR__POS   5

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC1_DAT_START__VERT   
 *
 * @BRIEF        Sets the vertical position of the data in regards of the FSC 
 *               sync code. From 0 to 4095 lines. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC1_DAT_START__VERT       BITFIELD(27, 16)
#define CCP2_RECEIVER__CCP2_LC1_DAT_START__VERT__POS  16

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC1_DAT_SIZE__VERT   
 *
 * @BRIEF        Sets the vertical size of the data window. 
 *               From 0 to 4095 lines. If VERT = "0", no data is output. 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC1_DAT_SIZE__VERT        BITFIELD(27, 16)
#define CCP2_RECEIVER__CCP2_LC1_DAT_SIZE__VERT__POS   16

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC1_DAT_PING_ADDR__ADDR   
 *
 * @BRIEF        27 most significant bits of the 32-bit address. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC1_DAT_PING_ADDR__ADDR   BITFIELD(31, 5)
#define CCP2_RECEIVER__CCP2_LC1_DAT_PING_ADDR__ADDR__POS 5

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC1_DAT_PONG_ADDR__ADDR   
 *
 * @BRIEF        27 most significant bits of the 32-bit address. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC1_DAT_PONG_ADDR__ADDR   BITFIELD(31, 5)
#define CCP2_RECEIVER__CCP2_LC1_DAT_PONG_ADDR__ADDR__POS 5

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC1_DAT_OFST__OFST   
 *
 * @BRIEF        Line offset programmed in bytes. 
 *               If OFST = 0, the data is written contiguously in memory. 
 *               Otherwise, OFST sets the destination offset between the 
 *               first pixel of the previous line and the first pixel of the 
 *               current line. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC1_DAT_OFST__OFST        BITFIELD(31, 5)
#define CCP2_RECEIVER__CCP2_LC1_DAT_OFST__OFST__POS   5

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC2_CTRL__COUNT   
 *
 * @BRIEF        Sets the number of frame to acquire. Once the frame 
 *               acquisition starts, the COUNT value is decremented after 
 *               every frame. When COUNT reaches 0, the COUNT_IRQ interrupt 
 *               is triggered and CHAN_EN is set to '0'. 
 *               Writes to this bit field are controlled by the COUNT_UNLOCK 
 *               bit. COUNT can be overwritten dynamically with a new count 
 *               value. 
 *               0: Infinite number of frames (no count). 
 *               1: 1 frame to acquire 
 *               ... 
 *               255: 255 frames to acquire. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC2_CTRL__COUNT           BITFIELD(31, 24)
#define CCP2_RECEIVER__CCP2_LC2_CTRL__COUNT__POS      24

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC2_CTRL__CRC_EN   
 *
 * @BRIEF        Enables the cyclic redundancy check. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC2_CTRL__CRC_EN          BITFIELD(19, 19)
#define CCP2_RECEIVER__CCP2_LC2_CTRL__CRC_EN__POS     19

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC2_CTRL__DPCM_PRED   
 *
 * @BRIEF        Selects the DPCM predictor to be used for the RAW6+DPCM10, 
 *               RAW7+DPCM10 and RAW8+DPCM12 data formats.  
 *               The RAW8+DPCM10 data format always use the simple predictor. 
 *               - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC2_CTRL__DPCM_PRED       BITFIELD(18, 18)
#define CCP2_RECEIVER__CCP2_LC2_CTRL__DPCM_PRED__POS  18

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC2_CTRL__PING_PONG   
 *
 * @BRIEF        Indicates whether the PING or PONG destination address 
 *               (CCP2_LC2_DAT_PING_ADDR or CCP2_LC2_DAT_PONG_ADDR) was used 
 *               to write the last frame. This bit field toggles after every 
 *               FEC sync code. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC2_CTRL__PING_PONG       BITFIELD(17, 17)
#define CCP2_RECEIVER__CCP2_LC2_CTRL__PING_PONG__POS  17

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC2_CTRL__COUNT_UNLOCK   
 *
 * @BRIEF        Unlock writes to the COUNT bit field. - (WO) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC2_CTRL__COUNT_UNLOCK    BITFIELD(16, 16)
#define CCP2_RECEIVER__CCP2_LC2_CTRL__COUNT_UNLOCK__POS 16

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC2_CTRL__ALPHA   
 *
 * @BRIEF        Alpha value for RGB888 and RBG444. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC2_CTRL__ALPHA           BITFIELD(15, 8)
#define CCP2_RECEIVER__CCP2_LC2_CTRL__ALPHA__POS      8

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC2_CTRL__FORMAT   
 *
 * @BRIEF        Data format selection. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC2_CTRL__FORMAT          BITFIELD(7, 2)
#define CCP2_RECEIVER__CCP2_LC2_CTRL__FORMAT__POS     2

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC2_CTRL__REGION_EN   
 *
 * @BRIEF        Enables the setting of regions of interest in the frame: SOF 
 *               region, EOF region and DAT region. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC2_CTRL__REGION_EN       BITFIELD(1, 1)
#define CCP2_RECEIVER__CCP2_LC2_CTRL__REGION_EN__POS  1

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC2_CTRL__CHAN_EN   
 *
 * @BRIEF        Enables the logical channel - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC2_CTRL__CHAN_EN         BITFIELD(0, 0)
#define CCP2_RECEIVER__CCP2_LC2_CTRL__CHAN_EN__POS    0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC2_CODE__CHAN_ID   
 *
 * @BRIEF        Log chan 2 identifier. 
 *               The channel identifier is located btw bits 4 to 7 in the 
 *               32-bit synchronization codes. 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC2_CODE__CHAN_ID         BITFIELD(19, 16)
#define CCP2_RECEIVER__CCP2_LC2_CODE__CHAN_ID__POS    16

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC2_CODE__FEC   
 *
 * @BRIEF        Log chan 2 frame end sync code identifier. 
 *               The sync code identifier is located btw bits 0 to 3 in the 
 *               32-bit  synchronization codes. 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC2_CODE__FEC             BITFIELD(15, 12)
#define CCP2_RECEIVER__CCP2_LC2_CODE__FEC__POS        12

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC2_CODE__FSC   
 *
 * @BRIEF        Log chan 2 frame start sync code identifier. 
 *               The sync code identifier is located btw bits 0 to 3 in the 
 *               32-bit  synchronization codes. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC2_CODE__FSC             BITFIELD(11, 8)
#define CCP2_RECEIVER__CCP2_LC2_CODE__FSC__POS        8

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC2_CODE__LEC   
 *
 * @BRIEF        Log chan 2 line end sync code identifier. 
 *               The sync code identifier is located btw bits 0 to 3 in the 
 *               32-bit  synchronization codes. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC2_CODE__LEC             BITFIELD(7, 4)
#define CCP2_RECEIVER__CCP2_LC2_CODE__LEC__POS        4

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC2_CODE__LSC   
 *
 * @BRIEF        Log chan 2 line start sync code identifier. 
 *               The sync code identifier is located btw bits 0 to 3 in the 
 *               32-bit  synchronization codes. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC2_CODE__LSC             BITFIELD(3, 0)
#define CCP2_RECEIVER__CCP2_LC2_CODE__LSC__POS        0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC2_STAT_START__EOF   
 *
 * @BRIEF        Sets the vertical position of the EOF status lines in 
 *               regards of the FSC sync code. From 0 to 4095. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC2_STAT_START__EOF       BITFIELD(27, 16)
#define CCP2_RECEIVER__CCP2_LC2_STAT_START__EOF__POS  16

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC2_STAT_START__SOF   
 *
 * @BRIEF        Sets the vertical position of the EOF status lines in 
 *               regards of the FSC sync code. Should always be 0. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC2_STAT_START__SOF       BITFIELD(11, 0)
#define CCP2_RECEIVER__CCP2_LC2_STAT_START__SOF__POS  0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC2_STAT_SIZE__EOF   
 *
 * @BRIEF        Sets the number of EOF status lines 
 *               From 0 to 4095 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC2_STAT_SIZE__EOF        BITFIELD(27, 16)
#define CCP2_RECEIVER__CCP2_LC2_STAT_SIZE__EOF__POS   16

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC2_STAT_SIZE__SOF   
 *
 * @BRIEF        Sets the number of SOF status line(s) 
 *               From 0 to 4095 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC2_STAT_SIZE__SOF        BITFIELD(11, 0)
#define CCP2_RECEIVER__CCP2_LC2_STAT_SIZE__SOF__POS   0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC2_SOF_ADDR__ADDR   
 *
 * @BRIEF        27 most significant bits of the 32-bit address. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC2_SOF_ADDR__ADDR        BITFIELD(31, 5)
#define CCP2_RECEIVER__CCP2_LC2_SOF_ADDR__ADDR__POS   5

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC2_EOF_ADDR__ADDR   
 *
 * @BRIEF        27 most significant bits of the 32-bit address. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC2_EOF_ADDR__ADDR        BITFIELD(31, 5)
#define CCP2_RECEIVER__CCP2_LC2_EOF_ADDR__ADDR__POS   5

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC2_DAT_START__VERT   
 *
 * @BRIEF        Sets the vertical position of the data in regards of the FSC 
 *               sync code. From 0 to 4095 lines. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC2_DAT_START__VERT       BITFIELD(27, 16)
#define CCP2_RECEIVER__CCP2_LC2_DAT_START__VERT__POS  16

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC2_DAT_SIZE__VERT   
 *
 * @BRIEF        Sets the vertical size of the data window. 
 *               From 0 to 4095 lines. If VERT = "0", no data is output. 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC2_DAT_SIZE__VERT        BITFIELD(27, 16)
#define CCP2_RECEIVER__CCP2_LC2_DAT_SIZE__VERT__POS   16

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC2_DAT_PING_ADDR__ADDR   
 *
 * @BRIEF        27 most significant bits of the 32-bit address. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC2_DAT_PING_ADDR__ADDR   BITFIELD(31, 5)
#define CCP2_RECEIVER__CCP2_LC2_DAT_PING_ADDR__ADDR__POS 5

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC2_DAT_PONG_ADDR__ADDR   
 *
 * @BRIEF        27 most significant bits of the 32-bit address. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC2_DAT_PONG_ADDR__ADDR   BITFIELD(31, 5)
#define CCP2_RECEIVER__CCP2_LC2_DAT_PONG_ADDR__ADDR__POS 5

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC2_DAT_OFST__OFST   
 *
 * @BRIEF        Line offset programmed in bytes. 
 *               If OFST = 0, the data is written contiguously in memory. 
 *               Otherwise, OFST sets the destination offset between the 
 *               first pixel of the previous line and the first pixel of the 
 *               current line. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC2_DAT_OFST__OFST        BITFIELD(31, 5)
#define CCP2_RECEIVER__CCP2_LC2_DAT_OFST__OFST__POS   5

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC3_CTRL__COUNT   
 *
 * @BRIEF        Sets the number of frame to acquire. Once the frame 
 *               acquisition starts, the COUNT value is decremented after 
 *               every frame. When COUNT reaches 0, the COUNT_IRQ interrupt 
 *               is triggered and CHAN_EN is set to '0'. 
 *               Writes to this bit field are controlled by the COUNT_UNLOCK 
 *               bit. COUNT can be overwritten dynamically with a new count 
 *               value. 
 *               0: Infinite number of frames (no count). 
 *               1: 1 frame to acquire 
 *               ... 
 *               255: 255 frames to acquire. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC3_CTRL__COUNT           BITFIELD(31, 24)
#define CCP2_RECEIVER__CCP2_LC3_CTRL__COUNT__POS      24

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC3_CTRL__CRC_EN   
 *
 * @BRIEF        Enables the cyclic redundancy check. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC3_CTRL__CRC_EN          BITFIELD(19, 19)
#define CCP2_RECEIVER__CCP2_LC3_CTRL__CRC_EN__POS     19

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC3_CTRL__DPCM_PRED   
 *
 * @BRIEF        Selects the DPCM predictor to be used for the RAW6+DPCM10, 
 *               RAW7+DPCM10 and RAW8+DPCM12 data formats.  
 *               The RAW8+DPCM10 data format always use the simple predictor. 
 *               - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC3_CTRL__DPCM_PRED       BITFIELD(18, 18)
#define CCP2_RECEIVER__CCP2_LC3_CTRL__DPCM_PRED__POS  18

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC3_CTRL__PING_PONG   
 *
 * @BRIEF        Indicates whether the PING or PONG destination address 
 *               (CCP2_LC3_DAT_PING_ADDR or CCP2_LC3_DAT_PONG_ADDR) was used 
 *               to write the last frame. This bit field toggles after every 
 *               FEC sync code. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC3_CTRL__PING_PONG       BITFIELD(17, 17)
#define CCP2_RECEIVER__CCP2_LC3_CTRL__PING_PONG__POS  17

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC3_CTRL__COUNT_UNLOCK   
 *
 * @BRIEF        Unlock writes to the COUNT bit field. - (WO) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC3_CTRL__COUNT_UNLOCK    BITFIELD(16, 16)
#define CCP2_RECEIVER__CCP2_LC3_CTRL__COUNT_UNLOCK__POS 16

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC3_CTRL__ALPHA   
 *
 * @BRIEF        Alpha value for RGB888 and RBG444. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC3_CTRL__ALPHA           BITFIELD(15, 8)
#define CCP2_RECEIVER__CCP2_LC3_CTRL__ALPHA__POS      8

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC3_CTRL__FORMAT   
 *
 * @BRIEF        Data format selection. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC3_CTRL__FORMAT          BITFIELD(7, 2)
#define CCP2_RECEIVER__CCP2_LC3_CTRL__FORMAT__POS     2

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC3_CTRL__REGION_EN   
 *
 * @BRIEF        Enables the setting of regions of interest in the frame: SOF 
 *               region, EOF region and DAT region. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC3_CTRL__REGION_EN       BITFIELD(1, 1)
#define CCP2_RECEIVER__CCP2_LC3_CTRL__REGION_EN__POS  1

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC3_CTRL__CHAN_EN   
 *
 * @BRIEF        Enables the logical channel - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC3_CTRL__CHAN_EN         BITFIELD(0, 0)
#define CCP2_RECEIVER__CCP2_LC3_CTRL__CHAN_EN__POS    0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC3_CODE__CHAN_ID   
 *
 * @BRIEF        Log chan 3 identifier. 
 *               The channel identifier is located btw bits 4 to 7 in the 
 *               32-bit synchronization codes. 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC3_CODE__CHAN_ID         BITFIELD(19, 16)
#define CCP2_RECEIVER__CCP2_LC3_CODE__CHAN_ID__POS    16

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC3_CODE__FEC   
 *
 * @BRIEF        Log chan 3 frame end sync code identifier. 
 *               The sync code identifier is located btw bits 0 to 3 in the 
 *               32-bit  synchronization codes. 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC3_CODE__FEC             BITFIELD(15, 12)
#define CCP2_RECEIVER__CCP2_LC3_CODE__FEC__POS        12

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC3_CODE__FSC   
 *
 * @BRIEF        Log chan 3 frame start sync code identifier. 
 *               The sync code identifier is located btw bits 0 to 3 in the 
 *               32-bit  synchronization codes. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC3_CODE__FSC             BITFIELD(11, 8)
#define CCP2_RECEIVER__CCP2_LC3_CODE__FSC__POS        8

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC3_CODE__LEC   
 *
 * @BRIEF        Log chan 3 line end sync code identifier. 
 *               The sync code identifier is located btw bits 0 to 3 in the 
 *               32-bit  synchronization codes. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC3_CODE__LEC             BITFIELD(7, 4)
#define CCP2_RECEIVER__CCP2_LC3_CODE__LEC__POS        4

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC3_CODE__LSC   
 *
 * @BRIEF        Log chan 3 line start sync code identifier. 
 *               The sync code identifier is located btw bits 0 to 3 in the 
 *               32-bit  synchronization codes. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC3_CODE__LSC             BITFIELD(3, 0)
#define CCP2_RECEIVER__CCP2_LC3_CODE__LSC__POS        0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC3_STAT_START__EOF   
 *
 * @BRIEF        Sets the vertical position of the EOF status lines in 
 *               regards of the FSC sync code. From 0 to 4095. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC3_STAT_START__EOF       BITFIELD(27, 16)
#define CCP2_RECEIVER__CCP2_LC3_STAT_START__EOF__POS  16

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC3_STAT_START__SOF   
 *
 * @BRIEF        Sets the vertical position of the EOF status lines in 
 *               regards of the FSC sync code. Should always be 0. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC3_STAT_START__SOF       BITFIELD(11, 0)
#define CCP2_RECEIVER__CCP2_LC3_STAT_START__SOF__POS  0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC3_STAT_SIZE__EOF   
 *
 * @BRIEF        Sets the number of EOF status lines 
 *               From 0 to 4095 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC3_STAT_SIZE__EOF        BITFIELD(27, 16)
#define CCP2_RECEIVER__CCP2_LC3_STAT_SIZE__EOF__POS   16

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC3_STAT_SIZE__SOF   
 *
 * @BRIEF        Sets the number of SOF status line(s) 
 *               From 0 to 4095 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC3_STAT_SIZE__SOF        BITFIELD(11, 0)
#define CCP2_RECEIVER__CCP2_LC3_STAT_SIZE__SOF__POS   0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC3_SOF_ADDR__ADDR   
 *
 * @BRIEF        27 most significant bits of the 32-bit address. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC3_SOF_ADDR__ADDR        BITFIELD(31, 5)
#define CCP2_RECEIVER__CCP2_LC3_SOF_ADDR__ADDR__POS   5

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC3_EOF_ADDR__ADDR   
 *
 * @BRIEF        27 most significant bits of the 32-bit address. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC3_EOF_ADDR__ADDR        BITFIELD(31, 5)
#define CCP2_RECEIVER__CCP2_LC3_EOF_ADDR__ADDR__POS   5

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC3_DAT_START__VERT   
 *
 * @BRIEF        Sets the vertical position of the data in regards of the FSC 
 *               sync code. From 0 to 4095 lines. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC3_DAT_START__VERT       BITFIELD(27, 16)
#define CCP2_RECEIVER__CCP2_LC3_DAT_START__VERT__POS  16

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC3_DAT_SIZE__VERT   
 *
 * @BRIEF        Sets the vertical size of the data window. 
 *               From 0 to 4095 lines. If VERT = "0", no data is output. 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC3_DAT_SIZE__VERT        BITFIELD(27, 16)
#define CCP2_RECEIVER__CCP2_LC3_DAT_SIZE__VERT__POS   16

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC3_DAT_PING_ADDR__ADDR   
 *
 * @BRIEF        27 most significant bits of the 32-bit address. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC3_DAT_PING_ADDR__ADDR   BITFIELD(31, 5)
#define CCP2_RECEIVER__CCP2_LC3_DAT_PING_ADDR__ADDR__POS 5

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC3_DAT_PONG_ADDR__ADDR   
 *
 * @BRIEF        27 most significant bits of the 32-bit address. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC3_DAT_PONG_ADDR__ADDR   BITFIELD(31, 5)
#define CCP2_RECEIVER__CCP2_LC3_DAT_PONG_ADDR__ADDR__POS 5

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC3_DAT_OFST__OFST   
 *
 * @BRIEF        Line offset programmed in bytes. 
 *               If OFST = 0, the data is written contiguously in memory. 
 *               Otherwise, OFST sets the destination offset between the 
 *               first pixel of the previous line and the first pixel of the 
 *               current line. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC3_DAT_OFST__OFST        BITFIELD(31, 5)
#define CCP2_RECEIVER__CCP2_LC3_DAT_OFST__OFST__POS   5

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LCM_CTRL__DST_PACK   
 *
 * @BRIEF        Data is packed before it is send to memory. 
 *               Applies to RAW6, RAW7, RAW10 and RAW12 only. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LCM_CTRL__DST_PACK        BITFIELD(31, 31)
#define CCP2_RECEIVER__CCP2_LCM_CTRL__DST_PACK__POS   31

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LCM_CTRL__DST_DPCM_PRED   
 *
 * @BRIEF        Selects the DPCM predictor to be used for the RAW6+DPCM10 
 *               and RAW7+DPCM10 data formats.  
 *               The RAW8+DPCM10 data format always use the simple predictor. 
 *               - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LCM_CTRL__DST_DPCM_PRED   BITFIELD(30, 30)
#define CCP2_RECEIVER__CCP2_LCM_CTRL__DST_DPCM_PRED__POS 30

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LCM_CTRL__DST_COMPR   
 *
 * @BRIEF        Enables data compression of data sent to memory - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LCM_CTRL__DST_COMPR       BITFIELD(29, 28)
#define CCP2_RECEIVER__CCP2_LCM_CTRL__DST_COMPR__POS  28

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LCM_CTRL__DST_FORMAT   
 *
 * @BRIEF        Output format selection. 
 *               Not every combination between input and output formats are 
 *               possible. Please check the specification for allowed modes. 
 *               - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LCM_CTRL__DST_FORMAT      BITFIELD(26, 24)
#define CCP2_RECEIVER__CCP2_LCM_CTRL__DST_FORMAT__POS 24

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LCM_CTRL__SRC_PACK   
 *
 * @BRIEF        Data stored in memory is packed and must be unpacked.  - 
 *               (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LCM_CTRL__SRC_PACK        BITFIELD(23, 23)
#define CCP2_RECEIVER__CCP2_LCM_CTRL__SRC_PACK__POS   23

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LCM_CTRL__SRC_DPCM_PRED   
 *
 * @BRIEF        Selects the DPCM predictor to be used for the RAW6+DPCM10, 
 *               RAW7+DPCM10 and RAW8+DPCM12 data formats.  
 *               The RAW8+DPCM10 and RAW6 + DPCM12 data format always use the 
 *               simple predictor. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LCM_CTRL__SRC_DPCM_PRED   BITFIELD(22, 22)
#define CCP2_RECEIVER__CCP2_LCM_CTRL__SRC_DPCM_PRED__POS 22

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LCM_CTRL__SRC_DECOMPR   
 *
 * @BRIEF        Enable decompression of incoming data - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LCM_CTRL__SRC_DECOMPR     BITFIELD(21, 20)
#define CCP2_RECEIVER__CCP2_LCM_CTRL__SRC_DECOMPR__POS 20

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LCM_CTRL__SRC_FORMAT   
 *
 * @BRIEF        Data format of the data stored in memory. 
 *               As there is no header embedded in the data sent to memory 
 *               the user is responsible of choosing the adequate format. - 
 *               (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LCM_CTRL__SRC_FORMAT      BITFIELD(19, 16)
#define CCP2_RECEIVER__CCP2_LCM_CTRL__SRC_FORMAT__POS 16

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LCM_CTRL__BURST_SIZE   
 *
 * @BRIEF        Defines the burst size of the master read port - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LCM_CTRL__BURST_SIZE      BITFIELD(7, 5)
#define CCP2_RECEIVER__CCP2_LCM_CTRL__BURST_SIZE__POS 5

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LCM_CTRL__READ_THROTTLE   
 *
 * @BRIEF        Limit maximum data read speed for memory to memory operation 
 *               - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LCM_CTRL__READ_THROTTLE   BITFIELD(4, 3)
#define CCP2_RECEIVER__CCP2_LCM_CTRL__READ_THROTTLE__POS 3

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LCM_CTRL__DST_PORT   
 *
 * @BRIEF        Select the destination port - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LCM_CTRL__DST_PORT        BITFIELD(2, 2)
#define CCP2_RECEIVER__CCP2_LCM_CTRL__DST_PORT__POS   2

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LCM_CTRL__CHAN_EN   
 *
 * @BRIEF        Enables the read from memory channel. 
 *               Before enabling the memory read channel SW shall: 
 *               - disable the physical interface using the IF_EN bit 
 *               - wait until disabling of the physical interface is 
 *               effective (depends on the FRAME bit) 
 *               Read from memory starts as soon as this bit is set, 
 *               therefore all CCP2_LCM_x registers must be configured 
 *               correctly before. 
 *               This bit is cleared by HW at the end of the frame. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LCM_CTRL__CHAN_EN         BITFIELD(0, 0)
#define CCP2_RECEIVER__CCP2_LCM_CTRL__CHAN_EN__POS    0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LCM_VSIZE__COUNT   
 *
 * @BRIEF        Defines the line count to be read from memory. 
 *               From 1 to 8191 lines. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LCM_VSIZE__COUNT          BITFIELD(28, 16)
#define CCP2_RECEIVER__CCP2_LCM_VSIZE__COUNT__POS     16

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LCM_HSIZE__COUNT   
 *
 * @BRIEF        Horizontal count of pixels to output after the skipped 
 *               pixels. 
 *               Valid values: 1-32767. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LCM_HSIZE__COUNT          BITFIELD(30, 16)
#define CCP2_RECEIVER__CCP2_LCM_HSIZE__COUNT__POS     16

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LCM_HSIZE__SKIP   
 *
 * @BRIEF        Horizontal count of pixels to skip after the start of the 
 *               line. 
 *               When DPCM compressed data is read from memory using this 
 *               feature is the only valid way to set a horizontal starting 
 *               position. 
 *               Valid values: 0-32767. 
 *               0 will disable pixel skipping - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LCM_HSIZE__SKIP           BITFIELD(14, 0)
#define CCP2_RECEIVER__CCP2_LCM_HSIZE__SKIP__POS      0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LCM_PREFETCH__HWORDS   
 *
 * @BRIEF        64 bit words to read from memory for each line of the image. 
 *               Possible values 1..8191 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LCM_PREFETCH__HWORDS      BITFIELD(15, 3)
#define CCP2_RECEIVER__CCP2_LCM_PREFETCH__HWORDS__POS 3

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LCM_SRC_ADDR__ADDR   
 *
 * @BRIEF        27 most significant bits of the 32-bit address. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LCM_SRC_ADDR__ADDR        BITFIELD(31, 5)
#define CCP2_RECEIVER__CCP2_LCM_SRC_ADDR__ADDR__POS   5

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LCM_SRC_OFST__OFST   
 *
 * @BRIEF        Line offset programmed in bytes. 
 *               If OFST = 0, the data is read contiguously from memory. 
 *               Otherwise, OFST sets the source offset between the first 
 *               pixel of the previous line and the first pixel of the 
 *               current line. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LCM_SRC_OFST__OFST        BITFIELD(31, 5)
#define CCP2_RECEIVER__CCP2_LCM_SRC_OFST__OFST__POS   5

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LCM_DST_ADDR__ADDR   
 *
 * @BRIEF        27 most significant bits of the 32-bit address. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LCM_DST_ADDR__ADDR        BITFIELD(31, 5)
#define CCP2_RECEIVER__CCP2_LCM_DST_ADDR__ADDR__POS   5

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LCM_DST_OFST__OFST   
 *
 * @BRIEF        Line offset programmed in bytes. 
 *               If OFST = 0, the data is written contiguously to memory if 
 *               possible. At the end of a line only full 32 bit words will 
 *               be written, creating eventually gaps at the end of lines. 
 *               Otherwise, OFST sets the destination offset between the 
 *               first pixel of the previous line and the first pixel of the 
 *               current line. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LCM_DST_OFST__OFST        BITFIELD(31, 5)
#define CCP2_RECEIVER__CCP2_LCM_DST_OFST__OFST__POS   5

    /* 
     * List of register bitfields values for component CCP2_RECEIVER
     *
     */

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_SYSCONFIG__MSTANDBY_MODE__FORCESTBY
 *
 * @BRIEF        Force-standby. MStandby is only asserted when the module is 
 *               disabled. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_SYSCONFIG__MSTANDBY_MODE__FORCESTBY 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_SYSCONFIG__MSTANDBY_MODE__NOSTDBY
 *
 * @BRIEF        No-standby. MStandby is never asserted. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_SYSCONFIG__MSTANDBY_MODE__NOSTDBY 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_SYSCONFIG__MSTANDBY_MODE__SMARTSTDBY
 *
 * @BRIEF        Smart-standby: MStandby is asserted based on the activity of 
 *               the module. The module will try to go to standby during the 
 *               vertical blanking period. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_SYSCONFIG__MSTANDBY_MODE__SMARTSTDBY 0x2ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_SYSCONFIG__SOFT_RESET__NORMAL
 *
 * @BRIEF        Normal mode. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_SYSCONFIG__SOFT_RESET__NORMAL 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_SYSCONFIG__SOFT_RESET__RESET
 *
 * @BRIEF        The module is reset - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_SYSCONFIG__SOFT_RESET__RESET 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_SYSCONFIG__AUTO_IDLE__FREE
 *
 * @BRIEF        OCP clock is free-running. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_SYSCONFIG__AUTO_IDLE__FREE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_SYSCONFIG__AUTO_IDLE__GATED
 *
 * @BRIEF        Automatic OCP clock gating strategy is applied based on the 
 *               OCP interface activity. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_SYSCONFIG__AUTO_IDLE__GATED 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_SYSSTATUS__RESET_DONE__RESETONGOING
 *
 * @BRIEF        Internal module reset is on going. - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_SYSSTATUS__RESET_DONE__RESETONGOING 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_SYSSTATUS__RESET_DONE__RESETCOMPLETED
 *
 * @BRIEF        Reset completed. - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_SYSSTATUS__RESET_DONE__RESETCOMPLETED 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC1_OCPERROR_IRQ__DISABLE
 *
 * @BRIEF        Event is masked - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC1_OCPERROR_IRQ__DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC1_OCPERROR_IRQ__ENABLE
 *
 * @BRIEF        Event generates an interrupt when it occurs - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC1_OCPERROR_IRQ__ENABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC1_FS_IRQ__DISABLE
 *
 * @BRIEF        Event is masked - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC1_FS_IRQ__DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC1_FS_IRQ__ENABLE
 *
 * @BRIEF        Event generates an interrupt when it occurs - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC1_FS_IRQ__ENABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC1_LE_IRQ__DISABLE
 *
 * @BRIEF        Event is masked - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC1_LE_IRQ__DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC1_LE_IRQ__ENABLE
 *
 * @BRIEF        Event generates an interrupt when it occurs - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC1_LE_IRQ__ENABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC1_LS_IRQ__DISABLE
 *
 * @BRIEF        Event is masked - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC1_LS_IRQ__DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC1_LS_IRQ__ENABLE
 *
 * @BRIEF        Event generates an interrupt when it occurs - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC1_LS_IRQ__ENABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC1_FE_IRQ__DISABLE
 *
 * @BRIEF        Event is masked - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC1_FE_IRQ__DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC1_FE_IRQ__ENABLE
 *
 * @BRIEF        Event generates an interrupt when it occurs - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC1_FE_IRQ__ENABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC1_COUNT_IRQ__DISABLE
 *
 * @BRIEF        Event is masked - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC1_COUNT_IRQ__DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC1_COUNT_IRQ__ENABLE
 *
 * @BRIEF        Event generates an interrupt when it occurs - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC1_COUNT_IRQ__ENABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC1_FIFO_OVF_IRQ__DISABLE
 *
 * @BRIEF        Event is masked - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC1_FIFO_OVF_IRQ__DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC1_FIFO_OVF_IRQ__ENABLE
 *
 * @BRIEF        Event generates an interrupt when it occurs - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC1_FIFO_OVF_IRQ__ENABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC1_CRC_IRQ__DISABLE
 *
 * @BRIEF        Event is masked - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC1_CRC_IRQ__DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC1_CRC_IRQ__ENABLE
 *
 * @BRIEF        Event generates an interrupt when it occurs - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC1_CRC_IRQ__ENABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC1_FSP_IRQ__DISABLE
 *
 * @BRIEF        Event is masked - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC1_FSP_IRQ__DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC1_FSP_IRQ__ENABLE
 *
 * @BRIEF        Event generates an interrupt when it occurs - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC1_FSP_IRQ__ENABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC1_FW_IRQ__DISABLE
 *
 * @BRIEF        Event is masked - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC1_FW_IRQ__DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC1_FW_IRQ__ENABLE
 *
 * @BRIEF        Event generates an interrupt when it occurs - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC1_FW_IRQ__ENABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC1_FSC_IRQ__DISABLE
 *
 * @BRIEF        Event is masked - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC1_FSC_IRQ__DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC1_FSC_IRQ__ENABLE
 *
 * @BRIEF        Event generates an interrupt when it occurs - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC1_FSC_IRQ__ENABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC1_SSC_IRQ__DISABLE
 *
 * @BRIEF        Event is masked - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC1_SSC_IRQ__DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC1_SSC_IRQ__ENABLE
 *
 * @BRIEF        Event generates an interrupt when it occurs - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC1_SSC_IRQ__ENABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC0_OCPERROR_IRQ__DISABLE
 *
 * @BRIEF        Event is masked - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC0_OCPERROR_IRQ__DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC0_OCPERROR_IRQ__ENABLE
 *
 * @BRIEF        Event generates an interrupt when it occurs - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC0_OCPERROR_IRQ__ENABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC0_FS_IRQ__DISABLE
 *
 * @BRIEF        Event is masked - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC0_FS_IRQ__DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC0_FS_IRQ__ENABLE
 *
 * @BRIEF        Event generates an interrupt when it occurs - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC0_FS_IRQ__ENABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC0_LE_IRQ__DISABLE
 *
 * @BRIEF        Event is masked - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC0_LE_IRQ__DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC0_LE_IRQ__ENABLE
 *
 * @BRIEF        Event generates an interrupt when it occurs - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC0_LE_IRQ__ENABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC0_LS_IRQ__DISABLE
 *
 * @BRIEF        Event is masked - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC0_LS_IRQ__DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC0_LS_IRQ__ENABLE
 *
 * @BRIEF        Event generates an interrupt when it occurs - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC0_LS_IRQ__ENABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC0_FE_IRQ__DISABLE
 *
 * @BRIEF        Event is masked - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC0_FE_IRQ__DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC0_FE_IRQ__ENABLE
 *
 * @BRIEF        Event generates an interrupt when it occurs - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC0_FE_IRQ__ENABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC0_COUNT_IRQ__DISABLE
 *
 * @BRIEF        Event is masked - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC0_COUNT_IRQ__DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC0_COUNT_IRQ__ENABLE
 *
 * @BRIEF        Event generates an interrupt when it occurs - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC0_COUNT_IRQ__ENABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC0_FIFO_OVF_IRQ__DISABLE
 *
 * @BRIEF        Event is masked - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC0_FIFO_OVF_IRQ__DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC0_FIFO_OVF_IRQ__ENABLE
 *
 * @BRIEF        Event generates an interrupt when it occurs - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC0_FIFO_OVF_IRQ__ENABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC0_CRC_IRQ__DISABLE
 *
 * @BRIEF        Event is masked - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC0_CRC_IRQ__DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC0_CRC_IRQ__ENABLE
 *
 * @BRIEF        Event generates an interrupt when it occurs - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC0_CRC_IRQ__ENABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC0_FSP_IRQ__DISABLE
 *
 * @BRIEF        Event is masked - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC0_FSP_IRQ__DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC0_FSP_IRQ__ENABLE
 *
 * @BRIEF        Event generates an interrupt when it occurs - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC0_FSP_IRQ__ENABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC0_FW_IRQ__DISABLE
 *
 * @BRIEF        Event is masked - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC0_FW_IRQ__DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC0_FW_IRQ__ENABLE
 *
 * @BRIEF        Event generates an interrupt when it occurs - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC0_FW_IRQ__ENABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC0_FSC_IRQ__DISABLE
 *
 * @BRIEF        Event is masked - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC0_FSC_IRQ__DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC0_FSC_IRQ__ENABLE
 *
 * @BRIEF        Event generates an interrupt when it occurs - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC0_FSC_IRQ__ENABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC0_SSC_IRQ__DISABLE
 *
 * @BRIEF        Event is masked - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC0_SSC_IRQ__DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC0_SSC_IRQ__ENABLE
 *
 * @BRIEF        Event generates an interrupt when it occurs - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC01_IRQENABLE__LC0_SSC_IRQ__ENABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC1_OCPERROR_IRQ__FALSE
 *
 * @BRIEF        READS: Event is false. 
 *               WRITES: Status bit unchanged. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC1_OCPERROR_IRQ__FALSE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC1_OCPERROR_IRQ__TRUE
 *
 * @BRIEF        READS: Event is true (pending). 
 *               WRITES: Status bit is reset. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC1_OCPERROR_IRQ__TRUE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC1_FS_IRQ__FALSE
 *
 * @BRIEF        READS: Event is false. 
 *               WRITES: Status bit unchanged. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC1_FS_IRQ__FALSE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC1_FS_IRQ__TRUE
 *
 * @BRIEF        READS: Event is true (pending). 
 *               WRITES: Status bit is reset. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC1_FS_IRQ__TRUE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC1_LE_IRQ__FALSE
 *
 * @BRIEF        READS: Event is false. 
 *               WRITES: Status bit unchanged. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC1_LE_IRQ__FALSE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC1_LE_IRQ__TRUE
 *
 * @BRIEF        READS: Event is true (pending). 
 *               WRITES: Status bit is reset. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC1_LE_IRQ__TRUE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC1_LS_IRQ__FALSE
 *
 * @BRIEF        READS: Event is false. 
 *               WRITES: Status bit unchanged. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC1_LS_IRQ__FALSE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC1_LS_IRQ__TRUE
 *
 * @BRIEF        READS: Event is true (pending). 
 *               WRITES: Status bit is reset. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC1_LS_IRQ__TRUE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC1_FE_IRQ__FALSE
 *
 * @BRIEF        READS: Event is false. 
 *               WRITES: Status bit unchanged. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC1_FE_IRQ__FALSE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC1_FE_IRQ__TRUE
 *
 * @BRIEF        READS: Event is true (pending). 
 *               WRITES: Status bit is reset. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC1_FE_IRQ__TRUE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC1_COUNT_IRQ__FALSE
 *
 * @BRIEF        READS: Event is false. 
 *               WRITES: Status bit unchanged. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC1_COUNT_IRQ__FALSE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC1_COUNT_IRQ__TRUE
 *
 * @BRIEF        READS: Event is true (pending). 
 *               WRITES: Status bit is reset. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC1_COUNT_IRQ__TRUE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC1_FIFO_OVF_IRQ__FALSE
 *
 * @BRIEF        READS: Event is false. 
 *               WRITES: Status bit unchanged. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC1_FIFO_OVF_IRQ__FALSE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC1_FIFO_OVF_IRQ__TRUE
 *
 * @BRIEF        READS: Event is true (pending). 
 *               WRITES: Status bit is reset. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC1_FIFO_OVF_IRQ__TRUE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC1_CRC_IRQ__FALSE
 *
 * @BRIEF        READS: Event is false. 
 *               WRITES: Status bit unchanged. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC1_CRC_IRQ__FALSE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC1_CRC_IRQ__TRUE
 *
 * @BRIEF        READS: Event is true (pending). 
 *               WRITES: Status bit is reset. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC1_CRC_IRQ__TRUE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC1_FSP_IRQ__FALSE
 *
 * @BRIEF        READS: Event is false. 
 *               WRITES: Status bit unchanged. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC1_FSP_IRQ__FALSE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC1_FSP_IRQ__TRUE
 *
 * @BRIEF        READS: Event is true (pending). 
 *               WRITES: Status bit is reset. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC1_FSP_IRQ__TRUE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC1_FW_IRQ__FALSE
 *
 * @BRIEF        READS: Event is false. 
 *               WRITES: Status bit unchanged. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC1_FW_IRQ__FALSE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC1_FW_IRQ__TRUE
 *
 * @BRIEF        READS: Event is true (pending). 
 *               WRITES: Status bit is reset. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC1_FW_IRQ__TRUE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC1_FSC_IRQ__FALSE
 *
 * @BRIEF        READS: Event is false. 
 *               WRITES: Status bit unchanged. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC1_FSC_IRQ__FALSE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC1_FSC_IRQ__TRUE
 *
 * @BRIEF        READS: Event is true (pending). 
 *               WRITES: Status bit is reset. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC1_FSC_IRQ__TRUE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC1_SSC_IRQ__FALSE
 *
 * @BRIEF        READS: Event is false. 
 *               WRITES: Status bit unchanged. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC1_SSC_IRQ__FALSE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC1_SSC_IRQ__TRUE
 *
 * @BRIEF        READS: Event is true (pending). 
 *               WRITES: Status bit is reset. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC1_SSC_IRQ__TRUE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC0_OCPERROR_IRQ__FALSE
 *
 * @BRIEF        READS: Event is false. 
 *               WRITES: Status bit unchanged. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC0_OCPERROR_IRQ__FALSE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC0_OCPERROR_IRQ__TRUE
 *
 * @BRIEF        READS: Event is true (pending). 
 *               WRITES: Status bit is reset. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC0_OCPERROR_IRQ__TRUE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC0_FS_IRQ__FALSE
 *
 * @BRIEF        READS: Event is false. 
 *               WRITES: Status bit unchanged. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC0_FS_IRQ__FALSE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC0_FS_IRQ__TRUE
 *
 * @BRIEF        READS: Event is true (pending). 
 *               WRITES: Status bit is reset. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC0_FS_IRQ__TRUE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC0_LE_IRQ__FALSE
 *
 * @BRIEF        READS: Event is false. 
 *               WRITES: Status bit unchanged. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC0_LE_IRQ__FALSE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC0_LE_IRQ__TRUE
 *
 * @BRIEF        READS: Event is true (pending). 
 *               WRITES: Status bit is reset. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC0_LE_IRQ__TRUE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC0_LS_IRQ__FALSE
 *
 * @BRIEF        READS: Event is false. 
 *               WRITES: Status bit unchanged. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC0_LS_IRQ__FALSE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC0_LS_IRQ__TRUE
 *
 * @BRIEF        READS: Event is true (pending). 
 *               WRITES: Status bit is reset. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC0_LS_IRQ__TRUE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC0_FE_IRQ__FALSE
 *
 * @BRIEF        READS: Event is false. 
 *               WRITES: Status bit unchanged. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC0_FE_IRQ__FALSE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC0_FE_IRQ__TRUE
 *
 * @BRIEF        READS: Event is true (pending). 
 *               WRITES: Status bit is reset. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC0_FE_IRQ__TRUE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC0_COUNT_IRQ__FALSE
 *
 * @BRIEF        READS: Event is false. 
 *               WRITES: Status bit unchanged. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC0_COUNT_IRQ__FALSE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC0_COUNT_IRQ__TRUE
 *
 * @BRIEF        READS: Event is true (pending). 
 *               WRITES: Status bit is reset. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC0_COUNT_IRQ__TRUE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC0_FIFO_OVF_IRQ__FALSE
 *
 * @BRIEF        READS: Event is false. 
 *               WRITES: Status bit unchanged. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC0_FIFO_OVF_IRQ__FALSE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC0_FIFO_OVF_IRQ__TRUE
 *
 * @BRIEF        READS: Event is true (pending). 
 *               WRITES: Status bit is reset. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC0_FIFO_OVF_IRQ__TRUE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC0_CRC_IRQ__FALSE
 *
 * @BRIEF        READS: Event is false. 
 *               WRITES: Status bit unchanged. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC0_CRC_IRQ__FALSE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC0_CRC_IRQ__TRUE
 *
 * @BRIEF        READS: Event is true (pending). 
 *               WRITES: Status bit is reset. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC0_CRC_IRQ__TRUE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC0_FSP_IRQ__FALSE
 *
 * @BRIEF        READS: Event is false. 
 *               WRITES: Status bit unchanged. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC0_FSP_IRQ__FALSE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC0_FSP_IRQ__TRUE
 *
 * @BRIEF        READS: Event is true (pending). 
 *               WRITES: Status bit is reset. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC0_FSP_IRQ__TRUE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC0_FW_IRQ__FALSE
 *
 * @BRIEF        READS: Event is false. 
 *               WRITES: Status bit unchanged. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC0_FW_IRQ__FALSE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC0_FW_IRQ__TRUE
 *
 * @BRIEF        READS: Event is true (pending). 
 *               WRITES: Status bit is reset. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC0_FW_IRQ__TRUE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC0_FSC_IRQ__FALSE
 *
 * @BRIEF        READS: Event is false. 
 *               WRITES: Status bit unchanged. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC0_FSC_IRQ__FALSE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC0_FSC_IRQ__TRUE
 *
 * @BRIEF        READS: Event is true (pending). 
 *               WRITES: Status bit is reset. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC0_FSC_IRQ__TRUE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC0_SSC_IRQ__FALSE
 *
 * @BRIEF        READS: Event is false. 
 *               WRITES: Status bit unchanged. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC0_SSC_IRQ__FALSE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC0_SSC_IRQ__TRUE
 *
 * @BRIEF        READS: Event is true (pending). 
 *               WRITES: Status bit is reset. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC01_IRQSTATUS__LC0_SSC_IRQ__TRUE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC3_OCPERROR_IRQ__DISABLE
 *
 * @BRIEF        Event is masked - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC3_OCPERROR_IRQ__DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC3_OCPERROR_IRQ__ENABLE
 *
 * @BRIEF        Event generates an interrupt when it occurs - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC3_OCPERROR_IRQ__ENABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC3_FS_IRQ__DISABLE
 *
 * @BRIEF        Event is masked - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC3_FS_IRQ__DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC3_FS_IRQ__ENABLE
 *
 * @BRIEF        Event generates an interrupt when it occurs - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC3_FS_IRQ__ENABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC3_LE_IRQ__DISABLE
 *
 * @BRIEF        Event is masked - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC3_LE_IRQ__DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC3_LE_IRQ__ENABLE
 *
 * @BRIEF        Event generates an interrupt when it occurs - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC3_LE_IRQ__ENABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC3_LS_IRQ__DISABLE
 *
 * @BRIEF        Event is masked - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC3_LS_IRQ__DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC3_LS_IRQ__ENABLE
 *
 * @BRIEF        Event generates an interrupt when it occurs - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC3_LS_IRQ__ENABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC3_FE_IRQ__DISABLE
 *
 * @BRIEF        Event is masked - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC3_FE_IRQ__DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC3_FE_IRQ__ENABLE
 *
 * @BRIEF        Event generates an interrupt when it occurs - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC3_FE_IRQ__ENABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC3_COUNT_IRQ__DISABLE
 *
 * @BRIEF        Event is masked - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC3_COUNT_IRQ__DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC3_COUNT_IRQ__ENABLE
 *
 * @BRIEF        Event generates an interrupt when it occurs - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC3_COUNT_IRQ__ENABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC3_FIFO_OVF_IRQ__DISABLE
 *
 * @BRIEF        Event is masked - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC3_FIFO_OVF_IRQ__DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC3_FIFO_OVF_IRQ__ENABLE
 *
 * @BRIEF        Event generates an interrupt when it occurs - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC3_FIFO_OVF_IRQ__ENABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC3_CRC_IRQ__DISABLE
 *
 * @BRIEF        Event is masked - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC3_CRC_IRQ__DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC3_CRC_IRQ__ENABLE
 *
 * @BRIEF        Event generates an interrupt when it occurs - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC3_CRC_IRQ__ENABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC3_FSP_IRQ__DISABLE
 *
 * @BRIEF        Event is masked - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC3_FSP_IRQ__DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC3_FSP_IRQ__ENABLE
 *
 * @BRIEF        Event generates an interrupt when it occurs - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC3_FSP_IRQ__ENABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC3_FW_IRQ__DISABLE
 *
 * @BRIEF        Event is masked - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC3_FW_IRQ__DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC3_FW_IRQ__ENABLE
 *
 * @BRIEF        Event generates an interrupt when it occurs - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC3_FW_IRQ__ENABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC3_FSC_IRQ__DISABLE
 *
 * @BRIEF        Event is masked - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC3_FSC_IRQ__DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC3_FSC_IRQ__ENABLE
 *
 * @BRIEF        Event generates an interrupt when it occurs - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC3_FSC_IRQ__ENABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC3_SSC_IRQ__DISABLE
 *
 * @BRIEF        Event is masked - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC3_SSC_IRQ__DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC3_SSC_IRQ__ENABLE
 *
 * @BRIEF        Event generates an interrupt when it occurs - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC3_SSC_IRQ__ENABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC2_OCPERROR_IRQ__DISABLE
 *
 * @BRIEF        Event is masked - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC2_OCPERROR_IRQ__DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC2_OCPERROR_IRQ__ENABLE
 *
 * @BRIEF        Event generates an interrupt when it occurs - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC2_OCPERROR_IRQ__ENABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC2_FS_IRQ__DISABLE
 *
 * @BRIEF        Event is masked - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC2_FS_IRQ__DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC2_FS_IRQ__ENABLE
 *
 * @BRIEF        Event generates an interrupt when it occurs - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC2_FS_IRQ__ENABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC2_LE_IRQ__DISABLE
 *
 * @BRIEF        Event is masked - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC2_LE_IRQ__DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC2_LE_IRQ__ENABLE
 *
 * @BRIEF        Event generates an interrupt when it occurs - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC2_LE_IRQ__ENABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC2_LS_IRQ__DISABLE
 *
 * @BRIEF        Event is masked - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC2_LS_IRQ__DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC2_LS_IRQ__ENABLE
 *
 * @BRIEF        Event generates an interrupt when it occurs - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC2_LS_IRQ__ENABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC2_FE_IRQ__DISABLE
 *
 * @BRIEF        Event is masked - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC2_FE_IRQ__DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC2_FE_IRQ__ENABLE
 *
 * @BRIEF        Event generates an interrupt when it occurs - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC2_FE_IRQ__ENABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC2_COUNT_IRQ__DISABLE
 *
 * @BRIEF        Event is masked - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC2_COUNT_IRQ__DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC2_COUNT_IRQ__ENABLE
 *
 * @BRIEF        Event generates an interrupt when it occurs - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC2_COUNT_IRQ__ENABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC2_FIFO_OVF_IRQ__DISABLE
 *
 * @BRIEF        Event is masked - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC2_FIFO_OVF_IRQ__DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC2_FIFO_OVF_IRQ__ENABLE
 *
 * @BRIEF        Event generates an interrupt when it occurs - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC2_FIFO_OVF_IRQ__ENABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC2_CRC_IRQ__DISABLE
 *
 * @BRIEF        Event is masked - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC2_CRC_IRQ__DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC2_CRC_IRQ__ENABLE
 *
 * @BRIEF        Event generates an interrupt when it occurs - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC2_CRC_IRQ__ENABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC2_FSP_IRQ__DISABLE
 *
 * @BRIEF        Event is masked - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC2_FSP_IRQ__DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC2_FSP_IRQ__ENABLE
 *
 * @BRIEF        Event generates an interrupt when it occurs - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC2_FSP_IRQ__ENABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC2_FW_IRQ__DISABLE
 *
 * @BRIEF        Event is masked - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC2_FW_IRQ__DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC2_FW_IRQ__ENABLE
 *
 * @BRIEF        Event generates an interrupt when it occurs - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC2_FW_IRQ__ENABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC2_FSC_IRQ__DISABLE
 *
 * @BRIEF        Event is masked - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC2_FSC_IRQ__DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC2_FSC_IRQ__ENABLE
 *
 * @BRIEF        Event generates an interrupt when it occurs - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC2_FSC_IRQ__ENABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC2_SSC_IRQ__DISABLE
 *
 * @BRIEF        Event is masked - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC2_SSC_IRQ__DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC2_SSC_IRQ__ENABLE
 *
 * @BRIEF        Event generates an interrupt when it occurs - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC23_IRQENABLE__LC2_SSC_IRQ__ENABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC3_OCPERROR_IRQ__FALSE
 *
 * @BRIEF        READS: Event is false. 
 *               WRITES: Status bit unchanged. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC3_OCPERROR_IRQ__FALSE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC3_OCPERROR_IRQ__TRUE
 *
 * @BRIEF        READS: Event is true (pending). 
 *               WRITES: Status bit is reset. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC3_OCPERROR_IRQ__TRUE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC3_FS_IRQ__FALSE
 *
 * @BRIEF        READS: Event is false. 
 *               WRITES: Status bit unchanged. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC3_FS_IRQ__FALSE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC3_FS_IRQ__TRUE
 *
 * @BRIEF        READS: Event is true (pending). 
 *               WRITES: Status bit is reset. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC3_FS_IRQ__TRUE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC3_LE_IRQ__FALSE
 *
 * @BRIEF        READS: Event is false. 
 *               WRITES: Status bit unchanged. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC3_LE_IRQ__FALSE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC3_LE_IRQ__TRUE
 *
 * @BRIEF        READS: Event is true (pending). 
 *               WRITES: Status bit is reset. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC3_LE_IRQ__TRUE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC3_LS_IRQ__FALSE
 *
 * @BRIEF        READS: Event is false. 
 *               WRITES: Status bit unchanged. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC3_LS_IRQ__FALSE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC3_LS_IRQ__TRUE
 *
 * @BRIEF        READS: Event is true (pending). 
 *               WRITES: Status bit is reset. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC3_LS_IRQ__TRUE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC3_FE_IRQ__FALSE
 *
 * @BRIEF        READS: Event is false. 
 *               WRITES: Status bit unchanged. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC3_FE_IRQ__FALSE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC3_FE_IRQ__TRUE
 *
 * @BRIEF        READS: Event is true (pending). 
 *               WRITES: Status bit is reset. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC3_FE_IRQ__TRUE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC3_COUNT_IRQ__FALSE
 *
 * @BRIEF        READS: Event is false. 
 *               WRITES: Status bit unchanged. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC3_COUNT_IRQ__FALSE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC3_COUNT_IRQ__TRUE
 *
 * @BRIEF        READS: Event is true (pending). 
 *               WRITES: Status bit is reset. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC3_COUNT_IRQ__TRUE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC3_FIFO_OVF_IRQ__FALSE
 *
 * @BRIEF        READS: Event is false. 
 *               WRITES: Status bit unchanged. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC3_FIFO_OVF_IRQ__FALSE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC3_FIFO_OVF_IRQ__TRUE
 *
 * @BRIEF        READS: Event is true (pending). 
 *               WRITES: Status bit is reset. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC3_FIFO_OVF_IRQ__TRUE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC3_CRC_IRQ__FALSE
 *
 * @BRIEF        READS: Event is false. 
 *               WRITES: Status bit unchanged. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC3_CRC_IRQ__FALSE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC3_CRC_IRQ__TRUE
 *
 * @BRIEF        READS: Event is true (pending). 
 *               WRITES: Status bit is reset. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC3_CRC_IRQ__TRUE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC3_FSP_IRQ__FALSE
 *
 * @BRIEF        READS: Event is false. 
 *               WRITES: Status bit unchanged. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC3_FSP_IRQ__FALSE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC3_FSP_IRQ__TRUE
 *
 * @BRIEF        READS: Event is true (pending). 
 *               WRITES: Status bit is reset. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC3_FSP_IRQ__TRUE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC3_FW_IRQ__FALSE
 *
 * @BRIEF        READS: Event is false. 
 *               WRITES: Status bit unchanged. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC3_FW_IRQ__FALSE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC3_FW_IRQ__TRUE
 *
 * @BRIEF        READS: Event is true (pending). 
 *               WRITES: Status bit is reset. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC3_FW_IRQ__TRUE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC3_FSC_IRQ__FALSE
 *
 * @BRIEF        READS: Event is false. 
 *               WRITES: Status bit unchanged. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC3_FSC_IRQ__FALSE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC3_FSC_IRQ__TRUE
 *
 * @BRIEF        READS: Event is true (pending). 
 *               WRITES: Status bit is reset. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC3_FSC_IRQ__TRUE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC3_SSC_IRQ__FALSE
 *
 * @BRIEF        READS: Event is false. 
 *               WRITES: Status bit unchanged. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC3_SSC_IRQ__FALSE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC3_SSC_IRQ__TRUE
 *
 * @BRIEF        READS: Event is true (pending). 
 *               WRITES: Status bit is reset. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC3_SSC_IRQ__TRUE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC2_OCPERROR_IRQ__FALSE
 *
 * @BRIEF        READS: Event is false. 
 *               WRITES: Status bit unchanged. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC2_OCPERROR_IRQ__FALSE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC2_OCPERROR_IRQ__TRUE
 *
 * @BRIEF        READS: Event is true (pending). 
 *               WRITES: Status bit is reset. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC2_OCPERROR_IRQ__TRUE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC2_FS_IRQ__FALSE
 *
 * @BRIEF        READS: Event is false. 
 *               WRITES: Status bit unchanged. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC2_FS_IRQ__FALSE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC2_FS_IRQ__TRUE
 *
 * @BRIEF        READS: Event is true (pending). 
 *               WRITES: Status bit is reset. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC2_FS_IRQ__TRUE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC2_LE_IRQ__FALSE
 *
 * @BRIEF        READS: Event is false. 
 *               WRITES: Status bit unchanged. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC2_LE_IRQ__FALSE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC2_LE_IRQ__TRUE
 *
 * @BRIEF        READS: Event is true (pending). 
 *               WRITES: Status bit is reset. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC2_LE_IRQ__TRUE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC2_LS_IRQ__FALSE
 *
 * @BRIEF        READS: Event is false. 
 *               WRITES: Status bit unchanged. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC2_LS_IRQ__FALSE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC2_LS_IRQ__TRUE
 *
 * @BRIEF        READS: Event is true (pending). 
 *               WRITES: Status bit is reset. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC2_LS_IRQ__TRUE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC2_FE_IRQ__FALSE
 *
 * @BRIEF        READS: Event is false. 
 *               WRITES: Status bit unchanged. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC2_FE_IRQ__FALSE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC2_FE_IRQ__TRUE
 *
 * @BRIEF        READS: Event is true (pending). 
 *               WRITES: Status bit is reset. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC2_FE_IRQ__TRUE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC2_COUNT_IRQ__FALSE
 *
 * @BRIEF        READS: Event is false. 
 *               WRITES: Status bit unchanged. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC2_COUNT_IRQ__FALSE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC2_COUNT_IRQ__TRUE
 *
 * @BRIEF        READS: Event is true (pending). 
 *               WRITES: Status bit is reset. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC2_COUNT_IRQ__TRUE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC2_FIFO_OVF_IRQ__FALSE
 *
 * @BRIEF        READS: Event is false. 
 *               WRITES: Status bit unchanged. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC2_FIFO_OVF_IRQ__FALSE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC2_FIFO_OVF_IRQ__TRUE
 *
 * @BRIEF        READS: Event is true (pending). 
 *               WRITES: Status bit is reset. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC2_FIFO_OVF_IRQ__TRUE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC2_CRC_IRQ__FALSE
 *
 * @BRIEF        READS: Event is false. 
 *               WRITES: Status bit unchanged. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC2_CRC_IRQ__FALSE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC2_CRC_IRQ__TRUE
 *
 * @BRIEF        READS: Event is true (pending). 
 *               WRITES: Status bit is reset. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC2_CRC_IRQ__TRUE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC2_FSP_IRQ__FALSE
 *
 * @BRIEF        READS: Event is false. 
 *               WRITES: Status bit unchanged. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC2_FSP_IRQ__FALSE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC2_FSP_IRQ__TRUE
 *
 * @BRIEF        READS: Event is true (pending). 
 *               WRITES: Status bit is reset. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC2_FSP_IRQ__TRUE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC2_FW_IRQ__FALSE
 *
 * @BRIEF        READS: Event is false. 
 *               WRITES: Status bit unchanged. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC2_FW_IRQ__FALSE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC2_FW_IRQ__TRUE
 *
 * @BRIEF        READS: Event is true (pending). 
 *               WRITES: Status bit is reset. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC2_FW_IRQ__TRUE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC2_FSC_IRQ__FALSE
 *
 * @BRIEF        READS: Event is false. 
 *               WRITES: Status bit unchanged. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC2_FSC_IRQ__FALSE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC2_FSC_IRQ__TRUE
 *
 * @BRIEF        READS: Event is true (pending). 
 *               WRITES: Status bit is reset. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC2_FSC_IRQ__TRUE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC2_SSC_IRQ__FALSE
 *
 * @BRIEF        READS: Event is false. 
 *               WRITES: Status bit unchanged. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC2_SSC_IRQ__FALSE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC2_SSC_IRQ__TRUE
 *
 * @BRIEF        READS: Event is true (pending). 
 *               WRITES: Status bit is reset. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC23_IRQSTATUS__LC2_SSC_IRQ__TRUE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LCM_IRQENABLE__LCM_OCPERROR__DISABLE
 *
 * @BRIEF        Event is masked - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LCM_IRQENABLE__LCM_OCPERROR__DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LCM_IRQENABLE__LCM_OCPERROR__ENABLE
 *
 * @BRIEF        Event generates an interrupt when it occurs - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LCM_IRQENABLE__LCM_OCPERROR__ENABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LCM_IRQENABLE__LCM_EOF__DISABLE
 *
 * @BRIEF        Event is masked - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LCM_IRQENABLE__LCM_EOF__DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LCM_IRQENABLE__LCM_EOF__ENABLE
 *
 * @BRIEF        Event generates an interrupt when it occurs - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LCM_IRQENABLE__LCM_EOF__ENABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LCM_IRQSTATUS__LCM_OCPERROR__FALSE
 *
 * @BRIEF        READS: Event is false. 
 *               WRITES: Status bit unchanged. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LCM_IRQSTATUS__LCM_OCPERROR__FALSE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LCM_IRQSTATUS__LCM_OCPERROR__TRUE
 *
 * @BRIEF        READS: Event is true (pending). 
 *               WRITES: Status bit is reset. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LCM_IRQSTATUS__LCM_OCPERROR__TRUE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LCM_IRQSTATUS__LCM_EOF__FALSE
 *
 * @BRIEF        READS: Event is false. 
 *               WRITES: Status bit unchanged. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LCM_IRQSTATUS__LCM_EOF__FALSE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LCM_IRQSTATUS__LCM_EOF__TRUE
 *
 * @BRIEF        READS: Event is true (pending). 
 *               WRITES: Status bit is reset. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LCM_IRQSTATUS__LCM_EOF__TRUE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_CTRL__POSTED__NONPOSTED
 *
 * @BRIEF        Non posted - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_CTRL__POSTED__NONPOSTED   0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_CTRL__POSTED__POSTED
 *
 * @BRIEF        Posted - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_CTRL__POSTED__POSTED      0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_CTRL__DBG_EN__DISABLE
 *
 * @BRIEF        Disable - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_CTRL__DBG_EN__DISABLE     0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_CTRL__DBG_EN__ENABLE
 *
 * @BRIEF        Enable - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_CTRL__DBG_EN__ENABLE      0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_CTRL__VP_CLK_POL__FALLING
 *
 * @BRIEF        The CCP2 RECEIVER module writes the data on the VP on the L3 
 *               falling edge before the next falling PCLK edge. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_CTRL__VP_CLK_POL__FALLING 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_CTRL__VP_CLK_POL__RISING
 *
 * @BRIEF        The CCP2 RECEIVER module writes the data on the VP on the L3 
 *               rising edge before the next rising PCLK edge. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_CTRL__VP_CLK_POL__RISING  0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_CTRL__VP_ONLY_EN__DISABLE
 *
 * @BRIEF        The VP is enabled and the OCP master port are enabled. - 
 *               (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_CTRL__VP_ONLY_EN__DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_CTRL__VP_ONLY_EN__ENABLE
 *
 * @BRIEF        The VP is enabled and the OCP master port is disabled. 
 *               The embedded data and pixel data are output on the VP. - 
 *               (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_CTRL__VP_ONLY_EN__ENABLE  0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_CTRL__INV__NOTINVERTED
 *
 * @BRIEF        Not inverted. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_CTRL__INV__NOTINVERTED    0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_CTRL__INV__INVERTED
 *
 * @BRIEF        Inverted. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_CTRL__INV__INVERTED       0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_CTRL__VP_CLK_FORCE_ON__GATED
 *
 * @BRIEF        The video port clock is gated during vertical blanking 
 *               periods. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_CTRL__VP_CLK_FORCE_ON__GATED 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_CTRL__VP_CLK_FORCE_ON__FREE_RUNNING
 *
 * @BRIEF        The video port clock is free-running during vertical 
 *               blanking periods. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_CTRL__VP_CLK_FORCE_ON__FREE_RUNNING 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_CTRL__BURST__B1X64
 *
 * @BRIEF        1x 64-bit burst = single request. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_CTRL__BURST__B1X64        0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_CTRL__BURST__B2X64
 *
 * @BRIEF        2x 64-bit bursts. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_CTRL__BURST__B2X64        0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_CTRL__BURST__B4X64
 *
 * @BRIEF        4x 64-bit bursts. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_CTRL__BURST__B4X64        0x2ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_CTRL__BURST__B8X64
 *
 * @BRIEF        8x 64-bit bursts. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_CTRL__BURST__B8X64        0x3ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_CTRL__BURST__B16X64
 *
 * @BRIEF        16x 64-bit bursts. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_CTRL__BURST__B16X64       0x4ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_CTRL__MODE__CCP1
 *
 * @BRIEF        MIPI CSI1 compatible mode. 
 *               When this bit is set all CCP2 settings are ignored. If the 
 *               settings are not set correctly to MIPI CSI1 values, the 
 *               behavior of the receiver is unpredictable. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_CTRL__MODE__CCP1          0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_CTRL__MODE__CCP2
 *
 * @BRIEF        CCP2 compatible mode - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_CTRL__MODE__CCP2          0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_CTRL__FRAME__IMMEDIATE
 *
 * @BRIEF        When SW writes IF_EN = 0 the interface is disabled 
 *               immediately. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_CTRL__FRAME__IMMEDIATE    0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_CTRL__FRAME__FRAME
 *
 * @BRIEF        When SW writes IF_EN = 0 the interface is disabled after the 
 *               next FEC sync code. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_CTRL__FRAME__FRAME        0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_CTRL__IO_OUT_SEL__SERIAL
 *
 * @BRIEF        IO output is serial: DATA, STROBE 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_CTRL__IO_OUT_SEL__SERIAL  0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_CTRL__IO_OUT_SEL__PARALLEL
 *
 * @BRIEF        IO output is parallel: DATA32, DATATOG, SYNTOG. 
 *               SSC error is detected using the SSC_ERROR signal from the 
 *               complex IO - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_CTRL__IO_OUT_SEL__PARALLEL 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_CTRL__PHY_SEL__CLOCK
 *
 * @BRIEF        Data / Clock physical layer - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_CTRL__PHY_SEL__CLOCK      0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_CTRL__PHY_SEL__STROBE
 *
 * @BRIEF        Data / Strobe physical layer - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_CTRL__PHY_SEL__STROBE     0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_CTRL__IF_EN__DISABLE
 *
 * @BRIEF        The interface is disabled. If FRAME = 0, it is disabled 
 *               immediately. If FRAME = 1, it is disabled on the next FEC 
 *               sync code. If FRAME=1, it is advised to disable the logical 
 *               channels first (CCP2_LCX_CTRL.CHAN_EN=0) before writing 
 *               IF_EN=0.  - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_CTRL__IF_EN__DISABLE      0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_CTRL__IF_EN__ENABLE
 *
 * @BRIEF        The interface is enabled immediately, the data acquisition 
 *               starts on the next FSC sync code.  
 *               Writing '1' to this register when the current value is '0' 
 *               has the effect to clear the output FIFO. The pixel data of 
 *               the following frame will be written in the PING buffer, 
 *               i.e., the CCP2_LCX_CTRL.PING_PONG bits are reset to '1' as 
 *               well. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_CTRL__IF_EN__ENABLE       0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_GNQ__FIFODEPTH__F3
 *
 * @BRIEF        2x 64 bits - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_GNQ__FIFODEPTH__F3        0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_GNQ__FIFODEPTH__F4
 *
 * @BRIEF        4x 64 bits - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_GNQ__FIFODEPTH__F4        0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_GNQ__FIFODEPTH__F8
 *
 * @BRIEF        8x 64 bits - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_GNQ__FIFODEPTH__F8        0x2ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_GNQ__FIFODEPTH__F16
 *
 * @BRIEF        16x 64 bits - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_GNQ__FIFODEPTH__F16       0x3ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_GNQ__FIFODEPTH__F32
 *
 * @BRIEF        32x 64 bits - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_GNQ__FIFODEPTH__F32       0x4ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_GNQ__FIFODEPTH__F64
 *
 * @BRIEF        64x 64 bits - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_GNQ__FIFODEPTH__F64       0x5ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_GNQ__NBCHANNELS__LC1
 *
 * @BRIEF        1 logical channel - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_GNQ__NBCHANNELS__LC1      0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_GNQ__NBCHANNELS__LC2
 *
 * @BRIEF        2 logical channels - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_GNQ__NBCHANNELS__LC2      0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_GNQ__NBCHANNELS__LC4
 *
 * @BRIEF        4 logical channels - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_GNQ__NBCHANNELS__LC4      0x2ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_GNQ__NBCHANNELS__LC8
 *
 * @BRIEF        8 logical channels - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_GNQ__NBCHANNELS__LC8      0x3ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_CTRL1__BLANKING__C0
 *
 * @BRIEF        4 video port clock cycles - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_CTRL1__BLANKING__C0       0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_CTRL1__BLANKING__C1
 *
 * @BRIEF        16 video port clock cycles - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_CTRL1__BLANKING__C1       0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_CTRL1__BLANKING__C2
 *
 * @BRIEF        64 video port clock cycles - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_CTRL1__BLANKING__C2       0x2ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_CTRL1__BLANKING__C3
 *
 * @BRIEF        Free running - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_CTRL1__BLANKING__C3       0x3ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC0_CTRL__CRC_EN__DISABLE
 *
 * @BRIEF        Disabled - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC0_CTRL__CRC_EN__DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC0_CTRL__CRC_EN__ENABLE
 *
 * @BRIEF        Enabled - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC0_CTRL__CRC_EN__ENABLE  0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC0_CTRL__DPCM_PRED__ADVANCED
 *
 * @BRIEF        The advanced predictor is used - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC0_CTRL__DPCM_PRED__ADVANCED 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC0_CTRL__DPCM_PRED__SIMPLE
 *
 * @BRIEF        The simple predictor is used. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC0_CTRL__DPCM_PRED__SIMPLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC0_CTRL__PING_PONG__PING
 *
 * @BRIEF        PING buffer - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC0_CTRL__PING_PONG__PING 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC0_CTRL__PING_PONG__PONG
 *
 * @BRIEF        PONG buffer - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC0_CTRL__PING_PONG__PONG 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC0_CTRL__COUNT_UNLOCK__LOCKED
 *
 * @BRIEF        COUNT bit field is locked. Writes have no effect - (Write) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC0_CTRL__COUNT_UNLOCK__LOCKED 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC0_CTRL__COUNT_UNLOCK__UNLOCKED
 *
 * @BRIEF        COUNT bit field is unlocked. Writes are possible. - (Write) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC0_CTRL__COUNT_UNLOCK__UNLOCKED 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC0_CTRL__FORMAT__YUV422_BE
 *
 * @BRIEF        YUV422 BIG ENDIAN - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC0_CTRL__FORMAT__YUV422_BE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC0_CTRL__FORMAT__YUV422_LE
 *
 * @BRIEF        YUV422 LITTLE ENDIAN - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC0_CTRL__FORMAT__YUV422_LE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC0_CTRL__FORMAT__YUV420
 *
 * @BRIEF        YUV420 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC0_CTRL__FORMAT__YUV420  0x2ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC0_CTRL__FORMAT__YUV422_VP
 *
 * @BRIEF        YUV422 + VP or RAW8 + VP - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC0_CTRL__FORMAT__YUV422_VP 0x3ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC0_CTRL__FORMAT__RGB444_EXP16
 *
 * @BRIEF        RGB444 + EXP16 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC0_CTRL__FORMAT__RGB444_EXP16 0x4ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC0_CTRL__FORMAT__RGB565
 *
 * @BRIEF        RGB565 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC0_CTRL__FORMAT__RGB565  0x5ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC0_CTRL__FORMAT__RGB888
 *
 * @BRIEF        RGB888 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC0_CTRL__FORMAT__RGB888  0x6ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC0_CTRL__FORMAT__RGB888_EXP32
 *
 * @BRIEF        RGB888 + EXP32 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC0_CTRL__FORMAT__RGB888_EXP32 0x7ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC0_CTRL__FORMAT__RAW6_EXP8
 *
 * @BRIEF        RAW6 + EXP8 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC0_CTRL__FORMAT__RAW6_EXP8 0x8ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC0_CTRL__FORMAT__RAW6_DPCM10_EXP16
 *
 * @BRIEF        RAW6 + DPCM10 + EXP16 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC0_CTRL__FORMAT__RAW6_DPCM10_EXP16 0x9ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC0_CTRL__FORMAT__RAW6_DPCM10_VP
 *
 * @BRIEF        RAW6 + DPCM10 + VP - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC0_CTRL__FORMAT__RAW6_DPCM10_VP 0xAul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC0_CTRL__FORMAT__RAW10_RAW6_DPCM
 *
 * @BRIEF        RAW10 -> RAW6 DPCM  
 *               RAW10 data from sensor is DPCM compressed into RAW6 before 
 *               it is send to memory. 
 *               Used predictor is selected by the DPCM_PRED bit. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC0_CTRL__FORMAT__RAW10_RAW6_DPCM 0xBul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC0_CTRL__FORMAT__RAW7_EXP8
 *
 * @BRIEF        RAW7 + EXP8 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC0_CTRL__FORMAT__RAW7_EXP8 0xCul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC0_CTRL__FORMAT__RAW7_DPCM10_EXP16
 *
 * @BRIEF        RAW7 + DPCM10 + EXP16 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC0_CTRL__FORMAT__RAW7_DPCM10_EXP16 0xDul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC0_CTRL__FORMAT__RAW7_DPCM10_VP
 *
 * @BRIEF        RAW7 + DPCM10 + VP - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC0_CTRL__FORMAT__RAW7_DPCM10_VP 0xEul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC0_CTRL__FORMAT__RAW10_RAW6_DPCM_EXP8
 *
 * @BRIEF        RAW10 -> RAW6 DPCM + EXP8 
 *               RAW10 data from sensor is DPCM compressed into RAW6 and 
 *               expanded to 8 bits before it is send to memory. 
 *               Used predictor is selected by the DPCM_PRED bit. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC0_CTRL__FORMAT__RAW10_RAW6_DPCM_EXP8 0xFul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC0_CTRL__FORMAT__RAW8
 *
 * @BRIEF        RAW8 
 *               This mode can be used to output RAW6 and RAW7 as well. - 
 *               (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC0_CTRL__FORMAT__RAW8    0x10ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC0_CTRL__FORMAT__RAW8_DPCM10_EXP16
 *
 * @BRIEF        RAW8 + DPCM10 + EXP16 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC0_CTRL__FORMAT__RAW8_DPCM10_EXP16 0x11ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC0_CTRL__FORMAT__RAW8_DPCM10_VP
 *
 * @BRIEF        RAW8 + DPCM10 + VP - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC0_CTRL__FORMAT__RAW8_DPCM10_VP 0x12ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC0_CTRL__FORMAT__RAW10_RAW7_DPCM
 *
 * @BRIEF        RAW10 -> RAW7 DPCM 
 *               RAW10 data from sensor is DPCM compressed into RAW7 before 
 *               it is send to memory. 
 *               Used predictor is selected by the DPCM_PRED bit. 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC0_CTRL__FORMAT__RAW10_RAW7_DPCM 0x13ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC0_CTRL__FORMAT__RAW10
 *
 * @BRIEF        RAW10 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC0_CTRL__FORMAT__RAW10   0x14ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC0_CTRL__FORMAT__RAW10_EXP16
 *
 * @BRIEF        RAW10 + EXP16 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC0_CTRL__FORMAT__RAW10_EXP16 0x15ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC0_CTRL__FORMAT__RAW10_VP
 *
 * @BRIEF        RAW10 + VP - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC0_CTRL__FORMAT__RAW10_VP 0x16ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC0_CTRL__FORMAT__RAW10_RAW7_DPCM_EXP8
 *
 * @BRIEF        RAW10 -> RAW7 DPCM + EXP8 
 *               RAW10 data from sensor is DPCM compressed into RAW7 and 
 *               expanded to 8 bits before it is send to memory. 
 *               Used predictor is selected by the DPCM_PRED bit. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC0_CTRL__FORMAT__RAW10_RAW7_DPCM_EXP8 0x17ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC0_CTRL__FORMAT__RAW12
 *
 * @BRIEF        RAW12 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC0_CTRL__FORMAT__RAW12   0x18ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC0_CTRL__FORMAT__RAW12_EXP16
 *
 * @BRIEF        RAW12 + EXP16 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC0_CTRL__FORMAT__RAW12_EXP16 0x19ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC0_CTRL__FORMAT__RAW12_VP
 *
 * @BRIEF        RAW12 + VP - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC0_CTRL__FORMAT__RAW12_VP 0x1Aul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC0_CTRL__FORMAT__RAW10_RAW8_DPCM
 *
 * @BRIEF        RAW10 -> RAW8 DPCM 
 *               RAW10 data from sensor is DPCM compressed into RAW8 before 
 *               it is send to memory. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC0_CTRL__FORMAT__RAW10_RAW8_DPCM 0x1Bul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC0_CTRL__FORMAT__JPEG8_FSP
 *
 * @BRIEF        JPEG8 + FSP - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC0_CTRL__FORMAT__JPEG8_FSP 0x1Cul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC0_CTRL__FORMAT__JPEG8
 *
 * @BRIEF        JPEG8 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC0_CTRL__FORMAT__JPEG8   0x1Dul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC0_CTRL__FORMAT__RAW10_RAW8
 *
 * @BRIEF        RAW10 -> RAW8 
 *               RAW10 data from sensor is right shifted to produce RAW8 
 *               before it is send to memory - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC0_CTRL__FORMAT__RAW10_RAW8 0x1Eul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC0_CTRL__FORMAT__RAW8_DPCM12_VP
 *
 * @BRIEF        RAW8 DPCM12 -> RAW12 + VP 
 *               Used predictor is selected by the DPCM_PRED bit. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC0_CTRL__FORMAT__RAW8_DPCM12_VP 0x1Ful

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC0_CTRL__FORMAT__RAW10_RAW8_ALAW
 *
 * @BRIEF        RAW10 -> RAW8 ALAW - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC0_CTRL__FORMAT__RAW10_RAW8_ALAW 0x20ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC0_CTRL__FORMAT__RAW8_DPCM10_ALAW
 *
 * @BRIEF        RAW8 DPCM10 -> ALAW - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC0_CTRL__FORMAT__RAW8_DPCM10_ALAW 0x21ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC0_CTRL__FORMAT__RGB666_DPCM10_VP
 *
 * @BRIEF        RGB666.  
 *               DPCM decompressed to RAW10. Green duplicated. 
 *               Output as B G G R to the video port.  
 *               Simple predictor only. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC0_CTRL__FORMAT__RGB666_DPCM10_VP 0x22ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC0_CTRL__FORMAT__RGB666_DPCM12_VP
 *
 * @BRIEF        RGB666.  
 *               DPCM decompressed to RAW12. Green duplicated. 
 *               Output as B G G R to the video port.  
 *               Simple predictor only. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC0_CTRL__FORMAT__RGB666_DPCM12_VP 0x23ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC0_CTRL__FORMAT__RGB888_DPCM10_VP
 *
 * @BRIEF        RGB888.  
 *               DPCM decompressed to RAW10. Green duplicated. 
 *               Output as B G G R to the video port.  
 *               Simple predictor only. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC0_CTRL__FORMAT__RGB888_DPCM10_VP 0x24ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC0_CTRL__FORMAT__RGB888_DPCM12_VP
 *
 * @BRIEF        RGB888.  
 *               DPCM decompressed to RAW12. Green duplicated. 
 *               Output as B G G R to the video port.  
 *               Simple predictor only. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC0_CTRL__FORMAT__RGB888_DPCM12_VP 0x25ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC0_CTRL__REGION_EN__DISABLE
 *
 * @BRIEF        Disabled - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC0_CTRL__REGION_EN__DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC0_CTRL__REGION_EN__ENABLE
 *
 * @BRIEF        Enabled - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC0_CTRL__REGION_EN__ENABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC0_CTRL__CHAN_EN__DISABLE
 *
 * @BRIEF        Disabled - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC0_CTRL__CHAN_EN__DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC0_CTRL__CHAN_EN__ENABLE
 *
 * @BRIEF        Enabled - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC0_CTRL__CHAN_EN__ENABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC1_CTRL__CRC_EN__DISABLE
 *
 * @BRIEF        Disabled - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC1_CTRL__CRC_EN__DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC1_CTRL__CRC_EN__ENABLE
 *
 * @BRIEF        Enabled - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC1_CTRL__CRC_EN__ENABLE  0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC1_CTRL__DPCM_PRED__ADVANCED
 *
 * @BRIEF        The advanced predictor is used - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC1_CTRL__DPCM_PRED__ADVANCED 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC1_CTRL__DPCM_PRED__SIMPLE
 *
 * @BRIEF        The simple predictor is used. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC1_CTRL__DPCM_PRED__SIMPLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC1_CTRL__PING_PONG__PING
 *
 * @BRIEF        PING buffer - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC1_CTRL__PING_PONG__PING 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC1_CTRL__PING_PONG__PONG
 *
 * @BRIEF        PONG buffer - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC1_CTRL__PING_PONG__PONG 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC1_CTRL__COUNT_UNLOCK__LOCKED
 *
 * @BRIEF        COUNT bit field is locked. Writes have no effect - (Write) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC1_CTRL__COUNT_UNLOCK__LOCKED 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC1_CTRL__COUNT_UNLOCK__UNLOCKED
 *
 * @BRIEF        COUNT bit field is unlocked. Writes are possible. - (Write) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC1_CTRL__COUNT_UNLOCK__UNLOCKED 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC1_CTRL__FORMAT__YUV422_BE
 *
 * @BRIEF        YUV422 BIG ENDIAN - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC1_CTRL__FORMAT__YUV422_BE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC1_CTRL__FORMAT__YUV422_LE
 *
 * @BRIEF        YUV422 LITTLE ENDIAN - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC1_CTRL__FORMAT__YUV422_LE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC1_CTRL__FORMAT__YUV420
 *
 * @BRIEF        YUV420 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC1_CTRL__FORMAT__YUV420  0x2ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC1_CTRL__FORMAT__YUV422_VP
 *
 * @BRIEF        YUV422 + VP or RAW8 + VP - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC1_CTRL__FORMAT__YUV422_VP 0x3ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC1_CTRL__FORMAT__RGB444_EXP16
 *
 * @BRIEF        RGB444 + EXP16 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC1_CTRL__FORMAT__RGB444_EXP16 0x4ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC1_CTRL__FORMAT__RGB565
 *
 * @BRIEF        RGB565 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC1_CTRL__FORMAT__RGB565  0x5ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC1_CTRL__FORMAT__RGB888
 *
 * @BRIEF        RGB888 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC1_CTRL__FORMAT__RGB888  0x6ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC1_CTRL__FORMAT__RGB888_EXP32
 *
 * @BRIEF        RGB888 + EXP32 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC1_CTRL__FORMAT__RGB888_EXP32 0x7ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC1_CTRL__FORMAT__RAW6_EXP8
 *
 * @BRIEF        RAW6 + EXP8 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC1_CTRL__FORMAT__RAW6_EXP8 0x8ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC1_CTRL__FORMAT__RAW6_DPCM10_EXP16
 *
 * @BRIEF        RAW6 + DPCM10 + EXP16 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC1_CTRL__FORMAT__RAW6_DPCM10_EXP16 0x9ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC1_CTRL__FORMAT__RAW6_DPCM10_VP
 *
 * @BRIEF        RAW6 + DPCM10 + VP - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC1_CTRL__FORMAT__RAW6_DPCM10_VP 0xAul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC1_CTRL__FORMAT__RAW10_RAW6_DPCM
 *
 * @BRIEF        RAW10 -> RAW6 DPCM  
 *               RAW10 data from sensor is DPCM compressed into RAW6 before 
 *               it is send to memory. 
 *               Used predictor is selected by the DPCM_PRED bit. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC1_CTRL__FORMAT__RAW10_RAW6_DPCM 0xBul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC1_CTRL__FORMAT__RAW7_EXP8
 *
 * @BRIEF        RAW7 + EXP8 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC1_CTRL__FORMAT__RAW7_EXP8 0xCul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC1_CTRL__FORMAT__RAW7_DPCM10_EXP16
 *
 * @BRIEF        RAW7 + DPCM10 + EXP16 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC1_CTRL__FORMAT__RAW7_DPCM10_EXP16 0xDul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC1_CTRL__FORMAT__RAW7_DPCM10_VP
 *
 * @BRIEF        RAW7 + DPCM10 + VP - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC1_CTRL__FORMAT__RAW7_DPCM10_VP 0xEul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC1_CTRL__FORMAT__RAW10_RAW6_DPCM_EXP8
 *
 * @BRIEF        RAW10 -> RAW6 DPCM + EXP8 
 *               RAW10 data from sensor is DPCM compressed into RAW6 and 
 *               expanded to 8 bits before it is send to memory. 
 *               Used predictor is selected by the DPCM_PRED bit. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC1_CTRL__FORMAT__RAW10_RAW6_DPCM_EXP8 0xFul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC1_CTRL__FORMAT__RAW8
 *
 * @BRIEF        RAW8 
 *               This mode can be used to output RAW6 and RAW7 as well. - 
 *               (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC1_CTRL__FORMAT__RAW8    0x10ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC1_CTRL__FORMAT__RAW8_DPCM10_EXP16
 *
 * @BRIEF        RAW8 + DPCM10 + EXP16 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC1_CTRL__FORMAT__RAW8_DPCM10_EXP16 0x11ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC1_CTRL__FORMAT__RAW8_DPCM10_VP
 *
 * @BRIEF        RAW8 + DPCM10 + VP - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC1_CTRL__FORMAT__RAW8_DPCM10_VP 0x12ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC1_CTRL__FORMAT__RAW10_RAW7_DPCM
 *
 * @BRIEF        RAW10 -> RAW7 DPCM 
 *               RAW10 data from sensor is DPCM compressed into RAW7 before 
 *               it is send to memory. 
 *               Used predictor is selected by the DPCM_PRED bit. 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC1_CTRL__FORMAT__RAW10_RAW7_DPCM 0x13ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC1_CTRL__FORMAT__RAW10
 *
 * @BRIEF        RAW10 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC1_CTRL__FORMAT__RAW10   0x14ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC1_CTRL__FORMAT__RAW10_EXP16
 *
 * @BRIEF        RAW10 + EXP16 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC1_CTRL__FORMAT__RAW10_EXP16 0x15ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC1_CTRL__FORMAT__RAW10_VP
 *
 * @BRIEF        RAW10 + VP - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC1_CTRL__FORMAT__RAW10_VP 0x16ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC1_CTRL__FORMAT__RAW10_RAW7_DPCM_EXP8
 *
 * @BRIEF        RAW10 -> RAW7 DPCM + EXP8 
 *               RAW10 data from sensor is DPCM compressed into RAW7 and 
 *               expanded to 8 bits before it is send to memory. 
 *               Used predictor is selected by the DPCM_PRED bit. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC1_CTRL__FORMAT__RAW10_RAW7_DPCM_EXP8 0x17ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC1_CTRL__FORMAT__RAW12
 *
 * @BRIEF        RAW12 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC1_CTRL__FORMAT__RAW12   0x18ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC1_CTRL__FORMAT__RAW12_EXP16
 *
 * @BRIEF        RAW12 + EXP16 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC1_CTRL__FORMAT__RAW12_EXP16 0x19ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC1_CTRL__FORMAT__RAW12_VP
 *
 * @BRIEF        RAW12 + VP - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC1_CTRL__FORMAT__RAW12_VP 0x1Aul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC1_CTRL__FORMAT__RAW10_RAW8_DPCM
 *
 * @BRIEF        RAW10 -> RAW8 DPCM 
 *               RAW10 data from sensor is DPCM compressed into RAW8 before 
 *               it is send to memory. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC1_CTRL__FORMAT__RAW10_RAW8_DPCM 0x1Bul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC1_CTRL__FORMAT__JPEG8_FSP
 *
 * @BRIEF        JPEG8 + FSP - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC1_CTRL__FORMAT__JPEG8_FSP 0x1Cul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC1_CTRL__FORMAT__JPEG8
 *
 * @BRIEF        JPEG8 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC1_CTRL__FORMAT__JPEG8   0x1Dul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC1_CTRL__FORMAT__RAW10_RAW8
 *
 * @BRIEF        RAW10 -> RAW8 
 *               RAW10 data from sensor is right shifted to produce RAW8 
 *               before it is send to memory - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC1_CTRL__FORMAT__RAW10_RAW8 0x1Eul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC1_CTRL__FORMAT__RAW8_DPCM12_VP
 *
 * @BRIEF        RAW8 DPCM12 -> RAW12 + VP 
 *               Used predictor is selected by the DPCM_PRED bit. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC1_CTRL__FORMAT__RAW8_DPCM12_VP 0x1Ful

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC1_CTRL__FORMAT__RAW10_RAW8_ALAW
 *
 * @BRIEF        RAW10 -> RAW8 ALAW - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC1_CTRL__FORMAT__RAW10_RAW8_ALAW 0x20ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC1_CTRL__FORMAT__RAW8_DPCM10_ALAW
 *
 * @BRIEF        RAW8 DPCM10 -> ALAW - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC1_CTRL__FORMAT__RAW8_DPCM10_ALAW 0x21ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC1_CTRL__FORMAT__RGB666_DPCM10_VP
 *
 * @BRIEF        RGB666.  
 *               DPCM decompressed to RAW10. Green duplicated. 
 *               Output as B G G R to the video port.  
 *               Simple predictor only. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC1_CTRL__FORMAT__RGB666_DPCM10_VP 0x22ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC1_CTRL__FORMAT__RGB666_DPCM12_VP
 *
 * @BRIEF        RGB666.  
 *               DPCM decompressed to RAW12. Green duplicated. 
 *               Output as B G G R to the video port.  
 *               Simple predictor only. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC1_CTRL__FORMAT__RGB666_DPCM12_VP 0x23ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC1_CTRL__FORMAT__RGB888_DPCM10_VP
 *
 * @BRIEF        RGB888.  
 *               DPCM decompressed to RAW10. Green duplicated. 
 *               Output as B G G R to the video port.  
 *               Simple predictor only. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC1_CTRL__FORMAT__RGB888_DPCM10_VP 0x24ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC1_CTRL__FORMAT__RGB888_DPCM12_VP
 *
 * @BRIEF        RGB888.  
 *               DPCM decompressed to RAW12. Green duplicated. 
 *               Output as B G G R to the video port.  
 *               Simple predictor only. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC1_CTRL__FORMAT__RGB888_DPCM12_VP 0x25ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC1_CTRL__REGION_EN__DISABLE
 *
 * @BRIEF        Disabled - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC1_CTRL__REGION_EN__DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC1_CTRL__REGION_EN__ENABLE
 *
 * @BRIEF        Enabled - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC1_CTRL__REGION_EN__ENABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC1_CTRL__CHAN_EN__DISABLE
 *
 * @BRIEF        Disabled - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC1_CTRL__CHAN_EN__DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC1_CTRL__CHAN_EN__ENABLE
 *
 * @BRIEF        Enabled - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC1_CTRL__CHAN_EN__ENABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC2_CTRL__CRC_EN__DISABLE
 *
 * @BRIEF        Disabled - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC2_CTRL__CRC_EN__DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC2_CTRL__CRC_EN__ENABLE
 *
 * @BRIEF        Enabled - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC2_CTRL__CRC_EN__ENABLE  0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC2_CTRL__DPCM_PRED__ADVANCED
 *
 * @BRIEF        The advanced predictor is used - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC2_CTRL__DPCM_PRED__ADVANCED 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC2_CTRL__DPCM_PRED__SIMPLE
 *
 * @BRIEF        The simple predictor is used. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC2_CTRL__DPCM_PRED__SIMPLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC2_CTRL__PING_PONG__PING
 *
 * @BRIEF        PING buffer - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC2_CTRL__PING_PONG__PING 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC2_CTRL__PING_PONG__PONG
 *
 * @BRIEF        PONG buffer - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC2_CTRL__PING_PONG__PONG 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC2_CTRL__COUNT_UNLOCK__LOCKED
 *
 * @BRIEF        COUNT bit field is locked. Writes have no effect - (Write) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC2_CTRL__COUNT_UNLOCK__LOCKED 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC2_CTRL__COUNT_UNLOCK__UNLOCKED
 *
 * @BRIEF        COUNT bit field is unlocked. Writes are possible. - (Write) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC2_CTRL__COUNT_UNLOCK__UNLOCKED 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC2_CTRL__FORMAT__YUV422_BE
 *
 * @BRIEF        YUV422 BIG ENDIAN - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC2_CTRL__FORMAT__YUV422_BE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC2_CTRL__FORMAT__YUV422_LE
 *
 * @BRIEF        YUV422 LITTLE ENDIAN - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC2_CTRL__FORMAT__YUV422_LE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC2_CTRL__FORMAT__YUV420
 *
 * @BRIEF        YUV420 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC2_CTRL__FORMAT__YUV420  0x2ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC2_CTRL__FORMAT__YUV422_VP
 *
 * @BRIEF        YUV422 + VP or RAW8 + VP - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC2_CTRL__FORMAT__YUV422_VP 0x3ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC2_CTRL__FORMAT__RGB444_EXP16
 *
 * @BRIEF        RGB444 + EXP16 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC2_CTRL__FORMAT__RGB444_EXP16 0x4ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC2_CTRL__FORMAT__RGB565
 *
 * @BRIEF        RGB565 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC2_CTRL__FORMAT__RGB565  0x5ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC2_CTRL__FORMAT__RGB888
 *
 * @BRIEF        RGB888 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC2_CTRL__FORMAT__RGB888  0x6ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC2_CTRL__FORMAT__RGB888_EXP32
 *
 * @BRIEF        RGB888 + EXP32 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC2_CTRL__FORMAT__RGB888_EXP32 0x7ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC2_CTRL__FORMAT__RAW6_EXP8
 *
 * @BRIEF        RAW6 + EXP8 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC2_CTRL__FORMAT__RAW6_EXP8 0x8ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC2_CTRL__FORMAT__RAW6_DPCM10_EXP16
 *
 * @BRIEF        RAW6 + DPCM10 + EXP16 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC2_CTRL__FORMAT__RAW6_DPCM10_EXP16 0x9ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC2_CTRL__FORMAT__RAW6_DPCM10_VP
 *
 * @BRIEF        RAW6 + DPCM10 + VP - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC2_CTRL__FORMAT__RAW6_DPCM10_VP 0xAul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC2_CTRL__FORMAT__RAW10_RAW6_DPCM
 *
 * @BRIEF        RAW10 -> RAW6 DPCM  
 *               RAW10 data from sensor is DPCM compressed into RAW6 before 
 *               it is send to memory. 
 *               Used predictor is selected by the DPCM_PRED bit. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC2_CTRL__FORMAT__RAW10_RAW6_DPCM 0xBul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC2_CTRL__FORMAT__RAW7_EXP8
 *
 * @BRIEF        RAW7 + EXP8 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC2_CTRL__FORMAT__RAW7_EXP8 0xCul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC2_CTRL__FORMAT__RAW7_DPCM10_EXP16
 *
 * @BRIEF        RAW7 + DPCM10 + EXP16 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC2_CTRL__FORMAT__RAW7_DPCM10_EXP16 0xDul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC2_CTRL__FORMAT__RAW7_DPCM10_VP
 *
 * @BRIEF        RAW7 + DPCM10 + VP - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC2_CTRL__FORMAT__RAW7_DPCM10_VP 0xEul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC2_CTRL__FORMAT__RAW10_RAW6_DPCM_EXP8
 *
 * @BRIEF        RAW10 -> RAW6 DPCM + EXP8 
 *               RAW10 data from sensor is DPCM compressed into RAW6 and 
 *               expanded to 8 bits before it is send to memory. 
 *               Used predictor is selected by the DPCM_PRED bit. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC2_CTRL__FORMAT__RAW10_RAW6_DPCM_EXP8 0xFul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC2_CTRL__FORMAT__RAW8
 *
 * @BRIEF        RAW8 
 *               This mode can be used to output RAW6 and RAW7 as well. - 
 *               (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC2_CTRL__FORMAT__RAW8    0x10ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC2_CTRL__FORMAT__RAW8_DPCM10_EXP16
 *
 * @BRIEF        RAW8 + DPCM10 + EXP16 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC2_CTRL__FORMAT__RAW8_DPCM10_EXP16 0x11ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC2_CTRL__FORMAT__RAW8_DPCM10_VP
 *
 * @BRIEF        RAW8 + DPCM10 + VP - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC2_CTRL__FORMAT__RAW8_DPCM10_VP 0x12ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC2_CTRL__FORMAT__RAW10_RAW7_DPCM
 *
 * @BRIEF        RAW10 -> RAW7 DPCM 
 *               RAW10 data from sensor is DPCM compressed into RAW7 before 
 *               it is send to memory. 
 *               Used predictor is selected by the DPCM_PRED bit. 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC2_CTRL__FORMAT__RAW10_RAW7_DPCM 0x13ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC2_CTRL__FORMAT__RAW10
 *
 * @BRIEF        RAW10 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC2_CTRL__FORMAT__RAW10   0x14ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC2_CTRL__FORMAT__RAW10_EXP16
 *
 * @BRIEF        RAW10 + EXP16 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC2_CTRL__FORMAT__RAW10_EXP16 0x15ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC2_CTRL__FORMAT__RAW10_VP
 *
 * @BRIEF        RAW10 + VP - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC2_CTRL__FORMAT__RAW10_VP 0x16ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC2_CTRL__FORMAT__RAW10_RAW7_DPCM_EXP8
 *
 * @BRIEF        RAW10 -> RAW7 DPCM + EXP8 
 *               RAW10 data from sensor is DPCM compressed into RAW7 and 
 *               expanded to 8 bits before it is send to memory. 
 *               Used predictor is selected by the DPCM_PRED bit. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC2_CTRL__FORMAT__RAW10_RAW7_DPCM_EXP8 0x17ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC2_CTRL__FORMAT__RAW12
 *
 * @BRIEF        RAW12 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC2_CTRL__FORMAT__RAW12   0x18ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC2_CTRL__FORMAT__RAW12_EXP16
 *
 * @BRIEF        RAW12 + EXP16 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC2_CTRL__FORMAT__RAW12_EXP16 0x19ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC2_CTRL__FORMAT__RAW12_VP
 *
 * @BRIEF        RAW12 + VP - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC2_CTRL__FORMAT__RAW12_VP 0x1Aul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC2_CTRL__FORMAT__RAW10_RAW8_DPCM
 *
 * @BRIEF        RAW10 -> RAW8 DPCM 
 *               RAW10 data from sensor is DPCM compressed into RAW8 before 
 *               it is send to memory. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC2_CTRL__FORMAT__RAW10_RAW8_DPCM 0x1Bul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC2_CTRL__FORMAT__JPEG8_FSP
 *
 * @BRIEF        JPEG8 + FSP - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC2_CTRL__FORMAT__JPEG8_FSP 0x1Cul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC2_CTRL__FORMAT__JPEG8
 *
 * @BRIEF        JPEG8 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC2_CTRL__FORMAT__JPEG8   0x1Dul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC2_CTRL__FORMAT__RAW10_RAW8
 *
 * @BRIEF        RAW10 -> RAW8 
 *               RAW10 data from sensor is right shifted to produce RAW8 
 *               before it is send to memory - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC2_CTRL__FORMAT__RAW10_RAW8 0x1Eul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC2_CTRL__FORMAT__RAW8_DPCM12_VP
 *
 * @BRIEF        RAW8 DPCM12 -> RAW12 + VP 
 *               Used predictor is selected by the DPCM_PRED bit. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC2_CTRL__FORMAT__RAW8_DPCM12_VP 0x1Ful

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC2_CTRL__FORMAT__RAW10_RAW8_ALAW
 *
 * @BRIEF        RAW10 -> RAW8 ALAW - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC2_CTRL__FORMAT__RAW10_RAW8_ALAW 0x20ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC2_CTRL__FORMAT__RAW8_DPCM10_ALAW
 *
 * @BRIEF        RAW8 DPCM10 -> ALAW - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC2_CTRL__FORMAT__RAW8_DPCM10_ALAW 0x21ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC2_CTRL__FORMAT__RGB666_DPCM10_VP
 *
 * @BRIEF        RGB666.  
 *               DPCM decompressed to RAW10. Green duplicated. 
 *               Output as B G G R to the video port.  
 *               Simple predictor only. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC2_CTRL__FORMAT__RGB666_DPCM10_VP 0x22ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC2_CTRL__FORMAT__RGB666_DPCM12_VP
 *
 * @BRIEF        RGB666.  
 *               DPCM decompressed to RAW12. Green duplicated. 
 *               Output as B G G R to the video port.  
 *               Simple predictor only. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC2_CTRL__FORMAT__RGB666_DPCM12_VP 0x23ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC2_CTRL__FORMAT__RGB888_DPCM10_VP
 *
 * @BRIEF        RGB888.  
 *               DPCM decompressed to RAW10. Green duplicated. 
 *               Output as B G G R to the video port.  
 *               Simple predictor only. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC2_CTRL__FORMAT__RGB888_DPCM10_VP 0x24ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC2_CTRL__FORMAT__RGB888_DPCM12_VP
 *
 * @BRIEF        RGB888.  
 *               DPCM decompressed to RAW12. Green duplicated. 
 *               Output as B G G R to the video port.  
 *               Simple predictor only. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC2_CTRL__FORMAT__RGB888_DPCM12_VP 0x25ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC2_CTRL__REGION_EN__DISABLE
 *
 * @BRIEF        Disabled - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC2_CTRL__REGION_EN__DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC2_CTRL__REGION_EN__ENABLE
 *
 * @BRIEF        Enabled - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC2_CTRL__REGION_EN__ENABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC2_CTRL__CHAN_EN__DISABLE
 *
 * @BRIEF        Disabled - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC2_CTRL__CHAN_EN__DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC2_CTRL__CHAN_EN__ENABLE
 *
 * @BRIEF        Enabled - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC2_CTRL__CHAN_EN__ENABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC3_CTRL__CRC_EN__DISABLE
 *
 * @BRIEF        Disabled - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC3_CTRL__CRC_EN__DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC3_CTRL__CRC_EN__ENABLE
 *
 * @BRIEF        Enabled - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC3_CTRL__CRC_EN__ENABLE  0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC3_CTRL__DPCM_PRED__ADVANCED
 *
 * @BRIEF        The advanced predictor is used - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC3_CTRL__DPCM_PRED__ADVANCED 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC3_CTRL__DPCM_PRED__SIMPLE
 *
 * @BRIEF        The simple predictor is used. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC3_CTRL__DPCM_PRED__SIMPLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC3_CTRL__PING_PONG__PING
 *
 * @BRIEF        PING buffer - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC3_CTRL__PING_PONG__PING 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC3_CTRL__PING_PONG__PONG
 *
 * @BRIEF        PONG buffer - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC3_CTRL__PING_PONG__PONG 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC3_CTRL__COUNT_UNLOCK__LOCKED
 *
 * @BRIEF        COUNT bit field is locked. Writes have no effect - (Write) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC3_CTRL__COUNT_UNLOCK__LOCKED 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC3_CTRL__COUNT_UNLOCK__UNLOCKED
 *
 * @BRIEF        COUNT bit field is unlocked. Writes are possible. - (Write) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC3_CTRL__COUNT_UNLOCK__UNLOCKED 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC3_CTRL__FORMAT__YUV422_BE
 *
 * @BRIEF        YUV422 BIG ENDIAN - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC3_CTRL__FORMAT__YUV422_BE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC3_CTRL__FORMAT__YUV422_LE
 *
 * @BRIEF        YUV422 LITTLE ENDIAN - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC3_CTRL__FORMAT__YUV422_LE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC3_CTRL__FORMAT__YUV420
 *
 * @BRIEF        YUV420 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC3_CTRL__FORMAT__YUV420  0x2ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC3_CTRL__FORMAT__YUV422_VP
 *
 * @BRIEF        YUV422 + VP or RAW8 + VP - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC3_CTRL__FORMAT__YUV422_VP 0x3ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC3_CTRL__FORMAT__RGB444_EXP16
 *
 * @BRIEF        RGB444 + EXP16 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC3_CTRL__FORMAT__RGB444_EXP16 0x4ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC3_CTRL__FORMAT__RGB565
 *
 * @BRIEF        RGB565 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC3_CTRL__FORMAT__RGB565  0x5ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC3_CTRL__FORMAT__RGB888
 *
 * @BRIEF        RGB888 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC3_CTRL__FORMAT__RGB888  0x6ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC3_CTRL__FORMAT__RGB888_EXP32
 *
 * @BRIEF        RGB888 + EXP32 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC3_CTRL__FORMAT__RGB888_EXP32 0x7ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC3_CTRL__FORMAT__RAW6_EXP8
 *
 * @BRIEF        RAW6 + EXP8 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC3_CTRL__FORMAT__RAW6_EXP8 0x8ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC3_CTRL__FORMAT__RAW6_DPCM10_EXP16
 *
 * @BRIEF        RAW6 + DPCM10 + EXP16 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC3_CTRL__FORMAT__RAW6_DPCM10_EXP16 0x9ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC3_CTRL__FORMAT__RAW6_DPCM10_VP
 *
 * @BRIEF        RAW6 + DPCM10 + VP - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC3_CTRL__FORMAT__RAW6_DPCM10_VP 0xAul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC3_CTRL__FORMAT__RAW10_RAW6_DPCM
 *
 * @BRIEF        RAW10 -> RAW6 DPCM  
 *               RAW10 data from sensor is DPCM compressed into RAW6 before 
 *               it is send to memory. 
 *               Used predictor is selected by the DPCM_PRED bit. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC3_CTRL__FORMAT__RAW10_RAW6_DPCM 0xBul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC3_CTRL__FORMAT__RAW7_EXP8
 *
 * @BRIEF        RAW7 + EXP8 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC3_CTRL__FORMAT__RAW7_EXP8 0xCul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC3_CTRL__FORMAT__RAW7_DPCM10_EXP16
 *
 * @BRIEF        RAW7 + DPCM10 + EXP16 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC3_CTRL__FORMAT__RAW7_DPCM10_EXP16 0xDul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC3_CTRL__FORMAT__RAW7_DPCM10_VP
 *
 * @BRIEF        RAW7 + DPCM10 + VP - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC3_CTRL__FORMAT__RAW7_DPCM10_VP 0xEul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC3_CTRL__FORMAT__RAW10_RAW6_DPCM_EXP8
 *
 * @BRIEF        RAW10 -> RAW6 DPCM + EXP8 
 *               RAW10 data from sensor is DPCM compressed into RAW6 and 
 *               expanded to 8 bits before it is send to memory. 
 *               Used predictor is selected by the DPCM_PRED bit. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC3_CTRL__FORMAT__RAW10_RAW6_DPCM_EXP8 0xFul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC3_CTRL__FORMAT__RAW8
 *
 * @BRIEF        RAW8 
 *               This mode can be used to output RAW6 and RAW7 as well. - 
 *               (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC3_CTRL__FORMAT__RAW8    0x10ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC3_CTRL__FORMAT__RAW8_DPCM10_EXP16
 *
 * @BRIEF        RAW8 + DPCM10 + EXP16 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC3_CTRL__FORMAT__RAW8_DPCM10_EXP16 0x11ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC3_CTRL__FORMAT__RAW8_DPCM10_VP
 *
 * @BRIEF        RAW8 + DPCM10 + VP - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC3_CTRL__FORMAT__RAW8_DPCM10_VP 0x12ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC3_CTRL__FORMAT__RAW10_RAW7_DPCM
 *
 * @BRIEF        RAW10 -> RAW7 DPCM 
 *               RAW10 data from sensor is DPCM compressed into RAW7 before 
 *               it is send to memory. 
 *               Used predictor is selected by the DPCM_PRED bit. 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC3_CTRL__FORMAT__RAW10_RAW7_DPCM 0x13ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC3_CTRL__FORMAT__RAW10
 *
 * @BRIEF        RAW10 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC3_CTRL__FORMAT__RAW10   0x14ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC3_CTRL__FORMAT__RAW10_EXP16
 *
 * @BRIEF        RAW10 + EXP16 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC3_CTRL__FORMAT__RAW10_EXP16 0x15ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC3_CTRL__FORMAT__RAW10_VP
 *
 * @BRIEF        RAW10 + VP - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC3_CTRL__FORMAT__RAW10_VP 0x16ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC3_CTRL__FORMAT__RAW10_RAW7_DPCM_EXP8
 *
 * @BRIEF        RAW10 -> RAW7 DPCM + EXP8 
 *               RAW10 data from sensor is DPCM compressed into RAW7 and 
 *               expanded to 8 bits before it is send to memory. 
 *               Used predictor is selected by the DPCM_PRED bit. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC3_CTRL__FORMAT__RAW10_RAW7_DPCM_EXP8 0x17ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC3_CTRL__FORMAT__RAW12
 *
 * @BRIEF        RAW12 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC3_CTRL__FORMAT__RAW12   0x18ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC3_CTRL__FORMAT__RAW12_EXP16
 *
 * @BRIEF        RAW12 + EXP16 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC3_CTRL__FORMAT__RAW12_EXP16 0x19ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC3_CTRL__FORMAT__RAW12_VP
 *
 * @BRIEF        RAW12 + VP - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC3_CTRL__FORMAT__RAW12_VP 0x1Aul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC3_CTRL__FORMAT__RAW10_RAW8_DPCM
 *
 * @BRIEF        RAW10 -> RAW8 DPCM 
 *               RAW10 data from sensor is DPCM compressed into RAW8 before 
 *               it is send to memory. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC3_CTRL__FORMAT__RAW10_RAW8_DPCM 0x1Bul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC3_CTRL__FORMAT__JPEG8_FSP
 *
 * @BRIEF        JPEG8 + FSP - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC3_CTRL__FORMAT__JPEG8_FSP 0x1Cul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC3_CTRL__FORMAT__JPEG8
 *
 * @BRIEF        JPEG8 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC3_CTRL__FORMAT__JPEG8   0x1Dul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC3_CTRL__FORMAT__RAW10_RAW8
 *
 * @BRIEF        RAW10 -> RAW8 
 *               RAW10 data from sensor is right shifted to produce RAW8 
 *               before it is send to memory - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC3_CTRL__FORMAT__RAW10_RAW8 0x1Eul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC3_CTRL__FORMAT__RAW8_DPCM12_VP
 *
 * @BRIEF        RAW8 DPCM12 -> RAW12 + VP 
 *               Used predictor is selected by the DPCM_PRED bit. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC3_CTRL__FORMAT__RAW8_DPCM12_VP 0x1Ful

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC3_CTRL__FORMAT__RAW10_RAW8_ALAW
 *
 * @BRIEF        RAW10 -> RAW8 ALAW - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC3_CTRL__FORMAT__RAW10_RAW8_ALAW 0x20ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC3_CTRL__FORMAT__RAW8_DPCM10_ALAW
 *
 * @BRIEF        RAW8 DPCM10 -> ALAW - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC3_CTRL__FORMAT__RAW8_DPCM10_ALAW 0x21ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC3_CTRL__FORMAT__RGB666_DPCM10_VP
 *
 * @BRIEF        RGB666.  
 *               DPCM decompressed to RAW10. Green duplicated. 
 *               Output as B G G R to the video port.  
 *               Simple predictor only. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC3_CTRL__FORMAT__RGB666_DPCM10_VP 0x22ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC3_CTRL__FORMAT__RGB666_DPCM12_VP
 *
 * @BRIEF        RGB666.  
 *               DPCM decompressed to RAW12. Green duplicated. 
 *               Output as B G G R to the video port.  
 *               Simple predictor only. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC3_CTRL__FORMAT__RGB666_DPCM12_VP 0x23ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC3_CTRL__FORMAT__RGB888_DPCM10_VP
 *
 * @BRIEF        RGB888.  
 *               DPCM decompressed to RAW10. Green duplicated. 
 *               Output as B G G R to the video port.  
 *               Simple predictor only. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC3_CTRL__FORMAT__RGB888_DPCM10_VP 0x24ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC3_CTRL__FORMAT__RGB888_DPCM12_VP
 *
 * @BRIEF        RGB888.  
 *               DPCM decompressed to RAW12. Green duplicated. 
 *               Output as B G G R to the video port.  
 *               Simple predictor only. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC3_CTRL__FORMAT__RGB888_DPCM12_VP 0x25ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC3_CTRL__REGION_EN__DISABLE
 *
 * @BRIEF        Disabled - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC3_CTRL__REGION_EN__DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC3_CTRL__REGION_EN__ENABLE
 *
 * @BRIEF        Enabled - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC3_CTRL__REGION_EN__ENABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC3_CTRL__CHAN_EN__DISABLE
 *
 * @BRIEF        Disabled - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC3_CTRL__CHAN_EN__DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LC3_CTRL__CHAN_EN__ENABLE
 *
 * @BRIEF        Enabled - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LC3_CTRL__CHAN_EN__ENABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LCM_CTRL__DST_PACK__DISABLE
 *
 * @BRIEF        Disabled - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LCM_CTRL__DST_PACK__DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LCM_CTRL__DST_PACK__ENABLE
 *
 * @BRIEF        Enabled - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LCM_CTRL__DST_PACK__ENABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LCM_CTRL__DST_DPCM_PRED__ADVANCED
 *
 * @BRIEF        The advanced predictor is used - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LCM_CTRL__DST_DPCM_PRED__ADVANCED 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LCM_CTRL__DST_DPCM_PRED__SIMPLE
 *
 * @BRIEF        The simple predictor is used. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LCM_CTRL__DST_DPCM_PRED__SIMPLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LCM_CTRL__DST_COMPR__DISABLE
 *
 * @BRIEF        No compression - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LCM_CTRL__DST_COMPR__DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LCM_CTRL__DST_COMPR__ALAW
 *
 * @BRIEF        ALAW compression 
 *               RAW10 -> RAW8 ALAW when DST_FORMAT=RAW8 
 *               other destination formats are invalid. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LCM_CTRL__DST_COMPR__ALAW 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LCM_CTRL__DST_COMPR__DPCM
 *
 * @BRIEF        DPCM compression 
 *               RAW10 -> RAW6 DPCM when DST_FORMAT=RAW6 
 *               RAW10 -> RAW7 DPCM when DST_FORMAT=RAW7 
 *               RAW10 -> RAW8 DPCM when DST_FORMAT=RAW8 
 *               other destination formats are invalid. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LCM_CTRL__DST_COMPR__DPCM 0x2ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LCM_CTRL__DST_FORMAT__RAW6
 *
 * @BRIEF        RAW6 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LCM_CTRL__DST_FORMAT__RAW6 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LCM_CTRL__DST_FORMAT__RAW7
 *
 * @BRIEF        RAW7 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LCM_CTRL__DST_FORMAT__RAW7 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LCM_CTRL__DST_FORMAT__RAW8
 *
 * @BRIEF        RAW8 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LCM_CTRL__DST_FORMAT__RAW8 0x2ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LCM_CTRL__DST_FORMAT__RAW10
 *
 * @BRIEF        RAW10 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LCM_CTRL__DST_FORMAT__RAW10 0x3ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LCM_CTRL__DST_FORMAT__RAW12
 *
 * @BRIEF        RAW12 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LCM_CTRL__DST_FORMAT__RAW12 0x4ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LCM_CTRL__DST_FORMAT__RAW14
 *
 * @BRIEF        RAW14 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LCM_CTRL__DST_FORMAT__RAW14 0x5ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LCM_CTRL__DST_FORMAT__RAW16
 *
 * @BRIEF        RAW16 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LCM_CTRL__DST_FORMAT__RAW16 0x6ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LCM_CTRL__SRC_PACK__DISABLE
 *
 * @BRIEF        Disabled - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LCM_CTRL__SRC_PACK__DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LCM_CTRL__SRC_PACK__ENABLE
 *
 * @BRIEF        Enabled - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LCM_CTRL__SRC_PACK__ENABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LCM_CTRL__SRC_DPCM_PRED__ADVANCED
 *
 * @BRIEF        The advanced predictor is used - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LCM_CTRL__SRC_DPCM_PRED__ADVANCED 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LCM_CTRL__SRC_DPCM_PRED__SIMPLE
 *
 * @BRIEF        The simple predictor is used. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LCM_CTRL__SRC_DPCM_PRED__SIMPLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LCM_CTRL__SRC_DECOMPR__DISABLE
 *
 * @BRIEF        No decompression - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LCM_CTRL__SRC_DECOMPR__DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LCM_CTRL__SRC_DECOMPR__ALAW
 *
 * @BRIEF        ALAW decompression 
 *               RAW8 ALAW -> RAW10 when SRC_FORMAT=RAW8 
 *               other source formats are invalid. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LCM_CTRL__SRC_DECOMPR__ALAW 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LCM_CTRL__SRC_DECOMPR__DPCM
 *
 * @BRIEF        DPCM decompression 
 *               RAW6 DPCM -> RAW10 when SRC_FORMAT=RAW6 
 *               RAW7 DPCM -> RAW10 when SRC_FORMAT=RAW7 
 *               RAW8 DPCM -> RAW10 when SRC_FORMAT=RAW8 
 *               other source formats are invalid. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LCM_CTRL__SRC_DECOMPR__DPCM 0x2ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LCM_CTRL__SRC_DECOMPR__DPCM12
 *
 * @BRIEF        DPCM decompression 
 *               RAW6 DPCM -> RAW12 when SRC_FORMAT=RAW6 
 *               RAW8 DPCM -> RAW12 when SRC_FORMAT=RAW8 
 *               other source formats are invalid. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LCM_CTRL__SRC_DECOMPR__DPCM12 0x3ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LCM_CTRL__SRC_FORMAT__RAW6
 *
 * @BRIEF        RAW6 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LCM_CTRL__SRC_FORMAT__RAW6 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LCM_CTRL__SRC_FORMAT__RAW7
 *
 * @BRIEF        RAW7 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LCM_CTRL__SRC_FORMAT__RAW7 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LCM_CTRL__SRC_FORMAT__RAW8
 *
 * @BRIEF        RAW8 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LCM_CTRL__SRC_FORMAT__RAW8 0x2ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LCM_CTRL__SRC_FORMAT__RAW10
 *
 * @BRIEF        RAW10 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LCM_CTRL__SRC_FORMAT__RAW10 0x3ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LCM_CTRL__SRC_FORMAT__RAW12
 *
 * @BRIEF        RAW12 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LCM_CTRL__SRC_FORMAT__RAW12 0x4ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LCM_CTRL__SRC_FORMAT__RAW14
 *
 * @BRIEF        RAW14 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LCM_CTRL__SRC_FORMAT__RAW14 0x5ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LCM_CTRL__SRC_FORMAT__RAW16
 *
 * @BRIEF        RAW16 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LCM_CTRL__SRC_FORMAT__RAW16 0x6ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LCM_CTRL__SRC_FORMAT__RSZ
 *
 * @BRIEF        reserved - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LCM_CTRL__SRC_FORMAT__RSZ 0x7ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LCM_CTRL__SRC_FORMAT__RGB666_TO_RGGB
 *
 * @BRIEF        RGB666_to_RGGB - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LCM_CTRL__SRC_FORMAT__RGB666_TO_RGGB 0x8ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LCM_CTRL__SRC_FORMAT__RGB666_TO_GRBG
 *
 * @BRIEF        RGB666_to_GRBG - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LCM_CTRL__SRC_FORMAT__RGB666_TO_GRBG 0x9ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LCM_CTRL__SRC_FORMAT__RGB666_TO_GBRG
 *
 * @BRIEF        RGB666_to_GBRG - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LCM_CTRL__SRC_FORMAT__RGB666_TO_GBRG 0xAul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LCM_CTRL__SRC_FORMAT__RGB666_TO_BGGR
 *
 * @BRIEF        RGB666_to_BGGR - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LCM_CTRL__SRC_FORMAT__RGB666_TO_BGGR 0xBul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LCM_CTRL__SRC_FORMAT__RGB888_TO_RGGB
 *
 * @BRIEF        RGB888_to_RGGB - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LCM_CTRL__SRC_FORMAT__RGB888_TO_RGGB 0xCul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LCM_CTRL__SRC_FORMAT__RGB888_TO_GRBG
 *
 * @BRIEF        RGB888_to_GRBG - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LCM_CTRL__SRC_FORMAT__RGB888_TO_GRBG 0xDul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LCM_CTRL__SRC_FORMAT__RGB888_TO_GBRG
 *
 * @BRIEF        RGB888_to_GBRG - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LCM_CTRL__SRC_FORMAT__RGB888_TO_GBRG 0xEul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LCM_CTRL__SRC_FORMAT__RGB888_TO_BGGR
 *
 * @BRIEF        RGB888_to_BGGR - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LCM_CTRL__SRC_FORMAT__RGB888_TO_BGGR 0xFul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LCM_CTRL__BURST_SIZE__B1X64
 *
 * @BRIEF        1x 64-bit burst = single request. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LCM_CTRL__BURST_SIZE__B1X64 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LCM_CTRL__BURST_SIZE__B2X64
 *
 * @BRIEF        2x 64-bit bursts. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LCM_CTRL__BURST_SIZE__B2X64 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LCM_CTRL__BURST_SIZE__B4X64
 *
 * @BRIEF        4x 64-bit bursts. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LCM_CTRL__BURST_SIZE__B4X64 0x2ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LCM_CTRL__BURST_SIZE__B8X64
 *
 * @BRIEF        8x 64-bit bursts. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LCM_CTRL__BURST_SIZE__B8X64 0x3ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LCM_CTRL__BURST_SIZE__B16X64
 *
 * @BRIEF        16x 64-bit bursts. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LCM_CTRL__BURST_SIZE__B16X64 0x4ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LCM_CTRL__READ_THROTTLE__FULL
 *
 * @BRIEF        Full speed. Throughput is limited by internal processing 
 *               capabilities.  - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LCM_CTRL__READ_THROTTLE__FULL 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LCM_CTRL__READ_THROTTLE__TWO
 *
 * @BRIEF        1/2 speed - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LCM_CTRL__READ_THROTTLE__TWO 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LCM_CTRL__READ_THROTTLE__FOUR
 *
 * @BRIEF        1/4 speed - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LCM_CTRL__READ_THROTTLE__FOUR 0x2ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LCM_CTRL__READ_THROTTLE__EIGHT
 *
 * @BRIEF        1/8 speed - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LCM_CTRL__READ_THROTTLE__EIGHT 0x3ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LCM_CTRL__DST_PORT__VPORT
 *
 * @BRIEF        Data is send to video port, it is always send without 
 *               compression or packing. The DST_COMPR, DST_DPCM_PRED, 
 *               DST_PACK, CCP2_LCM_DST_WRITE and CCP2_LCM_DST_OFST registers 
 *               have no effect. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LCM_CTRL__DST_PORT__VPORT 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LCM_CTRL__DST_PORT__MEMWRITE
 *
 * @BRIEF        Data is send to memory.  - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LCM_CTRL__DST_PORT__MEMWRITE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LCM_CTRL__CHAN_EN__DISABLE
 *
 * @BRIEF        Disabled - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LCM_CTRL__CHAN_EN__DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   CCP2_RECEIVER__CCP2_LCM_CTRL__CHAN_EN__ENABLE
 *
 * @BRIEF        Enabled - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define CCP2_RECEIVER__CCP2_LCM_CTRL__CHAN_EN__ENABLE 0x1ul

#ifdef __cplusplus
}
#endif
#endif                                                     /* __CCP2_RECEIVER_CRED_H 
                                                            */

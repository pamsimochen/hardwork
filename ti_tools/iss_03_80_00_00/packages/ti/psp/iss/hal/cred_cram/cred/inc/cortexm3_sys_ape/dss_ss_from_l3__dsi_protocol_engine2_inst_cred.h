/** ==================================================================
 *  @file   dss_ss_from_l3__dsi_protocol_engine2_inst_cred.h                                                  
 *                                                                    
 *  @path   /ti/psp/iss/hal/cred_cram/cred/inc/cortexm3_sys_ape/                                                  
 *                                                                    
 *  @desc   This  File contains.                                      
 * ===================================================================
 *  Copyright (c) Texas Instruments Inc 2011, 2012                    
 *                                                                    
 *  Use of this software is controlled by the terms and conditions found
 *  in the license agreement under which this software has been supplied
 * ===================================================================*/

/* ============================================================================ 
 * TEXAS INSTRUMENTS INCORPORATED PROPRIETARY INFORMATION Property of Texas
 * Instruments For Unrestricted Internal Use Only Unauthorized reproduction
 * and/or distribution is strictly prohibited.  This product is protected
 * under copyright law and trade secret law as an unpublished work.  Created
 * 2008, (C) Copyright 2008 Texas Instruments.  All rights reserved. */

/**
 *  @Component instance:   DSS_SS_FROM_L3__DSI_PROTOCOL_ENGINE2
 *
 *  @Filename:             dss_ss_from_l3__dsi_protocol_engine2_inst_cred.h
 *
 * *  @Description: DSI protocol engine (MIPI Display Serial Interface 
 *                Protocole) 
 *
 *  Generated by: Socrates CRED generator prototype
 *
    *//* ====================================================================== */

#ifndef __DSI_PROTOCOL_ENGINE_CRED_H
#define __DSI_PROTOCOL_ENGINE_CRED_H

#ifdef __cplusplus
extern "C" {
#endif

    /* 
     * Instance DSS_SS_FROM_L3__DSI_PROTOCOL_ENGINE2 of component DSI_PROTOCOL_ENGINE mapped in MONICA at address 0x58005000
     */

                                                                              /*-------------------------------------------------------------------------*//**
 * @DEFINITION   BITFIELD
 *
 * @BRIEF        The bitfield must be defined according to register width
 *               of the component instance - 64/32/16/8
 *
    *//*------------------------------------------------------------------------ */
#undef BITFIELD
#define BITFIELD BITFIELD_32

    /* 
     *  List of Register arrays for component instance DSS_SS_FROM_L3__DSI_PROTOCOL_ENGINE2
     *
     */

    /* 
     *  List of bundle arrays for component instance DSS_SS_FROM_L3__DSI_PROTOCOL_ENGINE2
     *
     */
                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VIRTUAL_CHANNEL
 *
 * @BRIEF        Bundle description is not available
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VIRTUAL_CHANNEL           0x100ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VIRTUAL_CHANNEL__ELSIZE
 *
 * @BRIEF        DSI_VIRTUAL_CHANNEL bundle array element size in Bytes
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VIRTUAL_CHANNEL__ELSIZE   0x20ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VIRTUAL_CHANNEL__NELEMS
 *
 * @BRIEF        DSI_VIRTUAL_CHANNEL bundle array number of elements
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VIRTUAL_CHANNEL__NELEMS   4

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_TEARING_EFFECT
 *
 * @BRIEF        Bundle description is not available
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_TEARING_EFFECT            0xA0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_TEARING_EFFECT__ELSIZE
 *
 * @BRIEF        DSI_TEARING_EFFECT bundle array element size in Bytes
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_TEARING_EFFECT__ELSIZE    0xCul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_TEARING_EFFECT__NELEMS
 *
 * @BRIEF        DSI_TEARING_EFFECT bundle array number of elements
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_TEARING_EFFECT__NELEMS    2

    /* 
     *  List of bundles for component instance DSS_SS_FROM_L3__DSI_PROTOCOL_ENGINE2
     *
     */

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__OFFSET
 *
 * @BRIEF        Register DSI_VC_CTRL offset in bundle DSI_VIRTUAL_CHANNEL 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__OFFSET           0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_TE__OFFSET
 *
 * @BRIEF        Register DSI_VC_TE offset in bundle DSI_VIRTUAL_CHANNEL 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_TE__OFFSET             0x4ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_LONG_PACKET_HEADER__OFFSET
 *
 * @BRIEF        Register DSI_VC_LONG_PACKET_HEADER offset in bundle DSI_VIRTUAL_CHANNEL 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_LONG_PACKET_HEADER__OFFSET 0x8ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_LONG_PACKET_PAYLOAD__OFFSET
 *
 * @BRIEF        Register DSI_VC_LONG_PACKET_PAYLOAD offset in bundle DSI_VIRTUAL_CHANNEL 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_LONG_PACKET_PAYLOAD__OFFSET 0xCul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_SHORT_PACKET_HEADER__OFFSET
 *
 * @BRIEF        Register DSI_VC_SHORT_PACKET_HEADER offset in bundle DSI_VIRTUAL_CHANNEL 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_SHORT_PACKET_HEADER__OFFSET 0x10ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_IRQSTATUS__OFFSET
 *
 * @BRIEF        Register DSI_VC_IRQSTATUS offset in bundle DSI_VIRTUAL_CHANNEL 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_IRQSTATUS__OFFSET      0x18ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_IRQENABLE__OFFSET
 *
 * @BRIEF        Register DSI_VC_IRQENABLE offset in bundle DSI_VIRTUAL_CHANNEL 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_IRQENABLE__OFFSET      0x1Cul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_TE_HSYNC_WIDTH__OFFSET
 *
 * @BRIEF        Register DSI_TE_HSYNC_WIDTH offset in bundle DSI_TEARING_EFFECT 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_TE_HSYNC_WIDTH__OFFSET    0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_TE_VSYNC_WIDTH__OFFSET
 *
 * @BRIEF        Register DSI_TE_VSYNC_WIDTH offset in bundle DSI_TEARING_EFFECT 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_TE_VSYNC_WIDTH__OFFSET    0x4ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_TE_HSYNC_NUMBER__OFFSET
 *
 * @BRIEF        Register DSI_TE_HSYNC_NUMBER offset in bundle DSI_TEARING_EFFECT 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_TE_HSYNC_NUMBER__OFFSET   0x8ul

    /* 
     * List of registers for component instance DSS_SS_FROM_L3__DSI_PROTOCOL_ENGINE2
     *
     */

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_REVISION
 *
 * @BRIEF        MODULE REVISION 
 *               This register contains the IP revision code in binary coded 
 *               digital. For example, we have: 0x01 = revision 0.1 and 0x21 
 *               = revision 2.1 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_REVISION                  0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_SYSCONFIG
 *
 * @BRIEF        SYSTEM CONFIGURATION REGISTER 
 *               This register is the OCP-socket system configuration 
 *               register. 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_SYSCONFIG                 0x10ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_SYSSTATUS
 *
 * @BRIEF        SYSTEM STATUS REGISTER 
 *               This register provides status information about the module, 
 *               excluding the interrupt status register. 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_SYSSTATUS                 0x14ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_IRQSTATUS
 *
 * @BRIEF        INTERRUPT STATUS REGISTER - All virtual channels + Complex 
 *               IO + PLL 
 *               This register associates one bit for each virtual channel in 
 *               order to determine which virtual channel has generated the 
 *               interrupt. The virtual channel shall be enabled for events 
 *               to be generated on that virtual channel. 
 *               If the virtual channel is disabled,  the interrupt is not 
 *               generated. 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_IRQSTATUS                 0x18ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_IRQENABLE
 *
 * @BRIEF        INTERRUPT ENABLE REGISTER -  
 *               This register associates one bit for each virtual channel in 
 *               order to enable/disable each virtual channel individually. 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_IRQENABLE                 0x1Cul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_CTRL
 *
 * @BRIEF        GLOBAL CONTROL REGISTER 
 *               This register controls the DSI Protocol Engine module. This 
 *               register shall not be modified dynamically (except IF_EN bit 
 *               fields). 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_CTRL                      0x40ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_GNQ
 *
 * @BRIEF        GENERIC PARAMETER REGISTER 
 *               This register provide a way to read the generic parameters 
 *               used in the design. 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_GNQ                       0x44ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG1
 *
 * @BRIEF        COMPLEXIO CONFIGURATION REGISTER for the complex IO 
 *               This register contains the lane configuration for the order 
 *               and position of the lanes (clock and data) and the polarity 
 *               order for the control of the PHY differential signals in 
 *               addition to the control bit for the power FSM.  
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG1            0x48ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQSTATUS
 *
 * @BRIEF        INTERRUPT STATUS REGISTER - All errors from complex IO 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQSTATUS       0x4Cul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQENABLE
 *
 * @BRIEF        INTERRUPT ENABLE REGISTER - All errors from complex IO 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQENABLE       0x50ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_CLK_CTRL
 *
 * @BRIEF        CLOCK CONTROL 
 *               This register controls the CLOCK GENERATION. The register 
 *               can be modified only when IF_EN is reset. 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_CLK_CTRL                  0x54ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_TIMING1
 *
 * @BRIEF        TIMING1 REGISTER 
 *               This register controls the DSI Protocol Engine module 
 *               timers. Any bit-field can be modified while DSI_CTRL.IF_EN 
 *               is set to '1'. 
 *               It is used to indicate the number of DSI_CLK functional 
 *               clock cycles for the timers FORCE_TX_STOP_TIMER and 
 *               TA_TO_TIMER 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_TIMING1                   0x58ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_TIMING2
 *
 * @BRIEF        TIMING2 REGISTER 
 *               This register controls the DSI Protocol Engine module 
 *               timers. Any bit-field can be modified while DSI_CTRL.IF_EN 
 *               is set to '1'. 
 *               It is used to indicate the number of DSI_CLK functional 
 *               clock cycles for the timers HS_TX_TIMER and LP_RX_TIMER 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_TIMING2                   0x5Cul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VM_TIMING1
 *
 * @BRIEF        VIDEO MODE TIMING REGISTER 
 *               This register defines the video mode timing. 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VM_TIMING1                0x60ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VM_TIMING2
 *
 * @BRIEF        VIDEO MODE TIMING REGISTER 
 *               This register defines the video mode timing. 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VM_TIMING2                0x64ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VM_TIMING3
 *
 * @BRIEF        VIDEO MODE TIMING REGISTER 
 *               This register defines the video mode timing. 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VM_TIMING3                0x68ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_CLK_TIMING
 *
 * @BRIEF        CLOCK TIMING REGISTER 
 *               This register controls the DSI Protocol Engine module 
 *               timers. This register shall not be modified while 
 *               DSI_CTRL.IF_EN is set to '1'. 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_CLK_TIMING                0x6Cul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_TX_FIFO_VC_SIZE
 *
 * @BRIEF        Defines the corresponding memory entries allocated for each 
 *               virtual channel. The virtual channel shall be disabled in 
 *               order to allocate/un-allocate some entries in the TX FIFO. 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_TX_FIFO_VC_SIZE           0x70ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_RX_FIFO_VC_SIZE
 *
 * @BRIEF        Defines the corresponding memory entries allocated for each 
 *               virtual channel and the addresses. The virtual channel shall 
 *               be disabled in order to allocate/un-allocate some entries in 
 *               the RX FIFO. 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_RX_FIFO_VC_SIZE           0x74ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG2
 *
 * @BRIEF        COMPLEXIO CONFIGURATION REGISTER for the complex IO 
 *               This register contains the lane configuration for the ULPS 
 *               for each lane. 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG2            0x78ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_RX_FIFO_VC_FULLNESS
 *
 * @BRIEF        Defines the fullness of each space allocated for each 
 *               virtual channel. 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_RX_FIFO_VC_FULLNESS       0x7Cul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VM_TIMING4
 *
 * @BRIEF        VIDEO MODE TIMING REGISTER 
 *               This register defines the video mode timing. 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VM_TIMING4                0x80ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_TX_FIFO_VC_EMPTINESS
 *
 * @BRIEF        Defines the emptiness of each space allocated for each 
 *               virtual channel. 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_TX_FIFO_VC_EMPTINESS      0x84ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VM_TIMING5
 *
 * @BRIEF        VIDEO MODE TIMING REGISTER 
 *               This register defines the video mode timing. 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VM_TIMING5                0x88ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VM_TIMING6
 *
 * @BRIEF        VIDEO MODE TIMING REGISTER 
 *               This register defines the video mode timing. 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VM_TIMING6                0x8Cul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VM_TIMING7
 *
 * @BRIEF        Defines the minimum number of HS  bytes clock cycles that 
 *               are required to allow for the delays in entering and exiting 
 *               HS mode. 
 *               The supported values are from 0 to 65535  
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VM_TIMING7                0x90ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_STOPCLK_TIMING
 *
 * @BRIEF        Number of functional clock cycles to wait for TxByteClkHS to 
 *               stop/start after change in DSIStopClk signal 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_STOPCLK_TIMING            0x94ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_CTRL2
 *
 * @BRIEF        Additional control bits for use with Video Port 2 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_CTRL2                     0x98ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VM_TIMING8
 *
 * @BRIEF        VIDEO MODE TIMING REGISTER 
 *               This register defines the video mode timing. 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VM_TIMING8                0x9Cul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_TE_HSYNC_WIDTH
 *
 * @BRIEF        The register configures the TE HSYNC minimum pulse width for 
 *               TE0 and TE1 CMOS signals 
 *               The input TE signal is asynchronous and needs to be 
 *               re-synchronizred to DSI_CLK clock domain. 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_TE_HSYNC_WIDTH            0xA0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_TE_VSYNC_WIDTH
 *
 * @BRIEF        The register configures the TE VSYNC minimum pulse width for 
 *               TE0 and TE1 CMOS signals 
 *               The input TE signal is asynchronous and needs to be 
 *               re-synchronizred to DSI_CLK clock domain. 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_TE_VSYNC_WIDTH            0xA4ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_TE_HSYNC_NUMBER
 *
 * @BRIEF        The register configures the number of HSYNC to synchronize 
 *               the beginning of the transfer on DSI link based on the 
 *               number of HSYNC pulse received on the TE line. 
 *               The input TE signal is asynchronous and needs to be 
 *               re-synchronizred to DSI_CLK clock domain. 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_TE_HSYNC_NUMBER           0xA8ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_CTRL
 *
 * @BRIEF        CONTROL REGISTER - Virtual channel 
 *               This register controls the virtual channel. 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_CTRL                   0x100ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_TE
 *
 * @BRIEF        CONTROL REGISTER - Virtual channel 
 *               This register controls the tearing effect logic. It defines 
 *               the size of the transfer when TE occurs and enables the 
 *               automatic TE mode. 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_TE                     0x104ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_LONG_PACKET_HEADER
 *
 * @BRIEF        LONG  PACKET HEADER INFORMATION -Virtual channel 
 *               This register sets the 32-bit DATA_ID + Word count + ECC 
 *               (the virtual channel id can be different than VC). 
 *               The ECC will be computed if ECC_TX_EN is set to 1. 
 *               DATA_ID is located at bit[7:0] 
 *               WC is located at bit[23:8] 
 *               ECC is located at bit[31:24] 
 *               (Least significant byte first and least significant bit 
 *               first) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_LONG_PACKET_HEADER     0x108ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_LONG_PACKET_PAYLOAD
 *
 * @BRIEF        LONG PACKET PAYLOAD INFORMATION -Virtual channel 
 *               This register sets the payload information (excluding 
 *               Check-sum). The HW shall capture the word count in the 
 *               packet header (in DSI_VC_LONG_PACKET_HEADER) in order to 
 *               determine the last valid data. (the virtual channel id can 
 *               be different than VC). 
 *               Byte1 is bit[7:0] 
 *               Byte2 is bit[15:8] 
 *               Byte3 is bit[23:16] 
 *               Byte4 is bit[31:24] 
 *               Byten is sent before Byten+1 (Least significant byte first 
 *               and least significant bit first) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_LONG_PACKET_PAYLOAD    0x10Cul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_SHORT_PACKET_HEADER
 *
 * @BRIEF        SHORT PACKET HEADER INFORMATION -Virtual channel 
 *               This register sets the 24-bit DATA_ID + Short Packet Data 
 *               Field + ECC (the virtual channel id can be different than 
 *               VC). 
 *               The ECC will be computed if ECC_TX_EN is set to 1. 
 *               DATA_ID is located at bit[7:0] 
 *               Short Packet Data field is located at bit[23:8] 
 *               ECC is located at bit[31:24] 
 *               (Least significant byte first and least significant bit 
 *               first) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_SHORT_PACKET_HEADER    0x110ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_IRQSTATUS
 *
 * @BRIEF        INTERRUPT STATUS REGISTER - Virtual channel 
 *               This register regroups all the events related to the virtual 
 *               channel. 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_IRQSTATUS              0x118ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_IRQENABLE
 *
 * @BRIEF        INTERRUPT ENABLE REGISTER - Virtual channel 
 *               This register regroups all the events related to virtual 
 *               channel. 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_IRQENABLE              0x11Cul

    /* 
     * List of register bitfields for component instance DSS_SS_FROM_L3__DSI_PROTOCOL_ENGINE2
     *
     */

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_REVISION__REV   
 *
 * @BRIEF        IP revision 
 *               [7:4] Major revision 
 *               [3:0] Minor revision - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_REVISION__REV        BITFIELD(7, 0)
#define DSI_PROTOCOL_ENGINE__DSI_REVISION__REV__POS   0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_SYSCONFIG__CLOCKACTIVITY   
 *
 * @BRIEF        Clocks activity during wake up mode period - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_SYSCONFIG__CLOCKACTIVITY BITFIELD(9, 8)
#define DSI_PROTOCOL_ENGINE__DSI_SYSCONFIG__CLOCKACTIVITY__POS 8

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_SYSCONFIG__SIDLEMODE   
 *
 * @BRIEF        Slave interface power management, Idle req/ack control - 
 *               (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_SYSCONFIG__SIDLEMODE BITFIELD(4, 3)
#define DSI_PROTOCOL_ENGINE__DSI_SYSCONFIG__SIDLEMODE__POS 3

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_SYSCONFIG__ENWAKEUP   
 *
 * @BRIEF        Wake-up mode enable bit - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_SYSCONFIG__ENWAKEUP  BITFIELD(2, 2)
#define DSI_PROTOCOL_ENGINE__DSI_SYSCONFIG__ENWAKEUP__POS 2

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_SYSCONFIG__SOFT_RESET   
 *
 * @BRIEF        Software reset. Set the bit to 1 to trigger a module reset. 
 *               The bit is automatically reset by the hw. During reads 
 *               return 0. 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_SYSCONFIG__SOFT_RESET BITFIELD(1, 1)
#define DSI_PROTOCOL_ENGINE__DSI_SYSCONFIG__SOFT_RESET__POS 1

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_SYSCONFIG__AUTO_IDLE   
 *
 * @BRIEF        Internal OCP gating strategy - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_SYSCONFIG__AUTO_IDLE BITFIELD(0, 0)
#define DSI_PROTOCOL_ENGINE__DSI_SYSCONFIG__AUTO_IDLE__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_SYSSTATUS__RESET_DONE   
 *
 * @BRIEF        Internal reset monitoring - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_SYSSTATUS__RESET_DONE BITFIELD(0, 0)
#define DSI_PROTOCOL_ENGINE__DSI_SYSSTATUS__RESET_DONE__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_IRQSTATUS__TE1_LINE_IRQ   
 *
 * @BRIEF        The VSYNC and corresponding HSYNC pulses defined in 
 *               DSI_TE_HSYNC_NUMBER for the line TE1 have been received by 
 *               the DSI protocol engine and have trigger the start of the 
 *               data transfer to the peripheral. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_IRQSTATUS__TE1_LINE_IRQ BITFIELD(22, 22)
#define DSI_PROTOCOL_ENGINE__DSI_IRQSTATUS__TE1_LINE_IRQ__POS 22

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_IRQSTATUS__TE0_LINE_IRQ   
 *
 * @BRIEF        The VSYNC and corresponding HSYNC pulses defined in 
 *               DSI_TE_HSYNC_NUMBER for the line TE0 have been received by 
 *               the DSI protocol engine and have trigger the start of the 
 *               data transfer to the peripheral. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_IRQSTATUS__TE0_LINE_IRQ BITFIELD(21, 21)
#define DSI_PROTOCOL_ENGINE__DSI_IRQSTATUS__TE0_LINE_IRQ__POS 21

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_IRQSTATUS__TA_TO_IRQ   
 *
 * @BRIEF        Turn-around Time out. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_IRQSTATUS__TA_TO_IRQ BITFIELD(20, 20)
#define DSI_PROTOCOL_ENGINE__DSI_IRQSTATUS__TA_TO_IRQ__POS 20

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_IRQSTATUS__LDO_POWER_GOOD_IRQ   
 *
 * @BRIEF        Transition of the status signal LDOPWRGOOD from the DSIPHY 
 *               indicating a state change for the supply VDDALDODSIPLL from 
 *               up to down or down to up. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_IRQSTATUS__LDO_POWER_GOOD_IRQ BITFIELD(19, 19)
#define DSI_PROTOCOL_ENGINE__DSI_IRQSTATUS__LDO_POWER_GOOD_IRQ__POS 19

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_IRQSTATUS__SYNC_LOST_IRQ   
 *
 * @BRIEF        Synchronization with Video port is lost (Video mode only) - 
 *               (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_IRQSTATUS__SYNC_LOST_IRQ BITFIELD(18, 18)
#define DSI_PROTOCOL_ENGINE__DSI_IRQSTATUS__SYNC_LOST_IRQ__POS 18

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_IRQSTATUS__ACK_TRIGGER_IRQ   
 *
 * @BRIEF        Acknowledge Trigger - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_IRQSTATUS__ACK_TRIGGER_IRQ BITFIELD(17, 17)
#define DSI_PROTOCOL_ENGINE__DSI_IRQSTATUS__ACK_TRIGGER_IRQ__POS 17

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_IRQSTATUS__TE_TRIGGER_IRQ   
 *
 * @BRIEF        Tearing Effect Trigger - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_IRQSTATUS__TE_TRIGGER_IRQ BITFIELD(16, 16)
#define DSI_PROTOCOL_ENGINE__DSI_IRQSTATUS__TE_TRIGGER_IRQ__POS 16

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_IRQSTATUS__LP_RX_TO_IRQ   
 *
 * @BRIEF        Interrupt for Low Power Rx Time out - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_IRQSTATUS__LP_RX_TO_IRQ BITFIELD(15, 15)
#define DSI_PROTOCOL_ENGINE__DSI_IRQSTATUS__LP_RX_TO_IRQ__POS 15

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_IRQSTATUS__HS_TX_TO_IRQ   
 *
 * @BRIEF        Interrupt for High Speed Tx Time out. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_IRQSTATUS__HS_TX_TO_IRQ BITFIELD(14, 14)
#define DSI_PROTOCOL_ENGINE__DSI_IRQSTATUS__HS_TX_TO_IRQ__POS 14

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_IRQSTATUS__COMPLEXIO_ERR_IRQ   
 *
 * @BRIEF        Error signaling from Complex IO: status of the complex IO 
 *               errors received from the complex IO(events are defined in 
 *               DSI_COMPLEXIO_IRQSTATUS).  - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_IRQSTATUS__COMPLEXIO_ERR_IRQ BITFIELD(10, 10)
#define DSI_PROTOCOL_ENGINE__DSI_IRQSTATUS__COMPLEXIO_ERR_IRQ__POS 10

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_IRQSTATUS__PLL_RECAL_IRQ   
 *
 * @BRIEF        PLL recal event (assertion of DSIRecal signal from the DSI 
 *               PLL Control module) - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_IRQSTATUS__PLL_RECAL_IRQ BITFIELD(9, 9)
#define DSI_PROTOCOL_ENGINE__DSI_IRQSTATUS__PLL_RECAL_IRQ__POS 9

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_IRQSTATUS__PLL_UNLOCK_IRQ   
 *
 * @BRIEF        PLL un-clock event (de-assertion of DSILock signal from the 
 *               DSI PLL Control module) - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_IRQSTATUS__PLL_UNLOCK_IRQ BITFIELD(8, 8)
#define DSI_PROTOCOL_ENGINE__DSI_IRQSTATUS__PLL_UNLOCK_IRQ__POS 8

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_IRQSTATUS__PLL_LOCK_IRQ   
 *
 * @BRIEF        PLL clock event (assertion of DSILock signal from the DSI 
 *               PLL Control module) - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_IRQSTATUS__PLL_LOCK_IRQ BITFIELD(7, 7)
#define DSI_PROTOCOL_ENGINE__DSI_IRQSTATUS__PLL_LOCK_IRQ__POS 7

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_IRQSTATUS__RESYNCHRONIZATION_IRQ   
 *
 * @BRIEF        Video mode resynchronization indicates to the software users 
 *               that the video port works but the configuration of the 
 *               timings for the display controller (DISPC) and for DSI 
 *               Protocol engine may need to be modified to avoid the 
 *               resynchronization to occur. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_IRQSTATUS__RESYNCHRONIZATION_IRQ BITFIELD(5, 5)
#define DSI_PROTOCOL_ENGINE__DSI_IRQSTATUS__RESYNCHRONIZATION_IRQ__POS 5

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_IRQSTATUS__WAKEUP_IRQ   
 *
 * @BRIEF        Wakeup - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_IRQSTATUS__WAKEUP_IRQ BITFIELD(4, 4)
#define DSI_PROTOCOL_ENGINE__DSI_IRQSTATUS__WAKEUP_IRQ__POS 4

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_IRQSTATUS__VIRTUAL_CHANNEL3_IRQ   
 *
 * @BRIEF        Virtual channel #3 - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_IRQSTATUS__VIRTUAL_CHANNEL3_IRQ BITFIELD(3, 3)
#define DSI_PROTOCOL_ENGINE__DSI_IRQSTATUS__VIRTUAL_CHANNEL3_IRQ__POS 3

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_IRQSTATUS__VIRTUAL_CHANNEL2_IRQ   
 *
 * @BRIEF        Virtual channel #2 - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_IRQSTATUS__VIRTUAL_CHANNEL2_IRQ BITFIELD(2, 2)
#define DSI_PROTOCOL_ENGINE__DSI_IRQSTATUS__VIRTUAL_CHANNEL2_IRQ__POS 2

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_IRQSTATUS__VIRTUAL_CHANNEL1_IRQ   
 *
 * @BRIEF        Virtual channel #1 - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_IRQSTATUS__VIRTUAL_CHANNEL1_IRQ BITFIELD(1, 1)
#define DSI_PROTOCOL_ENGINE__DSI_IRQSTATUS__VIRTUAL_CHANNEL1_IRQ__POS 1

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_IRQSTATUS__VIRTUAL_CHANNEL0_IRQ   
 *
 * @BRIEF        Virtual channel #0 - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_IRQSTATUS__VIRTUAL_CHANNEL0_IRQ BITFIELD(0, 0)
#define DSI_PROTOCOL_ENGINE__DSI_IRQSTATUS__VIRTUAL_CHANNEL0_IRQ__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_IRQENABLE__TE1_LINE_IRQ_EN   
 *
 * @BRIEF        The VSYNC and corresponding HSYNC pulses defined in 
 *               DSI_TE_HSYNC_NUMBER for the line TE1 have been received by 
 *               the DSI protocol engine and have trigger the start of the 
 *               data transfer to the peripheral. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_IRQENABLE__TE1_LINE_IRQ_EN BITFIELD(22, 22)
#define DSI_PROTOCOL_ENGINE__DSI_IRQENABLE__TE1_LINE_IRQ_EN__POS 22

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_IRQENABLE__TE0_LINE_IRQ_EN   
 *
 * @BRIEF        The VSYNC and corresponding HSYNC pulses defined in 
 *               DSI_TE_HSYNC_NUMBER for the line TE0 have been received by 
 *               the DSI protocol engine and have trigger the start of the 
 *               data transfer to the peripheral. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_IRQENABLE__TE0_LINE_IRQ_EN BITFIELD(21, 21)
#define DSI_PROTOCOL_ENGINE__DSI_IRQENABLE__TE0_LINE_IRQ_EN__POS 21

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_IRQENABLE__TA_TO_IRQ_EN   
 *
 * @BRIEF        Turn-around Time out. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_IRQENABLE__TA_TO_IRQ_EN BITFIELD(20, 20)
#define DSI_PROTOCOL_ENGINE__DSI_IRQENABLE__TA_TO_IRQ_EN__POS 20

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_IRQENABLE__LDO_POWER_GOOD_IRQ_EN   
 *
 * @BRIEF        Transition of the status signal LDOPWRGOOD from the DSIPHY 
 *               indicating a state change for the supply VDDALDODSIPLL from 
 *               up to down or down to up. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_IRQENABLE__LDO_POWER_GOOD_IRQ_EN BITFIELD(19, 19)
#define DSI_PROTOCOL_ENGINE__DSI_IRQENABLE__LDO_POWER_GOOD_IRQ_EN__POS 19

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_IRQENABLE__SYNC_LOST_IRQ_EN   
 *
 * @BRIEF        Synchronization with Video port is lost (Video mode only) - 
 *               (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_IRQENABLE__SYNC_LOST_IRQ_EN BITFIELD(18, 18)
#define DSI_PROTOCOL_ENGINE__DSI_IRQENABLE__SYNC_LOST_IRQ_EN__POS 18

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_IRQENABLE__ACK_TRIGGER_IRQ_EN   
 *
 * @BRIEF        Acknowledge trigger - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_IRQENABLE__ACK_TRIGGER_IRQ_EN BITFIELD(17, 17)
#define DSI_PROTOCOL_ENGINE__DSI_IRQENABLE__ACK_TRIGGER_IRQ_EN__POS 17

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_IRQENABLE__TE_TRIGGER_IRQ_EN   
 *
 * @BRIEF        Tearing Effect trigger - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_IRQENABLE__TE_TRIGGER_IRQ_EN BITFIELD(16, 16)
#define DSI_PROTOCOL_ENGINE__DSI_IRQENABLE__TE_TRIGGER_IRQ_EN__POS 16

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_IRQENABLE__LP_RX_TO_IRQ_EN   
 *
 * @BRIEF        Interrupt for Low Power Rx Time out. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_IRQENABLE__LP_RX_TO_IRQ_EN BITFIELD(15, 15)
#define DSI_PROTOCOL_ENGINE__DSI_IRQENABLE__LP_RX_TO_IRQ_EN__POS 15

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_IRQENABLE__HS_TX_TO_IRQ_EN   
 *
 * @BRIEF        Interrupt for High Speed Tx Time out. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_IRQENABLE__HS_TX_TO_IRQ_EN BITFIELD(14, 14)
#define DSI_PROTOCOL_ENGINE__DSI_IRQENABLE__HS_TX_TO_IRQ_EN__POS 14

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_IRQENABLE__PLL_RECAL_IRQ_EN   
 *
 * @BRIEF        PLL recal event (assertion of DSIRecal signal from the DSI 
 *               PLL Control module) - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_IRQENABLE__PLL_RECAL_IRQ_EN BITFIELD(9, 9)
#define DSI_PROTOCOL_ENGINE__DSI_IRQENABLE__PLL_RECAL_IRQ_EN__POS 9

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_IRQENABLE__PLL_UNLOCK_IRQ_EN   
 *
 * @BRIEF        PLL un-clock event (de-assertion of DSILock signal from the 
 *               DSI PLL Control module) - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_IRQENABLE__PLL_UNLOCK_IRQ_EN BITFIELD(8, 8)
#define DSI_PROTOCOL_ENGINE__DSI_IRQENABLE__PLL_UNLOCK_IRQ_EN__POS 8

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_IRQENABLE__PLL_LOCK_IRQ_EN   
 *
 * @BRIEF        PLL clock event (assertion of DSILock signal from the DSI 
 *               PLL Control module) - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_IRQENABLE__PLL_LOCK_IRQ_EN BITFIELD(7, 7)
#define DSI_PROTOCOL_ENGINE__DSI_IRQENABLE__PLL_LOCK_IRQ_EN__POS 7

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_IRQENABLE__RESYNCHRONIZATION_IRQ_EN   
 *
 * @BRIEF        Video mode resynchronization - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_IRQENABLE__RESYNCHRONIZATION_IRQ_EN BITFIELD(5, 5)
#define DSI_PROTOCOL_ENGINE__DSI_IRQENABLE__RESYNCHRONIZATION_IRQ_EN__POS 5

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_IRQENABLE__WAKEUP_IRQ_EN   
 *
 * @BRIEF        Wakeup - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_IRQENABLE__WAKEUP_IRQ_EN BITFIELD(4, 4)
#define DSI_PROTOCOL_ENGINE__DSI_IRQENABLE__WAKEUP_IRQ_EN__POS 4

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_CTRL__DISPC_UPDATE_SYNC   
 *
 * @BRIEF        Determines if the Dispc_Update_Sync signal from the display 
 *               controller is used. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_CTRL__DISPC_UPDATE_SYNC BITFIELD(24, 24)
#define DSI_PROTOCOL_ENGINE__DSI_CTRL__DISPC_UPDATE_SYNC__POS 24

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_CTRL__HSA_BLANKING_MODE   
 *
 * @BRIEF        Blanking mode - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_CTRL__HSA_BLANKING_MODE BITFIELD(23, 23)
#define DSI_PROTOCOL_ENGINE__DSI_CTRL__HSA_BLANKING_MODE__POS 23

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_CTRL__HBP_BLANKING_MODE   
 *
 * @BRIEF        Blanking mode - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_CTRL__HBP_BLANKING_MODE BITFIELD(22, 22)
#define DSI_PROTOCOL_ENGINE__DSI_CTRL__HBP_BLANKING_MODE__POS 22

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_CTRL__HFP_BLANKING_MODE   
 *
 * @BRIEF        Blanking mode - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_CTRL__HFP_BLANKING_MODE BITFIELD(21, 21)
#define DSI_PROTOCOL_ENGINE__DSI_CTRL__HFP_BLANKING_MODE__POS 21

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_CTRL__BLANKING_MODE   
 *
 * @BRIEF        Blanking mode - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_CTRL__BLANKING_MODE  BITFIELD(20, 20)
#define DSI_PROTOCOL_ENGINE__DSI_CTRL__BLANKING_MODE__POS 20

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_CTRL__EOT_ENABLE   
 *
 * @BRIEF        Enable EOT packets at the end of HS transmission. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_CTRL__EOT_ENABLE     BITFIELD(19, 19)
#define DSI_PROTOCOL_ENGINE__DSI_CTRL__EOT_ENABLE__POS 19

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_CTRL__VP_HSYNC_END   
 *
 * @BRIEF        HSYNC end pulse. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_CTRL__VP_HSYNC_END   BITFIELD(18, 18)
#define DSI_PROTOCOL_ENGINE__DSI_CTRL__VP_HSYNC_END__POS 18

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_CTRL__VP_HSYNC_START   
 *
 * @BRIEF        HSYNC start pulse. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_CTRL__VP_HSYNC_START BITFIELD(17, 17)
#define DSI_PROTOCOL_ENGINE__DSI_CTRL__VP_HSYNC_START__POS 17

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_CTRL__VP_VSYNC_END   
 *
 * @BRIEF        VSYNC end pulse. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_CTRL__VP_VSYNC_END   BITFIELD(16, 16)
#define DSI_PROTOCOL_ENGINE__DSI_CTRL__VP_VSYNC_END__POS 16

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_CTRL__VP_VSYNC_START   
 *
 * @BRIEF        VSYNC start pulse. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_CTRL__VP_VSYNC_START BITFIELD(15, 15)
#define DSI_PROTOCOL_ENGINE__DSI_CTRL__VP_VSYNC_START__POS 15

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_CTRL__TRIGGER_RESET_MODE   
 *
 * @BRIEF        Selection of the trigger reset mode - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_CTRL__TRIGGER_RESET_MODE BITFIELD(14, 14)
#define DSI_PROTOCOL_ENGINE__DSI_CTRL__TRIGGER_RESET_MODE__POS 14

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_CTRL__LINE_BUFFER   
 *
 * @BRIEF        Number of line buffers to be used while receiving data on 
 *               the video port. The valid values are from 0 to 
 *               DSI_GNQ.VP1_NB_LINE_BUFFER. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_CTRL__LINE_BUFFER    BITFIELD(13, 12)
#define DSI_PROTOCOL_ENGINE__DSI_CTRL__LINE_BUFFER__POS 12

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_CTRL__VP_VSYNC_POL   
 *
 * @BRIEF        VP vertical synchronization signal polarity - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_CTRL__VP_VSYNC_POL   BITFIELD(11, 11)
#define DSI_PROTOCOL_ENGINE__DSI_CTRL__VP_VSYNC_POL__POS 11

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_CTRL__VP_HSYNC_POL   
 *
 * @BRIEF        VP horizontal synchronization signal polarity - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_CTRL__VP_HSYNC_POL   BITFIELD(10, 10)
#define DSI_PROTOCOL_ENGINE__DSI_CTRL__VP_HSYNC_POL__POS 10

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_CTRL__VP_DE_POL   
 *
 * @BRIEF        VP data enable signal polarity - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_CTRL__VP_DE_POL      BITFIELD(9, 9)
#define DSI_PROTOCOL_ENGINE__DSI_CTRL__VP_DE_POL__POS 9

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_CTRL__VP_CLK_POL   
 *
 * @BRIEF        VP clock polarity - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_CTRL__VP_CLK_POL     BITFIELD(8, 8)
#define DSI_PROTOCOL_ENGINE__DSI_CTRL__VP_CLK_POL__POS 8

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_CTRL__VP_DATA_BUS_WIDTH   
 *
 * @BRIEF        Defines the size of the video port data bus - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_CTRL__VP_DATA_BUS_WIDTH BITFIELD(7, 6)
#define DSI_PROTOCOL_ENGINE__DSI_CTRL__VP_DATA_BUS_WIDTH__POS 6

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_CTRL__TRIGGER_RESET   
 *
 * @BRIEF        Send the reset trigger to the peripheral. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_CTRL__TRIGGER_RESET  BITFIELD(5, 5)
#define DSI_PROTOCOL_ENGINE__DSI_CTRL__TRIGGER_RESET__POS 5

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_CTRL__VP_CLK_RATIO   
 *
 * @BRIEF        The field indicates the clock ratio between VP.CLK and 
 *               VP.PCLK. The clock VP.PCLK is generated from VP.CLK. It is 
 *               divided down. 
 *               The information is only used when the video port is used to 
 *               provide data in command mode. In the case of video mode, it 
 *               is not used. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_CTRL__VP_CLK_RATIO   BITFIELD(4, 4)
#define DSI_PROTOCOL_ENGINE__DSI_CTRL__VP_CLK_RATIO__POS 4

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_CTRL__TX_FIFO_ARBITRATION   
 *
 * @BRIEF        Defines the arbitration scheme for granting the virtual 
 *               channel pending ready requests in the TX FIFO - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_CTRL__TX_FIFO_ARBITRATION BITFIELD(3, 3)
#define DSI_PROTOCOL_ENGINE__DSI_CTRL__TX_FIFO_ARBITRATION__POS 3

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_CTRL__ECC_RX_EN   
 *
 * @BRIEF        Enables the Error Correction Code check for the received 
 *               header (short and long packets for all virtual channel ids). 
 *               - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_CTRL__ECC_RX_EN      BITFIELD(2, 2)
#define DSI_PROTOCOL_ENGINE__DSI_CTRL__ECC_RX_EN__POS 2

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_CTRL__CS_RX_EN   
 *
 * @BRIEF        Enables the checksum check for the received payload (long 
 *               packet only for all virtual channel ids). - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_CTRL__CS_RX_EN       BITFIELD(1, 1)
#define DSI_PROTOCOL_ENGINE__DSI_CTRL__CS_RX_EN__POS  1

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_CTRL__IF_EN   
 *
 * @BRIEF        Enables the module. When the module is disabled the signals 
 *               from the complex IO are gated (no updates of the interrupt 
 *               status register). 
 *               It is not possible to change the bit-fields in the register 
 *               DSI_CTRL except IF_EN when it is enabled. All the other 
 *               registers can be changed except the ones that require 
 *               DSI_VC_CTRL.VC_EN to be equal to 0 to be modified. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_CTRL__IF_EN          BITFIELD(0, 0)
#define DSI_PROTOCOL_ENGINE__DSI_CTRL__IF_EN__POS     0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_GNQ__NB_VIDEO_PORTS   
 *
 * @BRIEF        Number of video ports - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_GNQ__NB_VIDEO_PORTS  BITFIELD(24, 24)
#define DSI_PROTOCOL_ENGINE__DSI_GNQ__NB_VIDEO_PORTS__POS 24

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_GNQ__VP2_NB_LINE_BUFFER   
 *
 * @BRIEF        Determines the number of video buffer lines associated to 
 *               video port #2. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_GNQ__VP2_NB_LINE_BUFFER BITFIELD(23, 22)
#define DSI_PROTOCOL_ENGINE__DSI_GNQ__VP2_NB_LINE_BUFFER__POS 22

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_GNQ__VP2_LINE_BUFFER_SIZE   
 *
 * @BRIEF        Determines the video line buffer size associated to video 
 *               port #2 . - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_GNQ__VP2_LINE_BUFFER_SIZE BITFIELD(20, 18)
#define DSI_PROTOCOL_ENGINE__DSI_GNQ__VP2_LINE_BUFFER_SIZE__POS 18

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_GNQ__VP1_NB_LINE_BUFFER   
 *
 * @BRIEF        Determines the number of video buffer lines associated to 
 *               video port #1. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_GNQ__VP1_NB_LINE_BUFFER BITFIELD(17, 16)
#define DSI_PROTOCOL_ENGINE__DSI_GNQ__VP1_NB_LINE_BUFFER__POS 16

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_GNQ__VP1_LINE_BUFFER_SIZE   
 *
 * @BRIEF        Determines the video line buffer size associated to video 
 *               port #1 . - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_GNQ__VP1_LINE_BUFFER_SIZE BITFIELD(14, 12)
#define DSI_PROTOCOL_ENGINE__DSI_GNQ__VP1_LINE_BUFFER_SIZE__POS 12

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_GNQ__NB_DATA_LANES   
 *
 * @BRIEF        Determines the number of data lanes supported by the DSI 
 *               protocol engine . - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_GNQ__NB_DATA_LANES   BITFIELD(11, 9)
#define DSI_PROTOCOL_ENGINE__DSI_GNQ__NB_DATA_LANES__POS 9

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_GNQ__NB_DMA_REQUEST   
 *
 * @BRIEF        Determines the number of DMA_REQ signals.  - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_GNQ__NB_DMA_REQUEST  BITFIELD(8, 6)
#define DSI_PROTOCOL_ENGINE__DSI_GNQ__NB_DMA_REQUEST__POS 6

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_GNQ__RX_FIFODEPTH   
 *
 * @BRIEF        Determines the data RX FIFO depth (32-bit words) on the 
 *               slave port. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_GNQ__RX_FIFODEPTH    BITFIELD(5, 3)
#define DSI_PROTOCOL_ENGINE__DSI_GNQ__RX_FIFODEPTH__POS 3

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_GNQ__TX_FIFODEPTH   
 *
 * @BRIEF        Determines the data TX FIFO depth (33-bit words) on the 
 *               slave port. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_GNQ__TX_FIFODEPTH    BITFIELD(2, 0)
#define DSI_PROTOCOL_ENGINE__DSI_GNQ__TX_FIFODEPTH__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG1__SHADOWING   
 *
 * @BRIEF        Shadowing configuration. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG1__SHADOWING BITFIELD(31, 31)
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG1__SHADOWING__POS 31

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG1__GOBIT   
 *
 * @BRIEF        Allows the synchronized update of the shadow registers when 
 *               the signal DISPCUpdateSync is active. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG1__GOBIT BITFIELD(30, 30)
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG1__GOBIT__POS 30

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG1__RESET_DONE   
 *
 * @BRIEF        Internal reset monitoring of the power domain using the PPI 
 *               byte clock from the complex IO - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG1__RESET_DONE BITFIELD(29, 29)
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG1__RESET_DONE__POS 29

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG1__PWR_CMD   
 *
 * @BRIEF        Command for power control of the complex IO - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG1__PWR_CMD BITFIELD(28, 27)
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG1__PWR_CMD__POS 27

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG1__PWR_STATUS   
 *
 * @BRIEF        Status of the power control of the complex IO - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG1__PWR_STATUS BITFIELD(26, 25)
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG1__PWR_STATUS__POS 25

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG1__LDO_POWER_GOOD_STATE   
 *
 * @BRIEF        Indicates the state of the signal LDOPWRGOOD. VDDALDODSIPLL: 
 *               1.2V power supply for the PLL. The voltage is supplied by 
 *               the internal or external LDO. The interrupt 
 *               LDO_POWER_GOOD_IRQ is generated when a transition is 
 *               detected on the signal LDOPWRGOOD from the DSIPHY. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG1__LDO_POWER_GOOD_STATE BITFIELD(21, 21)
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG1__LDO_POWER_GOOD_STATE__POS 21

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG1__USE_LDO_EXTERNAL   
 *
 * @BRIEF        Select the external LDO for the DSIPHY.  - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG1__USE_LDO_EXTERNAL BITFIELD(20, 20)
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG1__USE_LDO_EXTERNAL__POS 20

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG1__DATA2_POL   
 *
 * @BRIEF        +/- differential pin order of DATA lane 2. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG1__DATA2_POL BITFIELD(11, 11)
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG1__DATA2_POL__POS 11

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG1__DATA2_POSITION   
 *
 * @BRIEF        Position and order of the DATA  lane 2. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG1__DATA2_POSITION BITFIELD(10, 8)
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG1__DATA2_POSITION__POS 8

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG1__DATA1_POL   
 *
 * @BRIEF        +/- pin differential pin order of DATA lane 1 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG1__DATA1_POL BITFIELD(7, 7)
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG1__DATA1_POL__POS 7

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG1__DATA1_POSITION   
 *
 * @BRIEF        Position and order of the DATA  lane 1. The data lane 1 is 
 *               always present. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG1__DATA1_POSITION BITFIELD(6, 4)
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG1__DATA1_POSITION__POS 4

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG1__CLOCK_POL   
 *
 * @BRIEF        +/- differential pin order of CLOCK lane. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG1__CLOCK_POL BITFIELD(3, 3)
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG1__CLOCK_POL__POS 3

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG1__CLOCK_POSITION   
 *
 * @BRIEF        Position and order of the CLOCK lane. 0, 5, 6 and 7 are 
 *               reserved. The clock lane is always present but can not be at 
 *               the position 5 even if the COMPLEX IO consists of 5 lanes. - 
 *               (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG1__CLOCK_POSITION BITFIELD(2, 0)
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG1__CLOCK_POSITION__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQSTATUS__ULPSACTIVENOT_ALL1_IRQ   
 *
 * @BRIEF        All the ULPSActiveNOT signals corresponding to the lanes 
 *               with TXULPSExit being high are high. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQSTATUS__ULPSACTIVENOT_ALL1_IRQ BITFIELD(31, 31)
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQSTATUS__ULPSACTIVENOT_ALL1_IRQ__POS 31

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQSTATUS__ULPSACTIVENOT_ALL0_IRQ   
 *
 * @BRIEF        All signals ULPSActiveNOT are 0 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQSTATUS__ULPSACTIVENOT_ALL0_IRQ BITFIELD(30, 30)
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQSTATUS__ULPSACTIVENOT_ALL0_IRQ__POS 30

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQSTATUS__ERRCONTENTIONLP1_3_IRQ   
 *
 * @BRIEF        Contention LP1 error for lane #3 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQSTATUS__ERRCONTENTIONLP1_3_IRQ BITFIELD(25, 25)
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQSTATUS__ERRCONTENTIONLP1_3_IRQ__POS 25

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQSTATUS__ERRCONTENTIONLP0_3_IRQ   
 *
 * @BRIEF        Contention LP0 error for lane #3 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQSTATUS__ERRCONTENTIONLP0_3_IRQ BITFIELD(24, 24)
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQSTATUS__ERRCONTENTIONLP0_3_IRQ__POS 24

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQSTATUS__ERRCONTENTIONLP1_2_IRQ   
 *
 * @BRIEF        Contention LP1 error for lane #2 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQSTATUS__ERRCONTENTIONLP1_2_IRQ BITFIELD(23, 23)
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQSTATUS__ERRCONTENTIONLP1_2_IRQ__POS 23

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQSTATUS__ERRCONTENTIONLP0_2_IRQ   
 *
 * @BRIEF        Contention LP0 error for lane #2 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQSTATUS__ERRCONTENTIONLP0_2_IRQ BITFIELD(22, 22)
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQSTATUS__ERRCONTENTIONLP0_2_IRQ__POS 22

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQSTATUS__ERRCONTENTIONLP1_1_IRQ   
 *
 * @BRIEF        Contention LP1 error for lane #1 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQSTATUS__ERRCONTENTIONLP1_1_IRQ BITFIELD(21, 21)
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQSTATUS__ERRCONTENTIONLP1_1_IRQ__POS 21

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQSTATUS__ERRCONTENTIONLP0_1_IRQ   
 *
 * @BRIEF        Contention LP0 error for lane #1 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQSTATUS__ERRCONTENTIONLP0_1_IRQ BITFIELD(20, 20)
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQSTATUS__ERRCONTENTIONLP0_1_IRQ__POS 20

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQSTATUS__STATEULPS3_IRQ   
 *
 * @BRIEF        Lane #3 in Ultra Low Power State - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQSTATUS__STATEULPS3_IRQ BITFIELD(17, 17)
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQSTATUS__STATEULPS3_IRQ__POS 17

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQSTATUS__STATEULPS2_IRQ   
 *
 * @BRIEF        Lane #2 in Ultra Low Power State - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQSTATUS__STATEULPS2_IRQ BITFIELD(16, 16)
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQSTATUS__STATEULPS2_IRQ__POS 16

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQSTATUS__STATEULPS1_IRQ   
 *
 * @BRIEF        Lane #1 in Ultra Low Power State - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQSTATUS__STATEULPS1_IRQ BITFIELD(15, 15)
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQSTATUS__STATEULPS1_IRQ__POS 15

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQSTATUS__ERRCONTROL3_IRQ   
 *
 * @BRIEF        Control error for lane #3 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQSTATUS__ERRCONTROL3_IRQ BITFIELD(12, 12)
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQSTATUS__ERRCONTROL3_IRQ__POS 12

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQSTATUS__ERRCONTROL2_IRQ   
 *
 * @BRIEF        Control error for lane #2 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQSTATUS__ERRCONTROL2_IRQ BITFIELD(11, 11)
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQSTATUS__ERRCONTROL2_IRQ__POS 11

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQSTATUS__ERRCONTROL1_IRQ   
 *
 * @BRIEF        Control error for lane #1 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQSTATUS__ERRCONTROL1_IRQ BITFIELD(10, 10)
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQSTATUS__ERRCONTROL1_IRQ__POS 10

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQSTATUS__ERRESC3_IRQ   
 *
 * @BRIEF        Escape entry error for lane #3 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQSTATUS__ERRESC3_IRQ BITFIELD(7, 7)
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQSTATUS__ERRESC3_IRQ__POS 7

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQSTATUS__ERRESC2_IRQ   
 *
 * @BRIEF        Escape entry error for lane #2 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQSTATUS__ERRESC2_IRQ BITFIELD(6, 6)
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQSTATUS__ERRESC2_IRQ__POS 6

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQSTATUS__ERRESC1_IRQ   
 *
 * @BRIEF        Escape entry error for lane #1 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQSTATUS__ERRESC1_IRQ BITFIELD(5, 5)
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQSTATUS__ERRESC1_IRQ__POS 5

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQSTATUS__ERRSYNCESC3_IRQ   
 *
 * @BRIEF        Low power Data transmission synchronization error for lane 
 *               #3 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQSTATUS__ERRSYNCESC3_IRQ BITFIELD(2, 2)
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQSTATUS__ERRSYNCESC3_IRQ__POS 2

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQSTATUS__ERRSYNCESC2_IRQ   
 *
 * @BRIEF        Low power Data transmission synchronization error for lane 
 *               #2 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQSTATUS__ERRSYNCESC2_IRQ BITFIELD(1, 1)
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQSTATUS__ERRSYNCESC2_IRQ__POS 1

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQSTATUS__ERRSYNCESC1_IRQ   
 *
 * @BRIEF        Low power Data transmission synchronization error for lane 
 *               #1 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQSTATUS__ERRSYNCESC1_IRQ BITFIELD(0, 0)
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQSTATUS__ERRSYNCESC1_IRQ__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQENABLE__ULPSACTIVENOT_ALL1_IRQ_EN   
 *
 * @BRIEF        All the ULPSActiveNOT signals corresponding to the lanes 
 *               with TXULPSExit being high are high. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQENABLE__ULPSACTIVENOT_ALL1_IRQ_EN BITFIELD(31, 31)
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQENABLE__ULPSACTIVENOT_ALL1_IRQ_EN__POS 31

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQENABLE__ULPSACTIVENOT_ALL0_IRQ_EN   
 *
 * @BRIEF        All signals ULPSActiveNOT are 0 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQENABLE__ULPSACTIVENOT_ALL0_IRQ_EN BITFIELD(30, 30)
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQENABLE__ULPSACTIVENOT_ALL0_IRQ_EN__POS 30

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQENABLE__ERRCONTENTIONLP1_3_IRQ_EN   
 *
 * @BRIEF        Contention LP1 error for lane #3 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQENABLE__ERRCONTENTIONLP1_3_IRQ_EN BITFIELD(25, 25)
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQENABLE__ERRCONTENTIONLP1_3_IRQ_EN__POS 25

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQENABLE__ERRCONTENTIONLP0_3_IRQ_EN   
 *
 * @BRIEF        Contention LP0 error for lane #3 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQENABLE__ERRCONTENTIONLP0_3_IRQ_EN BITFIELD(24, 24)
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQENABLE__ERRCONTENTIONLP0_3_IRQ_EN__POS 24

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQENABLE__ERRCONTENTIONLP1_2_IRQ_EN   
 *
 * @BRIEF        Contention LP1 error for lane #2 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQENABLE__ERRCONTENTIONLP1_2_IRQ_EN BITFIELD(23, 23)
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQENABLE__ERRCONTENTIONLP1_2_IRQ_EN__POS 23

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQENABLE__ERRCONTENTIONLP0_2_IRQ_EN   
 *
 * @BRIEF        Contention LP0 error for lane #2 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQENABLE__ERRCONTENTIONLP0_2_IRQ_EN BITFIELD(22, 22)
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQENABLE__ERRCONTENTIONLP0_2_IRQ_EN__POS 22

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQENABLE__ERRCONTENTIONLP1_1_IRQ_EN   
 *
 * @BRIEF        Contention LP1 error for lane #1 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQENABLE__ERRCONTENTIONLP1_1_IRQ_EN BITFIELD(21, 21)
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQENABLE__ERRCONTENTIONLP1_1_IRQ_EN__POS 21

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQENABLE__ERRCONTENTIONLP0_1_IRQ_EN   
 *
 * @BRIEF        Contention LP0 error for lane #1 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQENABLE__ERRCONTENTIONLP0_1_IRQ_EN BITFIELD(20, 20)
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQENABLE__ERRCONTENTIONLP0_1_IRQ_EN__POS 20

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQENABLE__STATEULPS3_IRQ_EN   
 *
 * @BRIEF        Lane #3 in Ultra Low Power State - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQENABLE__STATEULPS3_IRQ_EN BITFIELD(17, 17)
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQENABLE__STATEULPS3_IRQ_EN__POS 17

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQENABLE__STATEULPS2_IRQ_EN   
 *
 * @BRIEF        Lane #2 in Ultra Low Power State - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQENABLE__STATEULPS2_IRQ_EN BITFIELD(16, 16)
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQENABLE__STATEULPS2_IRQ_EN__POS 16

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQENABLE__STATEULPS1_IRQ_EN   
 *
 * @BRIEF        Lane #1 in Ultra Low Power State - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQENABLE__STATEULPS1_IRQ_EN BITFIELD(15, 15)
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQENABLE__STATEULPS1_IRQ_EN__POS 15

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQENABLE__ERRCONTROL3_IRQ_EN   
 *
 * @BRIEF        Control error for lane #3 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQENABLE__ERRCONTROL3_IRQ_EN BITFIELD(12, 12)
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQENABLE__ERRCONTROL3_IRQ_EN__POS 12

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQENABLE__ERRCONTROL2_IRQ_EN   
 *
 * @BRIEF        Control error for lane #2 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQENABLE__ERRCONTROL2_IRQ_EN BITFIELD(11, 11)
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQENABLE__ERRCONTROL2_IRQ_EN__POS 11

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQENABLE__ERRCONTROL1_IRQ_EN   
 *
 * @BRIEF        Control error for lane #1 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQENABLE__ERRCONTROL1_IRQ_EN BITFIELD(10, 10)
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQENABLE__ERRCONTROL1_IRQ_EN__POS 10

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQENABLE__ERRESC3_IRQ_EN   
 *
 * @BRIEF        Escape entry error for lane #3 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQENABLE__ERRESC3_IRQ_EN BITFIELD(7, 7)
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQENABLE__ERRESC3_IRQ_EN__POS 7

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQENABLE__ERRESC2_IRQ_EN   
 *
 * @BRIEF        Escape entry error for lane #2 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQENABLE__ERRESC2_IRQ_EN BITFIELD(6, 6)
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQENABLE__ERRESC2_IRQ_EN__POS 6

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQENABLE__ERRESC1_IRQ_EN   
 *
 * @BRIEF        Escape entry error for lane #1 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQENABLE__ERRESC1_IRQ_EN BITFIELD(5, 5)
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQENABLE__ERRESC1_IRQ_EN__POS 5

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQENABLE__ERRSYNCSESC3_IRQ_EN   
 *
 * @BRIEF        Low power Data transmission synchronization error for lane 
 *               #3 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQENABLE__ERRSYNCSESC3_IRQ_EN BITFIELD(2, 2)
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQENABLE__ERRSYNCSESC3_IRQ_EN__POS 2

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQENABLE__ERRSYNCSESC2_IRQ_EN   
 *
 * @BRIEF        Low power Data transmission synchronization error for lane 
 *               #2 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQENABLE__ERRSYNCSESC2_IRQ_EN BITFIELD(1, 1)
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQENABLE__ERRSYNCSESC2_IRQ_EN__POS 1

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQENABLE__ERRSYNCSESC1_IRQ_EN   
 *
 * @BRIEF        Low power Data transmission synchronization error  for lane 
 *               #1 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQENABLE__ERRSYNCSESC1_IRQ_EN BITFIELD(0, 0)
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQENABLE__ERRSYNCSESC1_IRQ_EN__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_CLK_CTRL__PLL_PWR_CMD   
 *
 * @BRIEF        Command for power control of the DSI PLL Control module - 
 *               (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_CLK_CTRL__PLL_PWR_CMD BITFIELD(31, 30)
#define DSI_PROTOCOL_ENGINE__DSI_CLK_CTRL__PLL_PWR_CMD__POS 30

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_CLK_CTRL__PLL_PWR_STATUS   
 *
 * @BRIEF        Status of the power control of the DSI PLL Control module - 
 *               (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_CLK_CTRL__PLL_PWR_STATUS BITFIELD(29, 28)
#define DSI_PROTOCOL_ENGINE__DSI_CLK_CTRL__PLL_PWR_STATUS__POS 28

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_CLK_CTRL__LP_RX_SYNCHRO_ENABLE   
 *
 * @BRIEF        Defines if the functional is higher or lower than 30 MHz. 
 *               The information is used to define synchronization to be used 
 *               for RxValidEsc. 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_CLK_CTRL__LP_RX_SYNCHRO_ENABLE BITFIELD(21, 21)
#define DSI_PROTOCOL_ENGINE__DSI_CLK_CTRL__LP_RX_SYNCHRO_ENABLE__POS 21

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_CLK_CTRL__LP_CLK_ENABLE   
 *
 * @BRIEF        Controls the gating of the TXCLKESC clock. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_CLK_CTRL__LP_CLK_ENABLE BITFIELD(20, 20)
#define DSI_PROTOCOL_ENGINE__DSI_CLK_CTRL__LP_CLK_ENABLE__POS 20

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_CLK_CTRL__HS_MANUAL_STOP_CTRL   
 *
 * @BRIEF        In case HS_AUTO_STOP_ENABLE=0, the bit-field allows manual 
 *               control of the assertion/de-assertion of the signal 
 *               DSIStopClk by the user. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_CLK_CTRL__HS_MANUAL_STOP_CTRL BITFIELD(19, 19)
#define DSI_PROTOCOL_ENGINE__DSI_CLK_CTRL__HS_MANUAL_STOP_CTRL__POS 19

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_CLK_CTRL__HS_AUTO_STOP_ENABLE   
 *
 * @BRIEF        Enables the automatic assertion/de-assertion of DSIStopClk 
 *               signal. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_CLK_CTRL__HS_AUTO_STOP_ENABLE BITFIELD(18, 18)
#define DSI_PROTOCOL_ENGINE__DSI_CLK_CTRL__HS_AUTO_STOP_ENABLE__POS 18

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_CLK_CTRL__LP_CLK_NULL_PACKET_SIZE   
 *
 * @BRIEF        Indicates the size of LP NULL Packets to be sent 
 *               automatically when after the last LP packet transfer. It is 
 *               used by the receiver to drain its internal pipeline. The 
 *               valid values are from 0 to 3 bytes for the payload size. - 
 *               (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_CLK_CTRL__LP_CLK_NULL_PACKET_SIZE BITFIELD(17, 16)
#define DSI_PROTOCOL_ENGINE__DSI_CLK_CTRL__LP_CLK_NULL_PACKET_SIZE__POS 16

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_CLK_CTRL__LP_CLK_NULL_PACKET_ENABLE   
 *
 * @BRIEF        Enables the generation of NULL packet in low speed. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_CLK_CTRL__LP_CLK_NULL_PACKET_ENABLE BITFIELD(15, 15)
#define DSI_PROTOCOL_ENGINE__DSI_CLK_CTRL__LP_CLK_NULL_PACKET_ENABLE__POS 15

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_CLK_CTRL__CIO_CLK_ICG   
 *
 * @BRIEF        Gates SCPClk clock provided to DSI-PHY and PLL-CTRL module. 
 *               - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_CLK_CTRL__CIO_CLK_ICG BITFIELD(14, 14)
#define DSI_PROTOCOL_ENGINE__DSI_CLK_CTRL__CIO_CLK_ICG__POS 14

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_CLK_CTRL__DDR_CLK_ALWAYS_ON   
 *
 * @BRIEF        Defines if the DDR clock is also sent when there is no HS 
 *               packets sent to the peripheral (low power mode). So 
 *               TXRequest for the clock lane is not de-asserted.  - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_CLK_CTRL__DDR_CLK_ALWAYS_ON BITFIELD(13, 13)
#define DSI_PROTOCOL_ENGINE__DSI_CLK_CTRL__DDR_CLK_ALWAYS_ON__POS 13

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_CLK_CTRL__LP_CLK_DIVISOR   
 *
 * @BRIEF        Defines the ratio to be used for the generation of the Low 
 *               Power mode clock from DSI functional clock. 
 *               The supported values are from 1 to 8191(the value 0 is 
 *               invalid). The output frequency shall be in the range between 
 *               20 MHz and 32 kHz. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_CLK_CTRL__LP_CLK_DIVISOR BITFIELD(12, 0)
#define DSI_PROTOCOL_ENGINE__DSI_CLK_CTRL__LP_CLK_DIVISOR__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_TIMING1__TA_TO   
 *
 * @BRIEF        Enables the turn-around timer - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_TIMING1__TA_TO       BITFIELD(31, 31)
#define DSI_PROTOCOL_ENGINE__DSI_TIMING1__TA_TO__POS  31

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_TIMING1__TA_TO_X16   
 *
 * @BRIEF        Multiplication factor for the number of DSI_CLK functional 
 *               clock cycles defined in TA_TO_COUNTER bit-field - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_TIMING1__TA_TO_X16   BITFIELD(30, 30)
#define DSI_PROTOCOL_ENGINE__DSI_TIMING1__TA_TO_X16__POS 30

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_TIMING1__TA_TO_X8   
 *
 * @BRIEF        Multiplication factor for the number of DSI_CLK functional 
 *               clock cycles defined in TA_TO_COUNTER bit-field - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_TIMING1__TA_TO_X8    BITFIELD(29, 29)
#define DSI_PROTOCOL_ENGINE__DSI_TIMING1__TA_TO_X8__POS 29

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_TIMING1__TA_TO_COUNTER   
 *
 * @BRIEF        Turn around counter. It indicates the number of DSI_CLK 
 *               function clock  to wait for the change of the Direction PPI 
 *               signal according to the TurnRequest signal 
 *               The value is from 0 to 8191. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_TIMING1__TA_TO_COUNTER BITFIELD(28, 16)
#define DSI_PROTOCOL_ENGINE__DSI_TIMING1__TA_TO_COUNTER__POS 16

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_TIMING1__FORCE_TX_STOP_MODE_IO   
 *
 * @BRIEF        Control of ForceTxStopMode signal - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_TIMING1__FORCE_TX_STOP_MODE_IO BITFIELD(15, 15)
#define DSI_PROTOCOL_ENGINE__DSI_TIMING1__FORCE_TX_STOP_MODE_IO__POS 15

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_TIMING1__STOP_STATE_X16_IO   
 *
 * @BRIEF        Multiplication factor for the number of DSI_CLK functional 
 *               clock cycles defined in STOP_STATE_COUNTER_IO bit-field - 
 *               (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_TIMING1__STOP_STATE_X16_IO BITFIELD(14, 14)
#define DSI_PROTOCOL_ENGINE__DSI_TIMING1__STOP_STATE_X16_IO__POS 14

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_TIMING1__STOP_STATE_X4_IO   
 *
 * @BRIEF        Multiplication factor for the number of DSI_CLK functional 
 *               clock cycles defined in STOP_STATE_COUNTER_IO bit-field - 
 *               (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_TIMING1__STOP_STATE_X4_IO BITFIELD(13, 13)
#define DSI_PROTOCOL_ENGINE__DSI_TIMING1__STOP_STATE_X4_IO__POS 13

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_TIMING1__STOP_STATE_COUNTER_IO   
 *
 * @BRIEF        Stop state counter. It indicates the number of DSI_CLK 
 *               function clock to assert ForceTXStopMode signal. The value 
 *               is from 0 to 8191. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_TIMING1__STOP_STATE_COUNTER_IO BITFIELD(12, 0)
#define DSI_PROTOCOL_ENGINE__DSI_TIMING1__STOP_STATE_COUNTER_IO__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_TIMING2__HS_TX_TO   
 *
 * @BRIEF        Enables the HS TX timer. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_TIMING2__HS_TX_TO    BITFIELD(31, 31)
#define DSI_PROTOCOL_ENGINE__DSI_TIMING2__HS_TX_TO__POS 31

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_TIMING2__HS_TX_TO_X64   
 *
 * @BRIEF        Multiplication factor for the number of BYTE_CLK functional 
 *               clock cycles defined in HS_TX_COUNTER bit-field - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_TIMING2__HS_TX_TO_X64 BITFIELD(30, 30)
#define DSI_PROTOCOL_ENGINE__DSI_TIMING2__HS_TX_TO_X64__POS 30

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_TIMING2__HS_TX_TO_X16   
 *
 * @BRIEF        Multiplication factor for the number of BYTE_CLK functional 
 *               clock cycles defined in HS_TX_COUNTER bit - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_TIMING2__HS_TX_TO_X16 BITFIELD(29, 29)
#define DSI_PROTOCOL_ENGINE__DSI_TIMING2__HS_TX_TO_X16__POS 29

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_TIMING2__HS_TX_TO_COUNTER   
 *
 * @BRIEF        HS_TX_TIMER counter. It indicates the number of BYTE_CLK 
 *               function clock for the HS TX timer. 
 *               The value is from 0 to 8191. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_TIMING2__HS_TX_TO_COUNTER BITFIELD(28, 16)
#define DSI_PROTOCOL_ENGINE__DSI_TIMING2__HS_TX_TO_COUNTER__POS 16

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_TIMING2__LP_RX_TO   
 *
 * @BRIEF        Enables the LP RX timer. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_TIMING2__LP_RX_TO    BITFIELD(15, 15)
#define DSI_PROTOCOL_ENGINE__DSI_TIMING2__LP_RX_TO__POS 15

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_TIMING2__LP_RX_TO_X16   
 *
 * @BRIEF        Multiplication factor for the number of DSI_CLK functional 
 *               clock cycles defined in LP_RX_COUNTER bit-field - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_TIMING2__LP_RX_TO_X16 BITFIELD(14, 14)
#define DSI_PROTOCOL_ENGINE__DSI_TIMING2__LP_RX_TO_X16__POS 14

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_TIMING2__LP_RX_TO_X4   
 *
 * @BRIEF        Multiplication factor for the number of DSI_CLK functional 
 *               clock cycles defined in LP_RX_COUNTER bit - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_TIMING2__LP_RX_TO_X4 BITFIELD(13, 13)
#define DSI_PROTOCOL_ENGINE__DSI_TIMING2__LP_RX_TO_X4__POS 13

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_TIMING2__LP_RX_TO_COUNTER   
 *
 * @BRIEF        LP_RX_TIMER counter. It indicates the number of DSI_CLK 
 *               function clock  for the LP RX timer. 
 *               The value is from 0 to 8191. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_TIMING2__LP_RX_TO_COUNTER BITFIELD(12, 0)
#define DSI_PROTOCOL_ENGINE__DSI_TIMING2__LP_RX_TO_COUNTER__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VM_TIMING1__HSA   
 *
 * @BRIEF        Defines the horizontal Sync active period  used in video 
 *               mode in number of byte clock cycles (PPI clock) 
 *               The supported values are from 0 to 255. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VM_TIMING1__HSA      BITFIELD(31, 24)
#define DSI_PROTOCOL_ENGINE__DSI_VM_TIMING1__HSA__POS 24

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VM_TIMING1__HFP   
 *
 * @BRIEF        Defines the horizontal front porch used in video mode in 
 *               number of byte clock cycles (PPI clock) 
 *               The supported values are from 0 to 4095  - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VM_TIMING1__HFP      BITFIELD(23, 12)
#define DSI_PROTOCOL_ENGINE__DSI_VM_TIMING1__HFP__POS 12

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VM_TIMING1__HBP   
 *
 * @BRIEF        Defines the horizontal back porch used in video mode in 
 *               number of byte clock cycles (PPI clock) 
 *               The supported values are from 0 to 4095 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VM_TIMING1__HBP      BITFIELD(11, 0)
#define DSI_PROTOCOL_ENGINE__DSI_VM_TIMING1__HBP__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VM_TIMING2__WINDOW_SYNC   
 *
 * @BRIEF        Number of BYTE clock cycles for the synchronization window. 
 *               An interrupt for synchronization lost is generated when the 
 *               received synchornization on video port is not inside the 
 *               window. DSI does not change its own timings if the synch is 
 *               inside the window. The valid values are from 4 to 15. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VM_TIMING2__WINDOW_SYNC BITFIELD(27, 24)
#define DSI_PROTOCOL_ENGINE__DSI_VM_TIMING2__WINDOW_SYNC__POS 24

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VM_TIMING2__VSA   
 *
 * @BRIEF        Defines the vertical Sync active period  used in video mode 
 *               in number of lines. 
 *               The supported values are from 0 to 255  It is used to 
 *               generate the short packet for End of Vertical 
 *               synchronization. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VM_TIMING2__VSA      BITFIELD(23, 16)
#define DSI_PROTOCOL_ENGINE__DSI_VM_TIMING2__VSA__POS 16

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VM_TIMING2__VFP   
 *
 * @BRIEF        Defines the vertical front porch used in video mode in 
 *               number of lines. 
 *               The supported values are from 0 to 255  - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VM_TIMING2__VFP      BITFIELD(15, 8)
#define DSI_PROTOCOL_ENGINE__DSI_VM_TIMING2__VFP__POS 8

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VM_TIMING2__VBP   
 *
 * @BRIEF        Defines the vertical back porch used in video mode in number 
 *               of lines. 
 *               The supported values are from 0 to 255  - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VM_TIMING2__VBP      BITFIELD(7, 0)
#define DSI_PROTOCOL_ENGINE__DSI_VM_TIMING2__VBP__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VM_TIMING3__TL   
 *
 * @BRIEF        Defines the number of length of the line in video mode in 
 *               number of byte clock cycles (PPI clock) 
 *               The supported values are from 0 to 8192. The values from 
 *               8193 to 65535 are not supported. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VM_TIMING3__TL       BITFIELD(31, 16)
#define DSI_PROTOCOL_ENGINE__DSI_VM_TIMING3__TL__POS  16

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VM_TIMING3__VACT   
 *
 * @BRIEF        Defines the number of active lines used in video mode.  
 *               The supported values are from 0 to 65535  - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VM_TIMING3__VACT     BITFIELD(15, 0)
#define DSI_PROTOCOL_ENGINE__DSI_VM_TIMING3__VACT__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_CLK_TIMING__DDR_CLK_PRE   
 *
 * @BRIEF        Indicates the number of PPI Byte clock cycles between the 
 *               start of the DDR clock and the assertion of the data request 
 *               signal. The values from 1 to 255 are valid. The value 0 is 
 *               reserved. The value is not used if 
 *               DSI_CLK_CTRL.DDR_CLK_ALWAYS_ON is set to '1' since the DDR 
 *               clock is always present. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_CLK_TIMING__DDR_CLK_PRE BITFIELD(15, 8)
#define DSI_PROTOCOL_ENGINE__DSI_CLK_TIMING__DDR_CLK_PRE__POS 8

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_CLK_TIMING__DDR_CLK_POST   
 *
 * @BRIEF        Indicates the number of PPI Byte clock cycles after the 
 *               de-assertion of the data request signal and the stop of the 
 *               DDR clock. The values from 1 to 255 are valid. The value 0 
 *               is reserved. The value is not used if 
 *               DSI_CLK_CTRL.DDR_CLK_ALWAYS_ON is set to '1' since the DDR 
 *               clock is always present. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_CLK_TIMING__DDR_CLK_POST BITFIELD(7, 0)
#define DSI_PROTOCOL_ENGINE__DSI_CLK_TIMING__DDR_CLK_POST__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_TX_FIFO_VC_SIZE__VC3_FIFO_SIZE   
 *
 * @BRIEF        Size of the FIFO allocated for virtual channel 3.The valid 
 *               values are from 0 to 8 for a size of the FIFO of 256x33bits 
 *               corresponding to 0x33bits, 32x33bits, 64x33bits... - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_TX_FIFO_VC_SIZE__VC3_FIFO_SIZE BITFIELD(31, 28)
#define DSI_PROTOCOL_ENGINE__DSI_TX_FIFO_VC_SIZE__VC3_FIFO_SIZE__POS 28

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_TX_FIFO_VC_SIZE__VC3_FIFO_ADD   
 *
 * @BRIEF        Address of the space allocated in the FIFO for virtual 
 *               channel 3.The valid values are from 0 to 7 for a size of the 
 *               FIFO of 256x33bits corresponding to 0, 32, 64,... for the 
 *               entry address. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_TX_FIFO_VC_SIZE__VC3_FIFO_ADD BITFIELD(26, 24)
#define DSI_PROTOCOL_ENGINE__DSI_TX_FIFO_VC_SIZE__VC3_FIFO_ADD__POS 24

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_TX_FIFO_VC_SIZE__VC2_FIFO_SIZE   
 *
 * @BRIEF        Size of the FIFO allocated for virtual channel 2.The valid 
 *               values are from 0 to 8 for a size of the FIFO of 256x33bits 
 *               corresponding to 0x33bits, 32x33bits, 64x33bits... - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_TX_FIFO_VC_SIZE__VC2_FIFO_SIZE BITFIELD(23, 20)
#define DSI_PROTOCOL_ENGINE__DSI_TX_FIFO_VC_SIZE__VC2_FIFO_SIZE__POS 20

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_TX_FIFO_VC_SIZE__VC2_FIFO_ADD   
 *
 * @BRIEF        Address of the space allocated in the FIFO for virtual 
 *               channel 2.The valid values are from 0 to 7 for a size of the 
 *               FIFO of 256x33bits corresponding to 0, 32, 64,... for the 
 *               entry address. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_TX_FIFO_VC_SIZE__VC2_FIFO_ADD BITFIELD(18, 16)
#define DSI_PROTOCOL_ENGINE__DSI_TX_FIFO_VC_SIZE__VC2_FIFO_ADD__POS 16

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_TX_FIFO_VC_SIZE__VC1_FIFO_SIZE   
 *
 * @BRIEF        Size of the FIFO allocated for virtual channel 1.The valid 
 *               values are from 0 to 8 for a size of the FIFO of 256x33bits 
 *               corresponding to 0x33bits, 32x33bits, 64x33bits... - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_TX_FIFO_VC_SIZE__VC1_FIFO_SIZE BITFIELD(15, 12)
#define DSI_PROTOCOL_ENGINE__DSI_TX_FIFO_VC_SIZE__VC1_FIFO_SIZE__POS 12

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_TX_FIFO_VC_SIZE__VC1_FIFO_ADD   
 *
 * @BRIEF        Address of the space allocated in the FIFO for virtual 
 *               channel 1.The valid values are from 0 to 7 for a size of the 
 *               FIFO of 256x33bits corresponding to 0, 32, 64,... for the 
 *               entry address. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_TX_FIFO_VC_SIZE__VC1_FIFO_ADD BITFIELD(10, 8)
#define DSI_PROTOCOL_ENGINE__DSI_TX_FIFO_VC_SIZE__VC1_FIFO_ADD__POS 8

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_TX_FIFO_VC_SIZE__VC0_FIFO_SIZE   
 *
 * @BRIEF        Size of the FIFO allocated for virtual channel 0.The valid 
 *               values are from 0 to 8 for a size of the FIFO of 256x33bits 
 *               corresponding to 0x33bits, 32x33bits, 64x33bits... - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_TX_FIFO_VC_SIZE__VC0_FIFO_SIZE BITFIELD(7, 4)
#define DSI_PROTOCOL_ENGINE__DSI_TX_FIFO_VC_SIZE__VC0_FIFO_SIZE__POS 4

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_TX_FIFO_VC_SIZE__VC0_FIFO_ADD   
 *
 * @BRIEF        Address of the space allocated in the FIFO for virtual 
 *               channel 0.The valid values are from 0 to 7 for a size of the 
 *               FIFO of 256x33bits corresponding to 0, 32, 64,... for the 
 *               entry address. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_TX_FIFO_VC_SIZE__VC0_FIFO_ADD BITFIELD(2, 0)
#define DSI_PROTOCOL_ENGINE__DSI_TX_FIFO_VC_SIZE__VC0_FIFO_ADD__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_RX_FIFO_VC_SIZE__VC3_FIFO_SIZE   
 *
 * @BRIEF        Size of the FIFO allocated for virtual channel 3.The valid 
 *               values are from 0 to 8 for a size of the FIFO of 256x33bits 
 *               corresponding to 0x33bits, 32x33bits, 64x33bits... - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_RX_FIFO_VC_SIZE__VC3_FIFO_SIZE BITFIELD(31, 28)
#define DSI_PROTOCOL_ENGINE__DSI_RX_FIFO_VC_SIZE__VC3_FIFO_SIZE__POS 28

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_RX_FIFO_VC_SIZE__VC3_FIFO_ADD   
 *
 * @BRIEF        Address of the space allocated in the FIFO for virtual 
 *               channel 3.The valid values are from 0 to 7 for a size of the 
 *               FIFO of 256x33bits corresponding to 0, 32, 64,... for the 
 *               entry address. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_RX_FIFO_VC_SIZE__VC3_FIFO_ADD BITFIELD(26, 24)
#define DSI_PROTOCOL_ENGINE__DSI_RX_FIFO_VC_SIZE__VC3_FIFO_ADD__POS 24

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_RX_FIFO_VC_SIZE__VC2_FIFO_SIZE   
 *
 * @BRIEF        Size of the FIFO allocated for virtual channel 2.The valid 
 *               values are from 0 to 8 for a size of the FIFO of 256x33bits 
 *               corresponding to 0x33bits, 32x33bits, 64x33bits... - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_RX_FIFO_VC_SIZE__VC2_FIFO_SIZE BITFIELD(23, 20)
#define DSI_PROTOCOL_ENGINE__DSI_RX_FIFO_VC_SIZE__VC2_FIFO_SIZE__POS 20

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_RX_FIFO_VC_SIZE__VC2_FIFO_ADD   
 *
 * @BRIEF        Address of the space allocated in the FIFO for virtual 
 *               channel 2.The valid values are from 0 to 7 for a size of the 
 *               FIFO of 256x33bits corresponding to 0, 32, 64,... for the 
 *               entry address. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_RX_FIFO_VC_SIZE__VC2_FIFO_ADD BITFIELD(18, 16)
#define DSI_PROTOCOL_ENGINE__DSI_RX_FIFO_VC_SIZE__VC2_FIFO_ADD__POS 16

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_RX_FIFO_VC_SIZE__VC1_FIFO_SIZE   
 *
 * @BRIEF        Size of the FIFO allocated for virtual channel 1.The valid 
 *               values are from 0 to 8 for a size of the FIFO of 256x33bits 
 *               corresponding to 0x33bits, 32x33bits, 64x33bits... - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_RX_FIFO_VC_SIZE__VC1_FIFO_SIZE BITFIELD(15, 12)
#define DSI_PROTOCOL_ENGINE__DSI_RX_FIFO_VC_SIZE__VC1_FIFO_SIZE__POS 12

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_RX_FIFO_VC_SIZE__VC1_FIFO_ADD   
 *
 * @BRIEF        Address of the space allocated in the FIFO for virtual 
 *               channel 1.The valid values are from 0 to 7 for a size of the 
 *               FIFO of 256x33bits corresponding to 0, 32, 64,... for the 
 *               entry address. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_RX_FIFO_VC_SIZE__VC1_FIFO_ADD BITFIELD(10, 8)
#define DSI_PROTOCOL_ENGINE__DSI_RX_FIFO_VC_SIZE__VC1_FIFO_ADD__POS 8

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_RX_FIFO_VC_SIZE__VC0_FIFO_SIZE   
 *
 * @BRIEF        Size of the FIFO allocated for virtual channel 0.The valid 
 *               values are from 0 to 8 for a size of the FIFO of 256x33bits 
 *               corresponding to 0x33bits, 32x33bits, 64x33bits... - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_RX_FIFO_VC_SIZE__VC0_FIFO_SIZE BITFIELD(7, 4)
#define DSI_PROTOCOL_ENGINE__DSI_RX_FIFO_VC_SIZE__VC0_FIFO_SIZE__POS 4

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_RX_FIFO_VC_SIZE__VC0_FIFO_ADD   
 *
 * @BRIEF        Address of the space allocated in the FIFO for virtual 
 *               channel 0.The valid values are from 0 to 7 for a size of the 
 *               FIFO of 256x33bits corresponding to 0, 32, 64,... for the 
 *               entry address. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_RX_FIFO_VC_SIZE__VC0_FIFO_ADD BITFIELD(2, 0)
#define DSI_PROTOCOL_ENGINE__DSI_RX_FIFO_VC_SIZE__VC0_FIFO_ADD__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG2__LP_BUSY   
 *
 * @BRIEF        Indicates when there are still pending operations for VCs 
 *               configured for LP mode. 
 *               Forced to 1 when at least one VC is enabled and configured 
 *               for LP mode. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG2__LP_BUSY BITFIELD(17, 17)
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG2__LP_BUSY__POS 17

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG2__HS_BUSY   
 *
 * @BRIEF        Indicates when there are still pending operations for VCs 
 *               configured for HS mode. 
 *               Forced to 1 when at least one VC is enabled and configured 
 *               for HS mode. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG2__HS_BUSY BITFIELD(16, 16)
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG2__HS_BUSY__POS 16

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG2__LANE3_ULPS_SIG2   
 *
 * @BRIEF        Enables the ULPS for the lane #3. The HW shall change the 
 *               state of the lane to ULPS only when it is in stop state and 
 *               there is no data pending inside the DSI protocol engine and 
 *               the DSI protocol engine has control of the bus (BTA has not 
 *               been sent). 
 *               The state of the signal TxRequestEsc is changed if lane #3 
 *               is a data lane. 
 *               The state of the signal TxUlpsClk is changed if lane #3  is 
 *               a clock lane. 
 *               There will be a latency depending on the frequency of 
 *               TxClkExc.  This bit should be read back to confirm a write 
 *               has been effective. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG2__LANE3_ULPS_SIG2 BITFIELD(7, 7)
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG2__LANE3_ULPS_SIG2__POS 7

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG2__LANE2_ULPS_SIG2   
 *
 * @BRIEF        Enables the ULPS for the lane #2. The HW shall change the 
 *               state of the lane to ULPS only when it is in stop state and 
 *               there is no data pending inside the DSI protocol engine and 
 *               the DSI protocol engine has control of the bus (BTA has not 
 *               been sent). 
 *               The state of the signal TxRequestEsc is changed if lane #2 
 *               is a data lane. 
 *               The state of the signal TxUlpsClk is changed if lane #2 is a 
 *               clock lane. 
 *               There will be a latency depending on the frequency of 
 *               TxClkExc.  This bit should be read back to confirm a write 
 *               has been effective. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG2__LANE2_ULPS_SIG2 BITFIELD(6, 6)
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG2__LANE2_ULPS_SIG2__POS 6

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG2__LANE1_ULPS_SIG2   
 *
 * @BRIEF        Enables the ULPS for the lane #1. The HW shall change the 
 *               state of the lane to ULPS only when it is in stop state and 
 *               there is no data pending inside the DSI protocol engine and 
 *               the DSI protocol engine has control of the bus (BTA has not 
 *               been sent).  
 *               The state of the signal TxRequestEsc is changed if lane #1 
 *               is a data lane. 
 *               The state of the signal TxUlpsClk is changed if lane #1 is a 
 *               clock lane. 
 *               There will be a latency depending on the frequency of 
 *               TxClkExc.  This bit should be read back to confirm a write 
 *               has been effective. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG2__LANE1_ULPS_SIG2 BITFIELD(5, 5)
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG2__LANE1_ULPS_SIG2__POS 5

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG2__RESERVED3   
 *
 * @BRIEF        Write 0's for future compatibility. 
 *               Reads returns 0. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG2__RESERVED3 BITFIELD(4, 4)
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG2__RESERVED3__POS 4

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG2__RESERVED2   
 *
 * @BRIEF        Bitfield description is not available - (RO)
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG2__RESERVED2 BITFIELD(3, 3)
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG2__RESERVED2__POS 3

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG2__LANE3_ULPS_SIG1   
 *
 * @BRIEF        Enables the ULPS for the lane #3. The HW shall change the 
 *               state of the lane to ULPS only when it is in stop state and 
 *               there is no data pending inside the DSI protocol engine and 
 *               the DSI protocol engine has control of the bus (BTA has not 
 *               been sent). 
 *               The state of the signal TxULPSExit is changed  if the lane 
 *               #3 is a clock lane. 
 *               There will be a latency depending on the frequency of 
 *               TxClkExc.  This bit should be read back to confirm a write 
 *               has been effective. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG2__LANE3_ULPS_SIG1 BITFIELD(2, 2)
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG2__LANE3_ULPS_SIG1__POS 2

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG2__LANE2_ULPS_SIG1   
 *
 * @BRIEF        Enables the ULPS for the lane #2. The HW shall change the 
 *               state of the lane to ULPS only when it is in stop state and 
 *               there is no data pending inside the DSI protocol engine and 
 *               the DSI protocol engine has control of the bus (BTA has not 
 *               been sent). 
 *               The state of the signal TxULPSExit is changed  if the lane 
 *               #2 is a clock lane. 
 *               There will be a latency depending on the frequency of 
 *               TxClkExc.  This bit should be read back to confirm a write 
 *               has been effective. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG2__LANE2_ULPS_SIG1 BITFIELD(1, 1)
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG2__LANE2_ULPS_SIG1__POS 1

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG2__LANE1_ULPS_SIG1   
 *
 * @BRIEF        Enables the ULPS for the lane #1. The HW shall change the 
 *               state of the lane to ULPS only when it is in stop state and 
 *               there is no data pending inside the DSI protocol engine and 
 *               the DSI protocol engine has control of the bus (BTA has not 
 *               been sent).  
 *               The state of the signal TxULPSExit is changed  if the lane 
 *               #1 is a clock lane. 
 *               There will be a latency depending on the frequency of 
 *               TxClkExc.  This bit should be read back to confirm a write 
 *               has been effective. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG2__LANE1_ULPS_SIG1 BITFIELD(0, 0)
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG2__LANE1_ULPS_SIG1__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_RX_FIFO_VC_FULLNESS__VC3_FIFO_FULLNESS   
 *
 * @BRIEF        Fullness of the FIFO allocated for virtual channel 3.The 
 *               valid values are from 0 to DSI_GNQ.RX_FIFODEPTH-1 
 *               corresponding to 1x33-bit,...up to DSI_GNQ.RX_FIFODEPTH 
 *               x33-bit. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_RX_FIFO_VC_FULLNESS__VC3_FIFO_FULLNESS BITFIELD(31, 24)
#define DSI_PROTOCOL_ENGINE__DSI_RX_FIFO_VC_FULLNESS__VC3_FIFO_FULLNESS__POS 24

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_RX_FIFO_VC_FULLNESS__VC2_FIFO_FULLNESS   
 *
 * @BRIEF        Fullness of the FIFO allocated for virtual channel 2.The 
 *               valid values are from 0 to DSI_GNQ.RX_FIFODEPTH-1 
 *               corresponding to 1x33-bit,...up to DSI_GNQ.RX_FIFODEPTH 
 *               x33-bit. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_RX_FIFO_VC_FULLNESS__VC2_FIFO_FULLNESS BITFIELD(23, 16)
#define DSI_PROTOCOL_ENGINE__DSI_RX_FIFO_VC_FULLNESS__VC2_FIFO_FULLNESS__POS 16

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_RX_FIFO_VC_FULLNESS__VC1_FIFO_FULLNESS   
 *
 * @BRIEF        Fullness of the FIFO allocated for virtual channel 1.The 
 *               valid values are from 0 to DSI_GNQ.RX_FIFODEPTH-1 
 *               corresponding to 1x33-bit,...up to DSI_GNQ.RX_FIFODEPTH 
 *               x33-bit. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_RX_FIFO_VC_FULLNESS__VC1_FIFO_FULLNESS BITFIELD(15, 8)
#define DSI_PROTOCOL_ENGINE__DSI_RX_FIFO_VC_FULLNESS__VC1_FIFO_FULLNESS__POS 8

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_RX_FIFO_VC_FULLNESS__VC0_FIFO_FULLNESS   
 *
 * @BRIEF        Fullness of the FIFO allocated for virtual channel 0.The 
 *               valid values are from 0 to DSI_GNQ.RX_FIFODEPTH-1 
 *               corresponding to 1x33-bit,...up to DSI_GNQ.RX_FIFODEPTH 
 *               x33-bit. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_RX_FIFO_VC_FULLNESS__VC0_FIFO_FULLNESS BITFIELD(7, 0)
#define DSI_PROTOCOL_ENGINE__DSI_RX_FIFO_VC_FULLNESS__VC0_FIFO_FULLNESS__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VM_TIMING4__HSA_HS_INTERLEAVING   
 *
 * @BRIEF        Defines the number of HS byte clock cycles that can be used 
 *               for interleaving High Speed command mode packet into Video 
 *               Mode stream during HSA blanking period. 
 *               The supported values are from 0 to 255. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VM_TIMING4__HSA_HS_INTERLEAVING BITFIELD(23, 16)
#define DSI_PROTOCOL_ENGINE__DSI_VM_TIMING4__HSA_HS_INTERLEAVING__POS 16

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VM_TIMING4__HFP_HS_INTERLEAVING   
 *
 * @BRIEF        Defines the number of HS byte clock cycles that can be used 
 *               for interleaving High Speed command mode packet into Video 
 *               Mode stream during HFP blanking period. 
 *               The supported values are from 0 to 255  - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VM_TIMING4__HFP_HS_INTERLEAVING BITFIELD(15, 8)
#define DSI_PROTOCOL_ENGINE__DSI_VM_TIMING4__HFP_HS_INTERLEAVING__POS 8

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VM_TIMING4__HBP_HS_INTERLEAVING   
 *
 * @BRIEF        Defines the number of HS byte clock cycles that can be used 
 *               for interleaving High Speed command mode packet into Video 
 *               Mode stream during HBP blanking period. 
 *               The supported values are from 0 to 255  - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VM_TIMING4__HBP_HS_INTERLEAVING BITFIELD(7, 0)
#define DSI_PROTOCOL_ENGINE__DSI_VM_TIMING4__HBP_HS_INTERLEAVING__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_TX_FIFO_VC_EMPTINESS__VC3_FIFO_EMPTINESS   
 *
 * @BRIEF        Emptiness of the FIFO allocated for virtual channel 3.The 
 *               valid values are from 0 to DSI_GNQ.TX_FIFODEPTH-1 
 *               corresponding to 1x33-bit,...up to DSI_GNQ.TX_FIFODEPTH 
 *               x33-bit. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_TX_FIFO_VC_EMPTINESS__VC3_FIFO_EMPTINESS BITFIELD(31, 24)
#define DSI_PROTOCOL_ENGINE__DSI_TX_FIFO_VC_EMPTINESS__VC3_FIFO_EMPTINESS__POS 24

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_TX_FIFO_VC_EMPTINESS__VC2_FIFO_EMPTINESS   
 *
 * @BRIEF        Emptiness of the FIFO allocated for virtual channel 2.The 
 *               valid values are from 0 to DSI_GNQ.TX_FIFODEPTH-1 
 *               corresponding to 1x33-bit,...up to DSI_GNQ.TX_FIFODEPTH 
 *               x33-bit. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_TX_FIFO_VC_EMPTINESS__VC2_FIFO_EMPTINESS BITFIELD(23, 16)
#define DSI_PROTOCOL_ENGINE__DSI_TX_FIFO_VC_EMPTINESS__VC2_FIFO_EMPTINESS__POS 16

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_TX_FIFO_VC_EMPTINESS__VC1_FIFO_EMPTINESS   
 *
 * @BRIEF        Emptiness of the FIFO allocated for virtual channel 1.The 
 *               valid values are from 0 to DSI_GNQ.TX_FIFODEPTH-1 
 *               corresponding to 1x33-bit,...up to DSI_GNQ.TX_FIFODEPTH 
 *               x33-bit. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_TX_FIFO_VC_EMPTINESS__VC1_FIFO_EMPTINESS BITFIELD(15, 8)
#define DSI_PROTOCOL_ENGINE__DSI_TX_FIFO_VC_EMPTINESS__VC1_FIFO_EMPTINESS__POS 8

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_TX_FIFO_VC_EMPTINESS__VC0_FIFO_EMPTINESS   
 *
 * @BRIEF        Emptiness of the FIFO allocated for virtual channel 0.The 
 *               valid values are from 0 to DSI_GNQ.TX_FIFODEPTH-1 
 *               corresponding to 1x33-bit,...up to DSI_GNQ.TX_FIFODEPTH 
 *               x33-bit. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_TX_FIFO_VC_EMPTINESS__VC0_FIFO_EMPTINESS BITFIELD(7, 0)
#define DSI_PROTOCOL_ENGINE__DSI_TX_FIFO_VC_EMPTINESS__VC0_FIFO_EMPTINESS__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VM_TIMING5__HSA_LP_INTERLEAVING   
 *
 * @BRIEF        Defines the number of bytes of Low Power command mode 
 *               packets that can be sent on PPI link during HSA blanking 
 *               period. 
 *               The supported values are from 0 to 255. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VM_TIMING5__HSA_LP_INTERLEAVING BITFIELD(23, 16)
#define DSI_PROTOCOL_ENGINE__DSI_VM_TIMING5__HSA_LP_INTERLEAVING__POS 16

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VM_TIMING5__HFP_LP_INTERLEAVING   
 *
 * @BRIEF        Defines the number of bytes of Low Power command mode 
 *               packets that can be sent on PPI link during HFP blanking 
 *               period. 
 *               The supported values are from 0 to 255  - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VM_TIMING5__HFP_LP_INTERLEAVING BITFIELD(15, 8)
#define DSI_PROTOCOL_ENGINE__DSI_VM_TIMING5__HFP_LP_INTERLEAVING__POS 8

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VM_TIMING5__HBP_LP_INTERLEAVING   
 *
 * @BRIEF        Defines the number of bytes of Low Power command mode 
 *               packets that can be sent on PPI link during HBP blanking 
 *               period. 
 *               The supported values are from 0 to 255  - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VM_TIMING5__HBP_LP_INTERLEAVING BITFIELD(7, 0)
#define DSI_PROTOCOL_ENGINE__DSI_VM_TIMING5__HBP_LP_INTERLEAVING__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VM_TIMING6__BL_HS_INTERLEAVING   
 *
 * @BRIEF        Defines the number of HS byte clock cycles that can be used 
 *               for interleaving High Speed command mode packet into Video 
 *               Mode stream during blanking periods during VSA, VBP, VFP 
 *               periods inside one video frame on PPI link. 
 *               The supported values are from 0 to 65535 . - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VM_TIMING6__BL_HS_INTERLEAVING BITFIELD(31, 16)
#define DSI_PROTOCOL_ENGINE__DSI_VM_TIMING6__BL_HS_INTERLEAVING__POS 16

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VM_TIMING6__BL_LP_INTERLEAVING   
 *
 * @BRIEF        Defines the maximum number of bytes of Low Power command 
 *               mode packets that can be sent on PPI link during blanking 
 *               periods during VSA, VBP or VFP periods inside one video 
 *               frame on PPI link. 
 *               The supported values are from 0 to 65535  - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VM_TIMING6__BL_LP_INTERLEAVING BITFIELD(15, 0)
#define DSI_PROTOCOL_ENGINE__DSI_VM_TIMING6__BL_LP_INTERLEAVING__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VM_TIMING7__ENTER_HS_MODE_LATENCY   
 *
 * @BRIEF        Defines the number of HS byte clock cycles necessary for 
 *               entering to HS mode. It corresponds to the delay in number 
 *               of HS clock cycles from assertion of TxRequestHS signal to 1 
 *               until assertion of TxReadyHS signal to 1. 
 *               The supported values are from 0 to 65535 . - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VM_TIMING7__ENTER_HS_MODE_LATENCY BITFIELD(31, 16)
#define DSI_PROTOCOL_ENGINE__DSI_VM_TIMING7__ENTER_HS_MODE_LATENCY__POS 16

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VM_TIMING7__EXIT_HS_MODE_LATENCY   
 *
 * @BRIEF        Defines the number of HS byte clock cycles necessary for 
 *               exiting from HS mode. It corresponds to the maximum delay in 
 *               number of HS byte clock from de-assertion of TxRequestHS 
 *               signal until PPI link is in LP-11 state from which a new 
 *               entrance to HS mode can be initiated which does not take 
 *               more than ENTER_HS_MODE_LATENCY clock cycles. 
 *               The supported values are from 0 to 65535  - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VM_TIMING7__EXIT_HS_MODE_LATENCY BITFIELD(15, 0)
#define DSI_PROTOCOL_ENGINE__DSI_VM_TIMING7__EXIT_HS_MODE_LATENCY__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_STOPCLK_TIMING__DSI_STOPCLK_LATENCY   
 *
 * @BRIEF        Clock gating latency from DSI Protocol to TxByteClkHS - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_STOPCLK_TIMING__DSI_STOPCLK_LATENCY BITFIELD(7, 0)
#define DSI_PROTOCOL_ENGINE__DSI_STOPCLK_TIMING__DSI_STOPCLK_LATENCY__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_CTRL2__LINE_BUFFER   
 *
 * @BRIEF        Number of line buffers to be used while receiving data on 
 *               the video port. The valid values are from 0 to 
 *               DSI_GNQ.VP2_NB_LINE_BUFFER. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_CTRL2__LINE_BUFFER   BITFIELD(13, 12)
#define DSI_PROTOCOL_ENGINE__DSI_CTRL2__LINE_BUFFER__POS 12

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_CTRL2__VP_VSYNC_POL   
 *
 * @BRIEF        VP vertical synchronization signal polarity - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_CTRL2__VP_VSYNC_POL  BITFIELD(11, 11)
#define DSI_PROTOCOL_ENGINE__DSI_CTRL2__VP_VSYNC_POL__POS 11

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_CTRL2__VP_HSYNC_POL   
 *
 * @BRIEF        VP horizontal synchronization signal polarity - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_CTRL2__VP_HSYNC_POL  BITFIELD(10, 10)
#define DSI_PROTOCOL_ENGINE__DSI_CTRL2__VP_HSYNC_POL__POS 10

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_CTRL2__VP_DE_POL   
 *
 * @BRIEF        VP data enable signal polarity - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_CTRL2__VP_DE_POL     BITFIELD(9, 9)
#define DSI_PROTOCOL_ENGINE__DSI_CTRL2__VP_DE_POL__POS 9

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_CTRL2__VP_CLK_POL   
 *
 * @BRIEF        VP clock polarity - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_CTRL2__VP_CLK_POL    BITFIELD(8, 8)
#define DSI_PROTOCOL_ENGINE__DSI_CTRL2__VP_CLK_POL__POS 8

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_CTRL2__VP_DATA_BUS_WIDTH   
 *
 * @BRIEF        Defines the size of the video port data bus - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_CTRL2__VP_DATA_BUS_WIDTH BITFIELD(7, 6)
#define DSI_PROTOCOL_ENGINE__DSI_CTRL2__VP_DATA_BUS_WIDTH__POS 6

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_CTRL2__VP_CLK_RATIO   
 *
 * @BRIEF        The field indicates the clock ratio between VP.CLK and 
 *               VP.PCLK. The clock VP.PCLK is generated from VP.CLK. It is 
 *               divided down. 
 *               The information is only used when the video port is used to 
 *               provide data in command mode. In the case of video mode, it 
 *               is not used. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_CTRL2__VP_CLK_RATIO  BITFIELD(4, 4)
#define DSI_PROTOCOL_ENGINE__DSI_CTRL2__VP_CLK_RATIO__POS 4

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VM_TIMING8__HFPX   
 *
 * @BRIEF        Extension to the HFP register. 
 *               Additional bits added to MSB. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VM_TIMING8__HFPX     BITFIELD(1, 0)
#define DSI_PROTOCOL_ENGINE__DSI_VM_TIMING8__HFPX__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_TE_HSYNC_WIDTH__MIN_HSYNC_PULSE_WIDTH   
 *
 * @BRIEF        Programmable min HSYNC pulse width 
 *               Minimum HSYNC pulse width. Number of DSI_CLK clock cycles 
 *               times 256 to determine when HSYNC pulse occurs.  The value 0 
 *               is invalid. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_TE_HSYNC_WIDTH__MIN_HSYNC_PULSE_WIDTH BITFIELD(19, 8)
#define DSI_PROTOCOL_ENGINE__DSI_TE_HSYNC_WIDTH__MIN_HSYNC_PULSE_WIDTH__POS 8

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_TE_VSYNC_WIDTH__MIN_VSYNC_PULSE_WIDTH   
 *
 * @BRIEF        Programmable min VSYNC pulse width 
 *               Minimum VSYNC pulse width. Number of DSI_CLK cycles times 
 *               256 to determine when VSYNC pulse occurs. The value 0 is 
 *               invalid. 
 *               The value shall be greater than MIN_HSYNC_PULSE_WIDTH when 
 *               DSI_TE_HSYNC_NUMBER is greather than 0 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_TE_VSYNC_WIDTH__MIN_VSYNC_PULSE_WIDTH BITFIELD(19, 8)
#define DSI_PROTOCOL_ENGINE__DSI_TE_VSYNC_WIDTH__MIN_VSYNC_PULSE_WIDTH__POS 8

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_TE_HSYNC_NUMBER__LINE_NUMBER   
 *
 * @BRIEF        Programmable line number 
 *               Line number from 0 to 2047. Number of HSYNC after the VSYNC 
 *               occurs before the beginning of the transfer. Any HSYNC 
 *               before VSYNC is ignored. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_TE_HSYNC_NUMBER__LINE_NUMBER BITFIELD(10, 0)
#define DSI_PROTOCOL_ENGINE__DSI_TE_HSYNC_NUMBER__LINE_NUMBER__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__DCS_CMD_CODE   
 *
 * @BRIEF        DCS command code value to insert between header and video 
 *               port or OCP slave  data when enabled by DCS_CMD_ENABLE (only 
 *               when TE mechanism is not used otherwise the bit-field 
 *               DCS_CMD_CODE is ignored by DSI protocol engine). - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__DCS_CMD_CODE BITFIELD(31, 31)
#define DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__DCS_CMD_CODE__POS 31

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__DCS_CMD_ENABLE   
 *
 * @BRIEF        Enables automatic insertion of DCS command codes when data 
 *               is sourced by the video port. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__DCS_CMD_ENABLE BITFIELD(30, 30)
#define DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__DCS_CMD_ENABLE__POS 30

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__DMA_RX_REQ_NB   
 *
 * @BRIEF        Selection of the use of the DMA request (associated to the  
 *               RX FIFO) - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__DMA_RX_REQ_NB BITFIELD(29, 27)
#define DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__DMA_RX_REQ_NB__POS 27

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__DMA_RX_THRESHOLD   
 *
 * @BRIEF        Defines the threshold value for the DMA request (associated 
 *               to the RX FIFO) - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__DMA_RX_THRESHOLD BITFIELD(26, 24)
#define DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__DMA_RX_THRESHOLD__POS 24

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__DMA_TX_REQ_NB   
 *
 * @BRIEF        Selection of the use of the DMA request (associated to the 
 *               TX FIFO) - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__DMA_TX_REQ_NB BITFIELD(23, 21)
#define DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__DMA_TX_REQ_NB__POS 21

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__RX_FIFO_NOT_EMPTY   
 *
 * @BRIEF        FIFO status - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__RX_FIFO_NOT_EMPTY BITFIELD(20, 20)
#define DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__RX_FIFO_NOT_EMPTY__POS 20

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__DMA_TX_THRESHOLD   
 *
 * @BRIEF        Defines the threshold value for the DMA request (associated 
 *               to the TX FIFO) - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__DMA_TX_THRESHOLD BITFIELD(19, 17)
#define DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__DMA_TX_THRESHOLD__POS 17

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__TX_FIFO_FULL   
 *
 * @BRIEF        FIFO status - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__TX_FIFO_FULL BITFIELD(16, 16)
#define DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__TX_FIFO_FULL__POS 16

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__VC_BUSY   
 *
 * @BRIEF        Indicates if previously scheduled activities (packets, BTA) 
 *               are still being processed. 
 *               Forced to 1 if VC is enabled. 
 *               Software should check this bit is 0 before changing channel 
 *               configuration. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__VC_BUSY     BITFIELD(15, 15)
#define DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__VC_BUSY__POS 15

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__PP_BUSY   
 *
 * @BRIEF        Ping-pong buffer busy status. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__PP_BUSY     BITFIELD(14, 14)
#define DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__PP_BUSY__POS 14

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__VP_SOURCE   
 *
 * @BRIEF        Selection between video port 1 and video port 2.  
 *               If DSI_GNQ.NB_VIDEO_PORTS=0, the bit-field is ignored since 
 *               only video port 1 is present. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__VP_SOURCE   BITFIELD(13, 13)
#define DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__VP_SOURCE__POS 13

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__RGB565_ORDER   
 *
 * @BRIEF        Byte order for RBG565 - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__RGB565_ORDER BITFIELD(12, 12)
#define DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__RGB565_ORDER__POS 12

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__OCP_DATA_BUS_WIDTH   
 *
 * @BRIEF        Defines the size of the OCP data bus - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__OCP_DATA_BUS_WIDTH BITFIELD(11, 10)
#define DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__OCP_DATA_BUS_WIDTH__POS 10

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__MODE_SPEED   
 *
 * @BRIEF        Selection of the mode. The information is used by HW only if 
 *               MODE=COMMAND_MODE otherwise it is ignored. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__MODE_SPEED  BITFIELD(9, 9)
#define DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__MODE_SPEED__POS 9

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__ECC_TX_EN   
 *
 * @BRIEF        Enables the Error Correction Code generation for the 
 *               transmit header (short and long packets). - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__ECC_TX_EN   BITFIELD(8, 8)
#define DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__ECC_TX_EN__POS 8

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__CS_TX_EN   
 *
 * @BRIEF        Enables the checksum generation for the transmit payload 
 *               (long packet only). - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__CS_TX_EN    BITFIELD(7, 7)
#define DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__CS_TX_EN__POS 7

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__BTA_EN   
 *
 * @BRIEF        Send the bus turn around to the peripheral. It can be used 
 *               when the automatic mode is enabled (BTA_SHORT_EN=1 or/and 
 *               BTA_LONG_EN=1). In that case only one BTA is sent to the 
 *               peripheral. The manual mode is used to allow the user to 
 *               define for which packets, the turn around is required for 
 *               example getting acknowledge from the peripheral. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__BTA_EN      BITFIELD(6, 6)
#define DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__BTA_EN__POS 6

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__TX_FIFO_NOT_EMPTY   
 *
 * @BRIEF        FIFO status - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__TX_FIFO_NOT_EMPTY BITFIELD(5, 5)
#define DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__TX_FIFO_NOT_EMPTY__POS 5

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__MODE   
 *
 * @BRIEF        Selection of the mode - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__MODE        BITFIELD(4, 4)
#define DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__MODE__POS   4

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__BTA_LONG_EN   
 *
 * @BRIEF        Enables the automatic bus turn-around after completion of 
 *               each long packet transmission. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__BTA_LONG_EN BITFIELD(3, 3)
#define DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__BTA_LONG_EN__POS 3

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__BTA_SHORT_EN   
 *
 * @BRIEF        Enables the automatic bus turn-around after completion of 
 *               each short packet transmission. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__BTA_SHORT_EN BITFIELD(2, 2)
#define DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__BTA_SHORT_EN__POS 2

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__SOURCE   
 *
 * @BRIEF        Selection of the source between OCP and the Video port(s) 
 *               (used by the HW only if MODE=COMMAND MODE (0x0) otherwise it 
 *               is ignored). 
 *               The number of available video ports is defined in 
 *               DSI_GNQ.NB_VIDEO_PORTS. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__SOURCE      BITFIELD(1, 1)
#define DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__SOURCE__POS 1

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__VC_EN   
 *
 * @BRIEF        Enables the virtual channel. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__VC_EN       BITFIELD(0, 0)
#define DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__VC_EN__POS  0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_TE__TE_START   
 *
 * @BRIEF        Manual control of the start of the transfer. The user can 
 *               use the TE interrupt in order to know that the TE trigger 
 *               has been received prior to set the TE_START bit-field. It is 
 *               not mandatory to use the TE interrupt. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_TE__TE_START      BITFIELD(31, 31)
#define DSI_PROTOCOL_ENGINE__DSI_VC_TE__TE_START__POS 31

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_TE__TE_EN   
 *
 * @BRIEF        Tearing Effect Control - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_TE__TE_EN         BITFIELD(30, 30)
#define DSI_PROTOCOL_ENGINE__DSI_VC_TE__TE_EN__POS    30

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_TE__TE_LINE   
 *
 * @BRIEF        Bitfield description is not available - (RW)
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_TE__TE_LINE       BITFIELD(29, 29)
#define DSI_PROTOCOL_ENGINE__DSI_VC_TE__TE_LINE__POS  29

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_TE__TE_LINE_NB   
 *
 * @BRIEF        Selection between TE0 and TE1 cmos signals. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_TE__TE_LINE_NB    BITFIELD(28, 28)
#define DSI_PROTOCOL_ENGINE__DSI_VC_TE__TE_LINE_NB__POS 28

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_TE__TE_SIZE   
 *
 * @BRIEF        Defines the number of byte (payload data excluding the check 
 *               -sum) to be sent. The write into the register 
 *               DSI_VC_LONG_PACKET_HEADER shall be performed by the user 
 *               before sending data from the register 
 *               DSI_VC_LONG_PACKET_PAYLOAD. The register value is 
 *               decremented for every byte sent of the DSI link. At the end 
 *               of the transfer (TE_SIZE=0), the bit-field TE_EN is reset by 
 *               HW. The DMA_request shall be asserted when the trigger is 
 *               received in order to receive data in the TX FIFO. It shall 
 *               not be used until all data (TE_SIZE) have been received in 
 *               the FIFO. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_TE__TE_SIZE       BITFIELD(23, 0)
#define DSI_PROTOCOL_ENGINE__DSI_VC_TE__TE_SIZE__POS  0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_LONG_PACKET_HEADER__HEADER   
 *
 * @BRIEF         Packet header information: DATA ID + DATA FIELD +ECC - (WO) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_LONG_PACKET_HEADER__HEADER BITFIELD(31, 0)
#define DSI_PROTOCOL_ENGINE__DSI_VC_LONG_PACKET_HEADER__HEADER__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_LONG_PACKET_PAYLOAD__PAYLOAD   
 *
 * @BRIEF        Packet payload information (excluding check-sum) - (WO) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_LONG_PACKET_PAYLOAD__PAYLOAD BITFIELD(31, 0)
#define DSI_PROTOCOL_ENGINE__DSI_VC_LONG_PACKET_PAYLOAD__PAYLOAD__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_SHORT_PACKET_HEADER__HEADER   
 *
 * @BRIEF        WRITES: Packet header information: DATA ID + DATA FIELD +ECC 
 *               written into the TX FIFO 
 *               READS: 32-bit values read from the RX FIFO - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_SHORT_PACKET_HEADER__HEADER BITFIELD(31, 0)
#define DSI_PROTOCOL_ENGINE__DSI_VC_SHORT_PACKET_HEADER__HEADER__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_IRQSTATUS__PP_BUSY_CHANGE_IRQ   
 *
 * @BRIEF        Video Port ping-pong buffer busy status. 
 *               PP_BUSY has changed from 1 to 0. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_IRQSTATUS__PP_BUSY_CHANGE_IRQ BITFIELD(8, 8)
#define DSI_PROTOCOL_ENGINE__DSI_VC_IRQSTATUS__PP_BUSY_CHANGE_IRQ__POS 8

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_IRQSTATUS__FIFO_TX_UDF_IRQ   
 *
 * @BRIEF        FIFO underflow status. The FIFO used on the slave port for 
 *               buffering the data received on the OCP slave port for the 
 *               virtual channel has underflowed which means that   the data 
 *               for the current packet have not been received in time since 
 *               the transfer of the packet are already started (transfer 
 *               started since the packet size is bigger than space allocated 
 *               in the FIFO). - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_IRQSTATUS__FIFO_TX_UDF_IRQ BITFIELD(7, 7)
#define DSI_PROTOCOL_ENGINE__DSI_VC_IRQSTATUS__FIFO_TX_UDF_IRQ__POS 7

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_IRQSTATUS__ECC_NO_CORRECTION_IRQ   
 *
 * @BRIEF        ECC error status (short and long packets). No correction of 
 *               the header because of more than 1-bit error. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_IRQSTATUS__ECC_NO_CORRECTION_IRQ BITFIELD(6, 6)
#define DSI_PROTOCOL_ENGINE__DSI_VC_IRQSTATUS__ECC_NO_CORRECTION_IRQ__POS 6

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_IRQSTATUS__BTA_IRQ   
 *
 * @BRIEF        Virtual channel - BTA status. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_IRQSTATUS__BTA_IRQ BITFIELD(5, 5)
#define DSI_PROTOCOL_ENGINE__DSI_VC_IRQSTATUS__BTA_IRQ__POS 5

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_IRQSTATUS__FIFO_RX_OVF_IRQ   
 *
 * @BRIEF        FIFO overflow error status. The FIFO used on the slave port 
 *               for buffering the data received on the DSI link for the 
 *               virtual channel has overflowed. 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_IRQSTATUS__FIFO_RX_OVF_IRQ BITFIELD(4, 4)
#define DSI_PROTOCOL_ENGINE__DSI_VC_IRQSTATUS__FIFO_RX_OVF_IRQ__POS 4

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_IRQSTATUS__FIFO_TX_OVF_IRQ   
 *
 * @BRIEF        FIFO overflow error status. The FIFO used on the slave port 
 *               for buffering the data received on the OCP slave port for 
 *               the virtual channel has overflowed. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_IRQSTATUS__FIFO_TX_OVF_IRQ BITFIELD(3, 3)
#define DSI_PROTOCOL_ENGINE__DSI_VC_IRQSTATUS__FIFO_TX_OVF_IRQ__POS 3

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_IRQSTATUS__PACKET_SENT_IRQ   
 *
 * @BRIEF        Indicates that a packet has been sent. It is used when BTA 
 *               manual mode is used. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_IRQSTATUS__PACKET_SENT_IRQ BITFIELD(2, 2)
#define DSI_PROTOCOL_ENGINE__DSI_VC_IRQSTATUS__PACKET_SENT_IRQ__POS 2

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_IRQSTATUS__ECC_CORRECTION_IRQ   
 *
 * @BRIEF        Virtual channel - ECC has been used to do the correction of 
 *               the only 1-bit error status (short and long packet). - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_IRQSTATUS__ECC_CORRECTION_IRQ BITFIELD(1, 1)
#define DSI_PROTOCOL_ENGINE__DSI_VC_IRQSTATUS__ECC_CORRECTION_IRQ__POS 1

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_IRQSTATUS__CS_IRQ   
 *
 * @BRIEF        Virtual channel - Check-Sum mismatch status. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_IRQSTATUS__CS_IRQ BITFIELD(0, 0)
#define DSI_PROTOCOL_ENGINE__DSI_VC_IRQSTATUS__CS_IRQ__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_IRQENABLE__PP_BUSY_CHANGE_IRQ_EN   
 *
 * @BRIEF        Video Port ping-pong buffer busy status. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_IRQENABLE__PP_BUSY_CHANGE_IRQ_EN BITFIELD(8, 8)
#define DSI_PROTOCOL_ENGINE__DSI_VC_IRQENABLE__PP_BUSY_CHANGE_IRQ_EN__POS 8

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_IRQENABLE__FIFO_TX_UDF_IRQ_EN   
 *
 * @BRIEF        FIFO underflow enable. The FIFO used on the slave port for 
 *               buffering the data received on the OCP slave port for the 
 *               virtual channel has underflowed which means that   the data 
 *               for the current packet have not been received in time since 
 *               the transfer of the packet are already started (transfer 
 *               started since the packet size is bigger than space allocated 
 *               in the FIFO). - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_IRQENABLE__FIFO_TX_UDF_IRQ_EN BITFIELD(7, 7)
#define DSI_PROTOCOL_ENGINE__DSI_VC_IRQENABLE__FIFO_TX_UDF_IRQ_EN__POS 7

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_IRQENABLE__ECC_NO_CORRECTION_IRQ_EN   
 *
 * @BRIEF        ECC error (short and long packets). No correction of the 
 *               header because of more than 1-bit error. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_IRQENABLE__ECC_NO_CORRECTION_IRQ_EN BITFIELD(6, 6)
#define DSI_PROTOCOL_ENGINE__DSI_VC_IRQENABLE__ECC_NO_CORRECTION_IRQ_EN__POS 6

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_IRQENABLE__BTA_IRQ_EN   
 *
 * @BRIEF        Virtual channel -Bus turn around reception - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_IRQENABLE__BTA_IRQ_EN BITFIELD(5, 5)
#define DSI_PROTOCOL_ENGINE__DSI_VC_IRQENABLE__BTA_IRQ_EN__POS 5

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_IRQENABLE__FIFO_RX_OVF_IRQ_EN   
 *
 * @BRIEF        FIFO overflow enable. The FIFO used on the slave port for 
 *               buffering the data received on the DSI link for the virtual 
 *               channel has overflowed. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_IRQENABLE__FIFO_RX_OVF_IRQ_EN BITFIELD(4, 4)
#define DSI_PROTOCOL_ENGINE__DSI_VC_IRQENABLE__FIFO_RX_OVF_IRQ_EN__POS 4

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_IRQENABLE__FIFO_TX_OVF_IRQ_EN   
 *
 * @BRIEF        FIFO overflow enable. The FIFO used on the slave port for 
 *               buffering the data received on the OCP slave port for the 
 *               virtual channel has overflowed. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_IRQENABLE__FIFO_TX_OVF_IRQ_EN BITFIELD(3, 3)
#define DSI_PROTOCOL_ENGINE__DSI_VC_IRQENABLE__FIFO_TX_OVF_IRQ_EN__POS 3

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_IRQENABLE__PACKET_SENT_IRQ_EN   
 *
 * @BRIEF        Indicates that a packet has been sent. It is used when BTA 
 *               manual mode is used. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_IRQENABLE__PACKET_SENT_IRQ_EN BITFIELD(2, 2)
#define DSI_PROTOCOL_ENGINE__DSI_VC_IRQENABLE__PACKET_SENT_IRQ_EN__POS 2

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_IRQENABLE__ECC_CORRECTION_IRQ_EN   
 *
 * @BRIEF        Virtual channel - ECC has been used to correct the only 
 *               1-bit error (short and long packet). - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_IRQENABLE__ECC_CORRECTION_IRQ_EN BITFIELD(1, 1)
#define DSI_PROTOCOL_ENGINE__DSI_VC_IRQENABLE__ECC_CORRECTION_IRQ_EN__POS 1

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_IRQENABLE__CS_IRQ_EN   
 *
 * @BRIEF        Virtual channel - Check-Sum of the payload mismatch 
 *               detection - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_IRQENABLE__CS_IRQ_EN BITFIELD(0, 0)
#define DSI_PROTOCOL_ENGINE__DSI_VC_IRQENABLE__CS_IRQ_EN__POS 0

    /* 
     * List of register bitfields values for component instance DSS_SS_FROM_L3__DSI_PROTOCOL_ENGINE2
     *
     */

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_SYSCONFIG__CLOCKACTIVITY__OCPFUNCOFF
 *
 * @BRIEF        OCP and Functional clocks can be switched off - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_SYSCONFIG__CLOCKACTIVITY__OCPFUNCOFF 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_SYSCONFIG__CLOCKACTIVITY__FUNCOFF
 *
 * @BRIEF        Functional clocks can be switched off and OCP clocks are 
 *               maintained during wake up period - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_SYSCONFIG__CLOCKACTIVITY__FUNCOFF 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_SYSCONFIG__CLOCKACTIVITY__OCPOFF
 *
 * @BRIEF        OCP clocks can be switched off and Functional clocks are 
 *               maintained during wake up period - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_SYSCONFIG__CLOCKACTIVITY__OCPOFF 0x2ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_SYSCONFIG__CLOCKACTIVITY__OCPFUNCON
 *
 * @BRIEF        OCP and Functional clocks are maintained during wake up 
 *               period - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_SYSCONFIG__CLOCKACTIVITY__OCPFUNCON 0x3ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_SYSCONFIG__SIDLEMODE__FIDLE
 *
 * @BRIEF        Force-idle. An idle request is acknowledged unconditionally 
 *               - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_SYSCONFIG__SIDLEMODE__FIDLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_SYSCONFIG__SIDLEMODE__NIDLE
 *
 * @BRIEF        No-idle. An idle request is never acknowledged - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_SYSCONFIG__SIDLEMODE__NIDLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_SYSCONFIG__SIDLEMODE__SIDLE
 *
 * @BRIEF        Smart-idle. Acknowledgement to an idle request is given 
 *               based on the internal activity of the module. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_SYSCONFIG__SIDLEMODE__SIDLE 0x2ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_SYSCONFIG__SIDLEMODE__RES
 *
 * @BRIEF        Reserved - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_SYSCONFIG__SIDLEMODE__RES 0x3ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_SYSCONFIG__ENWAKEUP__WAKEUPDIS
 *
 * @BRIEF        Wakeup is disabled - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_SYSCONFIG__ENWAKEUP__WAKEUPDIS 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_SYSCONFIG__ENWAKEUP__WAKEUPENB
 *
 * @BRIEF        Wakeup is enabled - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_SYSCONFIG__ENWAKEUP__WAKEUPENB 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_SYSCONFIG__SOFT_RESET__NORMAL
 *
 * @BRIEF        Normal mode. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_SYSCONFIG__SOFT_RESET__NORMAL 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_SYSCONFIG__SOFT_RESET__RESET
 *
 * @BRIEF        The module is reset - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_SYSCONFIG__SOFT_RESET__RESET 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_SYSCONFIG__AUTO_IDLE__FREE
 *
 * @BRIEF        OCP clock is free-running. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_SYSCONFIG__AUTO_IDLE__FREE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_SYSCONFIG__AUTO_IDLE__GATED
 *
 * @BRIEF        Automatic OCP clock gating strategy is applied based on the 
 *               OCP interface activity. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_SYSCONFIG__AUTO_IDLE__GATED 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_SYSSTATUS__RESET_DONE__RESETONGOING
 *
 * @BRIEF        Internal module reset is on going. - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_SYSSTATUS__RESET_DONE__RESETONGOING 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_SYSSTATUS__RESET_DONE__RESETCOMPLETED
 *
 * @BRIEF        Reset completed. - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_SYSSTATUS__RESET_DONE__RESETCOMPLETED 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_IRQSTATUS__TE1_LINE_IRQ__FALSE
 *
 * @BRIEF        READS: Event is false. 
 *               WRITES: Status bit unchanged. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_IRQSTATUS__TE1_LINE_IRQ__FALSE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_IRQSTATUS__TE1_LINE_IRQ__TRUE
 *
 * @BRIEF        READS: Event is true (pending). 
 *               WRITES: Status bit is reset. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_IRQSTATUS__TE1_LINE_IRQ__TRUE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_IRQSTATUS__TE0_LINE_IRQ__FALSE
 *
 * @BRIEF        READS: Event is false. 
 *               WRITES: Status bit unchanged. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_IRQSTATUS__TE0_LINE_IRQ__FALSE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_IRQSTATUS__TE0_LINE_IRQ__TRUE
 *
 * @BRIEF        READS: Event is true (pending). 
 *               WRITES: Status bit is reset. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_IRQSTATUS__TE0_LINE_IRQ__TRUE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_IRQSTATUS__TA_TO_IRQ__FALSE
 *
 * @BRIEF        READS: Event is false. 
 *               WRITES: Status bit unchanged. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_IRQSTATUS__TA_TO_IRQ__FALSE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_IRQSTATUS__TA_TO_IRQ__TRUE
 *
 * @BRIEF        READS: Event is true (pending). 
 *               WRITES: Status bit is reset. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_IRQSTATUS__TA_TO_IRQ__TRUE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_IRQSTATUS__LDO_POWER_GOOD_IRQ__FALSE
 *
 * @BRIEF        READS: Event is false. 
 *               WRITES: Status bit unchanged. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_IRQSTATUS__LDO_POWER_GOOD_IRQ__FALSE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_IRQSTATUS__LDO_POWER_GOOD_IRQ__TRUE
 *
 * @BRIEF        READS: Event is true (pending). 
 *               WRITES: Status bit is reset. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_IRQSTATUS__LDO_POWER_GOOD_IRQ__TRUE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_IRQSTATUS__SYNC_LOST_IRQ__FALSE
 *
 * @BRIEF        READS: Event is false. 
 *               WRITES: Status bit unchanged. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_IRQSTATUS__SYNC_LOST_IRQ__FALSE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_IRQSTATUS__SYNC_LOST_IRQ__TRUE
 *
 * @BRIEF        READS: Event is true (pending). 
 *               WRITES: Status bit is reset. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_IRQSTATUS__SYNC_LOST_IRQ__TRUE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_IRQSTATUS__ACK_TRIGGER_IRQ__FALSE
 *
 * @BRIEF        READS: Event is false. 
 *               WRITES: Status bit unchanged. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_IRQSTATUS__ACK_TRIGGER_IRQ__FALSE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_IRQSTATUS__ACK_TRIGGER_IRQ__TRUE
 *
 * @BRIEF        READS: Event is true (pending). 
 *               WRITES: Status bit is reset. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_IRQSTATUS__ACK_TRIGGER_IRQ__TRUE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_IRQSTATUS__TE_TRIGGER_IRQ__FALSE
 *
 * @BRIEF        READS: Event is false. 
 *               WRITES: Status bit unchanged. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_IRQSTATUS__TE_TRIGGER_IRQ__FALSE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_IRQSTATUS__TE_TRIGGER_IRQ__TRUE
 *
 * @BRIEF        READS: Event is true (pending). 
 *               WRITES: Status bit is reset. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_IRQSTATUS__TE_TRIGGER_IRQ__TRUE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_IRQSTATUS__LP_RX_TO_IRQ__FALSE
 *
 * @BRIEF        READS: Event is false. 
 *               WRITES: Status bit unchanged. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_IRQSTATUS__LP_RX_TO_IRQ__FALSE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_IRQSTATUS__LP_RX_TO_IRQ__TRUE
 *
 * @BRIEF        READS: Event is true (pending). 
 *               WRITES: Status bit is reset. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_IRQSTATUS__LP_RX_TO_IRQ__TRUE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_IRQSTATUS__HS_TX_TO_IRQ__FALSE
 *
 * @BRIEF        READS: Event is false. 
 *               WRITES: Status bit unchanged. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_IRQSTATUS__HS_TX_TO_IRQ__FALSE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_IRQSTATUS__HS_TX_TO_IRQ__TRUE
 *
 * @BRIEF        READS: Event is true (pending). 
 *               WRITES: Status bit is reset. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_IRQSTATUS__HS_TX_TO_IRQ__TRUE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_IRQSTATUS__COMPLEXIO_ERR_IRQ__FALSE
 *
 * @BRIEF        READS: Event is false. - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_IRQSTATUS__COMPLEXIO_ERR_IRQ__FALSE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_IRQSTATUS__COMPLEXIO_ERR_IRQ__TRUE
 *
 * @BRIEF        READS: Event is true (pending). - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_IRQSTATUS__COMPLEXIO_ERR_IRQ__TRUE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_IRQSTATUS__PLL_RECAL_IRQ__FALSE
 *
 * @BRIEF        READS: Event is false. 
 *               WRITES: Status bit unchanged. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_IRQSTATUS__PLL_RECAL_IRQ__FALSE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_IRQSTATUS__PLL_RECAL_IRQ__TRUE
 *
 * @BRIEF        READS: Event is true (pending). 
 *               WRITES: Status bit is reset. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_IRQSTATUS__PLL_RECAL_IRQ__TRUE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_IRQSTATUS__PLL_UNLOCK_IRQ__FALSE
 *
 * @BRIEF        READS: Event is false. 
 *               WRITES: Status bit unchanged. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_IRQSTATUS__PLL_UNLOCK_IRQ__FALSE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_IRQSTATUS__PLL_UNLOCK_IRQ__TRUE
 *
 * @BRIEF        READS: Event is true (pending). 
 *               WRITES: Status bit is reset. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_IRQSTATUS__PLL_UNLOCK_IRQ__TRUE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_IRQSTATUS__PLL_LOCK_IRQ__FALSE
 *
 * @BRIEF        READS: Event is false. 
 *               WRITES: Status bit unchanged. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_IRQSTATUS__PLL_LOCK_IRQ__FALSE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_IRQSTATUS__PLL_LOCK_IRQ__TRUE
 *
 * @BRIEF        READS: Event is true (pending). 
 *               WRITES: Status bit is reset. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_IRQSTATUS__PLL_LOCK_IRQ__TRUE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_IRQSTATUS__RESYNCHRONIZATION_IRQ__FALSE
 *
 * @BRIEF        READS: Event is false. 
 *               WRITES: Status bit unchanged. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_IRQSTATUS__RESYNCHRONIZATION_IRQ__FALSE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_IRQSTATUS__RESYNCHRONIZATION_IRQ__TRUE
 *
 * @BRIEF        READS: Event is true (pending). 
 *               WRITES: Status bit is reset. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_IRQSTATUS__RESYNCHRONIZATION_IRQ__TRUE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_IRQSTATUS__WAKEUP_IRQ__FALSE
 *
 * @BRIEF        READS: Event is false. 
 *               WRITES: Status bit unchanged. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_IRQSTATUS__WAKEUP_IRQ__FALSE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_IRQSTATUS__WAKEUP_IRQ__TRUE
 *
 * @BRIEF        READS: Event is true (pending). 
 *               WRITES: Status bit is reset. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_IRQSTATUS__WAKEUP_IRQ__TRUE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_IRQSTATUS__VIRTUAL_CHANNEL3_IRQ__FALSE
 *
 * @BRIEF        READS: Event is false. - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_IRQSTATUS__VIRTUAL_CHANNEL3_IRQ__FALSE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_IRQSTATUS__VIRTUAL_CHANNEL3_IRQ__TRUE
 *
 * @BRIEF        READS: Event is true (pending). - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_IRQSTATUS__VIRTUAL_CHANNEL3_IRQ__TRUE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_IRQSTATUS__VIRTUAL_CHANNEL2_IRQ__FALSE
 *
 * @BRIEF        READS: Event is false. - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_IRQSTATUS__VIRTUAL_CHANNEL2_IRQ__FALSE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_IRQSTATUS__VIRTUAL_CHANNEL2_IRQ__TRUE
 *
 * @BRIEF        READS: Event is true (pending). - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_IRQSTATUS__VIRTUAL_CHANNEL2_IRQ__TRUE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_IRQSTATUS__VIRTUAL_CHANNEL1_IRQ__FALSE
 *
 * @BRIEF        READS: Event is false. - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_IRQSTATUS__VIRTUAL_CHANNEL1_IRQ__FALSE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_IRQSTATUS__VIRTUAL_CHANNEL1_IRQ__TRUE
 *
 * @BRIEF        READS: Event is true (pending). - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_IRQSTATUS__VIRTUAL_CHANNEL1_IRQ__TRUE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_IRQSTATUS__VIRTUAL_CHANNEL0_IRQ__FALSE
 *
 * @BRIEF        READS: Event is false. - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_IRQSTATUS__VIRTUAL_CHANNEL0_IRQ__FALSE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_IRQSTATUS__VIRTUAL_CHANNEL0_IRQ__TRUE
 *
 * @BRIEF        READS: Event is true (pending). - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_IRQSTATUS__VIRTUAL_CHANNEL0_IRQ__TRUE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_IRQENABLE__TE1_LINE_IRQ_EN__DISABLE
 *
 * @BRIEF        Event is masked - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_IRQENABLE__TE1_LINE_IRQ_EN__DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_IRQENABLE__TE1_LINE_IRQ_EN__ENABLE
 *
 * @BRIEF        Event generates an interrupt when it occurs - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_IRQENABLE__TE1_LINE_IRQ_EN__ENABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_IRQENABLE__TE0_LINE_IRQ_EN__DISABLE
 *
 * @BRIEF        Event is masked - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_IRQENABLE__TE0_LINE_IRQ_EN__DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_IRQENABLE__TE0_LINE_IRQ_EN__ENABLE
 *
 * @BRIEF        Event generates an interrupt when it occurs - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_IRQENABLE__TE0_LINE_IRQ_EN__ENABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_IRQENABLE__TA_TO_IRQ_EN__DISABLE
 *
 * @BRIEF        Event is masked - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_IRQENABLE__TA_TO_IRQ_EN__DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_IRQENABLE__TA_TO_IRQ_EN__ENABLE
 *
 * @BRIEF        Event generates an interrupt when it occurs - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_IRQENABLE__TA_TO_IRQ_EN__ENABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_IRQENABLE__LDO_POWER_GOOD_IRQ_EN__DISABLE
 *
 * @BRIEF        Event is masked - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_IRQENABLE__LDO_POWER_GOOD_IRQ_EN__DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_IRQENABLE__LDO_POWER_GOOD_IRQ_EN__ENABLE
 *
 * @BRIEF        Event generates an interrupt when it occurs - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_IRQENABLE__LDO_POWER_GOOD_IRQ_EN__ENABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_IRQENABLE__SYNC_LOST_IRQ_EN__DISABLE
 *
 * @BRIEF        Event is masked - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_IRQENABLE__SYNC_LOST_IRQ_EN__DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_IRQENABLE__SYNC_LOST_IRQ_EN__ENABLE
 *
 * @BRIEF        Event generates an interrupt when it occurs - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_IRQENABLE__SYNC_LOST_IRQ_EN__ENABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_IRQENABLE__ACK_TRIGGER_IRQ_EN__DISABLE
 *
 * @BRIEF        Event is masked - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_IRQENABLE__ACK_TRIGGER_IRQ_EN__DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_IRQENABLE__ACK_TRIGGER_IRQ_EN__ENABLE
 *
 * @BRIEF        Event generates an interrupt when it occurs - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_IRQENABLE__ACK_TRIGGER_IRQ_EN__ENABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_IRQENABLE__TE_TRIGGER_IRQ_EN__DISABLE
 *
 * @BRIEF        Event is masked - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_IRQENABLE__TE_TRIGGER_IRQ_EN__DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_IRQENABLE__TE_TRIGGER_IRQ_EN__ENABLE
 *
 * @BRIEF        Event generates an interrupt when it occurs - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_IRQENABLE__TE_TRIGGER_IRQ_EN__ENABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_IRQENABLE__LP_RX_TO_IRQ_EN__DISABLE
 *
 * @BRIEF        Event is masked - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_IRQENABLE__LP_RX_TO_IRQ_EN__DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_IRQENABLE__LP_RX_TO_IRQ_EN__ENABLE
 *
 * @BRIEF        Event generates an interrupt when it occurs - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_IRQENABLE__LP_RX_TO_IRQ_EN__ENABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_IRQENABLE__HS_TX_TO_IRQ_EN__DISABLE
 *
 * @BRIEF        Event is masked - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_IRQENABLE__HS_TX_TO_IRQ_EN__DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_IRQENABLE__HS_TX_TO_IRQ_EN__ENABLE
 *
 * @BRIEF        Event generates an interrupt when it occurs - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_IRQENABLE__HS_TX_TO_IRQ_EN__ENABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_IRQENABLE__PLL_RECAL_IRQ_EN__DISABLE
 *
 * @BRIEF        Event is masked - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_IRQENABLE__PLL_RECAL_IRQ_EN__DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_IRQENABLE__PLL_RECAL_IRQ_EN__ENABLE
 *
 * @BRIEF        Event generates an interrupt when it occurs - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_IRQENABLE__PLL_RECAL_IRQ_EN__ENABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_IRQENABLE__PLL_UNLOCK_IRQ_EN__DISABLE
 *
 * @BRIEF        Event is masked - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_IRQENABLE__PLL_UNLOCK_IRQ_EN__DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_IRQENABLE__PLL_UNLOCK_IRQ_EN__ENABLE
 *
 * @BRIEF        Event generates an interrupt when it occurs - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_IRQENABLE__PLL_UNLOCK_IRQ_EN__ENABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_IRQENABLE__PLL_LOCK_IRQ_EN__DISABLE
 *
 * @BRIEF        Event is masked - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_IRQENABLE__PLL_LOCK_IRQ_EN__DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_IRQENABLE__PLL_LOCK_IRQ_EN__ENABLE
 *
 * @BRIEF        Event generates an interrupt when it occurs - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_IRQENABLE__PLL_LOCK_IRQ_EN__ENABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_IRQENABLE__RESYNCHRONIZATION_IRQ_EN__DISABLE
 *
 * @BRIEF        Event is masked - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_IRQENABLE__RESYNCHRONIZATION_IRQ_EN__DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_IRQENABLE__RESYNCHRONIZATION_IRQ_EN__ENABLE
 *
 * @BRIEF        Event generates an interrupt when it occurs - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_IRQENABLE__RESYNCHRONIZATION_IRQ_EN__ENABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_IRQENABLE__WAKEUP_IRQ_EN__DISABLE
 *
 * @BRIEF        Event is masked - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_IRQENABLE__WAKEUP_IRQ_EN__DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_IRQENABLE__WAKEUP_IRQ_EN__ENABLE
 *
 * @BRIEF        Event generates an interrupt when it occurs - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_IRQENABLE__WAKEUP_IRQ_EN__ENABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_CTRL__DISPC_UPDATE_SYNC__DISABLE
 *
 * @BRIEF        Dispc_Update_Sync signal is not used. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_CTRL__DISPC_UPDATE_SYNC__DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_CTRL__DISPC_UPDATE_SYNC__ENABLE
 *
 * @BRIEF        Dispc_Update_Sync signal is used. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_CTRL__DISPC_UPDATE_SYNC__ENABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_CTRL__HSA_BLANKING_MODE__COMMAND_PACKET_TX_FIFO
 *
 * @BRIEF        Packets in TX FIFO are sent during HSA blanking period of 
 *               video mode or LPS is used. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_CTRL__HSA_BLANKING_MODE__COMMAND_PACKET_TX_FIFO 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_CTRL__HSA_BLANKING_MODE__HS_BLANKING_PACKET_ONLY
 *
 * @BRIEF        LONG BLANKING PACKETS only are used during HSA blanking 
 *               period of video mode. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_CTRL__HSA_BLANKING_MODE__HS_BLANKING_PACKET_ONLY 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_CTRL__HBP_BLANKING_MODE__COMMAND_PACKET_TX_FIFO
 *
 * @BRIEF        Packets in TX FIFO are sent during HBP blanking period of 
 *               video mode or LPS is used. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_CTRL__HBP_BLANKING_MODE__COMMAND_PACKET_TX_FIFO 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_CTRL__HBP_BLANKING_MODE__HS_BLANKING_PACKET_ONLY
 *
 * @BRIEF        LONG BLANKING PACKETS only are used during HBP blanking 
 *               period of video mode. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_CTRL__HBP_BLANKING_MODE__HS_BLANKING_PACKET_ONLY 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_CTRL__HFP_BLANKING_MODE__COMMAND_PACKET_TX_FIFO
 *
 * @BRIEF        Packets in TX FIFO are sent during HFP blanking period of 
 *               video mode or LPS is used. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_CTRL__HFP_BLANKING_MODE__COMMAND_PACKET_TX_FIFO 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_CTRL__HFP_BLANKING_MODE__HS_BLANKING_PACKET_ONLY
 *
 * @BRIEF        LONG BLANKING PACKETS only are used during HFP blanking 
 *               period of video mode. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_CTRL__HFP_BLANKING_MODE__HS_BLANKING_PACKET_ONLY 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_CTRL__BLANKING_MODE__LPS
 *
 * @BRIEF        LPS is used during blanking periods of video mode (except 
 *               HSA, HBP, HFP defined in HSA_BLANKING_MODE,  
 *               HBP_BLANKING_MODE AND HFP_BLANKING_MODE respectively) when 
 *               there is no command mode data in TX FIFO ready to be sent. 
 *               So blanking periods can be different during the frame 
 *               depending on the TX FIFO. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_CTRL__BLANKING_MODE__LPS 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_CTRL__BLANKING_MODE__HS
 *
 * @BRIEF        LONG BLANKING PACKETS are used during blanking periods of 
 *               video mode (except HSA, HBP, HFP defined in 
 *               HSA_BLANKING_MODE,  HBP_BLANKING_MODE AND HFP_BLANKING_MODE 
 *               respectively)  regardless of the packets present in the TX 
 *               FIFO ready to be sent - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_CTRL__BLANKING_MODE__HS 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_CTRL__EOT_ENABLE__EOT_OFF
 *
 * @BRIEF        No EOT packets - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_CTRL__EOT_ENABLE__EOT_OFF 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_CTRL__EOT_ENABLE__EOT_ON
 *
 * @BRIEF        EOT packet is sent at all HS to LP transitions. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_CTRL__EOT_ENABLE__EOT_ON 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_CTRL__VP_HSYNC_END__DISABLE
 *
 * @BRIEF        Disabled. No HSYNC END short packet is generated. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_CTRL__VP_HSYNC_END__DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_CTRL__VP_HSYNC_END__ENABLE
 *
 * @BRIEF        Enabled. While the HSYNC END pulse is detected, the 
 *               associated short packet HSYNC END is generated. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_CTRL__VP_HSYNC_END__ENABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_CTRL__VP_HSYNC_START__DISABLE
 *
 * @BRIEF        Disabled. No HSYNC START short packet is generated. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_CTRL__VP_HSYNC_START__DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_CTRL__VP_HSYNC_START__ENABLE
 *
 * @BRIEF        Enabled. While the HSYNC start pulse is detected, the 
 *               associated short packet HSYNC START is generated. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_CTRL__VP_HSYNC_START__ENABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_CTRL__VP_VSYNC_END__DISABLE
 *
 * @BRIEF        Disabled. No VSYNC END short packet is generated. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_CTRL__VP_VSYNC_END__DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_CTRL__VP_VSYNC_END__ENABLE
 *
 * @BRIEF        Enabled. While the VSYNC END pulse is detected, the 
 *               associated short packet VSYNC END is generated. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_CTRL__VP_VSYNC_END__ENABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_CTRL__VP_VSYNC_START__DISABLE
 *
 * @BRIEF        Disabled. No VSYNC START short packet is generated. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_CTRL__VP_VSYNC_START__DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_CTRL__VP_VSYNC_START__ENABLE
 *
 * @BRIEF        Enabled. While the VSYNC START pulse is detected, the 
 *               associated short packet VSYNC START is generated. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_CTRL__VP_VSYNC_START__ENABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_CTRL__TRIGGER_RESET_MODE__SYNCHRONIZED
 *
 * @BRIEF        Synchronized: the mode is only valid if there is virtual 
 *               channel using the video mode and it is active. 
 *               The principal is to wait for the current video frame to be 
 *               transferred on the link. Any data received after the VSYNC 
 *               are ignored.  
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_CTRL__TRIGGER_RESET_MODE__SYNCHRONIZED 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_CTRL__TRIGGER_RESET_MODE__IMMEDIATE
 *
 * @BRIEF        Immediate: all pending requests in TX FIFO are taken into 
 *               account for transfer scheduling, the RX FIFO is ignored, and 
 *               the data from video port are ignored as soon as possible. 
 *               Only the current transfer on DSI link and already scheduled 
 *               ones are transmitted. All the other transfers are discarded. 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_CTRL__TRIGGER_RESET_MODE__IMMEDIATE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_CTRL__LINE_BUFFER__F0
 *
 * @BRIEF        No line buffer - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_CTRL__LINE_BUFFER__F0 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_CTRL__LINE_BUFFER__F1
 *
 * @BRIEF        1 line buffer - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_CTRL__LINE_BUFFER__F1 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_CTRL__LINE_BUFFER__F2
 *
 * @BRIEF        2 line buffers - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_CTRL__LINE_BUFFER__F2 0x2ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_CTRL__VP_VSYNC_POL__LOW
 *
 * @BRIEF        VSYNC signal on the video port is active low. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_CTRL__VP_VSYNC_POL__LOW 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_CTRL__VP_VSYNC_POL__HIGH
 *
 * @BRIEF        VSYNC signal on the video port is active high. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_CTRL__VP_VSYNC_POL__HIGH 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_CTRL__VP_HSYNC_POL__LOW
 *
 * @BRIEF        HSYNC signal on the video port is active low. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_CTRL__VP_HSYNC_POL__LOW 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_CTRL__VP_HSYNC_POL__HIGH
 *
 * @BRIEF        HSYNC signal on the video port is active high. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_CTRL__VP_HSYNC_POL__HIGH 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_CTRL__VP_DE_POL__LOW
 *
 * @BRIEF        DE signal on the video port is active low. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_CTRL__VP_DE_POL__LOW 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_CTRL__VP_DE_POL__HIGH
 *
 * @BRIEF        DE signal on the video port is active high. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_CTRL__VP_DE_POL__HIGH 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_CTRL__VP_CLK_POL__FALLING
 *
 * @BRIEF        The DSI Protocol Engine module captures the data on the VP 
 *               on the pixel clock falling edge. The module connected to the 
 *               VP shall drive the data on the pixel clock rising edge. - 
 *               (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_CTRL__VP_CLK_POL__FALLING 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_CTRL__VP_CLK_POL__RISING
 *
 * @BRIEF        The DSI Protocol Engine module captures the data on the VP 
 *               on the pixel clock raising edge. The module connected to the 
 *               VP shall drive the data on the pixel clock falling edge. - 
 *               (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_CTRL__VP_CLK_POL__RISING 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_CTRL__VP_DATA_BUS_WIDTH__F16
 *
 * @BRIEF        16-bits data width (LSB of the 24-bit video port data bus) - 
 *               (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_CTRL__VP_DATA_BUS_WIDTH__F16 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_CTRL__VP_DATA_BUS_WIDTH__F18
 *
 * @BRIEF        18-bits data width (LSB of the 24-bit video port data bus) - 
 *               (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_CTRL__VP_DATA_BUS_WIDTH__F18 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_CTRL__VP_DATA_BUS_WIDTH__F24
 *
 * @BRIEF        24-bits data width (LSB of the 24-bit video port data bus) - 
 *               (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_CTRL__VP_DATA_BUS_WIDTH__F24 0x2ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_CTRL__TRIGGER_RESET__DISABLE
 *
 * @BRIEF        READS: Reset trigger generation is completed. It is reset by 
 *               HW when it is completed. 
 *               WRITES: Cancellation of the request for Reset trigger 
 *               generation (maybe too late since it is already on going) - 
 *               (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_CTRL__TRIGGER_RESET__DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_CTRL__TRIGGER_RESET__ENABLE
 *
 * @BRIEF        READS: Generation of the reset trigger has been requested by 
 *               user (could be on going but not completed yet). 
 *               WRITES: Request for Reset trigger to be sent to the 
 *               peripheral. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_CTRL__TRIGGER_RESET__ENABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_CTRL__VP_CLK_RATIO__RATIO2
 *
 * @BRIEF        The clock VP.PCLK is the clock VP.CLK divided by 2. The duty 
 *               cycle of VP.PCLK is 50/50. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_CTRL__VP_CLK_RATIO__RATIO2 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_CTRL__VP_CLK_RATIO__RATIO3ANDHIGHER
 *
 * @BRIEF        The clock VP.PCLK is the clock VP.CLK divided by 3 or more. 
 *               The duty cycle of VP.PCLK is not 50/50 for odd ratio numbers 
 *               (3,5,7,...). - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_CTRL__VP_CLK_RATIO__RATIO3ANDHIGHER 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_CTRL__TX_FIFO_ARBITRATION__ROUNDROBIN
 *
 * @BRIEF        Round-Robin Scheme is used - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_CTRL__TX_FIFO_ARBITRATION__ROUNDROBIN 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_CTRL__TX_FIFO_ARBITRATION__SEQUENTIAL
 *
 * @BRIEF        Sequential Scheme is used - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_CTRL__TX_FIFO_ARBITRATION__SEQUENTIAL 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_CTRL__ECC_RX_EN__DISABLE
 *
 * @BRIEF        Disabled - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_CTRL__ECC_RX_EN__DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_CTRL__ECC_RX_EN__ENABLE
 *
 * @BRIEF        Enabled - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_CTRL__ECC_RX_EN__ENABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_CTRL__CS_RX_EN__DISABLE
 *
 * @BRIEF        Disabled - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_CTRL__CS_RX_EN__DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_CTRL__CS_RX_EN__ENABLE
 *
 * @BRIEF        Enabled - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_CTRL__CS_RX_EN__ENABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_CTRL__IF_EN__DISABLE
 *
 * @BRIEF        The interface is disabled. If one of the virtual channel 
 *               uses the video mode with the video port to receive the data, 
 *               the DSI protocol engines is disabled when the next VSYNC is 
 *               received and all the data in the FIFO for the other virtual 
 *               channels in command mode are sent to the peripherals (if 
 *               BTA_EN is enabled, the DSI protocol needs to wait for the 
 *               response and BTA from the peripheral before disabling all 
 *               the internal logic since an acknowledge is requested). - 
 *               (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_CTRL__IF_EN__DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_CTRL__IF_EN__ENABLE
 *
 * @BRIEF        The interface is enabled immediately, the data acquisition 
 *               on the video port starts on the next VSYNC (video mode) or 
 *               first data received in the Slave port FIFO (command mode).  
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_CTRL__IF_EN__ENABLE  0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_GNQ__NB_VIDEO_PORTS__SINGLE_VP
 *
 * @BRIEF        Video port 1 only is present - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_GNQ__NB_VIDEO_PORTS__SINGLE_VP 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_GNQ__NB_VIDEO_PORTS__DUAL_VP
 *
 * @BRIEF        Video port 1 and video port 2 are present - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_GNQ__NB_VIDEO_PORTS__DUAL_VP 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_GNQ__VP2_NB_LINE_BUFFER__F0
 *
 * @BRIEF        No line buffer - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_GNQ__VP2_NB_LINE_BUFFER__F0 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_GNQ__VP2_NB_LINE_BUFFER__F1
 *
 * @BRIEF        1 line buffer of the size defined in LINE_BUFFER_SIZE - 
 *               (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_GNQ__VP2_NB_LINE_BUFFER__F1 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_GNQ__VP2_NB_LINE_BUFFER__F2
 *
 * @BRIEF        2 line buffers of the size defined in LINE_BUFFER_SIZE - 
 *               (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_GNQ__VP2_NB_LINE_BUFFER__F2 0x2ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_GNQ__VP2_LINE_BUFFER_SIZE__F1
 *
 * @BRIEF        512x24-bits, 682x18-bits, 768x16bits (memory of 384x32-bits) 
 *               - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_GNQ__VP2_LINE_BUFFER_SIZE__F1 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_GNQ__VP2_LINE_BUFFER_SIZE__F2
 *
 * @BRIEF        682x24-bits, 910x18-bits, 1024x16bits (memory of 
 *               512x32-bits) - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_GNQ__VP2_LINE_BUFFER_SIZE__F2 0x2ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_GNQ__VP2_LINE_BUFFER_SIZE__F3
 *
 * @BRIEF        853x24-bits, 1137x18-bits, 1280x16bits (memory of 
 *               640x32-bits) - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_GNQ__VP2_LINE_BUFFER_SIZE__F3 0x3ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_GNQ__VP2_LINE_BUFFER_SIZE__F4
 *
 * @BRIEF        1024x24-bits, 1365x18-bits, 1536x16bits (memory of 
 *               768x32-bits) - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_GNQ__VP2_LINE_BUFFER_SIZE__F4 0x4ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_GNQ__VP2_LINE_BUFFER_SIZE__F5
 *
 * @BRIEF        1194x24-bits, 1592x18-bits, 1792x16bits (memory of 
 *               896x32-bits) - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_GNQ__VP2_LINE_BUFFER_SIZE__F5 0x5ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_GNQ__VP2_LINE_BUFFER_SIZE__F6
 *
 * @BRIEF        1365x24-bits, 1820x18-bits, 2048x16bits (memory of 
 *               1024x32-bits) - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_GNQ__VP2_LINE_BUFFER_SIZE__F6 0x6ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_GNQ__VP1_NB_LINE_BUFFER__F0
 *
 * @BRIEF        No line buffer - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_GNQ__VP1_NB_LINE_BUFFER__F0 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_GNQ__VP1_NB_LINE_BUFFER__F1
 *
 * @BRIEF        1 line buffer of the size defined in LINE_BUFFER_SIZE - 
 *               (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_GNQ__VP1_NB_LINE_BUFFER__F1 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_GNQ__VP1_NB_LINE_BUFFER__F2
 *
 * @BRIEF        2 line buffers of the size defined in LINE_BUFFER_SIZE - 
 *               (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_GNQ__VP1_NB_LINE_BUFFER__F2 0x2ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_GNQ__VP1_LINE_BUFFER_SIZE__F1
 *
 * @BRIEF        512x24-bits, 682x18-bits, 768x16bits (memory of 384x32-bits) 
 *               - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_GNQ__VP1_LINE_BUFFER_SIZE__F1 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_GNQ__VP1_LINE_BUFFER_SIZE__F2
 *
 * @BRIEF        682x24-bits, 910x18-bits, 1024x16bits (memory of 
 *               512x32-bits) - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_GNQ__VP1_LINE_BUFFER_SIZE__F2 0x2ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_GNQ__VP1_LINE_BUFFER_SIZE__F3
 *
 * @BRIEF        853x24-bits, 1137x18-bits, 1280x16bits (memory of 
 *               640x32-bits) - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_GNQ__VP1_LINE_BUFFER_SIZE__F3 0x3ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_GNQ__VP1_LINE_BUFFER_SIZE__F4
 *
 * @BRIEF        1024x24-bits, 1365x18-bits, 1536x16bits (memory of 
 *               768x32-bits) - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_GNQ__VP1_LINE_BUFFER_SIZE__F4 0x4ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_GNQ__VP1_LINE_BUFFER_SIZE__F5
 *
 * @BRIEF        1194x24-bits, 1592x18-bits, 1792x16bits (memory of 
 *               896x32-bits) - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_GNQ__VP1_LINE_BUFFER_SIZE__F5 0x5ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_GNQ__VP1_LINE_BUFFER_SIZE__F6
 *
 * @BRIEF        1365x24-bits, 1820x18-bits, 2048x16bits (memory of 
 *               1024x32-bits) - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_GNQ__VP1_LINE_BUFFER_SIZE__F6 0x6ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_GNQ__NB_DATA_LANES__F1
 *
 * @BRIEF        1 Data lane - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_GNQ__NB_DATA_LANES__F1 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_GNQ__NB_DATA_LANES__F2
 *
 * @BRIEF        2 Data lanes - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_GNQ__NB_DATA_LANES__F2 0x2ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_GNQ__NB_DATA_LANES__F3
 *
 * @BRIEF        3 Data lanes - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_GNQ__NB_DATA_LANES__F3 0x3ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_GNQ__NB_DATA_LANES__F4
 *
 * @BRIEF        4 Data lanes - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_GNQ__NB_DATA_LANES__F4 0x4ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_GNQ__NB_DMA_REQUEST__F0
 *
 * @BRIEF        No DMA request - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_GNQ__NB_DMA_REQUEST__F0 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_GNQ__NB_DMA_REQUEST__F1
 *
 * @BRIEF        1 DMA request - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_GNQ__NB_DMA_REQUEST__F1 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_GNQ__NB_DMA_REQUEST__F2
 *
 * @BRIEF        2 DMA requests - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_GNQ__NB_DMA_REQUEST__F2 0x2ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_GNQ__NB_DMA_REQUEST__F3
 *
 * @BRIEF        3 DMA requests - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_GNQ__NB_DMA_REQUEST__F3 0x3ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_GNQ__NB_DMA_REQUEST__F4
 *
 * @BRIEF        4 DMA requests - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_GNQ__NB_DMA_REQUEST__F4 0x4ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_GNQ__RX_FIFODEPTH__F32
 *
 * @BRIEF        32x 33 bits - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_GNQ__RX_FIFODEPTH__F32 0x4ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_GNQ__RX_FIFODEPTH__F64
 *
 * @BRIEF        64x 33 bits - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_GNQ__RX_FIFODEPTH__F64 0x5ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_GNQ__RX_FIFODEPTH__F128
 *
 * @BRIEF        128 x 33 bits - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_GNQ__RX_FIFODEPTH__F128 0x6ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_GNQ__RX_FIFODEPTH__F256
 *
 * @BRIEF        256 x 33 bits - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_GNQ__RX_FIFODEPTH__F256 0x7ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_GNQ__TX_FIFODEPTH__F32
 *
 * @BRIEF        32x 33 bits - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_GNQ__TX_FIFODEPTH__F32 0x4ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_GNQ__TX_FIFODEPTH__F64
 *
 * @BRIEF        64x 33 bits - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_GNQ__TX_FIFODEPTH__F64 0x5ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_GNQ__TX_FIFODEPTH__F128
 *
 * @BRIEF        128 x 33 bits - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_GNQ__TX_FIFODEPTH__F128 0x6ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_GNQ__TX_FIFODEPTH__F256
 *
 * @BRIEF        256 x 33 bits - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_GNQ__TX_FIFODEPTH__F256 0x7ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG1__SHADOWING__DISABLE
 *
 * @BRIEF        Disabled. The writes to the first 3 registers of the complex 
 *               IO address map is done like the other SCP registers. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG1__SHADOWING__DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG1__SHADOWING__ENABLE
 *
 * @BRIEF        Enabled. The writes to the first 3 registers of the complex 
 *               IO address map is done only when the GObit is set and when 
 *               the  signal DISPCUpdataSync from the display controller 
 *               module  is active. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG1__SHADOWING__ENABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG1__GOBIT__RESET
 *
 * @BRIEF        Resets the GOBIT. The hardware has finished the update of 
 *               the shadow SCP registers. The bit is reset by Hardware. The 
 *               SW can reset the bit in case the user decides to abort it. 
 *               There is no guarantee that the SW reset is done before the 
 *               transfer of the values to the complex IO. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG1__GOBIT__RESET 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG1__GOBIT__SET
 *
 * @BRIEF        Set the GOBIT. Only when the transfer of the new values for 
 *               the three first registers is completed (3, 2, 1, or 0 
 *               transfers are performed based on the number of registers to 
 *               update), the GOBIT is reset. The DISPCUpdateSync signal is 
 *               used to synchronize the update. The bit shall be set only 
 *               when it is in reset state. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG1__GOBIT__SET 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG1__RESET_DONE__RESETONGOING
 *
 * @BRIEF        Internal module reset is on going. - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG1__RESET_DONE__RESETONGOING 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG1__RESET_DONE__RESETCOMPLETED
 *
 * @BRIEF        Reset completed. - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG1__RESET_DONE__RESETCOMPLETED 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG1__PWR_CMD__STATE_OFF
 *
 * @BRIEF        Command to change to OFF state - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG1__PWR_CMD__STATE_OFF 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG1__PWR_CMD__STATE_ON
 *
 * @BRIEF        Command to change to ON state - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG1__PWR_CMD__STATE_ON 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG1__PWR_CMD__STATE_ULP
 *
 * @BRIEF        Command to change to Ultra Low Power state - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG1__PWR_CMD__STATE_ULP 0x2ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG1__PWR_STATUS__STATE_OFF
 *
 * @BRIEF        Complex IO in OFF state - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG1__PWR_STATUS__STATE_OFF 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG1__PWR_STATUS__STATE_ON
 *
 * @BRIEF        Complex IO in ON state - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG1__PWR_STATUS__STATE_ON 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG1__PWR_STATUS__STATE_ULP
 *
 * @BRIEF        Complex IO in Ultra Low Power state - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG1__PWR_STATUS__STATE_ULP 0x2ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG1__LDO_POWER_GOOD_STATE__SUPPLYDOWN
 *
 * @BRIEF        VDDALDODSIPLL power supply is down - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG1__LDO_POWER_GOOD_STATE__SUPPLYDOWN 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG1__LDO_POWER_GOOD_STATE__SUPPLYUP
 *
 * @BRIEF        VDDALDODSIPLL power supply is up - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG1__LDO_POWER_GOOD_STATE__SUPPLYUP 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG1__USE_LDO_EXTERNAL__INTERNALLDO
 *
 * @BRIEF        DSIPHY internal LDO is used. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG1__USE_LDO_EXTERNAL__INTERNALLDO 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG1__USE_LDO_EXTERNAL__EXTERNALLDO
 *
 * @BRIEF        External LDO is used. DSIPHY LDO is tri-stated. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG1__USE_LDO_EXTERNAL__EXTERNALLDO 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG1__DATA2_POL__PLUSMINUS
 *
 * @BRIEF        +/- pin order (DSI.DX=+ and DSi.DY=-) - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG1__DATA2_POL__PLUSMINUS 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG1__DATA2_POL__MINUSPLUS
 *
 * @BRIEF        -/+ pin order (DSI.DX=- and DSi.DY=+) - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG1__DATA2_POL__MINUSPLUS 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG1__DATA2_POSITION__NOT_USED
 *
 * @BRIEF        Not used/connected - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG1__DATA2_POSITION__NOT_USED 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG1__DATA2_POSITION__POSITION_1
 *
 * @BRIEF        Data lane 2 is at the position 1. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG1__DATA2_POSITION__POSITION_1 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG1__DATA2_POSITION__POSITION_2
 *
 * @BRIEF        Data lane 2 is at the position 2. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG1__DATA2_POSITION__POSITION_2 0x2ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG1__DATA2_POSITION__POSITION_3
 *
 * @BRIEF        Data lane 2 is at the position 3. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG1__DATA2_POSITION__POSITION_3 0x3ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG1__DATA2_POSITION__POSITION_4
 *
 * @BRIEF        Data lane 2 is at the position 4. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG1__DATA2_POSITION__POSITION_4 0x4ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG1__DATA2_POSITION__POSITION_5
 *
 * @BRIEF        Data lane 2  is at the position 5. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG1__DATA2_POSITION__POSITION_5 0x5ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG1__DATA1_POL__PLUSMINUS
 *
 * @BRIEF        +/- pin order (DSI.DX=+ and DSi.DY=-) - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG1__DATA1_POL__PLUSMINUS 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG1__DATA1_POL__MINUSPLUS
 *
 * @BRIEF        -/+ pin order (DSI.DX=- and DSi.DY=+) - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG1__DATA1_POL__MINUSPLUS 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG1__DATA1_POSITION__POSITION_1
 *
 * @BRIEF        Data lane 1 is at the position 1. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG1__DATA1_POSITION__POSITION_1 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG1__DATA1_POSITION__POSITION_2
 *
 * @BRIEF        Data lane 1 is at the position 2. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG1__DATA1_POSITION__POSITION_2 0x2ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG1__DATA1_POSITION__POSITION_3
 *
 * @BRIEF        Data lane 1 is at the position 3. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG1__DATA1_POSITION__POSITION_3 0x3ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG1__DATA1_POSITION__POSITION_4
 *
 * @BRIEF        Data lane 1 is at the position 4. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG1__DATA1_POSITION__POSITION_4 0x4ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG1__DATA1_POSITION__POSITION_5
 *
 * @BRIEF        Data lane 1  is at the position 5. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG1__DATA1_POSITION__POSITION_5 0x5ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG1__CLOCK_POL__PLUSMINUS
 *
 * @BRIEF        +/- pin order (DSI.DX=+ and DSi.DY=-) - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG1__CLOCK_POL__PLUSMINUS 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG1__CLOCK_POL__MINUSPLUS
 *
 * @BRIEF        -/+ pin order (DSI.DX=- and DSi.DY=+) - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG1__CLOCK_POL__MINUSPLUS 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG1__CLOCK_POSITION__POSITION_1
 *
 * @BRIEF        Clock lane is at the position 1. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG1__CLOCK_POSITION__POSITION_1 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG1__CLOCK_POSITION__POSITION_2
 *
 * @BRIEF        Clock lane is at the position 2. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG1__CLOCK_POSITION__POSITION_2 0x2ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG1__CLOCK_POSITION__POSITION_3
 *
 * @BRIEF        Clock lane is at the position 3. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG1__CLOCK_POSITION__POSITION_3 0x3ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG1__CLOCK_POSITION__POSITION_4
 *
 * @BRIEF        Clock lane is at the position 4. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG1__CLOCK_POSITION__POSITION_4 0x4ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQSTATUS__ULPSACTIVENOT_ALL1_IRQ__FALSE
 *
 * @BRIEF        READS: Event is false. 
 *               WRITES: Status bit unchanged. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQSTATUS__ULPSACTIVENOT_ALL1_IRQ__FALSE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQSTATUS__ULPSACTIVENOT_ALL1_IRQ__TRUE
 *
 * @BRIEF        READS: Event is true (pending). 
 *               WRITES: Status bit is reset. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQSTATUS__ULPSACTIVENOT_ALL1_IRQ__TRUE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQSTATUS__ULPSACTIVENOT_ALL0_IRQ__FALSE
 *
 * @BRIEF        READS: Event is false. 
 *               WRITES: Status bit unchanged. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQSTATUS__ULPSACTIVENOT_ALL0_IRQ__FALSE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQSTATUS__ULPSACTIVENOT_ALL0_IRQ__TRUE
 *
 * @BRIEF        READS: Event is true (pending). 
 *               WRITES: Status bit is reset. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQSTATUS__ULPSACTIVENOT_ALL0_IRQ__TRUE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQSTATUS__ERRCONTENTIONLP1_3_IRQ__FALSE
 *
 * @BRIEF        READS: Event is false. 
 *               WRITES: Status bit unchanged. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQSTATUS__ERRCONTENTIONLP1_3_IRQ__FALSE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQSTATUS__ERRCONTENTIONLP1_3_IRQ__TRUE
 *
 * @BRIEF        READS: Event is true (pending). 
 *               WRITES: Status bit is reset. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQSTATUS__ERRCONTENTIONLP1_3_IRQ__TRUE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQSTATUS__ERRCONTENTIONLP0_3_IRQ__FALSE
 *
 * @BRIEF        READS: Event is false. 
 *               WRITES: Status bit unchanged. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQSTATUS__ERRCONTENTIONLP0_3_IRQ__FALSE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQSTATUS__ERRCONTENTIONLP0_3_IRQ__TRUE
 *
 * @BRIEF        READS: Event is true (pending). 
 *               WRITES: Status bit is reset. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQSTATUS__ERRCONTENTIONLP0_3_IRQ__TRUE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQSTATUS__ERRCONTENTIONLP1_2_IRQ__FALSE
 *
 * @BRIEF        READS: Event is false. 
 *               WRITES: Status bit unchanged. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQSTATUS__ERRCONTENTIONLP1_2_IRQ__FALSE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQSTATUS__ERRCONTENTIONLP1_2_IRQ__TRUE
 *
 * @BRIEF        READS: Event is true (pending). 
 *               WRITES: Status bit is reset. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQSTATUS__ERRCONTENTIONLP1_2_IRQ__TRUE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQSTATUS__ERRCONTENTIONLP0_2_IRQ__FALSE
 *
 * @BRIEF        READS: Event is false. 
 *               WRITES: Status bit unchanged. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQSTATUS__ERRCONTENTIONLP0_2_IRQ__FALSE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQSTATUS__ERRCONTENTIONLP0_2_IRQ__TRUE
 *
 * @BRIEF        READS: Event is true (pending). 
 *               WRITES: Status bit is reset. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQSTATUS__ERRCONTENTIONLP0_2_IRQ__TRUE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQSTATUS__ERRCONTENTIONLP1_1_IRQ__FALSE
 *
 * @BRIEF        READS: Event is false. 
 *               WRITES: Status bit unchanged. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQSTATUS__ERRCONTENTIONLP1_1_IRQ__FALSE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQSTATUS__ERRCONTENTIONLP1_1_IRQ__TRUE
 *
 * @BRIEF        READS: Event is true (pending). 
 *               WRITES: Status bit is reset. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQSTATUS__ERRCONTENTIONLP1_1_IRQ__TRUE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQSTATUS__ERRCONTENTIONLP0_1_IRQ__FALSE
 *
 * @BRIEF        READS: Event is false. 
 *               WRITES: Status bit unchanged. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQSTATUS__ERRCONTENTIONLP0_1_IRQ__FALSE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQSTATUS__ERRCONTENTIONLP0_1_IRQ__TRUE
 *
 * @BRIEF        READS: Event is true (pending). 
 *               WRITES: Status bit is reset. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQSTATUS__ERRCONTENTIONLP0_1_IRQ__TRUE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQSTATUS__STATEULPS3_IRQ__FALSE
 *
 * @BRIEF        READS: Event is false. 
 *               WRITES: Status bit unchanged. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQSTATUS__STATEULPS3_IRQ__FALSE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQSTATUS__STATEULPS3_IRQ__TRUE
 *
 * @BRIEF        READS: Event is true (pending). 
 *               WRITES: Status bit is reset. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQSTATUS__STATEULPS3_IRQ__TRUE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQSTATUS__STATEULPS2_IRQ__FALSE
 *
 * @BRIEF        READS: Event is false. 
 *               WRITES: Status bit unchanged. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQSTATUS__STATEULPS2_IRQ__FALSE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQSTATUS__STATEULPS2_IRQ__TRUE
 *
 * @BRIEF        READS: Event is true (pending). 
 *               WRITES: Status bit is reset. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQSTATUS__STATEULPS2_IRQ__TRUE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQSTATUS__STATEULPS1_IRQ__FALSE
 *
 * @BRIEF        READS: Event is false. 
 *               WRITES: Status bit unchanged. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQSTATUS__STATEULPS1_IRQ__FALSE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQSTATUS__STATEULPS1_IRQ__TRUE
 *
 * @BRIEF        READS: Event is true (pending). 
 *               WRITES: Status bit is reset. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQSTATUS__STATEULPS1_IRQ__TRUE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQSTATUS__ERRCONTROL3_IRQ__FALSE
 *
 * @BRIEF        READS: Event is false. 
 *               WRITES: Status bit unchanged. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQSTATUS__ERRCONTROL3_IRQ__FALSE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQSTATUS__ERRCONTROL3_IRQ__TRUE
 *
 * @BRIEF        READS: Event is true (pending). 
 *               WRITES: Status bit is reset. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQSTATUS__ERRCONTROL3_IRQ__TRUE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQSTATUS__ERRCONTROL2_IRQ__FALSE
 *
 * @BRIEF        READS: Event is false. 
 *               WRITES: Status bit unchanged. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQSTATUS__ERRCONTROL2_IRQ__FALSE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQSTATUS__ERRCONTROL2_IRQ__TRUE
 *
 * @BRIEF        READS: Event is true (pending). 
 *               WRITES: Status bit is reset. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQSTATUS__ERRCONTROL2_IRQ__TRUE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQSTATUS__ERRCONTROL1_IRQ__FALSE
 *
 * @BRIEF        READS: Event is false. 
 *               WRITES: Status bit unchanged. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQSTATUS__ERRCONTROL1_IRQ__FALSE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQSTATUS__ERRCONTROL1_IRQ__TRUE
 *
 * @BRIEF        READS: Event is true (pending). 
 *               WRITES: Status bit is reset. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQSTATUS__ERRCONTROL1_IRQ__TRUE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQSTATUS__ERRESC3_IRQ__FALSE
 *
 * @BRIEF        READS: Event is false. 
 *               WRITES: Status bit unchanged. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQSTATUS__ERRESC3_IRQ__FALSE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQSTATUS__ERRESC3_IRQ__TRUE
 *
 * @BRIEF        READS: Event is true (pending). 
 *               WRITES: Status bit is reset. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQSTATUS__ERRESC3_IRQ__TRUE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQSTATUS__ERRESC2_IRQ__FALSE
 *
 * @BRIEF        READS: Event is false. 
 *               WRITES: Status bit unchanged. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQSTATUS__ERRESC2_IRQ__FALSE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQSTATUS__ERRESC2_IRQ__TRUE
 *
 * @BRIEF        READS: Event is true (pending). 
 *               WRITES: Status bit is reset. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQSTATUS__ERRESC2_IRQ__TRUE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQSTATUS__ERRESC1_IRQ__FALSE
 *
 * @BRIEF        READS: Event is false. 
 *               WRITES: Status bit unchanged. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQSTATUS__ERRESC1_IRQ__FALSE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQSTATUS__ERRESC1_IRQ__TRUE
 *
 * @BRIEF        READS: Event is true (pending). 
 *               WRITES: Status bit is reset. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQSTATUS__ERRESC1_IRQ__TRUE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQSTATUS__ERRSYNCESC3_IRQ__FALSE
 *
 * @BRIEF        READS: Event is false. 
 *               WRITES: Status bit unchanged. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQSTATUS__ERRSYNCESC3_IRQ__FALSE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQSTATUS__ERRSYNCESC3_IRQ__TRUE
 *
 * @BRIEF        READS: Event is true (pending). 
 *               WRITES: Status bit is reset. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQSTATUS__ERRSYNCESC3_IRQ__TRUE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQSTATUS__ERRSYNCESC2_IRQ__FALSE
 *
 * @BRIEF        READS: Event is false. 
 *               WRITES: Status bit unchanged. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQSTATUS__ERRSYNCESC2_IRQ__FALSE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQSTATUS__ERRSYNCESC2_IRQ__TRUE
 *
 * @BRIEF        READS: Event is true (pending). 
 *               WRITES: Status bit is reset. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQSTATUS__ERRSYNCESC2_IRQ__TRUE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQSTATUS__ERRSYNCESC1_IRQ__FALSE
 *
 * @BRIEF        READS: Event is false. 
 *               WRITES: Status bit unchanged. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQSTATUS__ERRSYNCESC1_IRQ__FALSE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQSTATUS__ERRSYNCESC1_IRQ__TRUE
 *
 * @BRIEF        READS: Event is true (pending). 
 *               WRITES: Status bit is reset. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQSTATUS__ERRSYNCESC1_IRQ__TRUE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQENABLE__ULPSACTIVENOT_ALL1_IRQ_EN__DISABLE
 *
 * @BRIEF        Event is masked - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQENABLE__ULPSACTIVENOT_ALL1_IRQ_EN__DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQENABLE__ULPSACTIVENOT_ALL1_IRQ_EN__ENABLE
 *
 * @BRIEF        Event generates an interrupt when it occurs - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQENABLE__ULPSACTIVENOT_ALL1_IRQ_EN__ENABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQENABLE__ULPSACTIVENOT_ALL0_IRQ_EN__DISABLE
 *
 * @BRIEF        Event is masked - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQENABLE__ULPSACTIVENOT_ALL0_IRQ_EN__DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQENABLE__ULPSACTIVENOT_ALL0_IRQ_EN__ENABLE
 *
 * @BRIEF        Event generates an interrupt when it occurs - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQENABLE__ULPSACTIVENOT_ALL0_IRQ_EN__ENABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQENABLE__ERRCONTENTIONLP1_3_IRQ_EN__DISABLE
 *
 * @BRIEF        Event is masked - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQENABLE__ERRCONTENTIONLP1_3_IRQ_EN__DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQENABLE__ERRCONTENTIONLP1_3_IRQ_EN__ENABLE
 *
 * @BRIEF        Event generates an interrupt when it occurs - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQENABLE__ERRCONTENTIONLP1_3_IRQ_EN__ENABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQENABLE__ERRCONTENTIONLP0_3_IRQ_EN__DISABLE
 *
 * @BRIEF        Event is masked - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQENABLE__ERRCONTENTIONLP0_3_IRQ_EN__DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQENABLE__ERRCONTENTIONLP0_3_IRQ_EN__ENABLE
 *
 * @BRIEF        Event generates an interrupt when it occurs - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQENABLE__ERRCONTENTIONLP0_3_IRQ_EN__ENABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQENABLE__ERRCONTENTIONLP1_2_IRQ_EN__DISABLE
 *
 * @BRIEF        Event is masked - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQENABLE__ERRCONTENTIONLP1_2_IRQ_EN__DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQENABLE__ERRCONTENTIONLP1_2_IRQ_EN__ENABLE
 *
 * @BRIEF        Event generates an interrupt when it occurs - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQENABLE__ERRCONTENTIONLP1_2_IRQ_EN__ENABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQENABLE__ERRCONTENTIONLP0_2_IRQ_EN__DISABLE
 *
 * @BRIEF        Event is masked - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQENABLE__ERRCONTENTIONLP0_2_IRQ_EN__DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQENABLE__ERRCONTENTIONLP0_2_IRQ_EN__ENABLE
 *
 * @BRIEF        Event generates an interrupt when it occurs - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQENABLE__ERRCONTENTIONLP0_2_IRQ_EN__ENABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQENABLE__ERRCONTENTIONLP1_1_IRQ_EN__DISABLE
 *
 * @BRIEF        Event is masked - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQENABLE__ERRCONTENTIONLP1_1_IRQ_EN__DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQENABLE__ERRCONTENTIONLP1_1_IRQ_EN__ENABLE
 *
 * @BRIEF        Event generates an interrupt when it occurs - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQENABLE__ERRCONTENTIONLP1_1_IRQ_EN__ENABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQENABLE__ERRCONTENTIONLP0_1_IRQ_EN__DISABLE
 *
 * @BRIEF        Event is masked - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQENABLE__ERRCONTENTIONLP0_1_IRQ_EN__DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQENABLE__ERRCONTENTIONLP0_1_IRQ_EN__ENABLE
 *
 * @BRIEF        Event generates an interrupt when it occurs - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQENABLE__ERRCONTENTIONLP0_1_IRQ_EN__ENABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQENABLE__STATEULPS3_IRQ_EN__DISABLE
 *
 * @BRIEF        Event is masked - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQENABLE__STATEULPS3_IRQ_EN__DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQENABLE__STATEULPS3_IRQ_EN__ENABLE
 *
 * @BRIEF        Event generates an interrupt when it occurs - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQENABLE__STATEULPS3_IRQ_EN__ENABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQENABLE__STATEULPS2_IRQ_EN__DISABLE
 *
 * @BRIEF        Event is masked - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQENABLE__STATEULPS2_IRQ_EN__DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQENABLE__STATEULPS2_IRQ_EN__ENABLE
 *
 * @BRIEF        Event generates an interrupt when it occurs - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQENABLE__STATEULPS2_IRQ_EN__ENABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQENABLE__STATEULPS1_IRQ_EN__DISABLE
 *
 * @BRIEF        Event is masked - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQENABLE__STATEULPS1_IRQ_EN__DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQENABLE__STATEULPS1_IRQ_EN__ENABLE
 *
 * @BRIEF        Event generates an interrupt when it occurs - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQENABLE__STATEULPS1_IRQ_EN__ENABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQENABLE__ERRCONTROL3_IRQ_EN__DISABLE
 *
 * @BRIEF        Event is masked - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQENABLE__ERRCONTROL3_IRQ_EN__DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQENABLE__ERRCONTROL3_IRQ_EN__ENABLE
 *
 * @BRIEF        Event generates an interrupt when it occurs - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQENABLE__ERRCONTROL3_IRQ_EN__ENABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQENABLE__ERRCONTROL2_IRQ_EN__DISABLE
 *
 * @BRIEF        Event is masked - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQENABLE__ERRCONTROL2_IRQ_EN__DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQENABLE__ERRCONTROL2_IRQ_EN__ENABLE
 *
 * @BRIEF        Event generates an interrupt when it occurs - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQENABLE__ERRCONTROL2_IRQ_EN__ENABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQENABLE__ERRCONTROL1_IRQ_EN__DISABLE
 *
 * @BRIEF        Event is masked - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQENABLE__ERRCONTROL1_IRQ_EN__DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQENABLE__ERRCONTROL1_IRQ_EN__ENABLE
 *
 * @BRIEF        Event generates an interrupt when it occurs - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQENABLE__ERRCONTROL1_IRQ_EN__ENABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQENABLE__ERRESC3_IRQ_EN__DISABLE
 *
 * @BRIEF        Event is masked - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQENABLE__ERRESC3_IRQ_EN__DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQENABLE__ERRESC3_IRQ_EN__ENABLE
 *
 * @BRIEF        Event generates an interrupt when it occurs - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQENABLE__ERRESC3_IRQ_EN__ENABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQENABLE__ERRESC2_IRQ_EN__DISABLE
 *
 * @BRIEF        Event is masked - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQENABLE__ERRESC2_IRQ_EN__DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQENABLE__ERRESC2_IRQ_EN__ENABLE
 *
 * @BRIEF        Event generates an interrupt when it occurs - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQENABLE__ERRESC2_IRQ_EN__ENABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQENABLE__ERRESC1_IRQ_EN__DISABLE
 *
 * @BRIEF        Event is masked - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQENABLE__ERRESC1_IRQ_EN__DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQENABLE__ERRESC1_IRQ_EN__ENABLE
 *
 * @BRIEF        Event generates an interrupt when it occurs - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQENABLE__ERRESC1_IRQ_EN__ENABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQENABLE__ERRSYNCSESC3_IRQ_EN__DISABLE
 *
 * @BRIEF        Event is masked - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQENABLE__ERRSYNCSESC3_IRQ_EN__DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQENABLE__ERRSYNCSESC3_IRQ_EN__ENABLE
 *
 * @BRIEF        Event generates an interrupt when it occurs - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQENABLE__ERRSYNCSESC3_IRQ_EN__ENABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQENABLE__ERRSYNCSESC2_IRQ_EN__DISABLE
 *
 * @BRIEF        Event is masked - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQENABLE__ERRSYNCSESC2_IRQ_EN__DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQENABLE__ERRSYNCSESC2_IRQ_EN__ENABLE
 *
 * @BRIEF        Event generates an interrupt when it occurs - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQENABLE__ERRSYNCSESC2_IRQ_EN__ENABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQENABLE__ERRSYNCSESC1_IRQ_EN__DISABLE
 *
 * @BRIEF        Event is masked - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQENABLE__ERRSYNCSESC1_IRQ_EN__DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQENABLE__ERRSYNCSESC1_IRQ_EN__ENABLE
 *
 * @BRIEF        Event generates an interrupt when it occurs - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_IRQENABLE__ERRSYNCSESC1_IRQ_EN__ENABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_CLK_CTRL__PLL_PWR_CMD__STATE_OFF
 *
 * @BRIEF        Command to change to OFF state - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_CLK_CTRL__PLL_PWR_CMD__STATE_OFF 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_CLK_CTRL__PLL_PWR_CMD__STATE_ON_HSCLK
 *
 * @BRIEF        Command to change to ON state for  PLL only (HSDIVISER is 
 *               OFF) - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_CLK_CTRL__PLL_PWR_CMD__STATE_ON_HSCLK 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_CLK_CTRL__PLL_PWR_CMD__STATE_ON_ALL
 *
 * @BRIEF        Command to change to ON state for both PLL and HSDIVISER - 
 *               (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_CLK_CTRL__PLL_PWR_CMD__STATE_ON_ALL 0x2ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_CLK_CTRL__PLL_PWR_CMD__STATE_ON_DIV
 *
 * @BRIEF        Command to change to ON state for both PLL and HSDIVISER (no 
 *               clock output to the DSI complex IO) - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_CLK_CTRL__PLL_PWR_CMD__STATE_ON_DIV 0x3ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_CLK_CTRL__PLL_PWR_STATUS__STATE_OFF
 *
 * @BRIEF        DSI PLL Control module in OFF state - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_CLK_CTRL__PLL_PWR_STATUS__STATE_OFF 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_CLK_CTRL__PLL_PWR_STATUS__STATE_ON_HSCLK
 *
 * @BRIEF        DSI PLL Control module in ON state for  PLL only (HSDIVISER 
 *               is OFF) - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_CLK_CTRL__PLL_PWR_STATUS__STATE_ON_HSCLK 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_CLK_CTRL__PLL_PWR_STATUS__STATE_ON_ALL
 *
 * @BRIEF        DSI PLL Control module in ON state for both PLL and 
 *               HSDIVISER - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_CLK_CTRL__PLL_PWR_STATUS__STATE_ON_ALL 0x2ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_CLK_CTRL__PLL_PWR_STATUS__STATE_ON_DIV
 *
 * @BRIEF        DSI PLL Control module in ON state for both PLL and 
 *               HSDIVISER (no clock output to the DSI complex IO) - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_CLK_CTRL__PLL_PWR_STATUS__STATE_ON_DIV 0x3ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_CLK_CTRL__LP_RX_SYNCHRO_ENABLE__LOWSPEED
 *
 * @BRIEF        The DSI functional clock is equal or slower than 30 MHz. The 
 *               synchronization is falling/rising. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_CLK_CTRL__LP_RX_SYNCHRO_ENABLE__LOWSPEED 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_CLK_CTRL__LP_RX_SYNCHRO_ENABLE__HIGHSPEED
 *
 * @BRIEF        The DSI functional clock is higher than 30 MHz. The 
 *               synchronization is rising/rising. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_CLK_CTRL__LP_RX_SYNCHRO_ENABLE__HIGHSPEED 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_CLK_CTRL__LP_CLK_ENABLE__DISABLE
 *
 * @BRIEF        Disabled. The clock is not generated. The value of 
 *               LP_CLK_DIVISOR is not used and does not need to be 
 *               programmed. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_CLK_CTRL__LP_CLK_ENABLE__DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_CLK_CTRL__LP_CLK_ENABLE__ENABLE
 *
 * @BRIEF        Enabled. The clock is generated. The value of LP_CLK_DIVISOR 
 *               is used and needs to be programmed. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_CLK_CTRL__LP_CLK_ENABLE__ENABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_CLK_CTRL__HS_MANUAL_STOP_CTRL__DEASSERTION
 *
 * @BRIEF        DSIStopClk de-assertion unconditionally. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_CLK_CTRL__HS_MANUAL_STOP_CTRL__DEASSERTION 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_CLK_CTRL__HS_MANUAL_STOP_CTRL__ASSERTION
 *
 * @BRIEF        DSIStopClk assertion unconditionally. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_CLK_CTRL__HS_MANUAL_STOP_CTRL__ASSERTION 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_CLK_CTRL__HS_AUTO_STOP_ENABLE__DISABLE
 *
 * @BRIEF        Auto mode disabled. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_CLK_CTRL__HS_AUTO_STOP_ENABLE__DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_CLK_CTRL__HS_AUTO_STOP_ENABLE__ENABLE
 *
 * @BRIEF        Auto mode enabled. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_CLK_CTRL__HS_AUTO_STOP_ENABLE__ENABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_CLK_CTRL__LP_CLK_NULL_PACKET_ENABLE__DISABLE
 *
 * @BRIEF        Disabled. The NULL packet is not sent in LP mode after the 
 *               last LP packet. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_CLK_CTRL__LP_CLK_NULL_PACKET_ENABLE__DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_CLK_CTRL__LP_CLK_NULL_PACKET_ENABLE__ENABLE
 *
 * @BRIEF        Enabled. The NULL packet is sent in LP mode after the last 
 *               LP packet. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_CLK_CTRL__LP_CLK_NULL_PACKET_ENABLE__ENABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_CLK_CTRL__CIO_CLK_ICG__DISABLE
 *
 * @BRIEF        Disabled. SCPClk is not generated. It remains at 0. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_CLK_CTRL__CIO_CLK_ICG__DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_CLK_CTRL__CIO_CLK_ICG__ENABLE
 *
 * @BRIEF        Enabled. SCPClk is generated (OCP_CLK/4) - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_CLK_CTRL__CIO_CLK_ICG__ENABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_CLK_CTRL__DDR_CLK_ALWAYS_ON__DISABLE
 *
 * @BRIEF        Disabled. The DDR clock is only provided when HS packets are 
 *               sent. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_CLK_CTRL__DDR_CLK_ALWAYS_ON__DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_CLK_CTRL__DDR_CLK_ALWAYS_ON__ENABLE
 *
 * @BRIEF        Enabled. The DDR clock is always sent to the peripheral 
 *               regardless of the state of the data lanes (HS or LS mode). - 
 *               (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_CLK_CTRL__DDR_CLK_ALWAYS_ON__ENABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_TIMING1__TA_TO__DEASSERTION
 *
 * @BRIEF        Turn-around counter is disabled. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_TIMING1__TA_TO__DEASSERTION 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_TIMING1__TA_TO__ASSERTION
 *
 * @BRIEF        Turn-around counter is enabled (required to receive TA 
 *               interrupt in case the turn-around procedure is not 
 *               successful). - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_TIMING1__TA_TO__ASSERTION 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_TIMING1__TA_TO_X16__DISABLE
 *
 * @BRIEF        The number of DSI_CLK functional clock cycles defined in 
 *               TA_TO_COUNTER is multiplied by 1x - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_TIMING1__TA_TO_X16__DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_TIMING1__TA_TO_X16__ENABLE
 *
 * @BRIEF        The number of DSI_CLK functional clock cycles defined in 
 *               TA_TO_COUNTER is multiplied by 16x - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_TIMING1__TA_TO_X16__ENABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_TIMING1__TA_TO_X8__DISABLE
 *
 * @BRIEF        The number of DSI_CLK functional clock cycles defined in 
 *               TA_TO_COUNTER is multiplied by 1x - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_TIMING1__TA_TO_X8__DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_TIMING1__TA_TO_X8__ENABLE
 *
 * @BRIEF        The number of DSI_CLK functional clock cycles defined in 
 *               TA_TO_COUNTER is multiplied by 8x - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_TIMING1__TA_TO_X8__ENABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_TIMING1__FORCE_TX_STOP_MODE_IO__DEASSERTION
 *
 * @BRIEF        De-assertion of ForceTxStopMode. The HW reset the bit at the 
 *               end of the ForceTXStopMode assertion. 
 *               The SW can reset the bit in order to stop the assertion of 
 *               the ForceTXStopMode signal prior to the completion of the 
 *               period. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_TIMING1__FORCE_TX_STOP_MODE_IO__DEASSERTION 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_TIMING1__FORCE_TX_STOP_MODE_IO__ASSERTION
 *
 * @BRIEF        Assertion of ForceTxStopMode - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_TIMING1__FORCE_TX_STOP_MODE_IO__ASSERTION 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_TIMING1__STOP_STATE_X16_IO__DISABLE
 *
 * @BRIEF        The number of DSI_CLK functional clock cycles defined in 
 *               STOP_STATE _COUNTER_IO is multiplied by 1x - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_TIMING1__STOP_STATE_X16_IO__DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_TIMING1__STOP_STATE_X16_IO__ENABLE
 *
 * @BRIEF        The number of DSI_CLK functional clock cycles defined in 
 *               STOP_STATE _COUNTER_IO is multiplied by 16x - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_TIMING1__STOP_STATE_X16_IO__ENABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_TIMING1__STOP_STATE_X4_IO__DISABLE
 *
 * @BRIEF        The number of DSI_CLK functional clock cycles defined in 
 *               STOP_STATE _COUNTER is multiplied by 1x - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_TIMING1__STOP_STATE_X4_IO__DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_TIMING1__STOP_STATE_X4_IO__ENABLE
 *
 * @BRIEF        The number of DSI_CLK functional clock cycles defined in 
 *               STOP_STATE _COUNTER_IO is multiplied by 4x - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_TIMING1__STOP_STATE_X4_IO__ENABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_TIMING2__HS_TX_TO__DEASSERTION
 *
 * @BRIEF        Time-out counter is disabled. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_TIMING2__HS_TX_TO__DEASSERTION 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_TIMING2__HS_TX_TO__ASSERTION
 *
 * @BRIEF        Time-out counter is enabled (required to receive TA 
 *               interrupt in case the turn-around procedure is not 
 *               successful). - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_TIMING2__HS_TX_TO__ASSERTION 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_TIMING2__HS_TX_TO_X64__DISABLE
 *
 * @BRIEF        The number of BYTE_CLK functional clock cycles defined in 
 *               HS_TX_TO_COUNTER is multiplied by 1x - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_TIMING2__HS_TX_TO_X64__DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_TIMING2__HS_TX_TO_X64__ENABLE
 *
 * @BRIEF        The number of BYTE_CLK functional clock cycles defined in 
 *               HS_TX_TO_COUNTER is multiplied by 64x - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_TIMING2__HS_TX_TO_X64__ENABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_TIMING2__HS_TX_TO_X16__DISABLE
 *
 * @BRIEF        The number of BYTE_CLK functional clock cycles defined in 
 *               HS_TX_TO_COUNTER is multiplied by 1x - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_TIMING2__HS_TX_TO_X16__DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_TIMING2__HS_TX_TO_X16__ENABLE
 *
 * @BRIEF        The number of BYTE_CLK functional clock cycles defined in 
 *               HS_TX_TO_COUNTER is multiplied by 16x - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_TIMING2__HS_TX_TO_X16__ENABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_TIMING2__LP_RX_TO__DEASSERTION
 *
 * @BRIEF        Turn-around counter is disabled. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_TIMING2__LP_RX_TO__DEASSERTION 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_TIMING2__LP_RX_TO__ASSERTION
 *
 * @BRIEF        Turn-around counter is enabled (required to receive TA 
 *               interrupt in case the turn-around procedure is not 
 *               successful). - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_TIMING2__LP_RX_TO__ASSERTION 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_TIMING2__LP_RX_TO_X16__DISABLE
 *
 * @BRIEF        The number of DSI_CLK functional clock cycles defined in 
 *               LP_RX_TO_COUNTER is multiplied by 1x - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_TIMING2__LP_RX_TO_X16__DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_TIMING2__LP_RX_TO_X16__ENABLE
 *
 * @BRIEF        The number of DSI_CLK functional clock cycles defined in 
 *               LP_RX_TO_COUNTER is multiplied by 16x - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_TIMING2__LP_RX_TO_X16__ENABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_TIMING2__LP_RX_TO_X4__DISABLE
 *
 * @BRIEF        The number of DSI_CLK functional clock cycles defined in 
 *               LP_RX_TO_COUNTER is multiplied by 1x - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_TIMING2__LP_RX_TO_X4__DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_TIMING2__LP_RX_TO_X4__ENABLE
 *
 * @BRIEF        The number of DSI_CLK functional clock cycles defined in 
 *               LP_RX_TO_COUNTER is multiplied by 4x - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_TIMING2__LP_RX_TO_X4__ENABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG2__LP_BUSY__FALSE
 *
 * @BRIEF        LP logic is idle - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG2__LP_BUSY__FALSE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG2__LP_BUSY__TRUE
 *
 * @BRIEF        LP logic is active - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG2__LP_BUSY__TRUE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG2__HS_BUSY__FALSE
 *
 * @BRIEF        HS logic is idle - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG2__HS_BUSY__FALSE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG2__HS_BUSY__TRUE
 *
 * @BRIEF        HS logic is active - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG2__HS_BUSY__TRUE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG2__LANE3_ULPS_SIG2__INACTIVE
 *
 * @BRIEF        READ: Inactive state effective. 
 *               WRITE: Request to change to inactive state - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG2__LANE3_ULPS_SIG2__INACTIVE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG2__LANE3_ULPS_SIG2__ACTIVE
 *
 * @BRIEF        READ:Active state effective. 
 *               WRITE: Change request to active. If the lane is a data lane, 
 *               TxRequestEsc is asserted and synchronously TxUlpsEsc is 
 *               asserted for one period of TxClkEsc. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG2__LANE3_ULPS_SIG2__ACTIVE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG2__LANE2_ULPS_SIG2__INACTIVE
 *
 * @BRIEF        READ: Inactive state effective. 
 *               WRITE: Request to change to inactive state - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG2__LANE2_ULPS_SIG2__INACTIVE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG2__LANE2_ULPS_SIG2__ACTIVE
 *
 * @BRIEF        READ:Active state effective. 
 *               WRITE: Change request to active. If the lane is a data lane, 
 *               TxRequestEsc is asserted and synchronously TxUlpsEsc is 
 *               asserted for one period of TxClkEsc. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG2__LANE2_ULPS_SIG2__ACTIVE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG2__LANE1_ULPS_SIG2__INACTIVE
 *
 * @BRIEF        READ: Inactive state effective. 
 *               WRITE: Request to change to inactive state - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG2__LANE1_ULPS_SIG2__INACTIVE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG2__LANE1_ULPS_SIG2__ACTIVE
 *
 * @BRIEF        READ:Active state effective. 
 *               WRITE: Change request to active. If the lane is a data lane, 
 *               TxRequestEsc is asserted and synchronously TxUlpsEsc is 
 *               asserted for one period of TxClkEsc. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG2__LANE1_ULPS_SIG2__ACTIVE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG2__LANE3_ULPS_SIG1__INACTIVE
 *
 * @BRIEF        READ: Inactive state effective. 
 *               WRITE: Request to change to inactive state - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG2__LANE3_ULPS_SIG1__INACTIVE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG2__LANE3_ULPS_SIG1__ACTIVE
 *
 * @BRIEF        READ:Active state effective. 
 *               WRITE: Change request to active. If the lane is a data lane, 
 *               TxRequestEsc is asserted and synchronously TxUlpsEsc is 
 *               asserted for one period of TxClkEsc - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG2__LANE3_ULPS_SIG1__ACTIVE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG2__LANE2_ULPS_SIG1__INACTIVE
 *
 * @BRIEF        READ: Inactive state effective. 
 *               WRITE: Request to change to inactive state - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG2__LANE2_ULPS_SIG1__INACTIVE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG2__LANE2_ULPS_SIG1__ACTIVE
 *
 * @BRIEF        READ:Active state effective. 
 *               WRITE: Change request to active. If the lane is a data lane, 
 *               TxRequestEsc is asserted and synchronously TxUlpsEsc is 
 *               asserted for one period of TxClkEsc - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG2__LANE2_ULPS_SIG1__ACTIVE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG2__LANE1_ULPS_SIG1__INACTIVE
 *
 * @BRIEF        READ:Inactive state effective. 
 *               WRITE: Request to change to inactive state - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG2__LANE1_ULPS_SIG1__INACTIVE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG2__LANE1_ULPS_SIG1__ACTIVE
 *
 * @BRIEF        READ:Active state effective 
 *               WRITE: Change request to active. If the lane is a data lane, 
 *               TxRequestEsc is asserted and synchronously TxUlpsEsc is 
 *               asserted for one period of TxClkEsc - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_COMPLEXIO_CFG2__LANE1_ULPS_SIG1__ACTIVE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_CTRL2__LINE_BUFFER__F0
 *
 * @BRIEF        No line buffer - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_CTRL2__LINE_BUFFER__F0 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_CTRL2__LINE_BUFFER__F1
 *
 * @BRIEF        1 line buffer - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_CTRL2__LINE_BUFFER__F1 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_CTRL2__LINE_BUFFER__F2
 *
 * @BRIEF        2 line buffers - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_CTRL2__LINE_BUFFER__F2 0x2ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_CTRL2__VP_VSYNC_POL__LOW
 *
 * @BRIEF        VSYNC signal on the video port is active low. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_CTRL2__VP_VSYNC_POL__LOW 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_CTRL2__VP_VSYNC_POL__HIGH
 *
 * @BRIEF        VSYNC signal on the video port is active high. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_CTRL2__VP_VSYNC_POL__HIGH 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_CTRL2__VP_HSYNC_POL__LOW
 *
 * @BRIEF        HSYNC signal on the video port is active low. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_CTRL2__VP_HSYNC_POL__LOW 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_CTRL2__VP_HSYNC_POL__HIGH
 *
 * @BRIEF        HSYNC signal on the video port is active high. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_CTRL2__VP_HSYNC_POL__HIGH 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_CTRL2__VP_DE_POL__LOW
 *
 * @BRIEF        DE signal on the video port is active low. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_CTRL2__VP_DE_POL__LOW 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_CTRL2__VP_DE_POL__HIGH
 *
 * @BRIEF        DE signal on the video port is active high. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_CTRL2__VP_DE_POL__HIGH 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_CTRL2__VP_CLK_POL__FALLING
 *
 * @BRIEF        The DSI Protocol Engine module captures the data on the VP 
 *               on the pixel clock falling edge. The module connected to the 
 *               VP shall drive the data on the pixel clock rising edge. - 
 *               (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_CTRL2__VP_CLK_POL__FALLING 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_CTRL2__VP_CLK_POL__RISING
 *
 * @BRIEF        The DSI Protocol Engine module captures the data on the VP 
 *               on the pixel clock raising edge. The module connected to the 
 *               VP shall drive the data on the pixel clock falling edge. - 
 *               (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_CTRL2__VP_CLK_POL__RISING 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_CTRL2__VP_DATA_BUS_WIDTH__F16
 *
 * @BRIEF        16-bits data width (LSB of the 24-bit video port data bus) - 
 *               (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_CTRL2__VP_DATA_BUS_WIDTH__F16 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_CTRL2__VP_DATA_BUS_WIDTH__F18
 *
 * @BRIEF        18-bits data width (LSB of the 24-bit video port data bus) - 
 *               (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_CTRL2__VP_DATA_BUS_WIDTH__F18 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_CTRL2__VP_DATA_BUS_WIDTH__F24
 *
 * @BRIEF        24-bits data width (LSB of the 24-bit video port data bus) - 
 *               (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_CTRL2__VP_DATA_BUS_WIDTH__F24 0x2ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_CTRL2__VP_CLK_RATIO__RATIO2
 *
 * @BRIEF        The clock VP.PCLK is the clock VP.CLK divided by 2. The duty 
 *               cycle of VP.PCLK is 50/50. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_CTRL2__VP_CLK_RATIO__RATIO2 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_CTRL2__VP_CLK_RATIO__RATIO3ANDHIGHER
 *
 * @BRIEF        The clock VP.PCLK is the clock VP.CLK divided by 3 or more. 
 *               The duty cycle of VP.PCLK is not 50/50 for odd ratio numbers 
 *               (3,5,7,...). - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_CTRL2__VP_CLK_RATIO__RATIO3ANDHIGHER 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__DCS_CMD_CODE__DCS_CONTINUE
 *
 * @BRIEF        DCS write memory continue code is inserted. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__DCS_CMD_CODE__DCS_CONTINUE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__DCS_CMD_CODE__DCS_START
 *
 * @BRIEF        DCS write memory start code is inserted. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__DCS_CMD_CODE__DCS_START 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__DCS_CMD_ENABLE__DCS_DISABLE
 *
 * @BRIEF        DCS command code is NOT inserted when command mode traffic 
 *               is coming from the Video Port or OCP slave port. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__DCS_CMD_ENABLE__DCS_DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__DCS_CMD_ENABLE__DCS_ENABLE
 *
 * @BRIEF        DCS command code is inserted automatically when command mode 
 *               traffic is coming from the Video Port  or OCP slave port. - 
 *               (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__DCS_CMD_ENABLE__DCS_ENABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__DMA_RX_REQ_NB__DMA_REQ0
 *
 * @BRIEF        DMA_req0 is selected (valid only if DSI_GNQ.NB_DMA_REQUEST 
 *               is greater than 0) - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__DMA_RX_REQ_NB__DMA_REQ0 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__DMA_RX_REQ_NB__DMA_REQ1
 *
 * @BRIEF        DMA_req1 is selected (valid only if DSI_GNQ.NB_DMA_REQUEST 
 *               is greater than 1) - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__DMA_RX_REQ_NB__DMA_REQ1 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__DMA_RX_REQ_NB__DMA_REQ2
 *
 * @BRIEF        DMA_req2 is selected (valid only if DSI_GNQ.NB_DMA_REQUEST 
 *               is greater than 2) - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__DMA_RX_REQ_NB__DMA_REQ2 0x2ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__DMA_RX_REQ_NB__DMA_REQ3
 *
 * @BRIEF        DMA_req3 is selected (valid only if DSI_GNQ.NB_DMA_REQUEST 
 *               is equal to 3) - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__DMA_RX_REQ_NB__DMA_REQ3 0x3ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__DMA_RX_REQ_NB__NO_DMA_REQ
 *
 * @BRIEF        No DMA req selected - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__DMA_RX_REQ_NB__NO_DMA_REQ 0x4ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__DMA_RX_THRESHOLD__F1
 *
 * @BRIEF        1x 32 bits - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__DMA_RX_THRESHOLD__F1 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__DMA_RX_THRESHOLD__F2
 *
 * @BRIEF        2 x 32 bits - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__DMA_RX_THRESHOLD__F2 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__DMA_RX_THRESHOLD__F4
 *
 * @BRIEF        4 x 32 bits - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__DMA_RX_THRESHOLD__F4 0x2ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__DMA_RX_THRESHOLD__F8
 *
 * @BRIEF        8 x 32 bits - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__DMA_RX_THRESHOLD__F8 0x3ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__DMA_RX_THRESHOLD__F16
 *
 * @BRIEF        16 x 32 bits - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__DMA_RX_THRESHOLD__F16 0x4ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__DMA_RX_THRESHOLD__F32
 *
 * @BRIEF        32 x 32 bits - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__DMA_RX_THRESHOLD__F32 0x5ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__DMA_TX_REQ_NB__DMA_REQ0
 *
 * @BRIEF        DMA_req0 is selected (valid only if DSI_GNQ.NB_DMA_REQUEST 
 *               is greater than 0) - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__DMA_TX_REQ_NB__DMA_REQ0 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__DMA_TX_REQ_NB__DMA_REQ1
 *
 * @BRIEF        DMA_req1 is selected (valid only if DSI_GNQ.NB_DMA_REQUEST 
 *               is greater than 1) - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__DMA_TX_REQ_NB__DMA_REQ1 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__DMA_TX_REQ_NB__DMA_REQ2
 *
 * @BRIEF        DMA_req2 is selected (valid only if DSI_GNQ.NB_DMA_REQUEST 
 *               is greater than 2) - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__DMA_TX_REQ_NB__DMA_REQ2 0x2ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__DMA_TX_REQ_NB__DMA_REQ3
 *
 * @BRIEF        DMA_req3 is selected (valid only if DSI_GNQ.NB_DMA_REQUEST 
 *               is equal to 3) - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__DMA_TX_REQ_NB__DMA_REQ3 0x3ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__DMA_TX_REQ_NB__NO_DMA_REQ
 *
 * @BRIEF        No DMA req selected - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__DMA_TX_REQ_NB__NO_DMA_REQ 0x4ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__RX_FIFO_NOT_EMPTY__EMPTY
 *
 * @BRIEF        The RX FIFO is empty (the FIFO does not contain any data for 
 *               the virtual channel) - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__RX_FIFO_NOT_EMPTY__EMPTY 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__RX_FIFO_NOT_EMPTY__NOT_EMPTY
 *
 * @BRIEF        The RX FIFO is not empty (the FIFO contains at least one 
 *               byte for the virtual channel) - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__RX_FIFO_NOT_EMPTY__NOT_EMPTY 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__DMA_TX_THRESHOLD__F1
 *
 * @BRIEF        1x 32 bits - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__DMA_TX_THRESHOLD__F1 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__DMA_TX_THRESHOLD__F2
 *
 * @BRIEF        2 x 32 bits - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__DMA_TX_THRESHOLD__F2 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__DMA_TX_THRESHOLD__F4
 *
 * @BRIEF        4 x 32 bits - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__DMA_TX_THRESHOLD__F4 0x2ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__DMA_TX_THRESHOLD__F8
 *
 * @BRIEF        8 x 32 bits - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__DMA_TX_THRESHOLD__F8 0x3ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__DMA_TX_THRESHOLD__F16
 *
 * @BRIEF        16 x 32 bits - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__DMA_TX_THRESHOLD__F16 0x4ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__DMA_TX_THRESHOLD__F32
 *
 * @BRIEF        32 x 32 bits - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__DMA_TX_THRESHOLD__F32 0x5ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__TX_FIFO_FULL__NOT_FULL
 *
 * @BRIEF        The TX FIFO is not full (the FIFO can accept at least one 
 *               more 32-bit valuel) - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__TX_FIFO_FULL__NOT_FULL 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__TX_FIFO_FULL__FULL
 *
 * @BRIEF        The TX FIFO is full - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__TX_FIFO_FULL__FULL 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__VC_BUSY__COMPLETED
 *
 * @BRIEF        No pending operations for this VC - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__VC_BUSY__COMPLETED 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__VC_BUSY__BUSY
 *
 * @BRIEF        Pending operations for this VC - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__VC_BUSY__BUSY 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__PP_BUSY__PP_FREE
 *
 * @BRIEF        Software is permitted to write a new header for VP command 
 *               mode traffic. - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__PP_BUSY__PP_FREE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__PP_BUSY__PP_BUSY
 *
 * @BRIEF        Software is NOT permitted to write a new header for VP 
 *               command mode traffic. - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__PP_BUSY__PP_BUSY 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__VP_SOURCE__VIDEO_PORT_1
 *
 * @BRIEF        The video port 1 is selected. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__VP_SOURCE__VIDEO_PORT_1 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__VP_SOURCE__VIDEO_PORT_2
 *
 * @BRIEF        The video port 2 is selected. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__VP_SOURCE__VIDEO_PORT_2 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__RGB565_ORDER__RGB565_DBI2
 *
 * @BRIEF        Byte order as documented in the MIPI DBI-2 spec - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__RGB565_ORDER__RGB565_DBI2 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__RGB565_ORDER__RGB565_VIDEO
 *
 * @BRIEF        Byte order as for video mode - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__RGB565_ORDER__RGB565_VIDEO 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__OCP_DATA_BUS_WIDTH__F16
 *
 * @BRIEF        16-bits data width (LSB of the 32-bit OCP port data bus) - 
 *               (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__OCP_DATA_BUS_WIDTH__F16 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__OCP_DATA_BUS_WIDTH__F24
 *
 * @BRIEF        24-bits data width (LSB of the 32-bit OCP port data bus) - 
 *               (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__OCP_DATA_BUS_WIDTH__F24 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__OCP_DATA_BUS_WIDTH__F1616
 *
 * @BRIEF        2x16-bits data width (first pixel on the LSB of the 32-bit 
 *               OCP port data bus and second pixel on the MSB of the 32-bit 
 *               OCP port data bus for the same OCP access) - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__OCP_DATA_BUS_WIDTH__F1616 0x2ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__OCP_DATA_BUS_WIDTH__F32
 *
 * @BRIEF        32-bits data width - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__OCP_DATA_BUS_WIDTH__F32 0x3ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__MODE_SPEED__LP
 *
 * @BRIEF        Low power mode (CMOS) is used to send short and long packets 
 *               to the peripheral. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__MODE_SPEED__LP 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__MODE_SPEED__HS
 *
 * @BRIEF        High Speed mode (SLVS) is used to send short and long 
 *               packets to the peripheral. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__MODE_SPEED__HS 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__ECC_TX_EN__DISABLE
 *
 * @BRIEF        Disabled - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__ECC_TX_EN__DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__ECC_TX_EN__ENABLE
 *
 * @BRIEF        Enabled - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__ECC_TX_EN__ENABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__CS_TX_EN__DISABLE
 *
 * @BRIEF        Disabled. The value 0x00 is used. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__CS_TX_EN__DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__CS_TX_EN__ENABLE
 *
 * @BRIEF        Enabled. The Check-sum value is calculated by HW. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__CS_TX_EN__ENABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__BTA_EN__DISABLE
 *
 * @BRIEF        READS: BTA generation is completed. It is reset by HW when 
 *               it is completed. 
 *               WRITES: Cancellation of the BTA generation (not guarantee 
 *               since it could already on going, shall not be used). - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__BTA_EN__DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__BTA_EN__ENABLE
 *
 * @BRIEF        READS: BTA generation has been requested by user (it could 
 *               be on going but not completed). 
 *               WRITES: Request for BTA generation. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__BTA_EN__ENABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__TX_FIFO_NOT_EMPTY__EMPTY
 *
 * @BRIEF        The TX FIFO is empty (the FIFO does not contain any data for 
 *               the virtual channel) - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__TX_FIFO_NOT_EMPTY__EMPTY 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__TX_FIFO_NOT_EMPTY__NOT_EMPTY
 *
 * @BRIEF        The TX FIFO is not empty (the FIFO contains at least one 
 *               byte for the virtual channel) - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__TX_FIFO_NOT_EMPTY__NOT_EMPTY 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__MODE__COMMAND_MODE
 *
 * @BRIEF        Command mode. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__MODE__COMMAND_MODE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__MODE__VIDEO_MODE
 *
 * @BRIEF        Video mode. The bit-fields MODE_SPEED and SOURCE are not 
 *               used by HW. The bit-field VP_SOURCE is used to select 
 *               between video port 1 and video port 2 when two video ports 
 *               are present. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__MODE__VIDEO_MODE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__BTA_LONG_EN__DISABLE
 *
 * @BRIEF        Disabled - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__BTA_LONG_EN__DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__BTA_LONG_EN__ENABLE
 *
 * @BRIEF        Enabled - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__BTA_LONG_EN__ENABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__BTA_SHORT_EN__DISABLE
 *
 * @BRIEF        Disabled - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__BTA_SHORT_EN__DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__BTA_SHORT_EN__ENABLE
 *
 * @BRIEF        Enabled - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__BTA_SHORT_EN__ENABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__SOURCE__OCP_SLAVE_PORT
 *
 * @BRIEF        All the data are provided by the slave port. Any transfer on 
 *               the video port is ignored for this virtual channel. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__SOURCE__OCP_SLAVE_PORT 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__SOURCE__VIDEO_PORT
 *
 * @BRIEF        If MODE=VIDEO_MODE. the data received on the video port 1 or 
 *               video port 2, selected using VP_SOURCE (pixels and enabled 
 *               synchronization events using DSI_CTRL1.VP_HSYNC_START, 
 *               DSI_CTRL1.VP_HSYNC_END, DSI_CTRL1.VP_VSYNC_START, 
 *               DSI_CTRL1.VP_VSYNC_END for video port 1 and 
 *               DSI_CTRL2.VP_HSYNC_START, DSI_CTRL2.VP_HSYNC_END, 
 *               DSI_CTRL2.VP_VSYNC_START, DSI_CTRL2.VP_VSYNC_END for video 
 *               port 2) are sent on the virtual channel (only one virtual 
 *               channel can be associated with the video port, it is the SW 
 *               responsibility to ensure that no more than one virtual 
 *               channel is enabled with the video port as the main source 
 *               for data).  
 *               If MODE=COMMAND_MODE, the VP.STALL signal is used by the 
 *               protocol engine to indicate when new data are required. The 
 *               synchronization signals are not generated by the display 
 *               controller. 
 *               Regardless of the MODE, no data can be provided on the OCP 
 *               slave port. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__SOURCE__VIDEO_PORT 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__VC_EN__DISABLE
 *
 * @BRIEF        Disabled. The virtual channel shall be disabled for any 
 *               register change in the DSI_VC_... registers the 
 *               corresponding virtual channel id (except for setting the 
 *               bit-fields/registers:   DSI_VC_CTRL.BTA_EN, 
 *               DSI_VC_TE.TE_SIZE,  DSI_VC_TE.TE_START, DSI_VC_LONG_,,, 
 *               DSI_VC_SHORT_..., DSI_VC_IRQ...). - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__VC_EN__DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__VC_EN__ENABLE
 *
 * @BRIEF        Enabled. No change is allowed to the virtual channel 
 *               registers expect resetting the VC_EN. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_CTRL__VC_EN__ENABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_TE__TE_START__DISABLE
 *
 * @BRIEF        Indicates the end of the transfer. The bit can be used by 
 *               user to cancel the transfer if not already started. The FIFO 
 *               shall be flushed by SW to ensure there is no data remaining 
 *               in it. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_TE__TE_START__DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_TE__TE_START__ENABLE
 *
 * @BRIEF        Starts the transfer of the data. The size is defined in 
 *               TE_SIZE. The bit-field is set until the transfer is 
 *               completed. It is reset by HW when the transfer is completed. 
 *               - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_TE__TE_START__ENABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_TE__TE_EN__DISABLE
 *
 * @BRIEF        Disables the automatic transfer. The user shall use the 
 *               interruption in order to know when TE PHY trigger is 
 *               received or when the TE is detected on the input CMOS 
 *               signals. The HW reset the bit-field when the transfer is 
 *               completed (TE_SIZE=0). - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_TE__TE_EN__DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_TE__TE_EN__ENABLE
 *
 * @BRIEF        Enables the automatic transfer of the data using the TE PHY 
 *               trigger or one of the TE input signals as a synchronization 
 *               event. 
 *               The bit-field TE_LINE defines if the CMOS signal is used or 
 *               if the PHY trigger is used. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_TE__TE_EN__ENABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_TE__TE_LINE__DISABLE
 *
 * @BRIEF        Disabled the TE CMOS signalling for the automatic data 
 *               transfer. The DSI PHY trigger is used for the automactic 
 *               data transfer. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_TE__TE_LINE__DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_TE__TE_LINE__ENABLE
 *
 * @BRIEF        Enables the TE CMOS signalling for the automatic data 
 *               transfer. The DSI PHY trigger is not used for the automactic 
 *               data transfer. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_TE__TE_LINE__ENABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_TE__TE_LINE_NB__TE0
 *
 * @BRIEF        TE0 cmos input line is selected - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_TE__TE_LINE_NB__TE0 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_TE__TE_LINE_NB__TE1
 *
 * @BRIEF        TE1 cmos input line is selected - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_TE__TE_LINE_NB__TE1 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_IRQSTATUS__PP_BUSY_CHANGE_IRQ__FALSE
 *
 * @BRIEF        READS: Event is false. 
 *               WRITES: Status bit unchanged. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_IRQSTATUS__PP_BUSY_CHANGE_IRQ__FALSE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_IRQSTATUS__PP_BUSY_CHANGE_IRQ__TRUE
 *
 * @BRIEF        READS: Event is true (pending). 
 *               WRITES: Status bit is reset. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_IRQSTATUS__PP_BUSY_CHANGE_IRQ__TRUE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_IRQSTATUS__FIFO_TX_UDF_IRQ__FALSE
 *
 * @BRIEF        READS: Event is false. 
 *               WRITES: Status bit unchanged. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_IRQSTATUS__FIFO_TX_UDF_IRQ__FALSE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_IRQSTATUS__FIFO_TX_UDF_IRQ__TRUE
 *
 * @BRIEF        READS: Event is true (pending). 
 *               WRITES: Status bit is reset. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_IRQSTATUS__FIFO_TX_UDF_IRQ__TRUE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_IRQSTATUS__ECC_NO_CORRECTION_IRQ__FALSE
 *
 * @BRIEF        READS: Event is false. 
 *               WRITES: Status bit unchanged. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_IRQSTATUS__ECC_NO_CORRECTION_IRQ__FALSE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_IRQSTATUS__ECC_NO_CORRECTION_IRQ__TRUE
 *
 * @BRIEF        READS: Event is true (pending). 
 *               WRITES: Status bit is reset. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_IRQSTATUS__ECC_NO_CORRECTION_IRQ__TRUE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_IRQSTATUS__BTA_IRQ__FALSE
 *
 * @BRIEF        READS: Event is false. 
 *               WRITES: Status bit unchanged. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_IRQSTATUS__BTA_IRQ__FALSE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_IRQSTATUS__BTA_IRQ__TRUE
 *
 * @BRIEF        READS: Event is true (pending). 
 *               WRITES: Status bit is reset. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_IRQSTATUS__BTA_IRQ__TRUE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_IRQSTATUS__FIFO_RX_OVF_IRQ__FALSE
 *
 * @BRIEF        READS: Event is false. 
 *               WRITES: Status bit unchanged. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_IRQSTATUS__FIFO_RX_OVF_IRQ__FALSE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_IRQSTATUS__FIFO_RX_OVF_IRQ__TRUE
 *
 * @BRIEF        READS: Event is true (pending). 
 *               WRITES: Status bit is reset. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_IRQSTATUS__FIFO_RX_OVF_IRQ__TRUE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_IRQSTATUS__FIFO_TX_OVF_IRQ__FALSE
 *
 * @BRIEF        READS: Event is false. 
 *               WRITES: Status bit unchanged. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_IRQSTATUS__FIFO_TX_OVF_IRQ__FALSE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_IRQSTATUS__FIFO_TX_OVF_IRQ__TRUE
 *
 * @BRIEF        READS: Event is true (pending). 
 *               WRITES: Status bit is reset. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_IRQSTATUS__FIFO_TX_OVF_IRQ__TRUE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_IRQSTATUS__PACKET_SENT_IRQ__FALSE
 *
 * @BRIEF        READS: Event is false. 
 *               WRITES: Status bit unchanged. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_IRQSTATUS__PACKET_SENT_IRQ__FALSE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_IRQSTATUS__PACKET_SENT_IRQ__TRUE
 *
 * @BRIEF        READS: Event is true (pending). 
 *               WRITES: Status bit is reset. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_IRQSTATUS__PACKET_SENT_IRQ__TRUE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_IRQSTATUS__ECC_CORRECTION_IRQ__FALSE
 *
 * @BRIEF        READS: Event is false. 
 *               WRITES: Status bit unchanged. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_IRQSTATUS__ECC_CORRECTION_IRQ__FALSE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_IRQSTATUS__ECC_CORRECTION_IRQ__TRUE
 *
 * @BRIEF        READS: Event is true (pending). 
 *               WRITES: Status bit is reset. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_IRQSTATUS__ECC_CORRECTION_IRQ__TRUE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_IRQSTATUS__CS_IRQ__FALSE
 *
 * @BRIEF        READS: Event is false. 
 *               WRITES: Status bit unchanged. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_IRQSTATUS__CS_IRQ__FALSE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_IRQSTATUS__CS_IRQ__TRUE
 *
 * @BRIEF        READS: Event is true (pending). 
 *               WRITES: Status bit is reset. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_IRQSTATUS__CS_IRQ__TRUE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_IRQENABLE__PP_BUSY_CHANGE_IRQ_EN__DISABLE
 *
 * @BRIEF        Event is masked - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_IRQENABLE__PP_BUSY_CHANGE_IRQ_EN__DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_IRQENABLE__PP_BUSY_CHANGE_IRQ_EN__ENABLE
 *
 * @BRIEF        Event generates an interrupt when it occurs - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_IRQENABLE__PP_BUSY_CHANGE_IRQ_EN__ENABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_IRQENABLE__FIFO_TX_UDF_IRQ_EN__DISABLE
 *
 * @BRIEF        Event is masked - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_IRQENABLE__FIFO_TX_UDF_IRQ_EN__DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_IRQENABLE__FIFO_TX_UDF_IRQ_EN__ENABLE
 *
 * @BRIEF        Event generates an interrupt when it occurs - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_IRQENABLE__FIFO_TX_UDF_IRQ_EN__ENABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_IRQENABLE__ECC_NO_CORRECTION_IRQ_EN__DISABLE
 *
 * @BRIEF        Event is masked - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_IRQENABLE__ECC_NO_CORRECTION_IRQ_EN__DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_IRQENABLE__ECC_NO_CORRECTION_IRQ_EN__ENABLE
 *
 * @BRIEF        Event generates an interrupt when it occurs - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_IRQENABLE__ECC_NO_CORRECTION_IRQ_EN__ENABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_IRQENABLE__BTA_IRQ_EN__DISABLE
 *
 * @BRIEF        Event is masked - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_IRQENABLE__BTA_IRQ_EN__DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_IRQENABLE__BTA_IRQ_EN__ENABLE
 *
 * @BRIEF        Event generates an interrupt when it occurs - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_IRQENABLE__BTA_IRQ_EN__ENABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_IRQENABLE__FIFO_RX_OVF_IRQ_EN__DISABLE
 *
 * @BRIEF        Event is masked - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_IRQENABLE__FIFO_RX_OVF_IRQ_EN__DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_IRQENABLE__FIFO_RX_OVF_IRQ_EN__ENABLE
 *
 * @BRIEF        Event generates an interrupt when it occurs - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_IRQENABLE__FIFO_RX_OVF_IRQ_EN__ENABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_IRQENABLE__FIFO_TX_OVF_IRQ_EN__DISABLE
 *
 * @BRIEF        Event is masked - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_IRQENABLE__FIFO_TX_OVF_IRQ_EN__DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_IRQENABLE__FIFO_TX_OVF_IRQ_EN__ENABLE
 *
 * @BRIEF        Event generates an interrupt when it occurs - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_IRQENABLE__FIFO_TX_OVF_IRQ_EN__ENABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_IRQENABLE__PACKET_SENT_IRQ_EN__DISABLE
 *
 * @BRIEF        Event is masked - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_IRQENABLE__PACKET_SENT_IRQ_EN__DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_IRQENABLE__PACKET_SENT_IRQ_EN__ENABLE
 *
 * @BRIEF        Event generates an interrupt when it occurs - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_IRQENABLE__PACKET_SENT_IRQ_EN__ENABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_IRQENABLE__ECC_CORRECTION_IRQ_EN__DISABLE
 *
 * @BRIEF        Event is masked - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_IRQENABLE__ECC_CORRECTION_IRQ_EN__DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_IRQENABLE__ECC_CORRECTION_IRQ_EN__ENABLE
 *
 * @BRIEF        Event generates an interrupt when it occurs - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_IRQENABLE__ECC_CORRECTION_IRQ_EN__ENABLE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_IRQENABLE__CS_IRQ_EN__DISABLE
 *
 * @BRIEF        Event is masked - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_IRQENABLE__CS_IRQ_EN__DISABLE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   DSI_PROTOCOL_ENGINE__DSI_VC_IRQENABLE__CS_IRQ_EN__ENABLE
 *
 * @BRIEF        Event generates an interrupt when it occurs - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define DSI_PROTOCOL_ENGINE__DSI_VC_IRQENABLE__CS_IRQ_EN__ENABLE 0x1ul

#ifdef __cplusplus
}
#endif
#endif                                                     /* __DSI_PROTOCOL_ENGINE_CRED_H 
                                                            */

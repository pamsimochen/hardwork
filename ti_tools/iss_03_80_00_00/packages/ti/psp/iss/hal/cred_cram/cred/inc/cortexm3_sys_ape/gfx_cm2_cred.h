/** ==================================================================
 *  @file   gfx_cm2_cred.h                                                  
 *                                                                    
 *  @path   /ti/psp/iss/hal/cred_cram/cred/inc/cortexm3_sys_ape/                                                  
 *                                                                    
 *  @desc   This  File contains.                                      
 * ===================================================================
 *  Copyright (c) Texas Instruments Inc 2011, 2012                    
 *                                                                    
 *  Use of this software is controlled by the terms and conditions found
 *  in the license agreement under which this software has been supplied
 * ===================================================================*/

/* ============================================================================ 
 * TEXAS INSTRUMENTS INCORPORATED PROPRIETARY INFORMATION Property of Texas
 * Instruments For Unrestricted Internal Use Only Unauthorized reproduction
 * and/or distribution is strictly prohibited.  This product is protected
 * under copyright law and trade secret law as an unpublished work.  Created
 * 2008, (C) Copyright 2008 Texas Instruments.  All rights reserved. */

/**
 *  @Component:   GFX_CM2
 *
 *  @Filename:    gfx_cm2_cred.h
 *
 *  @Description: Component description is not available
 *
 *  Generated by: Socrates CRED generator prototype
 *
    *//* ====================================================================== */

#ifndef __GFX_CM2_CRED_H
#define __GFX_CM2_CRED_H

#ifdef __cplusplus
extern "C" {
#endif

    /* 
     * Instance GFX_CM2 of component GFX_CM2 mapped in MONICA at address 0x4A009200
     */

                                                                              /*-------------------------------------------------------------------------*//**
 * @DEFINITION   BITFIELD
 *
 * @BRIEF        The bitfield must be defined according to register width
 *               of the component - 64/32/16/8
 *
    *//*------------------------------------------------------------------------ */
#undef BITFIELD
#define BITFIELD BITFIELD_32

    /* 
     *  List of Register arrays for component GFX_CM2
     *
     */

    /* 
     *  List of bundle arrays for component GFX_CM2
     *
     */

    /* 
     *  List of bundles for component GFX_CM2
     *
     */

    /* 
     * List of registers for component GFX_CM2
     *
     */

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   GFX_CM2__CM_GFX_CLKSTCTRL
 *
 * @BRIEF        This register enables the GFX domain power state transition. 
 *               It controls the HW supervised domain power state transition 
 *               between ON-ACTIVE and ON-INACTIVE states. It also hold one 
 *               status bit per clock input of the domain. 
 *
    *//*------------------------------------------------------------------------ */
#define GFX_CM2__CM_GFX_CLKSTCTRL                          0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   GFX_CM2__CM_GFX_STATICDEP
 *
 * @BRIEF        This register controls the static domain depedencies from 
 *               GFX domain towards 'target' domains. It is relevant only for 
 *               domain having system initiator(s). 
 *
    *//*------------------------------------------------------------------------ */
#define GFX_CM2__CM_GFX_STATICDEP                          0x4ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   GFX_CM2__CM_GFX_DYNAMICDEP
 *
 * @BRIEF        This register controls the dynamic domain depedencies from 
 *               GFX domain towards 'target' domains. It is relevant only for 
 *               domain having OCP master port(s). 
 *
    *//*------------------------------------------------------------------------ */
#define GFX_CM2__CM_GFX_DYNAMICDEP                         0x8ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   GFX_CM2__CM_GFX_GFX_CLKCTRL
 *
 * @BRIEF        This register manages the GFX clocks. 
 *
    *//*------------------------------------------------------------------------ */
#define GFX_CM2__CM_GFX_GFX_CLKCTRL                        0x20ul

    /* 
     * List of register bitfields for component GFX_CM2
     *
     */

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   GFX_CM2__CM_GFX_CLKSTCTRL__CLKACTIVITY_SGX_GFCLK   
 *
 * @BRIEF        This field indicates the state of the SGX_GFCLK clock in the 
 *               domain. 
 *               [warm reset insensitive] - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define GFX_CM2__CM_GFX_CLKSTCTRL__CLKACTIVITY_SGX_GFCLK BITFIELD(9, 9)
#define GFX_CM2__CM_GFX_CLKSTCTRL__CLKACTIVITY_SGX_GFCLK__POS 9

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   GFX_CM2__CM_GFX_CLKSTCTRL__CLKACTIVITY_L3_GFX_GICLK   
 *
 * @BRIEF        This field indicates the state of the L3_GFX_GICLK clock in 
 *               the domain. 
 *               [warm reset insensitive] - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define GFX_CM2__CM_GFX_CLKSTCTRL__CLKACTIVITY_L3_GFX_GICLK BITFIELD(8, 8)
#define GFX_CM2__CM_GFX_CLKSTCTRL__CLKACTIVITY_L3_GFX_GICLK__POS 8

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   GFX_CM2__CM_GFX_CLKSTCTRL__CLKTRCTRL   
 *
 * @BRIEF        Controls the clock state transition of the GFX clock domain. 
 *               - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define GFX_CM2__CM_GFX_CLKSTCTRL__CLKTRCTRL          BITFIELD(1, 0)
#define GFX_CM2__CM_GFX_CLKSTCTRL__CLKTRCTRL__POS     0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   GFX_CM2__CM_GFX_STATICDEP__L3_2_STATDEP   
 *
 * @BRIEF        Static dependency towards L3_2 clock domain - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define GFX_CM2__CM_GFX_STATICDEP__L3_2_STATDEP       BITFIELD(6, 6)
#define GFX_CM2__CM_GFX_STATICDEP__L3_2_STATDEP__POS  6

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   GFX_CM2__CM_GFX_STATICDEP__L3_1_STATDEP   
 *
 * @BRIEF        Static dependency towards L3_1 clock domain - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define GFX_CM2__CM_GFX_STATICDEP__L3_1_STATDEP       BITFIELD(5, 5)
#define GFX_CM2__CM_GFX_STATICDEP__L3_1_STATDEP__POS  5

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   GFX_CM2__CM_GFX_STATICDEP__MEMIF_STATDEP   
 *
 * @BRIEF        Static dependency towards MEMIF clock domain - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define GFX_CM2__CM_GFX_STATICDEP__MEMIF_STATDEP      BITFIELD(4, 4)
#define GFX_CM2__CM_GFX_STATICDEP__MEMIF_STATDEP__POS 4

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   GFX_CM2__CM_GFX_STATICDEP__IVAHD_STATDEP   
 *
 * @BRIEF        Static dependency towards IVAHD clock domain - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define GFX_CM2__CM_GFX_STATICDEP__IVAHD_STATDEP      BITFIELD(2, 2)
#define GFX_CM2__CM_GFX_STATICDEP__IVAHD_STATDEP__POS 2

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   GFX_CM2__CM_GFX_DYNAMICDEP__L3_2_DYNDEP   
 *
 * @BRIEF        Dynamic dependency towards L3_2 clock domain - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define GFX_CM2__CM_GFX_DYNAMICDEP__L3_2_DYNDEP       BITFIELD(6, 6)
#define GFX_CM2__CM_GFX_DYNAMICDEP__L3_2_DYNDEP__POS  6

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   GFX_CM2__CM_GFX_GFX_CLKCTRL__CLKSEL_PER_192M   
 *
 * @BRIEF        Selects the Divider ratio to FUNC_192M_FCLK - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define GFX_CM2__CM_GFX_GFX_CLKCTRL__CLKSEL_PER_192M  BITFIELD(26, 25)
#define GFX_CM2__CM_GFX_GFX_CLKCTRL__CLKSEL_PER_192M__POS 25

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   GFX_CM2__CM_GFX_GFX_CLKCTRL__CLKSEL_SGX_FCLK   
 *
 * @BRIEF        Select the source of SGX_FCLK - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define GFX_CM2__CM_GFX_GFX_CLKCTRL__CLKSEL_SGX_FCLK  BITFIELD(24, 24)
#define GFX_CM2__CM_GFX_GFX_CLKCTRL__CLKSEL_SGX_FCLK__POS 24

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   GFX_CM2__CM_GFX_GFX_CLKCTRL__STBYST   
 *
 * @BRIEF        Module standby status. [warm reset insensitive] - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define GFX_CM2__CM_GFX_GFX_CLKCTRL__STBYST           BITFIELD(18, 18)
#define GFX_CM2__CM_GFX_GFX_CLKCTRL__STBYST__POS      18

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   GFX_CM2__CM_GFX_GFX_CLKCTRL__IDLEST   
 *
 * @BRIEF        Module idle status. [warm reset insensitive] - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define GFX_CM2__CM_GFX_GFX_CLKCTRL__IDLEST           BITFIELD(17, 16)
#define GFX_CM2__CM_GFX_GFX_CLKCTRL__IDLEST__POS      16

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   GFX_CM2__CM_GFX_GFX_CLKCTRL__MODULEMODE   
 *
 * @BRIEF        Control the way mandatory clocks are managed. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define GFX_CM2__CM_GFX_GFX_CLKCTRL__MODULEMODE       BITFIELD(1, 0)
#define GFX_CM2__CM_GFX_GFX_CLKCTRL__MODULEMODE__POS  0

    /* 
     * List of register bitfields values for component GFX_CM2
     *
     */

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   GFX_CM2__CM_GFX_CLKSTCTRL__CLKACTIVITY_SGX_GFCLK__INACT
 *
 * @BRIEF        Corresponding clock is definitely gated - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define GFX_CM2__CM_GFX_CLKSTCTRL__CLKACTIVITY_SGX_GFCLK__INACT 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   GFX_CM2__CM_GFX_CLKSTCTRL__CLKACTIVITY_SGX_GFCLK__ACT
 *
 * @BRIEF        Corresponding clock is running or gating/ungating transition 
 *               is on-going - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define GFX_CM2__CM_GFX_CLKSTCTRL__CLKACTIVITY_SGX_GFCLK__ACT 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   GFX_CM2__CM_GFX_CLKSTCTRL__CLKACTIVITY_L3_GFX_GICLK__INACT
 *
 * @BRIEF        Corresponding clock is definitely gated - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define GFX_CM2__CM_GFX_CLKSTCTRL__CLKACTIVITY_L3_GFX_GICLK__INACT 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   GFX_CM2__CM_GFX_CLKSTCTRL__CLKACTIVITY_L3_GFX_GICLK__ACT
 *
 * @BRIEF        Corresponding clock is running or gating/ungating transition 
 *               is on-going - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define GFX_CM2__CM_GFX_CLKSTCTRL__CLKACTIVITY_L3_GFX_GICLK__ACT 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   GFX_CM2__CM_GFX_CLKSTCTRL__CLKTRCTRL__NO_SLEEP
 *
 * @BRIEF        NO_SLEEP: Sleep transition cannot be initiated. Wakeup 
 *               transition may however occur. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define GFX_CM2__CM_GFX_CLKSTCTRL__CLKTRCTRL__NO_SLEEP 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   GFX_CM2__CM_GFX_CLKSTCTRL__CLKTRCTRL__SW_SLEEP
 *
 * @BRIEF        SW_SLEEP: Start a software forced sleep transition on the 
 *               domain. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define GFX_CM2__CM_GFX_CLKSTCTRL__CLKTRCTRL__SW_SLEEP 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   GFX_CM2__CM_GFX_CLKSTCTRL__CLKTRCTRL__SW_WKUP
 *
 * @BRIEF        SW_WKUP: Start a software forced wake-up transition on the 
 *               domain. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define GFX_CM2__CM_GFX_CLKSTCTRL__CLKTRCTRL__SW_WKUP 0x2ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   GFX_CM2__CM_GFX_CLKSTCTRL__CLKTRCTRL__HW_AUTO
 *
 * @BRIEF        HW_AUTO: Automatic transition is enabled. Sleep and wakeup 
 *               transition are based upon hardware conditions. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define GFX_CM2__CM_GFX_CLKSTCTRL__CLKTRCTRL__HW_AUTO 0x3ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   GFX_CM2__CM_GFX_STATICDEP__L3_2_STATDEP__ENABLED
 *
 * @BRIEF        Dependency is enabled - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define GFX_CM2__CM_GFX_STATICDEP__L3_2_STATDEP__ENABLED 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   GFX_CM2__CM_GFX_STATICDEP__L3_1_STATDEP__DISABLED
 *
 * @BRIEF        Dependency is disabled - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define GFX_CM2__CM_GFX_STATICDEP__L3_1_STATDEP__DISABLED 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   GFX_CM2__CM_GFX_STATICDEP__L3_1_STATDEP__ENABLED
 *
 * @BRIEF        Dependency is enabled - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define GFX_CM2__CM_GFX_STATICDEP__L3_1_STATDEP__ENABLED 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   GFX_CM2__CM_GFX_STATICDEP__MEMIF_STATDEP__DISABLED
 *
 * @BRIEF        Dependency is disabled - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define GFX_CM2__CM_GFX_STATICDEP__MEMIF_STATDEP__DISABLED 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   GFX_CM2__CM_GFX_STATICDEP__MEMIF_STATDEP__ENABLED
 *
 * @BRIEF        Dependency is enabled - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define GFX_CM2__CM_GFX_STATICDEP__MEMIF_STATDEP__ENABLED 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   GFX_CM2__CM_GFX_STATICDEP__IVAHD_STATDEP__DISABLED
 *
 * @BRIEF        Dependency is disabled - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define GFX_CM2__CM_GFX_STATICDEP__IVAHD_STATDEP__DISABLED 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   GFX_CM2__CM_GFX_STATICDEP__IVAHD_STATDEP__ENABLED
 *
 * @BRIEF        Dependency is enabled - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define GFX_CM2__CM_GFX_STATICDEP__IVAHD_STATDEP__ENABLED 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   GFX_CM2__CM_GFX_DYNAMICDEP__L3_2_DYNDEP__DISABLED
 *
 * @BRIEF        Dependency is disabled - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define GFX_CM2__CM_GFX_DYNAMICDEP__L3_2_DYNDEP__DISABLED 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   GFX_CM2__CM_GFX_GFX_CLKCTRL__CLKSEL_PER_192M__DIV1
 *
 * @BRIEF        PER_SGX_FCLK is divide by 1 of 192MHz clock - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define GFX_CM2__CM_GFX_GFX_CLKCTRL__CLKSEL_PER_192M__DIV1 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   GFX_CM2__CM_GFX_GFX_CLKCTRL__CLKSEL_PER_192M__DIV2
 *
 * @BRIEF        PER_SGX_FCLK is divide by 2 of 192MHz clock - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define GFX_CM2__CM_GFX_GFX_CLKCTRL__CLKSEL_PER_192M__DIV2 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   GFX_CM2__CM_GFX_GFX_CLKCTRL__CLKSEL_PER_192M__DIV4
 *
 * @BRIEF        PER_SGX_FCLK is divide by 4 of 192MHz clock - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define GFX_CM2__CM_GFX_GFX_CLKCTRL__CLKSEL_PER_192M__DIV4 0x2ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   GFX_CM2__CM_GFX_GFX_CLKCTRL__CLKSEL_PER_192M__RESERVED
 *
 * @BRIEF        Reserved - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define GFX_CM2__CM_GFX_GFX_CLKCTRL__CLKSEL_PER_192M__RESERVED 0x3ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   GFX_CM2__CM_GFX_GFX_CLKCTRL__CLKSEL_SGX_FCLK__SEL_DPLL_CORE
 *
 * @BRIEF        Functional clock is sourced from DPLL_CORE HSDIVIDER - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define GFX_CM2__CM_GFX_GFX_CLKCTRL__CLKSEL_SGX_FCLK__SEL_DPLL_CORE 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   GFX_CM2__CM_GFX_GFX_CLKCTRL__CLKSEL_SGX_FCLK__SEL_PER_192M
 *
 * @BRIEF        Functional clock is sourced from FUNC_192M_FCLK clock from 
 *               DPLL_PER - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define GFX_CM2__CM_GFX_GFX_CLKCTRL__CLKSEL_SGX_FCLK__SEL_PER_192M 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   GFX_CM2__CM_GFX_GFX_CLKCTRL__STBYST__FUNC
 *
 * @BRIEF        Module is functional (not in standby) - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define GFX_CM2__CM_GFX_GFX_CLKCTRL__STBYST__FUNC     0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   GFX_CM2__CM_GFX_GFX_CLKCTRL__STBYST__STANDBY
 *
 * @BRIEF        Module is in standby - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define GFX_CM2__CM_GFX_GFX_CLKCTRL__STBYST__STANDBY  0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   GFX_CM2__CM_GFX_GFX_CLKCTRL__IDLEST__FUNC
 *
 * @BRIEF        Module is fully functional, including OCP - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define GFX_CM2__CM_GFX_GFX_CLKCTRL__IDLEST__FUNC     0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   GFX_CM2__CM_GFX_GFX_CLKCTRL__IDLEST__TRANS
 *
 * @BRIEF        Module is performing transition: wakeup, or sleep, or sleep 
 *               abortion - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define GFX_CM2__CM_GFX_GFX_CLKCTRL__IDLEST__TRANS    0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   GFX_CM2__CM_GFX_GFX_CLKCTRL__IDLEST__IDLE
 *
 * @BRIEF        Module is in Idle mode (only OCP part). It is functional if 
 *               using separate functional clock - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define GFX_CM2__CM_GFX_GFX_CLKCTRL__IDLEST__IDLE     0x2ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   GFX_CM2__CM_GFX_GFX_CLKCTRL__IDLEST__DISABLE
 *
 * @BRIEF        Module is disabled and cannot be accessed - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define GFX_CM2__CM_GFX_GFX_CLKCTRL__IDLEST__DISABLE  0x3ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   GFX_CM2__CM_GFX_GFX_CLKCTRL__MODULEMODE__DISABLED
 *
 * @BRIEF        Module is disable by SW. Any OCP access to module results in 
 *               an error, except if resulting from a module wakeup 
 *               (asynchronous wakeup). - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define GFX_CM2__CM_GFX_GFX_CLKCTRL__MODULEMODE__DISABLED 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   GFX_CM2__CM_GFX_GFX_CLKCTRL__MODULEMODE__RESERVED_1
 *
 * @BRIEF        Reserved - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define GFX_CM2__CM_GFX_GFX_CLKCTRL__MODULEMODE__RESERVED_1 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   GFX_CM2__CM_GFX_GFX_CLKCTRL__MODULEMODE__ENABLE
 *
 * @BRIEF        Module is explicitly enabled. Interface clock (if not used 
 *               for functions) may be gated according to the clock domain 
 *               state. Functional clocks are guarantied to stay present. As 
 *               long as in this configuration, power domain sleep transition 
 *               cannot happen. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define GFX_CM2__CM_GFX_GFX_CLKCTRL__MODULEMODE__ENABLE 0x2ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   GFX_CM2__CM_GFX_GFX_CLKCTRL__MODULEMODE__RESERVED
 *
 * @BRIEF        Reserved - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define GFX_CM2__CM_GFX_GFX_CLKCTRL__MODULEMODE__RESERVED 0x3ul

#ifdef __cplusplus
}
#endif
#endif                                                     /* __GFX_CM2_CRED_H 
                                                            */

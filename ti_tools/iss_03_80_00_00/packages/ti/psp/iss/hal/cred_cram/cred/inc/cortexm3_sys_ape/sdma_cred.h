/** ==================================================================
 *  @file   sdma_cred.h                                                  
 *                                                                    
 *  @path   /ti/psp/iss/hal/cred_cram/cred/inc/cortexm3_sys_ape/                                                  
 *                                                                    
 *  @desc   This  File contains.                                      
 * ===================================================================
 *  Copyright (c) Texas Instruments Inc 2011, 2012                    
 *                                                                    
 *  Use of this software is controlled by the terms and conditions found
 *  in the license agreement under which this software has been supplied
 * ===================================================================*/

/* ============================================================================ 
 * TEXAS INSTRUMENTS INCORPORATED PROPRIETARY INFORMATION Property of Texas
 * Instruments For Unrestricted Internal Use Only Unauthorized reproduction
 * and/or distribution is strictly prohibited.  This product is protected
 * under copyright law and trade secret law as an unpublished work.  Created
 * 2008, (C) Copyright 2008 Texas Instruments.  All rights reserved. */

/**
 *  @Component:   SDMA
 *
 *  @Filename:    sdma_cred.h
 *
 *  @Description:   
 *
 *  Generated by: Socrates CRED generator prototype
 *
    *//* ====================================================================== */

#ifndef __SDMA_CRED_H
#define __SDMA_CRED_H

#ifdef __cplusplus
extern "C" {
#endif

    /* 
     * Instance SYSTEM_DMA of component SDMA mapped in MONICA at address 0x4A056000
     */

                                                                              /*-------------------------------------------------------------------------*//**
 * @DEFINITION   BITFIELD
 *
 * @BRIEF        The bitfield must be defined according to register width
 *               of the component - 64/32/16/8
 *
    *//*------------------------------------------------------------------------ */
#undef BITFIELD
#define BITFIELD BITFIELD_32

    /* 
     *  List of Register arrays for component SDMA
     *
     */

    /* 
     *  List of bundle arrays for component SDMA
     *
     */
                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA_CHANNEL_REGS
 *
 * @BRIEF        Bundle description is not available
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA_CHANNEL_REGS                             0x80ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA_CHANNEL_REGS__ELSIZE
 *
 * @BRIEF        DMA_CHANNEL_REGS bundle array element size in Bytes
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA_CHANNEL_REGS__ELSIZE                     0x60ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA_CHANNEL_REGS__NELEMS
 *
 * @BRIEF        DMA_CHANNEL_REGS bundle array number of elements
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA_CHANNEL_REGS__NELEMS                     32

    /* 
     *  List of bundles for component SDMA
     *
     */

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CCR_0_31__OFFSET
 *
 * @BRIEF        Register DMA4_CCR_0_31 offset in bundle DMA_CHANNEL_REGS 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CCR_0_31__OFFSET                        0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CLNK_CTRL_0_31__OFFSET
 *
 * @BRIEF        Register DMA4_CLNK_CTRL_0_31 offset in bundle DMA_CHANNEL_REGS 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CLNK_CTRL_0_31__OFFSET                  0x4ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CICR_0_31__OFFSET
 *
 * @BRIEF        Register DMA4_CICR_0_31 offset in bundle DMA_CHANNEL_REGS 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CICR_0_31__OFFSET                       0x8ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CSR_0_31__OFFSET
 *
 * @BRIEF        Register DMA4_CSR_0_31 offset in bundle DMA_CHANNEL_REGS 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CSR_0_31__OFFSET                        0xCul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CSDP_0_31__OFFSET
 *
 * @BRIEF        Register DMA4_CSDP_0_31 offset in bundle DMA_CHANNEL_REGS 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CSDP_0_31__OFFSET                       0x10ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CEN_0_31__OFFSET
 *
 * @BRIEF        Register DMA4_CEN_0_31 offset in bundle DMA_CHANNEL_REGS 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CEN_0_31__OFFSET                        0x14ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CFN_0_31__OFFSET
 *
 * @BRIEF        Register DMA4_CFN_0_31 offset in bundle DMA_CHANNEL_REGS 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CFN_0_31__OFFSET                        0x18ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CSSA_0_31__OFFSET
 *
 * @BRIEF        Register DMA4_CSSA_0_31 offset in bundle DMA_CHANNEL_REGS 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CSSA_0_31__OFFSET                       0x1Cul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CDSA_0_31__OFFSET
 *
 * @BRIEF        Register DMA4_CDSA_0_31 offset in bundle DMA_CHANNEL_REGS 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CDSA_0_31__OFFSET                       0x20ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CSEI_0_31__OFFSET
 *
 * @BRIEF        Register DMA4_CSEI_0_31 offset in bundle DMA_CHANNEL_REGS 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CSEI_0_31__OFFSET                       0x24ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CSFI_0_31__OFFSET
 *
 * @BRIEF        Register DMA4_CSFI_0_31 offset in bundle DMA_CHANNEL_REGS 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CSFI_0_31__OFFSET                       0x28ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CDEI_0_31__OFFSET
 *
 * @BRIEF        Register DMA4_CDEI_0_31 offset in bundle DMA_CHANNEL_REGS 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CDEI_0_31__OFFSET                       0x2Cul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CDFI_0_31__OFFSET
 *
 * @BRIEF        Register DMA4_CDFI_0_31 offset in bundle DMA_CHANNEL_REGS 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CDFI_0_31__OFFSET                       0x30ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CSAC_0_31__OFFSET
 *
 * @BRIEF        Register DMA4_CSAC_0_31 offset in bundle DMA_CHANNEL_REGS 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CSAC_0_31__OFFSET                       0x34ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CDAC_0_31__OFFSET
 *
 * @BRIEF        Register DMA4_CDAC_0_31 offset in bundle DMA_CHANNEL_REGS 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CDAC_0_31__OFFSET                       0x38ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CCEN_0_31__OFFSET
 *
 * @BRIEF        Register DMA4_CCEN_0_31 offset in bundle DMA_CHANNEL_REGS 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CCEN_0_31__OFFSET                       0x3Cul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CCFN_0_31__OFFSET
 *
 * @BRIEF        Register DMA4_CCFN_0_31 offset in bundle DMA_CHANNEL_REGS 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CCFN_0_31__OFFSET                       0x40ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_COLOR_0_31__OFFSET
 *
 * @BRIEF        Register DMA4_COLOR_0_31 offset in bundle DMA_CHANNEL_REGS 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_COLOR_0_31__OFFSET                      0x44ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CDP_0_31__OFFSET
 *
 * @BRIEF        Register DMA4_CDP_0_31 offset in bundle DMA_CHANNEL_REGS 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CDP_0_31__OFFSET                        0x50ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CNDP_0_31__OFFSET
 *
 * @BRIEF        Register DMA4_CNDP_0_31 offset in bundle DMA_CHANNEL_REGS 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CNDP_0_31__OFFSET                       0x54ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CCDN_0_31__OFFSET
 *
 * @BRIEF        Register DMA4_CCDN_0_31 offset in bundle DMA_CHANNEL_REGS 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CCDN_0_31__OFFSET                       0x58ul

    /* 
     * List of registers for component SDMA
     *
     */

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_REVISION
 *
 * @BRIEF        IP Revision Identifier 
 *               This allows a PID showing X.Y.R in silicon to relate the RTL 
 *               release with a (close-to-correct) spec version X.Y.S. 
 *               A peripheral ID register must be included at address offset 
 *               0 of a peripherals control register MAP.  The purpose is to 
 *               let software read the peripheral to understand what type of 
 *               peripheral is there and what features are enabled as well as 
 *               what bugs or issues may exist in a particular version. 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_REVISION                                0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_IRQSTATUS_L0
 *
 * @BRIEF        The interrupt status register regroups all the status of the 
 *               DMA4 channels that can generate an interrupt over line L0.  
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_IRQSTATUS_L0                            0x8ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_IRQSTATUS_L1
 *
 * @BRIEF        The interrupt status register regroups all the status of the 
 *               DMA4 channels that can generate an interrupt over line L1.  
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_IRQSTATUS_L1                            0xCul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_IRQSTATUS_L2
 *
 * @BRIEF        The interrupt status register regroups all the status of the 
 *               DMA4 channels that can generate an interrupt over line L2.  
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_IRQSTATUS_L2                            0x10ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_IRQSTATUS_L3
 *
 * @BRIEF        The interrupt status register regroups all the status of the 
 *               DMA4 channels that can generate an interrupt over line L3.  
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_IRQSTATUS_L3                            0x14ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_IRQENABLE_L0
 *
 * @BRIEF        The interrupt enable register allows to mask/unmask the 
 *               module internal sources of interrupt, on line L0  
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_IRQENABLE_L0                            0x18ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_IRQENABLE_L1
 *
 * @BRIEF        The interrupt enable register allows to mask/unmask the 
 *               module internal sources of interrupt, on line L1  
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_IRQENABLE_L1                            0x1Cul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_IRQENABLE_L2
 *
 * @BRIEF        The interrupt enable register allows to mask/unmask the 
 *               module internal sources of interrupt, on line L2  
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_IRQENABLE_L2                            0x20ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_IRQENABLE_L3
 *
 * @BRIEF        The interrupt enable register allows to mask/unmask the 
 *               module internal sources of interrupt, on line L3  
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_IRQENABLE_L3                            0x24ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_SYSSTATUS
 *
 * @BRIEF        The register provides status information about the module 
 *               excluding the interrupt status information (see interrupt 
 *               status register)  
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_SYSSTATUS                               0x28ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_OCP_SYSCONFIG
 *
 * @BRIEF        This register controls the various parameters of the OCP 
 *               interface  
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_OCP_SYSCONFIG                           0x2Cul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CAPS_0
 *
 * @BRIEF        DMA Capabilities Register 0 LSW  
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CAPS_0                                  0x64ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CAPS_2
 *
 * @BRIEF        DMA Capabilities Register 2  
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CAPS_2                                  0x6Cul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CAPS_3
 *
 * @BRIEF        DMA Capabilities Register 3  
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CAPS_3                                  0x70ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CAPS_4
 *
 * @BRIEF        DMA Capabilities Register 4  
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CAPS_4                                  0x74ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_GCR
 *
 * @BRIEF        FIFO sharing between high and low priority channel.  The 
 *               Maximum per channel FIFO depth is bounded by the low and 
 *               high channel FIFO budget. The high respectively low priority 
 *               channels maximum burst size must be less than the min (high 
 *               respectively low priority channel FIFO budget , per channel 
 *               maximum FIFO depth) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_GCR                                     0x78ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CCR_0_31
 *
 * @BRIEF        Channel Control Register  
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CCR_0_31                                0x80ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CLNK_CTRL_0_31
 *
 * @BRIEF        Channel Link Control Register  
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CLNK_CTRL_0_31                          0x84ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CICR_0_31
 *
 * @BRIEF        Channel Interrupt Control Register  
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CICR_0_31                               0x88ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CSR_0_31
 *
 * @BRIEF        Channel Status Register  
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CSR_0_31                                0x8Cul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CSDP_0_31
 *
 * @BRIEF        Channel Source Destination Parameters  
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CSDP_0_31                               0x90ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CEN_0_31
 *
 * @BRIEF        Channel Element Number  
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CEN_0_31                                0x94ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CFN_0_31
 *
 * @BRIEF        Channel Frame Number  
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CFN_0_31                                0x98ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CSSA_0_31
 *
 * @BRIEF        Channel Source Start Address   
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CSSA_0_31                               0x9Cul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CDSA_0_31
 *
 * @BRIEF        Channel Destination Start Address   
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CDSA_0_31                               0xA0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CSEI_0_31
 *
 * @BRIEF        Channel Source Element Index (Signed)  
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CSEI_0_31                               0xA4ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CSFI_0_31
 *
 * @BRIEF        Channel Source Frame Index (Signed) or 16-bit Packet size  
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CSFI_0_31                               0xA8ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CDEI_0_31
 *
 * @BRIEF        Channel Destination Element Index (Signed)  
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CDEI_0_31                               0xACul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CDFI_0_31
 *
 * @BRIEF        Channel Destination Frame Index (Signed) or 16-bit Packet 
 *               size  
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CDFI_0_31                               0xB0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CSAC_0_31
 *
 * @BRIEF        Channel Source Address Value. 
 *               User has to access this register only in 32-bit access. If 
 *               accessed in 8-bit or 16bit data may be correupted.  
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CSAC_0_31                               0xB4ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CDAC_0_31
 *
 * @BRIEF        Channel Destination Address Value. 
 *               User has to access this register only in 32-bit access. If 
 *               accessed in 8-bit or 16bit data may be correupted.  
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CDAC_0_31                               0xB8ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CCEN_0_31
 *
 * @BRIEF        Channel Current Transferred Element Number in the current 
 *               frame. 
 *               User has to access this register only in 32-bit access. If 
 *               accessed in 8-bit or 16bit data may be correupted.   
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CCEN_0_31                               0xBCul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CCFN_0_31
 *
 * @BRIEF        Channel Current Transferred Frame Number in the current 
 *               transfer. 
 *               User has to access this register only in 32-bit access. If 
 *               accessed in 8-bit or 16bit data may be correupted.   
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CCFN_0_31                               0xC0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_COLOR_0_31
 *
 * @BRIEF        Channel DMA COLOR KEY /SOLID COLOR  
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_COLOR_0_31                              0xC4ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CDP_0_31
 *
 * @BRIEF        This register controls the various parameters of the link 
 *               list mechanism 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CDP_0_31                                0xD0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CNDP_0_31
 *
 * @BRIEF        This register contains the Next descriptor Address Pointer 
 *               for the link list Mechanism 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CNDP_0_31                               0xD4ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CCDN_0_31
 *
 * @BRIEF        Register description is not available
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CCDN_0_31                               0xD8ul

    /* 
     * List of register bitfields for component SDMA
     *
     */

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_REVISION__SCHEME   
 *
 * @BRIEF        Used to distinguish between old Scheme and current.  
 *               Spare bit to encode future schemes. 
 *               Highlander 0.8 value: 0b01 - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_REVISION__SCHEME                   BITFIELD(31, 30)
#define SDMA__DMA4_REVISION__SCHEME__POS              30

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_REVISION__FUNC   
 *
 * @BRIEF        Function indicates a software compatible module family.   
 *               If there is no level of software compatibility a new Func 
 *               number (and hence PID) should be assigned. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_REVISION__FUNC                     BITFIELD(27, 16)
#define SDMA__DMA4_REVISION__FUNC__POS                16

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_REVISION__RTL   
 *
 * @BRIEF        RTL Version.  
 *               R as described in PDR with additional 
 *               clarifications/definitions below.  Must be easily ECO-able 
 *               or controlled during fabrication.  Ideally through a top 
 *               level metal mask or e-fuse. This number is maintained/owned 
 *               by IP design owner.  
 *               RTL follows a numbering such as X.Y.R.Z which are explained 
 *               in this table.  
 *               R changes ONLY when:  
 *               (1) PDS uploads occur which may have been due to spec 
 *               changes  
 *               (2) Bug fixes occur  
 *               (3) Resets to '0' when X or Y changes.  
 *               Design team has an internal 'Z' (customer invisible) number 
 *               which increments on every drop that happens due to DV and 
 *               RTL updates. Z resets to 0 when R increments. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_REVISION__RTL                      BITFIELD(15, 11)
#define SDMA__DMA4_REVISION__RTL__POS                 11

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_REVISION__MAJOR   
 *
 * @BRIEF        Major Revision.   
 *               X as described in PDR with additional 
 *               clarifications/definitions below. This number is 
 *               owned/maintained by IP specification owner.  
 *               X changes ONLY when:  
 *               (1) There is a major feature addition. An example would be 
 *               adding Master Mode to Utopia Level2. The Func field (or 
 *               Class/Type in old PID format) will remain the same.  
 *               X does NOT change due to:  
 *               (1) Bug fixes  
 *               (2) Change in feature parameters. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_REVISION__MAJOR                    BITFIELD(10, 8)
#define SDMA__DMA4_REVISION__MAJOR__POS               8

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_REVISION__CUSTOM   
 *
 * @BRIEF        Indicates a special version for a particular device.  
 *               Consequence of use may avoid use of standard Chip Support 
 *               Library (CSL) / Drivers.   
 *               0 if non-custom. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_REVISION__CUSTOM                   BITFIELD(7, 6)
#define SDMA__DMA4_REVISION__CUSTOM__POS              6

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_REVISION__MINOR   
 *
 * @BRIEF        Minor Revision.   
 *               Y as described in PDR with additional 
 *               clarifications/definitions below.  
 *               This number is owned/maintained by IP specification owner.  
 *               Y changes ONLY when:  
 *               (1) Features are scaled (up or down). Flexibility exists in 
 *               that this feature scalability may either be represented in 
 *               the Y change or a specific register in the IP that indicates 
 *               which features are exactly available.  
 *               (2) When feature creeps from Is-Not list to Is list. But 
 *               this may not be the case once it sees silicon; in which case 
 *               X will change.  
 *               Y does NOT change due to:  
 *               (1) Bug fixes  
 *               (2) Typos or clarifications  
 *               (3) major functional/feature change/addition/deletion. 
 *               Instead these changes may be reflected via R, S, X as 
 *               applicable.  
 *               Spec owner maintains a customer-invisible number 'S' which 
 *               changes due to:  
 *               (1) Typos/clarifications  
 *               (2) Bug documentation. Note that this bug is not due to a 
 *               spec change but due to implementation. Nevertheless, the 
 *               spec tracks the IP bugs. An RTL release (say for silicon 
 *               PG1.1) that occurs due to bug fix should document the 
 *               corresponding spec number (X.Y.S) in its release notes. - 
 *               (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_REVISION__MINOR                    BITFIELD(5, 0)
#define SDMA__DMA4_REVISION__MINOR__POS               0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_IRQSTATUS_L0__CH_31_0_L0   
 *
 * @BRIEF        Channel 31 Interrupt on L0: When an interrupt is seen on the 
 *               line L0 the status of a interrupting channel i is read in 
 *               the bitfield i.   - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_IRQSTATUS_L0__CH_31_0_L0           BITFIELD(31, 0)
#define SDMA__DMA4_IRQSTATUS_L0__CH_31_0_L0__POS      0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_IRQSTATUS_L1__CH_31_0_L1   
 *
 * @BRIEF        Channel 31 Interrupt on L1: When an interrupt is seen on the 
 *               line L1 the status of a interrupting channel i is read in 
 *               the bitfield i.   - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_IRQSTATUS_L1__CH_31_0_L1           BITFIELD(31, 0)
#define SDMA__DMA4_IRQSTATUS_L1__CH_31_0_L1__POS      0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_IRQSTATUS_L2__CH_31_0_L2   
 *
 * @BRIEF        Channel 31 Interrupt on L2: When an interrupt is seen on the 
 *               line L2 the status of a interrupting channel i is read in 
 *               the bitfield i.  - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_IRQSTATUS_L2__CH_31_0_L2           BITFIELD(31, 0)
#define SDMA__DMA4_IRQSTATUS_L2__CH_31_0_L2__POS      0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_IRQSTATUS_L3__CH_31_0_L3   
 *
 * @BRIEF        Channel i Interrupt on L3: When an interrupt is seen on the 
 *               line L3 the status of a interrupting channel i is read in 
 *               the bitfield i.  - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_IRQSTATUS_L3__CH_31_0_L3           BITFIELD(31, 0)
#define SDMA__DMA4_IRQSTATUS_L3__CH_31_0_L3__POS      0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_IRQENABLE_L0__CH_31_0_L0_EN   
 *
 * @BRIEF        Channel Interrupt on L0 mask/unmask : to Mask/Unmask  a 
 *               channel i interrupt on L0 the user writes 0/1 on the 
 *               bitfield i. Also if the the DMA4 instances has less than n 
 *               channels (n!=32) then the 32-n upper bits of this register 
 *               will be reserved and the corresponding reset value is 0.  - 
 *               (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_IRQENABLE_L0__CH_31_0_L0_EN        BITFIELD(31, 0)
#define SDMA__DMA4_IRQENABLE_L0__CH_31_0_L0_EN__POS   0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_IRQENABLE_L1__CH_0_L1_0_EN   
 *
 * @BRIEF        Channel Interrupt on L1 mask/unmask : to Mask/Unmask  a 
 *               channel i interrupt on L1 the user writes 0/1 on the 
 *               bitfield i. Also if the the DMA4 instances has less than n 
 *               channels (n!=32) then the 32-n upper bits of this register 
 *               will be reserved and the corresponding reset value is 0.  - 
 *               (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_IRQENABLE_L1__CH_0_L1_0_EN         BITFIELD(31, 0)
#define SDMA__DMA4_IRQENABLE_L1__CH_0_L1_0_EN__POS    0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_IRQENABLE_L2__CH_31_0_L2_EN   
 *
 * @BRIEF        Channel Interrupt on L2 mask/unmask : to Mask/Unmask  a 
 *               channel i interrupt on L2 the user writes 0/1 on the 
 *               bitfield i. Also if the the DMA4 instances has less than n 
 *               channels (n!=32) then the 32-n upper bits of this register 
 *               will be reserved and the corresponding reset value is 0.  - 
 *               (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_IRQENABLE_L2__CH_31_0_L2_EN        BITFIELD(31, 0)
#define SDMA__DMA4_IRQENABLE_L2__CH_31_0_L2_EN__POS   0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_IRQENABLE_L3__CH_31_0_L3_EN   
 *
 * @BRIEF        Channel Interrupt on L3 mask/unmask : to Mask/Unmask  a 
 *               channel i interrupt on L3 the user writes 0/1 on the 
 *               bitfield i. Also if the the DMA4 instances has less than n 
 *               channels (n!=32) then the 32-n upper bits of this register 
 *               will be reserved and the corresponding reset value is 0.  - 
 *               (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_IRQENABLE_L3__CH_31_0_L3_EN        BITFIELD(31, 0)
#define SDMA__DMA4_IRQENABLE_L3__CH_31_0_L3_EN__POS   0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_SYSSTATUS__RESETDONE   
 *
 * @BRIEF        Internal reset monitoring - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_SYSSTATUS__RESETDONE               BITFIELD(0, 0)
#define SDMA__DMA4_SYSSTATUS__RESETDONE__POS          0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_OCP_SYSCONFIG__MIDLEMODE   
 *
 * @BRIEF        Read write power management, standby/wait control 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_OCP_SYSCONFIG__MIDLEMODE           BITFIELD(13, 12)
#define SDMA__DMA4_OCP_SYSCONFIG__MIDLEMODE__POS      12

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_OCP_SYSCONFIG__CLOCKACTIVITY   
 *
 * @BRIEF        Clocks activities during wake-up 
 *               Bit 8: OCP interface clock 
 *               0 OCP clock can be switched-off  
 *               Bit 9: Functional clock 
 *               0 Functional clock can be switched-off  - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_OCP_SYSCONFIG__CLOCKACTIVITY       BITFIELD(9, 8)
#define SDMA__DMA4_OCP_SYSCONFIG__CLOCKACTIVITY__POS  8

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_OCP_SYSCONFIG__EMUFREE   
 *
 * @BRIEF        Enable sensitivity to MSuspend  - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_OCP_SYSCONFIG__EMUFREE             BITFIELD(5, 5)
#define SDMA__DMA4_OCP_SYSCONFIG__EMUFREE__POS        5

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_OCP_SYSCONFIG__SIDLEMODE   
 *
 * @BRIEF        Configuration port power management, Idle req/ack control 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_OCP_SYSCONFIG__SIDLEMODE           BITFIELD(4, 3)
#define SDMA__DMA4_OCP_SYSCONFIG__SIDLEMODE__POS      3

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_OCP_SYSCONFIG__SOFTRESET   
 *
 * @BRIEF        Software reset. Set this bit to 1 to trigger a module reset. 
 *               The bit is automatically reset by the hardware. During 
 *               reads, it always returns 0. 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_OCP_SYSCONFIG__SOFTRESET           BITFIELD(1, 1)
#define SDMA__DMA4_OCP_SYSCONFIG__SOFTRESET__POS      1

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_OCP_SYSCONFIG__AUTOIDLE   
 *
 * @BRIEF        Internal OCP clock gating strategy 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_OCP_SYSCONFIG__AUTOIDLE            BITFIELD(0, 0)
#define SDMA__DMA4_OCP_SYSCONFIG__AUTOIDLE__POS       0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CAPS_0__LINK_LIST_CPBLTY_TYPE4   
 *
 * @BRIEF        Link List capability for type4 descriptor capability 
 *               Read 0x0:  
 *               No Link List capability for type4 descriptor  
 *               Read 0x1:  
 *               Link List capability for type4 descriptor is supported 
 *                - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CAPS_0__LINK_LIST_CPBLTY_TYPE4     BITFIELD(21, 21)
#define SDMA__DMA4_CAPS_0__LINK_LIST_CPBLTY_TYPE4__POS 21

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CAPS_0__LINK_LIST_CPBLTY_TYPE123   
 *
 * @BRIEF        Link List capability for type123 descriptor capability 
 *               Read 0x0:  
 *               No Link List capability for type123 descriptor  
 *               Read 0x1:  
 *               Link List capability for type 123 descriptor is supported 
 *                - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CAPS_0__LINK_LIST_CPBLTY_TYPE123   BITFIELD(20, 20)
#define SDMA__DMA4_CAPS_0__LINK_LIST_CPBLTY_TYPE123__POS 20

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CAPS_0__CONST_FILL_CPBLTY   
 *
 * @BRIEF        Constant_Fill_Capability - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CAPS_0__CONST_FILL_CPBLTY          BITFIELD(19, 19)
#define SDMA__DMA4_CAPS_0__CONST_FILL_CPBLTY__POS     19

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CAPS_0__TRANSPARENT_BLT_CPBLTY   
 *
 * @BRIEF        Transparent_BLT_Capability - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CAPS_0__TRANSPARENT_BLT_CPBLTY     BITFIELD(18, 18)
#define SDMA__DMA4_CAPS_0__TRANSPARENT_BLT_CPBLTY__POS 18

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CAPS_2__SEPARATE_SRC_AND_DST_INDEX_CPBLTY   
 *
 * @BRIEF        Separate_source/destination_index_capability - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CAPS_2__SEPARATE_SRC_AND_DST_INDEX_CPBLTY BITFIELD(8, 8)
#define SDMA__DMA4_CAPS_2__SEPARATE_SRC_AND_DST_INDEX_CPBLTY__POS 8

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CAPS_2__DST_DOUBLE_INDEX_ADRS_CPBLTY   
 *
 * @BRIEF        Destination_double_index_address_capability - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CAPS_2__DST_DOUBLE_INDEX_ADRS_CPBLTY BITFIELD(7, 7)
#define SDMA__DMA4_CAPS_2__DST_DOUBLE_INDEX_ADRS_CPBLTY__POS 7

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CAPS_2__DST_SINGLE_INDEX_ADRS_CPBLTY   
 *
 * @BRIEF        Destination_single_index_address_capability - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CAPS_2__DST_SINGLE_INDEX_ADRS_CPBLTY BITFIELD(6, 6)
#define SDMA__DMA4_CAPS_2__DST_SINGLE_INDEX_ADRS_CPBLTY__POS 6

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CAPS_2__DST_POST_INCRMNT_ADRS_CPBLTY   
 *
 * @BRIEF        Destination_post_increment_address_capability - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CAPS_2__DST_POST_INCRMNT_ADRS_CPBLTY BITFIELD(5, 5)
#define SDMA__DMA4_CAPS_2__DST_POST_INCRMNT_ADRS_CPBLTY__POS 5

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CAPS_2__DST_CONST_ADRS_CPBLTY   
 *
 * @BRIEF        Destination_constant_address_capability - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CAPS_2__DST_CONST_ADRS_CPBLTY      BITFIELD(4, 4)
#define SDMA__DMA4_CAPS_2__DST_CONST_ADRS_CPBLTY__POS 4

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CAPS_2__SRC_DOUBLE_INDEX_ADRS_CPBLTY   
 *
 * @BRIEF        Source_double_index_address_capability - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CAPS_2__SRC_DOUBLE_INDEX_ADRS_CPBLTY BITFIELD(3, 3)
#define SDMA__DMA4_CAPS_2__SRC_DOUBLE_INDEX_ADRS_CPBLTY__POS 3

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CAPS_2__SRC_SINGLE_INDEX_ADRS_CPBLTY   
 *
 * @BRIEF        Source_single_index_address_capability - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CAPS_2__SRC_SINGLE_INDEX_ADRS_CPBLTY BITFIELD(2, 2)
#define SDMA__DMA4_CAPS_2__SRC_SINGLE_INDEX_ADRS_CPBLTY__POS 2

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CAPS_2__SRC_POST_INCREMENT_ADRS_CPBLTY   
 *
 * @BRIEF        Source_post_increment_address_capability - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CAPS_2__SRC_POST_INCREMENT_ADRS_CPBLTY BITFIELD(1, 1)
#define SDMA__DMA4_CAPS_2__SRC_POST_INCREMENT_ADRS_CPBLTY__POS 1

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CAPS_2__SRC_CONST_ADRS_CPBLTY   
 *
 * @BRIEF        Source_constant_address_capability - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CAPS_2__SRC_CONST_ADRS_CPBLTY      BITFIELD(0, 0)
#define SDMA__DMA4_CAPS_2__SRC_CONST_ADRS_CPBLTY__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CAPS_3__BLOCK_SYNCHR_CPBLTY   
 *
 * @BRIEF        Block_synchronization_capability - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CAPS_3__BLOCK_SYNCHR_CPBLTY        BITFIELD(7, 7)
#define SDMA__DMA4_CAPS_3__BLOCK_SYNCHR_CPBLTY__POS   7

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CAPS_3__PKT_SYNCHR_CPBLTY   
 *
 * @BRIEF        Packet_synchronization_capability - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CAPS_3__PKT_SYNCHR_CPBLTY          BITFIELD(6, 6)
#define SDMA__DMA4_CAPS_3__PKT_SYNCHR_CPBLTY__POS     6

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CAPS_3__CHANNEL_CHANINIG_CPBLTY   
 *
 * @BRIEF        Channel_Chaninig_capability 
 *               Read 0x0:  
 *               Does not support Channel Chaninig capability  
 *               Read 0x1:  
 *               Supports Channel Chaninig capability  
 *                - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CAPS_3__CHANNEL_CHANINIG_CPBLTY    BITFIELD(5, 5)
#define SDMA__DMA4_CAPS_3__CHANNEL_CHANINIG_CPBLTY__POS 5

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CAPS_3__CHANNEL_INTERLEAVE_CPBLTY   
 *
 * @BRIEF        Channel_interleave_capability 
 *               Read 0x0:  
 *               Does not support Channel interleave capability  
 *               Read 0x1:  
 *               Supports Channel_interleave capability  
 *                - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CAPS_3__CHANNEL_INTERLEAVE_CPBLTY  BITFIELD(4, 4)
#define SDMA__DMA4_CAPS_3__CHANNEL_INTERLEAVE_CPBLTY__POS 4

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CAPS_3__FRAME_SYNCHR_CPBLTY   
 *
 * @BRIEF        Frame_synchronization_capability 
 *               Read 0x0:  
 *               Does not support synchronization transfer on Frame boundary  
 *               Read 0x1:  
 *               Supports synchronization transfer on Frame boundary  
 *                - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CAPS_3__FRAME_SYNCHR_CPBLTY        BITFIELD(1, 1)
#define SDMA__DMA4_CAPS_3__FRAME_SYNCHR_CPBLTY__POS   1

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CAPS_3__ELMNT_SYNCHR_CPBLTY   
 *
 * @BRIEF        Element_synchronization_capability 
 *               Read 0x0:  
 *               Does not support synchronization transfer on Element 
 *               boundary  
 *               Read 0x1:  
 *               Supports synchronization transfer on Element boundary  
 *                - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CAPS_3__ELMNT_SYNCHR_CPBLTY        BITFIELD(0, 0)
#define SDMA__DMA4_CAPS_3__ELMNT_SYNCHR_CPBLTY__POS   0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CAPS_4__EOSB_INTERRUPT_CPBLTY   
 *
 * @BRIEF        End of Super Block detection capability. 
 *               Read 0x0:  
 *               Does not support End of Super Block interrupt generation  
 *               Read 0x1:  
 *               Supports End of Super Block interrupt generation   
 *                - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CAPS_4__EOSB_INTERRUPT_CPBLTY      BITFIELD(14, 14)
#define SDMA__DMA4_CAPS_4__EOSB_INTERRUPT_CPBLTY__POS 14

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CAPS_4__DOMAIN_ERR_INTERRUPT_CPBLTY   
 *
 * @BRIEF        Domain Error detection capability 
 *               Read 0x0:  
 *               Does not support Domain error interrupt  generation  
 *               Read 0x1:  
 *               Supports Domain error interrupt  generation  
 *                - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CAPS_4__DOMAIN_ERR_INTERRUPT_CPBLTY BITFIELD(13, 13)
#define SDMA__DMA4_CAPS_4__DOMAIN_ERR_INTERRUPT_CPBLTY__POS 13

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CAPS_4__DRAIN_END_INTERRUPT_CPBLTY   
 *
 * @BRIEF        Drain End detection capability. 
 *               Read 0x0:  
 *               Does not support Drain end interrupt generation capability  
 *               Read 0x1:  
 *               Supports Drain end interrupt generation capability  
 *                - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CAPS_4__DRAIN_END_INTERRUPT_CPBLTY BITFIELD(12, 12)
#define SDMA__DMA4_CAPS_4__DRAIN_END_INTERRUPT_CPBLTY__POS 12

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CAPS_4__MISALIGNED_ADRS_ERR_INTERRUPT_CPBLTY   
 *
 * @BRIEF        Misaligned error detection capability. 
 *               Read 0x0:  
 *               Does not support Misaligned error interrupt generation 
 *               capability  
 *               Read 0x1:  
 *               Supports Misaligned error interrupt generation capability  
 *                - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CAPS_4__MISALIGNED_ADRS_ERR_INTERRUPT_CPBLTY BITFIELD(11, 11)
#define SDMA__DMA4_CAPS_4__MISALIGNED_ADRS_ERR_INTERRUPT_CPBLTY__POS 11

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CAPS_4__SUPERVISOR_ERR_INTERRUPT_CPBLTY   
 *
 * @BRIEF        Supervisor error detection capability. 
 *               Read 0x0:  
 *               Does not support Supervisor error interrupt generation 
 *               capability  
 *               Read 0x1:  
 *               Supports Supervisor error interrupt generation capability  
 *                - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CAPS_4__SUPERVISOR_ERR_INTERRUPT_CPBLTY BITFIELD(10, 10)
#define SDMA__DMA4_CAPS_4__SUPERVISOR_ERR_INTERRUPT_CPBLTY__POS 10

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CAPS_4__SECURE_ERR_INTERRUPT_CPBLTY   
 *
 * @BRIEF        Detection capability of Secure error. 
 *               Read 0x0:  
 *               Does not support Secure error interrupt generation 
 *               capability  
 *               Read 0x1:  
 *               Supports Secure error interrupt generation capability  
 *                - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CAPS_4__SECURE_ERR_INTERRUPT_CPBLTY BITFIELD(9, 9)
#define SDMA__DMA4_CAPS_4__SECURE_ERR_INTERRUPT_CPBLTY__POS 9

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CAPS_4__TRANS_ERR_INTERRUPT_CPBLTY   
 *
 * @BRIEF        Transaction error detection capability. 
 *               Read 0x0:  
 *               Does not support Transaction error interrupt generation 
 *               capability  
 *               Read 0x1:  
 *               Supports Transaction error interrupt generation capability  
 *                - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CAPS_4__TRANS_ERR_INTERRUPT_CPBLTY BITFIELD(8, 8)
#define SDMA__DMA4_CAPS_4__TRANS_ERR_INTERRUPT_CPBLTY__POS 8

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CAPS_4__PKT_INTERRUPT_CPBLTY   
 *
 * @BRIEF        End of Packet detection capability. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CAPS_4__PKT_INTERRUPT_CPBLTY       BITFIELD(7, 7)
#define SDMA__DMA4_CAPS_4__PKT_INTERRUPT_CPBLTY__POS  7

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CAPS_4__SYNC_STATUS_CPBLTY   
 *
 * @BRIEF        Sync_status_capability - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CAPS_4__SYNC_STATUS_CPBLTY         BITFIELD(6, 6)
#define SDMA__DMA4_CAPS_4__SYNC_STATUS_CPBLTY__POS    6

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CAPS_4__BLOCK_INTERRUPT_CPBLTY   
 *
 * @BRIEF        End of block detection capability. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CAPS_4__BLOCK_INTERRUPT_CPBLTY     BITFIELD(5, 5)
#define SDMA__DMA4_CAPS_4__BLOCK_INTERRUPT_CPBLTY__POS 5

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CAPS_4__LAST_FRAME_INTERRUPT_CPBLTY   
 *
 * @BRIEF        Start of last frame detection capability. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CAPS_4__LAST_FRAME_INTERRUPT_CPBLTY BITFIELD(4, 4)
#define SDMA__DMA4_CAPS_4__LAST_FRAME_INTERRUPT_CPBLTY__POS 4

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CAPS_4__FRAME_INTERRUPT_CPBLTY   
 *
 * @BRIEF        End of frame detection capability. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CAPS_4__FRAME_INTERRUPT_CPBLTY     BITFIELD(3, 3)
#define SDMA__DMA4_CAPS_4__FRAME_INTERRUPT_CPBLTY__POS 3

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CAPS_4__HALF_FRAME_INTERRUPT_CPBLTY   
 *
 * @BRIEF        Detection capability of the half of frame end. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CAPS_4__HALF_FRAME_INTERRUPT_CPBLTY BITFIELD(2, 2)
#define SDMA__DMA4_CAPS_4__HALF_FRAME_INTERRUPT_CPBLTY__POS 2

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CAPS_4__EVENT_DROP_INTERRUPT_CPBLTY   
 *
 * @BRIEF        Request collision detection capability. - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CAPS_4__EVENT_DROP_INTERRUPT_CPBLTY BITFIELD(1, 1)
#define SDMA__DMA4_CAPS_4__EVENT_DROP_INTERRUPT_CPBLTY__POS 1

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_GCR__CHANNEL_ID_GATE   
 *
 * @BRIEF        Gates the Channel ID bus monitoring on both Read and Write 
 *               ports 
 *               0x0: Gates the Channel ID quakifiers on both Read and Write 
 *               Ports 
 *               0x1 Does not gate the Channel ID quakifiers on both Read and 
 *               Write Ports 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_GCR__CHANNEL_ID_GATE               BITFIELD(24, 24)
#define SDMA__DMA4_GCR__CHANNEL_ID_GATE__POS          24

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_GCR__ARBITRATION_RATE   
 *
 * @BRIEF        Arbitration switching rate between prioritized and regular 
 *               channel queues - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_GCR__ARBITRATION_RATE              BITFIELD(23, 16)
#define SDMA__DMA4_GCR__ARBITRATION_RATE__POS         16

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_GCR__HI_LO_FIFO_BUDGET   
 *
 * @BRIEF        Allow separate FIFO budget for high and low priority 
 *               channels. 
 *               For Hi priority Channel: 
 *               (Per_channel_Maximum FIFO depth + 1) x Number of High 
 *               Channel =< High Budget FIFO 
 *               For Low priority channel: 
 *               (Per_channel_Maximum FIFO depth + 1) x Number of Low Channel 
 *               =< Low Budget FIFO 
 *               User should make sure that "Number of High Channel" means, 
 *               "Number of active high priority Channel" .  
 *               User should make sure that "Number of Low Channel" means, 
 *               "Number of active low priority Channel". 
 *               0x0:  
 *               no fixed budget for neither higher nor lower priority 
 *               channel  
 *               0x1:  
 *                75% of FIFO for low priority and 25% for high priority 
 *               channels  
 *               0x2:  
 *               25% of FIFO for low priority and 75% for high priority 
 *               channels  
 *               0x3:  
 *                50% of FIFO for low priority and 50% for high priority 
 *               channels  
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_GCR__HI_LO_FIFO_BUDGET             BITFIELD(15, 14)
#define SDMA__DMA4_GCR__HI_LO_FIFO_BUDGET__POS        14

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_GCR__HI_THREAD_RESERVED   
 *
 * @BRIEF        Allow thread reservation for high priority channel on both 
 *               read and write ports. 
 *               0x0:  
 *               No ThreadID is reserved on the Read Port for high priority 
 *               channels. 
 *               No ThreadID is reserved on the Write Port for high priority 
 *               channels.  
 *               0x1:  
 *               Read Port ThreadID 0 is reserved for high priority channels. 
 *               Write Port  ThreadID 0 is reserved for high priority 
 *               channels.  
 *               0x2:  
 *               Read port ThreadID 0 and ThreadID 1 are reserved for high  
 *               priority channels. 
 *               Write Port ThreadID 0 is reserved for high priority 
 *               channels.  
 *               0x3:  
 *               Read PortThreadID 0, ThreadID 1 and ThreadID 2 are reserved 
 *               for high priority channels. 
 *               Write Port ThreadID 0 is reserved for high priority 
 *               channels.  
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_GCR__HI_THREAD_RESERVED            BITFIELD(13, 12)
#define SDMA__DMA4_GCR__HI_THREAD_RESERVED__POS       12

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_GCR__MAX_CHANNEL_FIFO_DEPTH   
 *
 * @BRIEF        Maximum FIFO depth allocated to one logical channel. Maximum 
 *               FIFO depth can not be 0x0. It should be at least 0x1 or 
 *               greater. Note that If channel limit is less than destination 
 *               burst size enough data will not be accumulated in the data 
 *               FIFO and it will never be sent out on the WR port. The burst 
 *               size should be less than the FIFO limit specified in this 
 *               bitfield. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_GCR__MAX_CHANNEL_FIFO_DEPTH        BITFIELD(7, 0)
#define SDMA__DMA4_GCR__MAX_CHANNEL_FIFO_DEPTH__POS   0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CCR_0_31__DOMAIN   
 *
 * @BRIEF        Domain Attributes of channel - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CCR_0_31__DOMAIN                   BITFIELD(29, 27)
#define SDMA__DMA4_CCR_0_31__DOMAIN__POS              27

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CCR_0_31__WRITE_PRIORITY   
 *
 * @BRIEF        Channel priority on the Write side - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CCR_0_31__WRITE_PRIORITY           BITFIELD(26, 26)
#define SDMA__DMA4_CCR_0_31__WRITE_PRIORITY__POS      26

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CCR_0_31__BUFFERING_DISABLE   
 *
 * @BRIEF        This bit allows to disable the default buffering 
 *               functionality when transfer is source synchronized. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CCR_0_31__BUFFERING_DISABLE        BITFIELD(25, 25)
#define SDMA__DMA4_CCR_0_31__BUFFERING_DISABLE__POS   25

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CCR_0_31__SEL_SRC_DST_SYNC   
 *
 * @BRIEF        Specifyes that element, packet, frame or block transfer 
 *               (depending on CCR.bs and CCR.fs) is triggered by the source 
 *               or the destination on the DMA request  - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CCR_0_31__SEL_SRC_DST_SYNC         BITFIELD(24, 24)
#define SDMA__DMA4_CCR_0_31__SEL_SRC_DST_SYNC__POS    24

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CCR_0_31__PREFETCH   
 *
 * @BRIEF        Enables the prefetch mode (see section 4.1.5 for more 
 *               details) - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CCR_0_31__PREFETCH                 BITFIELD(23, 23)
#define SDMA__DMA4_CCR_0_31__PREFETCH__POS            23

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CCR_0_31__SUPERVISOR   
 *
 * @BRIEF        Enables the supervisor mode - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CCR_0_31__SUPERVISOR               BITFIELD(22, 22)
#define SDMA__DMA4_CCR_0_31__SUPERVISOR__POS          22

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CCR_0_31__SECURE   
 *
 * @BRIEF        Enables or disables a secure transaction over the channel - 
 *               (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CCR_0_31__SECURE                   BITFIELD(21, 21)
#define SDMA__DMA4_CCR_0_31__SECURE__POS              21

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CCR_0_31__SYNCHRO_CONTROL_UPPER   
 *
 * @BRIEF        Channel Synchronization control upper (used in conjunction 
 *               with the 5 bits of synchro channel DMA4_CCR[4:0]) 
 *               Used in conjunction, as two msb, with the five bits of the   
 *               synchro channel bitfield. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CCR_0_31__SYNCHRO_CONTROL_UPPER    BITFIELD(20, 19)
#define SDMA__DMA4_CCR_0_31__SYNCHRO_CONTROL_UPPER__POS 19

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CCR_0_31__BS   
 *
 * @BRIEF        Block synchronization  
 *               This bit used in conjuntion with the fs to see how the DMA  
 *               request is serviced in a synchronized transfer - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CCR_0_31__BS                       BITFIELD(18, 18)
#define SDMA__DMA4_CCR_0_31__BS__POS                  18

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CCR_0_31__TRANSPARENT_COPY_ENABLE   
 *
 * @BRIEF        Transparent copy enable - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CCR_0_31__TRANSPARENT_COPY_ENABLE  BITFIELD(17, 17)
#define SDMA__DMA4_CCR_0_31__TRANSPARENT_COPY_ENABLE__POS 17

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CCR_0_31__CONST_FILL_ENABLE   
 *
 * @BRIEF        Constant fill enable - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CCR_0_31__CONST_FILL_ENABLE        BITFIELD(16, 16)
#define SDMA__DMA4_CCR_0_31__CONST_FILL_ENABLE__POS   16

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CCR_0_31__DST_AMODE   
 *
 * @BRIEF        Selects the addressing mode on the Write Port of a channel.  
 *               - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CCR_0_31__DST_AMODE                BITFIELD(15, 14)
#define SDMA__DMA4_CCR_0_31__DST_AMODE__POS           14

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CCR_0_31__SRC_AMODE   
 *
 * @BRIEF        Selects the addressing mode on the Read Port of a channel.  
 *               - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CCR_0_31__SRC_AMODE                BITFIELD(13, 12)
#define SDMA__DMA4_CCR_0_31__SRC_AMODE__POS           12

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CCR_0_31__WR_ACTIVE   
 *
 * @BRIEF        Indicates if the channel write context is active or not - 
 *               (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CCR_0_31__WR_ACTIVE                BITFIELD(10, 10)
#define SDMA__DMA4_CCR_0_31__WR_ACTIVE__POS           10

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CCR_0_31__RD_ACTIVE   
 *
 * @BRIEF        Indicates if the channel read context is active or not - 
 *               (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CCR_0_31__RD_ACTIVE                BITFIELD(9, 9)
#define SDMA__DMA4_CCR_0_31__RD_ACTIVE__POS           9

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CCR_0_31__SUSPEND_SENSITIVE   
 *
 * @BRIEF        Logical channel suspend enable bit - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CCR_0_31__SUSPEND_SENSITIVE        BITFIELD(8, 8)
#define SDMA__DMA4_CCR_0_31__SUSPEND_SENSITIVE__POS   8

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CCR_0_31__ENABLE   
 *
 * @BRIEF        Logical channel enable. It is SW responsibility to clear the 
 *               CSR register and the IRQSTATUS bit for the different 
 *               interrupt lines before enabling the channel.  - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CCR_0_31__ENABLE                   BITFIELD(7, 7)
#define SDMA__DMA4_CCR_0_31__ENABLE__POS              7

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CCR_0_31__READ_PRIORITY   
 *
 * @BRIEF        Channel priority on the read side - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CCR_0_31__READ_PRIORITY            BITFIELD(6, 6)
#define SDMA__DMA4_CCR_0_31__READ_PRIORITY__POS       6

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CCR_0_31__FS   
 *
 * @BRIEF        Frame synchronization 
 *               This bit used in conjuntion with the BS to see how the DMA  
 *               request is serviced in a synchronized transfer 
 *               FS=0 and BS=0: An element is transferred once a DMA  
 *               request is made.  
 *               FS=0 and BS=1: An entire block is transferred once a DMA  
 *               request is made.  
 *               FS=1 and BS=0: An entire frame is transferred once a DMA  
 *               request is made.  
 *               FS=1 and BS=1: A packet is transferred once a DMA  
 *               request is made.  
 *               All these different transfers can be interleaved on the port 
 *               with  
 *               other DMA requests. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CCR_0_31__FS                       BITFIELD(5, 5)
#define SDMA__DMA4_CCR_0_31__FS__POS                  5

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CCR_0_31__SYNCHRO_CONTROL   
 *
 * @BRIEF        Channel synchronization control 
 *               This bitfield used in conjuntion with the second_level_ 
 *               synchro_control_upper (as two msb)  
 *               0000000 : Is reserved for non synchronized LCH transfer 
 *               xxxxxxx (from 1 to 127)There are 127 possible DMA request 
 *                to assign to any LCH. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CCR_0_31__SYNCHRO_CONTROL          BITFIELD(4, 0)
#define SDMA__DMA4_CCR_0_31__SYNCHRO_CONTROL__POS     0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CLNK_CTRL_0_31__ENABLE_LNK   
 *
 * @BRIEF        Enables or disable the channel linking. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CLNK_CTRL_0_31__ENABLE_LNK         BITFIELD(15, 15)
#define SDMA__DMA4_CLNK_CTRL_0_31__ENABLE_LNK__POS    15

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CLNK_CTRL_0_31__NEXTLCH_ID   
 *
 * @BRIEF        Defines the NextLCh_ID, which is used to build logical 
 *               channel chaining queue.  - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CLNK_CTRL_0_31__NEXTLCH_ID         BITFIELD(4, 0)
#define SDMA__DMA4_CLNK_CTRL_0_31__NEXTLCH_ID__POS    0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CICR_0_31__SUPER_BLOCK_IE   
 *
 * @BRIEF        Enables the end of super block interrupt 
 *               0x0:  
 *               Disables the end of Super block interrupt 
 *               0x1:  
 *               Enables the end of Super block interrupt 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CICR_0_31__SUPER_BLOCK_IE          BITFIELD(14, 14)
#define SDMA__DMA4_CICR_0_31__SUPER_BLOCK_IE__POS     14

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CICR_0_31__DOMAIN_ERR_IE   
 *
 * @BRIEF        Enables the domain error event interrupt 
 *               0x0:  
 *               Disables the domain error event interrupt  
 *               0x1:  
 *               Enables the domain error event interrupt  
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CICR_0_31__DOMAIN_ERR_IE           BITFIELD(13, 13)
#define SDMA__DMA4_CICR_0_31__DOMAIN_ERR_IE__POS      13

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CICR_0_31__DRAIN_IE   
 *
 * @BRIEF        Enables the end of draining interrupt 
 *               0x0: 
 *               Disables end of channel draining interrupt 
 *               0x1: 
 *               Enable end of channel draining  interrupt 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CICR_0_31__DRAIN_IE                BITFIELD(12, 12)
#define SDMA__DMA4_CICR_0_31__DRAIN_IE__POS           12

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CICR_0_31__MISALIGNED_ERR_IE   
 *
 * @BRIEF        Enables the address misaligned error event interrupt 
 *               0x0:  
 *               Disables the misaligned address error event interrupt  
 *               0x1:  
 *               Enables the misalgned address error event interrupt  
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CICR_0_31__MISALIGNED_ERR_IE       BITFIELD(11, 11)
#define SDMA__DMA4_CICR_0_31__MISALIGNED_ERR_IE__POS  11

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CICR_0_31__SUPERVISOR_ERR_IE   
 *
 * @BRIEF        Enables the supervisor transaction error event interrupt 
 *               0x0:  
 *               Disables the supervisor transaction error event interrupt  
 *               0x1:  
 *               Enables the supervisor transaction error event interrupt  
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CICR_0_31__SUPERVISOR_ERR_IE       BITFIELD(10, 10)
#define SDMA__DMA4_CICR_0_31__SUPERVISOR_ERR_IE__POS  10

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CICR_0_31__SECURE_ERR_IE   
 *
 * @BRIEF        Enables the secure transaction error event interrupt 
 *               0x0:  
 *               Disables the secure transaction error event interrupt  
 *               0x1:  
 *               Enables the secure transaction error event interrupt  
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CICR_0_31__SECURE_ERR_IE           BITFIELD(9, 9)
#define SDMA__DMA4_CICR_0_31__SECURE_ERR_IE__POS      9

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CICR_0_31__TRANS_ERR_IE   
 *
 * @BRIEF        Enables the transaction error event interrupt 
 *               0x0:  
 *               Disables the transaction error event interrupt  
 *               0x1:  
 *               Enables the transaction error event interrupt  
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CICR_0_31__TRANS_ERR_IE            BITFIELD(8, 8)
#define SDMA__DMA4_CICR_0_31__TRANS_ERR_IE__POS       8

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CICR_0_31__PKT_IE   
 *
 * @BRIEF        Enables the end of Packet interrupt 
 *               0x0:  
 *               Disables the end of Packet transfer interrupt  
 *               0x1:  
 *               Enables the end of Packet transfer interrupt  
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CICR_0_31__PKT_IE                  BITFIELD(7, 7)
#define SDMA__DMA4_CICR_0_31__PKT_IE__POS             7

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CICR_0_31__BLOCK_IE   
 *
 * @BRIEF        Enables the end of block interrupt 
 *               0x0:  
 *               Disables the end of block interrupt  
 *               0x1:  
 *               Enables the end of block interrupt  
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CICR_0_31__BLOCK_IE                BITFIELD(5, 5)
#define SDMA__DMA4_CICR_0_31__BLOCK_IE__POS           5

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CICR_0_31__LAST_IE   
 *
 * @BRIEF        Last frame interrupt enable (start of last frame) 
 *               0x0:  
 *                Disables the last frame interrupt  
 *               0x1:  
 *               Enables the last frame interrupt  
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CICR_0_31__LAST_IE                 BITFIELD(4, 4)
#define SDMA__DMA4_CICR_0_31__LAST_IE__POS            4

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CICR_0_31__FRAME_IE   
 *
 * @BRIEF        Frame interrupt enable (end of frame) 
 *               0x0:  
 *               Disables the end of frame interrupt  
 *               0x1:  
 *               Enables the end of frame interrupt  
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CICR_0_31__FRAME_IE                BITFIELD(3, 3)
#define SDMA__DMA4_CICR_0_31__FRAME_IE__POS           3

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CICR_0_31__HALF_IE   
 *
 * @BRIEF        Enables or disables the half frame interrupt. 
 *               0x0:  
 *               Disables the half frame interrupt  
 *               0x1:  
 *                Enables the half frame interrupt  
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CICR_0_31__HALF_IE                 BITFIELD(2, 2)
#define SDMA__DMA4_CICR_0_31__HALF_IE__POS            2

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CICR_0_31__DROP_IE   
 *
 * @BRIEF        Synchronization event drop interrupt enable (request 
 *               collision) 
 *               0x0:  
 *               Disables the event drop interrupt  
 *               0x1:  
 *                Enables the event drop interrupt  
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CICR_0_31__DROP_IE                 BITFIELD(1, 1)
#define SDMA__DMA4_CICR_0_31__DROP_IE__POS            1

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CSR_0_31__SUPER_BLOCK   
 *
 * @BRIEF        End of Super block event 
 *               Read 0x0:  
 *               The current Super block transfer has not been finished  
 *               Write 0x0:  
 *               Status bit unchanged  
 *               Read 0x1:  
 *               The current Super block has been transferred  
 *               Write 0x1:  
 *               Status bit is reset  
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CSR_0_31__SUPER_BLOCK              BITFIELD(14, 14)
#define SDMA__DMA4_CSR_0_31__SUPER_BLOCK__POS         14

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CSR_0_31__DOMAIN_ERR   
 *
 * @BRIEF        Domain error event 
 *               Read 0x0:  
 *               No domain error  
 *               Write 0x0:  
 *               Status bit unchanged ( This has to be done by System Access) 
 *               Read 0x1:  
 *               A domain error has been occurred  
 *               Write 0x1:  
 *               Status bit is reset ( This has to be done by System Access) 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CSR_0_31__DOMAIN_ERR               BITFIELD(13, 13)
#define SDMA__DMA4_CSR_0_31__DOMAIN_ERR__POS          13

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CSR_0_31__DRAIN_END   
 *
 * @BRIEF        End of channel draining 
 *               Read 0x0:  
 *               No drain end in the current transfer 
 *               Write 0x0:  
 *               Status bit unchanged 
 *               Read 0x1:  
 *               The current channel draining is completed 
 *               Write 0x1:  
 *               Status bit is reset 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CSR_0_31__DRAIN_END                BITFIELD(12, 12)
#define SDMA__DMA4_CSR_0_31__DRAIN_END__POS           12

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CSR_0_31__MISALIGNED_ADRS_ERR   
 *
 * @BRIEF        Misaligned address error event 
 *               Read 0x0:  
 *               No address error  
 *               Write 0x0:  
 *               Status bit unchanged  
 *               Read 0x1:  
 *               An address error has been occurred  
 *               Write 0x1:  
 *               Status bit is reset  
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CSR_0_31__MISALIGNED_ADRS_ERR      BITFIELD(11, 11)
#define SDMA__DMA4_CSR_0_31__MISALIGNED_ADRS_ERR__POS 11

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CSR_0_31__SUPERVISOR_ERR   
 *
 * @BRIEF        Supervisor transaction error event 
 *               Read 0x0:  
 *               No supervisor transaction error  
 *               Write 0x0:  
 *               Status bit unchanged  
 *               Read 0x1:  
 *               A supervisor  transaction error has been occurred  
 *               Write 0x1:  
 *               Status bit is reset  
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CSR_0_31__SUPERVISOR_ERR           BITFIELD(10, 10)
#define SDMA__DMA4_CSR_0_31__SUPERVISOR_ERR__POS      10

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CSR_0_31__SECURE_ERR   
 *
 * @BRIEF        Secure transaction error event 
 *               Read 0x0:  
 *               No secure transaction error  
 *               Write 0x0:  
 *               Status bit unchanged  
 *               Read 0x1:  
 *                A secure transaction error has been occurred  
 *               Write 0x1:  
 *               Status bit is reset  
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CSR_0_31__SECURE_ERR               BITFIELD(9, 9)
#define SDMA__DMA4_CSR_0_31__SECURE_ERR__POS          9

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CSR_0_31__TRANS_ERR   
 *
 * @BRIEF        Transaction error event 
 *               Read 0x0:  
 *               No transaction error  
 *               Write 0x0:  
 *               Status bit unchanged  
 *               Read 0x1:  
 *                A transaction error has been occurred  
 *               Write 0x1:  
 *               Status bit is reset  
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CSR_0_31__TRANS_ERR                BITFIELD(8, 8)
#define SDMA__DMA4_CSR_0_31__TRANS_ERR__POS           8

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CSR_0_31__PKT   
 *
 * @BRIEF        End of  Packet transfer 
 *               Read 0x0:  
 *               The current packet transfer has not been finished  
 *               Write 0x0:  
 *               Status bit unchanged  
 *               Read 0x1:  
 *               The current packet has been transferred  
 *               Write 0x1:  
 *               Status bit is reset  
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CSR_0_31__PKT                      BITFIELD(7, 7)
#define SDMA__DMA4_CSR_0_31__PKT__POS                 7

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CSR_0_31__SYNC   
 *
 * @BRIEF        Synchronization status of a channel. 
 *               Read 0x0:  
 *                Logical channel is not scheduled or servicing a non 
 *               synchronized DMA request.  
 *               Write 0x0:  
 *               Status bit unchanged  
 *               Read 0x1:  
 *                Logical channel is servicing a synchronized DMA request  
 *               Write 0x1:  
 *               Status bit is reset  
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CSR_0_31__SYNC                     BITFIELD(6, 6)
#define SDMA__DMA4_CSR_0_31__SYNC__POS                6

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CSR_0_31__BLOCK   
 *
 * @BRIEF        End of block event 
 *               Read 0x0:  
 *               The current block transfer has not been finished  
 *               Write 0x0:  
 *               Status bit unchanged  
 *               Read 0x1:  
 *               The current block has been transferred  
 *               Write 0x1:  
 *               Status bit is reset  
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CSR_0_31__BLOCK                    BITFIELD(5, 5)
#define SDMA__DMA4_CSR_0_31__BLOCK__POS               5

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CSR_0_31__LAST   
 *
 * @BRIEF        Last frame (start of last frame) 
 *               Read 0x0:  
 *                The start of the last frame to transfer is not reached  
 *               Write 0x0:  
 *               Status bit unchanged  
 *               Read 0x1:  
 *               The start of the last frame to transfer is reached  
 *               Write 0x1:  
 *               Status bit is reset  
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CSR_0_31__LAST                     BITFIELD(4, 4)
#define SDMA__DMA4_CSR_0_31__LAST__POS                4

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CSR_0_31__FRAME   
 *
 * @BRIEF        End of frame event 
 *               Read 0x0:  
 *               The end of current transferred frame is not reached  
 *               Write 0x0:  
 *               Status bit unchanged  
 *               Read 0x1:  
 *               The end of current transferred frame is reached  
 *               Write 0x1:  
 *               Status bit is reset  
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CSR_0_31__FRAME                    BITFIELD(3, 3)
#define SDMA__DMA4_CSR_0_31__FRAME__POS               3

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CSR_0_31__HALF   
 *
 * @BRIEF        Half of frame event. 
 *               Read 0x0:  
 *               The half of current transferred frame is not reached  
 *               Write 0x0:  
 *               Status bit unchanged  
 *               Read 0x1:  
 *                The half of current transferred frame is reached  
 *               Write 0x1:  
 *               Status bit is reset  
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CSR_0_31__HALF                     BITFIELD(2, 2)
#define SDMA__DMA4_CSR_0_31__HALF__POS                2

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CSR_0_31__DROP   
 *
 * @BRIEF        Synchronization event drop occured during the transfer 
 *               Read 0x0:  
 *               No synchronization collision  
 *               Write 0x0:  
 *               Status bit unchanged  
 *               Read 0x1:  
 *                A synchronization collision has been occurred  
 *               Write 0x1:  
 *               Status bit is reset  
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CSR_0_31__DROP                     BITFIELD(1, 1)
#define SDMA__DMA4_CSR_0_31__DROP__POS                1

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CSDP_0_31__SRC_ENDIAN   
 *
 * @BRIEF        Channel source endianness control - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CSDP_0_31__SRC_ENDIAN              BITFIELD(21, 21)
#define SDMA__DMA4_CSDP_0_31__SRC_ENDIAN__POS         21

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CSDP_0_31__SRC_ENDIAN_LOCK   
 *
 * @BRIEF        Endianness Lock - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CSDP_0_31__SRC_ENDIAN_LOCK         BITFIELD(20, 20)
#define SDMA__DMA4_CSDP_0_31__SRC_ENDIAN_LOCK__POS    20

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CSDP_0_31__DST_ENDIAN   
 *
 * @BRIEF        Channel Destination endianness control - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CSDP_0_31__DST_ENDIAN              BITFIELD(19, 19)
#define SDMA__DMA4_CSDP_0_31__DST_ENDIAN__POS         19

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CSDP_0_31__DST_ENDIAN_LOCK   
 *
 * @BRIEF        Endianness Lock - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CSDP_0_31__DST_ENDIAN_LOCK         BITFIELD(18, 18)
#define SDMA__DMA4_CSDP_0_31__DST_ENDIAN_LOCK__POS    18

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CSDP_0_31__WRITE_MODE   
 *
 * @BRIEF        Used to enable writing mode without posting or with posting 
 *               - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CSDP_0_31__WRITE_MODE              BITFIELD(17, 16)
#define SDMA__DMA4_CSDP_0_31__WRITE_MODE__POS         16

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CSDP_0_31__DST_BURST_EN   
 *
 * @BRIEF        Used to enable bursting on the Write Port. Smaller burst 
 *               size than the programmed burst size is also allowed - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CSDP_0_31__DST_BURST_EN            BITFIELD(15, 14)
#define SDMA__DMA4_CSDP_0_31__DST_BURST_EN__POS       14

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CSDP_0_31__DST_PACKED   
 *
 * @BRIEF        Destination receives packed data.  - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CSDP_0_31__DST_PACKED              BITFIELD(13, 13)
#define SDMA__DMA4_CSDP_0_31__DST_PACKED__POS         13

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CSDP_0_31__WR_ADD_TRSLT   
 *
 * @BRIEF        Enables the MReqAddressTranslate sideband signal in the 
 *               write port side - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CSDP_0_31__WR_ADD_TRSLT            BITFIELD(12, 9)
#define SDMA__DMA4_CSDP_0_31__WR_ADD_TRSLT__POS       9

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CSDP_0_31__SRC_BURST_EN   
 *
 * @BRIEF        Used to enable bursting on the Read Port. Smaller burst size 
 *               than the programmed burst size is also allowed - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CSDP_0_31__SRC_BURST_EN            BITFIELD(8, 7)
#define SDMA__DMA4_CSDP_0_31__SRC_BURST_EN__POS       7

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CSDP_0_31__SRC_PACKED   
 *
 * @BRIEF        Source provides packed data.  - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CSDP_0_31__SRC_PACKED              BITFIELD(6, 6)
#define SDMA__DMA4_CSDP_0_31__SRC_PACKED__POS         6

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CSDP_0_31__RD_ADD_TRSLT   
 *
 * @BRIEF        Enables the MReqAddressTranslate sideband signal in the read 
 *               port side - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CSDP_0_31__RD_ADD_TRSLT            BITFIELD(5, 2)
#define SDMA__DMA4_CSDP_0_31__RD_ADD_TRSLT__POS       2

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CSDP_0_31__DATA_TYPE   
 *
 * @BRIEF        Defines the type of the data moved in the channel.  - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CSDP_0_31__DATA_TYPE               BITFIELD(1, 0)
#define SDMA__DMA4_CSDP_0_31__DATA_TYPE__POS          0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CEN_0_31__CHANNEL_ELMNT_NBR   
 *
 * @BRIEF        Number of elements within a frame (unsigned) to transfer - 
 *               (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CEN_0_31__CHANNEL_ELMNT_NBR        BITFIELD(23, 0)
#define SDMA__DMA4_CEN_0_31__CHANNEL_ELMNT_NBR__POS   0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CFN_0_31__CHANNEL_FRAME_NBR   
 *
 * @BRIEF        Number of frames within the block to be transferred 
 *               (unsigned) - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CFN_0_31__CHANNEL_FRAME_NBR        BITFIELD(15, 0)
#define SDMA__DMA4_CFN_0_31__CHANNEL_FRAME_NBR__POS   0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CSSA_0_31__SRC_START_ADRS   
 *
 * @BRIEF        32  bits of the source start address - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CSSA_0_31__SRC_START_ADRS          BITFIELD(31, 0)
#define SDMA__DMA4_CSSA_0_31__SRC_START_ADRS__POS     0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CDSA_0_31__DST_START_ADRS   
 *
 * @BRIEF        32 bits of the destination start address - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CDSA_0_31__DST_START_ADRS          BITFIELD(31, 0)
#define SDMA__DMA4_CDSA_0_31__DST_START_ADRS__POS     0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CSEI_0_31__CHANNEL_SRC_ELMNT_INDEX   
 *
 * @BRIEF        Channel source element index - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CSEI_0_31__CHANNEL_SRC_ELMNT_INDEX BITFIELD(15, 0)
#define SDMA__DMA4_CSEI_0_31__CHANNEL_SRC_ELMNT_INDEX__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CSFI_0_31__CH_SRC_FRM_INDEX_OR_16BIT_PKT_ELNT_NBR   
 *
 * @BRIEF        Channel source frame index value if source address is in 
 *               double index mode. Or if fs=bs=1 and 
 *               DMA_CCR[SEL_SRC_DST_SYNC]=1; the bitfield [15:0] gives the  
 *               number of element in packet. The field [31:16] is unused for 
 *               the packet size. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CSFI_0_31__CH_SRC_FRM_INDEX_OR_16BIT_PKT_ELNT_NBR BITFIELD(31, 0)
#define SDMA__DMA4_CSFI_0_31__CH_SRC_FRM_INDEX_OR_16BIT_PKT_ELNT_NBR__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CDEI_0_31__CHANNEL_DST_ELMNT_INDEX   
 *
 * @BRIEF        Channel destination element index - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CDEI_0_31__CHANNEL_DST_ELMNT_INDEX BITFIELD(15, 0)
#define SDMA__DMA4_CDEI_0_31__CHANNEL_DST_ELMNT_INDEX__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CDFI_0_31__CH_DST_FRM_IDX_OR_16BIT_PKT_ELNT_NBR   
 *
 * @BRIEF        Channel destination frame index value if destination address 
 *               is in double index mode. Or if fs=bs=1 and 
 *               DMA_CCR[SEL_SRC_DST_SYNC]=0; the bitfield [15:0] gives the  
 *               number of element in packet. The field [31:16] is unused for 
 *               the packet size.. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CDFI_0_31__CH_DST_FRM_IDX_OR_16BIT_PKT_ELNT_NBR BITFIELD(31, 0)
#define SDMA__DMA4_CDFI_0_31__CH_DST_FRM_IDX_OR_16BIT_PKT_ELNT_NBR__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CSAC_0_31__SRC_ELMNT_ADRS   
 *
 * @BRIEF        Current source address counter value - (RO) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CSAC_0_31__SRC_ELMNT_ADRS          BITFIELD(31, 0)
#define SDMA__DMA4_CSAC_0_31__SRC_ELMNT_ADRS__POS     0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CDAC_0_31__DST_ELMNT_ADRS   
 *
 * @BRIEF        Current destination address counter value - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CDAC_0_31__DST_ELMNT_ADRS          BITFIELD(31, 0)
#define SDMA__DMA4_CDAC_0_31__DST_ELMNT_ADRS__POS     0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CCEN_0_31__CURRENT_ELMNT_NBR   
 *
 * @BRIEF        Channel current transferred element number in the current 
 *               frame - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CCEN_0_31__CURRENT_ELMNT_NBR       BITFIELD(23, 0)
#define SDMA__DMA4_CCEN_0_31__CURRENT_ELMNT_NBR__POS  0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CCFN_0_31__CURRENT_FRAME_NBR   
 *
 * @BRIEF        Channel current transferred frame number in the current 
 *               transfer - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CCFN_0_31__CURRENT_FRAME_NBR       BITFIELD(15, 0)
#define SDMA__DMA4_CCFN_0_31__CURRENT_FRAME_NBR__POS  0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_COLOR_0_31__CH_BLT_FRGRND_COLOR_OR_SOLID_COLOR_PTRN   
 *
 * @BRIEF        Color key or solid color pattern: The pattern is replicated 
 *               according to the data type. If the data-type  is 8-bit the 
 *               pattern is replicated 4 times to fill the register in order 
 *               to enhance processing when data is packed at the graphic 
 *               module input. The same resoning for 16-bit data-type.    - 
 *               (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_COLOR_0_31__CH_BLT_FRGRND_COLOR_OR_SOLID_COLOR_PTRN BITFIELD(23, 0)
#define SDMA__DMA4_COLOR_0_31__CH_BLT_FRGRND_COLOR_OR_SOLID_COLOR_PTRN__POS 0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CDP_0_31__SLAVE2FREE   
 *
 * @BRIEF        Slave 2 is free. 
 *               This bit is relevant only for Type 4 descriptor (form 
 *               factor). 
 *                 0x0: Form factor operates with three channels, Master, 
 *               slave 1 and slave 2 
 *                0x1: Form factor operates with only two channels. Master 
 *               and slave 1. 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CDP_0_31__SLAVE2FREE               BITFIELD(16, 16)
#define SDMA__DMA4_CDP_0_31__SLAVE2FREE__POS          16

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CDP_0_31__DES_ENDIANNESS   
 *
 * @BRIEF        This is relevant for Descriptor fetch. 
 *                This bit would take meaning only for 64 bit port width. 
 *                0x0: Descriptor is fetched in little endian mode. 
 *                0x1: Descriptor is fetched in big endian mode. 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CDP_0_31__DES_ENDIANNESS           BITFIELD(15, 15)
#define SDMA__DMA4_CDP_0_31__DES_ENDIANNESS__POS      15

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CDP_0_31__ALGO   
 *
 * @BRIEF        This is relevant only for type4 descriptor. 
 *               This gives the Encryption algorithm type 
 *               0x0 
 *               Means F8 Encryption Algorithm is used  
 *               0x1 
 *               Means F9 Encryption Algorithm is used  
 *               0x2 
 *               Means GEA Encryption Algo is used  
 *               0x3 
 *               Means A5 Encryption Algorithm is used  
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CDP_0_31__ALGO                     BITFIELD(14, 13)
#define SDMA__DMA4_CDP_0_31__ALGO__POS                13

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CDP_0_31__WI   
 *
 * @BRIEF        This is relevant only for type4 descriptor. 
 *               It specifies if the Output data channel has to perform a 
 *               Write_In_Place or not.   
 *               0x0: 
 *               Output data channel has not to perform a Write_In_Place 
 *               0x1: 
 *               Output data channel has to perform a Write_In_Place 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CDP_0_31__WI                       BITFIELD(12, 12)
#define SDMA__DMA4_CDP_0_31__WI__POS                  12

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CDP_0_31__OV   
 *
 * @BRIEF        This is relevant only for type4 descriptor. 
 *               It specifies if the Output data channel configuration 
 *               parameter in the current type4 descriptor are valid or not   
 *               0x0: 
 *               Output data channel configuration registers are not in the 
 *               current type4 descriptor  
 *               0x1: 
 *               Output data channel configuration registers are in the 
 *               current type4 descriptor  
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CDP_0_31__OV                       BITFIELD(11, 11)
#define SDMA__DMA4_CDP_0_31__OV__POS                  11

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CDP_0_31__FAST   
 *
 * @BRIEF        Sets the Fast start mode 
 *               0x0: 
 *               No fast start mode 
 *               0x1: 
 *               Fast start mode is enabled 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CDP_0_31__FAST                     BITFIELD(10, 10)
#define SDMA__DMA4_CDP_0_31__FAST__POS                10

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CDP_0_31__TRANSFER_MODE   
 *
 * @BRIEF        Enable Link list transfer mode 
 *               0x0:  
 *               Normal transfer mode is used  
 *               0x1: 
 *               Link-list channel mode for type1/2/3 descriptor is used 
 *               0x2:  
 *               Link-list mode for type4 descriptor as Master is used 
 *               0x3 
 *               Link-list mode for type4 descriptor as Salve is used 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CDP_0_31__TRANSFER_MODE            BITFIELD(9, 8)
#define SDMA__DMA4_CDP_0_31__TRANSFER_MODE__POS       8

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CDP_0_31__PAUSE_LINK_LIST   
 *
 * @BRIEF        Suspend the Link list transfer at completion of the current 
 *               block transfer 
 *               0x0: 
 *               Link list is active 
 *               0x1: 
 *               Link list is suspended at the boundary of the current data 
 *               block transfer and after completion of Next descriptor 
 *               loading.   
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CDP_0_31__PAUSE_LINK_LIST          BITFIELD(7, 7)
#define SDMA__DMA4_CDP_0_31__PAUSE_LINK_LIST__POS     7

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CDP_0_31__NEXT_DESCRIPTOR_TYPE   
 *
 * @BRIEF        Descriptor type 
 *               0xN:  
 *                N is  the Next descriptor type 
 *               (type1, type2, type3 or type4) 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CDP_0_31__NEXT_DESCRIPTOR_TYPE     BITFIELD(6, 4)
#define SDMA__DMA4_CDP_0_31__NEXT_DESCRIPTOR_TYPE__POS 4

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CDP_0_31__SOURCE_VALID   
 *
 * @BRIEF        Source address valid 
 *               0x0: 
 *               The source address is not present in the next descriptor and 
 *               continuous incrementing is enabled 
 *               0x1: 
 *               The Source address has to be reloaded in the next descriptor 
 *               transfer 
 *               0x2:  
 *               The Source start address is not present in the next 
 *               descriptor. But will reload the one from configuration 
 *               memory which belongs the previous descriptor  
 *               0x3:  
 *               Undefined 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CDP_0_31__SOURCE_VALID             BITFIELD(3, 2)
#define SDMA__DMA4_CDP_0_31__SOURCE_VALID__POS        2

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CDP_0_31__DEST_VALID   
 *
 * @BRIEF         
 *               Destination address valid 
 *               0x0: 
 *               The destination address is not present in the next 
 *               descriptor and continuous incrementing is enabled 
 *               0x1: 
 *               The destination address has to be reloaded in the next 
 *               descriptor transfer  
 *               0x2:  
 *               The Destination start address is not present in the next 
 *               descriptor. But will reload the one from configuration 
 *               memory which belongs the previous descriptor. 
 *               0x3:  
 *               Undefined 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CDP_0_31__DEST_VALID               BITFIELD(1, 0)
#define SDMA__DMA4_CDP_0_31__DEST_VALID__POS          0

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CNDP_0_31__NEXT_DESCRIPTOR_POINTER   
 *
 * @BRIEF        This register contains the Next descriptor Address Pointer 
 *               for the link list Mechanism - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CNDP_0_31__NEXT_DESCRIPTOR_POINTER BITFIELD(31, 2)
#define SDMA__DMA4_CNDP_0_31__NEXT_DESCRIPTOR_POINTER__POS 2

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CCDN_0_31__NEXT_DESCRIPTOR_POINTER   
 *
 * @BRIEF        This register when read contains the current active 
 *               descriptor number in the link list. 
 *               This register is Read/write to allow user initialization. - 
 *               (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CCDN_0_31__NEXT_DESCRIPTOR_POINTER BITFIELD(15, 0)
#define SDMA__DMA4_CCDN_0_31__NEXT_DESCRIPTOR_POINTER__POS 0

    /* 
     * List of register bitfields values for component SDMA
     *
     */

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_IRQSTATUS_L0__CH_31_0_L0__READ0X0
 *
 * @BRIEF        Channel Interrupt L0 false - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_IRQSTATUS_L0__CH_31_0_L0__READ0X0  0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_IRQSTATUS_L0__CH_31_0_L0__WRITE0X0
 *
 * @BRIEF        Channel Interrupt L0 status bit unchanged - (Write) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_IRQSTATUS_L0__CH_31_0_L0__WRITE0X0 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_IRQSTATUS_L0__CH_31_0_L0__WRITE0X1
 *
 * @BRIEF        Channel  Interrupt L0 status bit is reset - (Write) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_IRQSTATUS_L0__CH_31_0_L0__WRITE0X1 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_IRQSTATUS_L0__CH_31_0_L0__READ0X1
 *
 * @BRIEF        Channel Interrupt L0 true (pending) - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_IRQSTATUS_L0__CH_31_0_L0__READ0X1  0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_IRQSTATUS_L1__CH_31_0_L1__READ0X0
 *
 * @BRIEF        Channel Interrupt L1 false - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_IRQSTATUS_L1__CH_31_0_L1__READ0X0  0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_IRQSTATUS_L1__CH_31_0_L1__WRITE0X0
 *
 * @BRIEF        Channel Interrupt L1 status bit unchanged - (Write) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_IRQSTATUS_L1__CH_31_0_L1__WRITE0X0 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_IRQSTATUS_L1__CH_31_0_L1__WRITE0X1
 *
 * @BRIEF        Channel  Interrupt L1 status bit is reset - (Write) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_IRQSTATUS_L1__CH_31_0_L1__WRITE0X1 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_IRQSTATUS_L1__CH_31_0_L1__READ0X1
 *
 * @BRIEF        Channel Interrupt L1 true (pending) - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_IRQSTATUS_L1__CH_31_0_L1__READ0X1  0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_IRQSTATUS_L2__CH_31_0_L2__READ0X0
 *
 * @BRIEF        Channel Interrupt L2 false - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_IRQSTATUS_L2__CH_31_0_L2__READ0X0  0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_IRQSTATUS_L2__CH_31_0_L2__WRITE0X0
 *
 * @BRIEF        Channel Interrupt L2 status bit unchanged - (Write) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_IRQSTATUS_L2__CH_31_0_L2__WRITE0X0 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_IRQSTATUS_L2__CH_31_0_L2__WRITE0X1
 *
 * @BRIEF        Channel  Interrupt L2 status bit is reset - (Write) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_IRQSTATUS_L2__CH_31_0_L2__WRITE0X1 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_IRQSTATUS_L2__CH_31_0_L2__READ0X1
 *
 * @BRIEF        Channel Interrupt L2 true (pending) - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_IRQSTATUS_L2__CH_31_0_L2__READ0X1  0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_IRQSTATUS_L3__CH_31_0_L3__READ0X0
 *
 * @BRIEF        Channel Interrupt L3false - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_IRQSTATUS_L3__CH_31_0_L3__READ0X0  0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_IRQSTATUS_L3__CH_31_0_L3__WRITE0X0
 *
 * @BRIEF        Channel Interrupt L3 status bit unchanged - (Write) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_IRQSTATUS_L3__CH_31_0_L3__WRITE0X0 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_IRQSTATUS_L3__CH_31_0_L3__WRITE0X1
 *
 * @BRIEF        Channel  Interrupt L3 status bit is reset - (Write) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_IRQSTATUS_L3__CH_31_0_L3__WRITE0X1 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_IRQSTATUS_L3__CH_31_0_L3__READ0X1
 *
 * @BRIEF        Channel Interrupt L3true (pending) - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_IRQSTATUS_L3__CH_31_0_L3__READ0X1  0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_IRQENABLE_L0__CH_31_0_L0_EN__MASK
 *
 * @BRIEF        Channel Interrupt L0 is masked - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_IRQENABLE_L0__CH_31_0_L0_EN__MASK  0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_IRQENABLE_L0__CH_31_0_L0_EN__UNMASK
 *
 * @BRIEF        Channel Interrupt L0 generates an interrupt when it occurs - 
 *               (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_IRQENABLE_L0__CH_31_0_L0_EN__UNMASK 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_IRQENABLE_L1__CH_0_L1_0_EN__MASK
 *
 * @BRIEF        Channel Interrupt L1 is masked - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_IRQENABLE_L1__CH_0_L1_0_EN__MASK   0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_IRQENABLE_L1__CH_0_L1_0_EN__UNMASK
 *
 * @BRIEF        Channel Interrupt L1 generates an interrupt when it occurs - 
 *               (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_IRQENABLE_L1__CH_0_L1_0_EN__UNMASK 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_IRQENABLE_L2__CH_31_0_L2_EN__MASK
 *
 * @BRIEF        Channel Interrupt L2 is masked - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_IRQENABLE_L2__CH_31_0_L2_EN__MASK  0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_IRQENABLE_L2__CH_31_0_L2_EN__UNMASK
 *
 * @BRIEF        Channel Interrupt L2 generates an interrupt when it occurs - 
 *               (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_IRQENABLE_L2__CH_31_0_L2_EN__UNMASK 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_IRQENABLE_L3__CH_31_0_L3_EN__MASK
 *
 * @BRIEF        Channel Interrupt L3 is masked - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_IRQENABLE_L3__CH_31_0_L3_EN__MASK  0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_IRQENABLE_L3__CH_31_0_L3_EN__UNMASK
 *
 * @BRIEF        Channel Interrupt L3 generates an interrupt when it occurs - 
 *               (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_IRQENABLE_L3__CH_31_0_L3_EN__UNMASK 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_SYSSTATUS__RESETDONE__ONGOING
 *
 * @BRIEF         Internal module reset is on-going  - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_SYSSTATUS__RESETDONE__ONGOING      0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_SYSSTATUS__RESETDONE__COMPLETED
 *
 * @BRIEF        Reset completed - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_SYSSTATUS__RESETDONE__COMPLETED    0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_OCP_SYSCONFIG__MIDLEMODE__FORCE
 *
 * @BRIEF        Force-standby: MStandby is asserted only when all the DMA 
 *               channels are disabled - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_OCP_SYSCONFIG__MIDLEMODE__FORCE    0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_OCP_SYSCONFIG__MIDLEMODE__NO
 *
 * @BRIEF        No-Standby: MStandby is never asserted - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_OCP_SYSCONFIG__MIDLEMODE__NO       0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_OCP_SYSCONFIG__MIDLEMODE__SMART
 *
 * @BRIEF        Smart-Standby: MStandby is asserted if at least one of the 
 *               following two conditions is satisfied: 
 *               1. All the channels are disabled 
 *               2. There is no non-synchronized channel enabled and or no 
 *               DMA request input is asserted and no request  in the read 
 *               and write port scheduler state machine. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_OCP_SYSCONFIG__MIDLEMODE__SMART    0x2ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_OCP_SYSCONFIG__MIDLEMODE__RESERVED
 *
 * @BRIEF        reserved for second smart-standby mode if needed - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_OCP_SYSCONFIG__MIDLEMODE__RESERVED 0x3ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_OCP_SYSCONFIG__EMUFREE__FROZEN
 *
 * @BRIEF        DMA4 freezes its internal logic upon MSuspend assertion - 
 *               (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_OCP_SYSCONFIG__EMUFREE__FROZEN     0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_OCP_SYSCONFIG__EMUFREE__IGNORED
 *
 * @BRIEF        DMA4 ingnores the MSuspend input  - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_OCP_SYSCONFIG__EMUFREE__IGNORED    0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_OCP_SYSCONFIG__SIDLEMODE__FORCE
 *
 * @BRIEF        Force-idle. An idle request is acknowledged unconditionally 
 *               - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_OCP_SYSCONFIG__SIDLEMODE__FORCE    0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_OCP_SYSCONFIG__SIDLEMODE__NO
 *
 * @BRIEF        No-idle. An idle request is never acknowledged - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_OCP_SYSCONFIG__SIDLEMODE__NO       0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_OCP_SYSCONFIG__SIDLEMODE__SMART
 *
 * @BRIEF        Smart-idle. Acknowledgement to an idle request is given  - 
 *               (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_OCP_SYSCONFIG__SIDLEMODE__SMART    0x2ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_OCP_SYSCONFIG__SIDLEMODE__RESERVED
 *
 * @BRIEF        reserved  - do not use based on the internal activity of the 
 *               module - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_OCP_SYSCONFIG__SIDLEMODE__RESERVED 0x3ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_OCP_SYSCONFIG__SOFTRESET__NOEFFECT
 *
 * @BRIEF        No effect - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_OCP_SYSCONFIG__SOFTRESET__NOEFFECT 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_OCP_SYSCONFIG__SOFTRESET__RESET
 *
 * @BRIEF        Reset - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_OCP_SYSCONFIG__SOFTRESET__RESET    0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_OCP_SYSCONFIG__AUTOIDLE__FREERUNNING
 *
 * @BRIEF        OCP clock is free running - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_OCP_SYSCONFIG__AUTOIDLE__FREERUNNING 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_OCP_SYSCONFIG__AUTOIDLE__CLOCKGATING
 *
 * @BRIEF        Automatic OCP clock gating strategy is applied, based on the 
 *               OCP interface activity. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_OCP_SYSCONFIG__AUTOIDLE__CLOCKGATING 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CAPS_0__CONST_FILL_CPBLTY__NOLCH
 *
 * @BRIEF        No LCH supports constant fill copy - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CAPS_0__CONST_FILL_CPBLTY__NOLCH   0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CAPS_0__CONST_FILL_CPBLTY__ANYLCH
 *
 * @BRIEF         any LCH supports constant fill copy  - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CAPS_0__CONST_FILL_CPBLTY__ANYLCH  0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CAPS_0__TRANSPARENT_BLT_CPBLTY__NOLCH
 *
 * @BRIEF        No LCH supports transparent BLT copy - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CAPS_0__TRANSPARENT_BLT_CPBLTY__NOLCH 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CAPS_0__TRANSPARENT_BLT_CPBLTY__ANYLCH
 *
 * @BRIEF        any LCH suports transparent BLT copy - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CAPS_0__TRANSPARENT_BLT_CPBLTY__ANYLCH 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CAPS_2__SEPARATE_SRC_AND_DST_INDEX_CPBLTY__NOTSUPPORTED
 *
 * @BRIEF        Does not support separate src/dst index for 2D addressing - 
 *               (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CAPS_2__SEPARATE_SRC_AND_DST_INDEX_CPBLTY__NOTSUPPORTED 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CAPS_2__SEPARATE_SRC_AND_DST_INDEX_CPBLTY__SUPPORTED
 *
 * @BRIEF        Supports separate src/dest index for 2D addressing - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CAPS_2__SEPARATE_SRC_AND_DST_INDEX_CPBLTY__SUPPORTED 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CAPS_2__DST_DOUBLE_INDEX_ADRS_CPBLTY__NOTSUPPORTED
 *
 * @BRIEF        Does not support double index address mode on the 
 *               destination port - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CAPS_2__DST_DOUBLE_INDEX_ADRS_CPBLTY__NOTSUPPORTED 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CAPS_2__DST_DOUBLE_INDEX_ADRS_CPBLTY__SUPPORTED
 *
 * @BRIEF        Supports double index address mode on the destination port - 
 *               (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CAPS_2__DST_DOUBLE_INDEX_ADRS_CPBLTY__SUPPORTED 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CAPS_2__DST_SINGLE_INDEX_ADRS_CPBLTY__NOTSUPPORTED
 *
 * @BRIEF        Does not support single index address mode on the 
 *               destination port - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CAPS_2__DST_SINGLE_INDEX_ADRS_CPBLTY__NOTSUPPORTED 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CAPS_2__DST_SINGLE_INDEX_ADRS_CPBLTY__SUPPORTED
 *
 * @BRIEF         Supports single index address mode on the destination port 
 *               - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CAPS_2__DST_SINGLE_INDEX_ADRS_CPBLTY__SUPPORTED 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CAPS_2__DST_POST_INCRMNT_ADRS_CPBLTY__NOTSUPPORTED
 *
 * @BRIEF        Does not supports post-increment address mode in the 
 *               destination port  - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CAPS_2__DST_POST_INCRMNT_ADRS_CPBLTY__NOTSUPPORTED 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CAPS_2__DST_POST_INCRMNT_ADRS_CPBLTY__SUPPORTED
 *
 * @BRIEF        Supports post-increment address mode in the destination port 
 *               - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CAPS_2__DST_POST_INCRMNT_ADRS_CPBLTY__SUPPORTED 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CAPS_2__DST_CONST_ADRS_CPBLTY__NOTSUPPORTED
 *
 * @BRIEF        Does not supports constant address mode in the destination 
 *               port - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CAPS_2__DST_CONST_ADRS_CPBLTY__NOTSUPPORTED 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CAPS_2__DST_CONST_ADRS_CPBLTY__SUPPORTED
 *
 * @BRIEF        Supports constant address mode in the destination port - 
 *               (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CAPS_2__DST_CONST_ADRS_CPBLTY__SUPPORTED 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CAPS_2__SRC_DOUBLE_INDEX_ADRS_CPBLTY__NOTSUPPORTED
 *
 * @BRIEF        Does not support double index address mode on the source 
 *               port - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CAPS_2__SRC_DOUBLE_INDEX_ADRS_CPBLTY__NOTSUPPORTED 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CAPS_2__SRC_DOUBLE_INDEX_ADRS_CPBLTY__SUPPORTED
 *
 * @BRIEF        Supports double index address mode on the source port - 
 *               (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CAPS_2__SRC_DOUBLE_INDEX_ADRS_CPBLTY__SUPPORTED 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CAPS_2__SRC_SINGLE_INDEX_ADRS_CPBLTY__NOTSUPPORTED
 *
 * @BRIEF        Does not support single index address mode on the source 
 *               port - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CAPS_2__SRC_SINGLE_INDEX_ADRS_CPBLTY__NOTSUPPORTED 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CAPS_2__SRC_SINGLE_INDEX_ADRS_CPBLTY__SUPPORTED
 *
 * @BRIEF        Supports single index address mode in the source port - 
 *               (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CAPS_2__SRC_SINGLE_INDEX_ADRS_CPBLTY__SUPPORTED 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CAPS_2__SRC_POST_INCREMENT_ADRS_CPBLTY__NOTSUPPORTED
 *
 * @BRIEF         Does not supports post-increment address mode in the source 
 *               port - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CAPS_2__SRC_POST_INCREMENT_ADRS_CPBLTY__NOTSUPPORTED 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CAPS_2__SRC_POST_INCREMENT_ADRS_CPBLTY__SUPPORTED
 *
 * @BRIEF        Supports post-increment address mode in the source port - 
 *               (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CAPS_2__SRC_POST_INCREMENT_ADRS_CPBLTY__SUPPORTED 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CAPS_2__SRC_CONST_ADRS_CPBLTY__NOTSUPPORTED
 *
 * @BRIEF        Does not supports constant address mode in the source port - 
 *               (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CAPS_2__SRC_CONST_ADRS_CPBLTY__NOTSUPPORTED 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CAPS_2__SRC_CONST_ADRS_CPBLTY__SUPPORTED
 *
 * @BRIEF        Supports constant address mode in the source port - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CAPS_2__SRC_CONST_ADRS_CPBLTY__SUPPORTED 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CAPS_3__BLOCK_SYNCHR_CPBLTY__NOTSUPPORTED
 *
 * @BRIEF        Does not support synchronization transfer on block boundary 
 *               - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CAPS_3__BLOCK_SYNCHR_CPBLTY__NOTSUPPORTED 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CAPS_3__BLOCK_SYNCHR_CPBLTY__SUPPORTED
 *
 * @BRIEF        Supports synchronization transfer on block boundary - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CAPS_3__BLOCK_SYNCHR_CPBLTY__SUPPORTED 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CAPS_3__PKT_SYNCHR_CPBLTY__NOTSUPPORTED
 *
 * @BRIEF        Does not support synchronization transfer on packet boundary 
 *               - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CAPS_3__PKT_SYNCHR_CPBLTY__NOTSUPPORTED 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CAPS_3__PKT_SYNCHR_CPBLTY__SUPPORTED
 *
 * @BRIEF        Supports synchronization transfer on packet boundary - 
 *               (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CAPS_3__PKT_SYNCHR_CPBLTY__SUPPORTED 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CAPS_4__PKT_INTERRUPT_CPBLTY__NOTSUPPORTED
 *
 * @BRIEF        Does not support end of packet interrupt generation 
 *               capabitity - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CAPS_4__PKT_INTERRUPT_CPBLTY__NOTSUPPORTED 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CAPS_4__PKT_INTERRUPT_CPBLTY__SUPPORTED
 *
 * @BRIEF        Supports end of packet interrupt generation capability - 
 *               (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CAPS_4__PKT_INTERRUPT_CPBLTY__SUPPORTED 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CAPS_4__SYNC_STATUS_CPBLTY__NOTSUPPORTED
 *
 * @BRIEF        Does not support synchronized transfer status bit generation 
 *               - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CAPS_4__SYNC_STATUS_CPBLTY__NOTSUPPORTED 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CAPS_4__SYNC_STATUS_CPBLTY__SUPPORTED
 *
 * @BRIEF        Supports synchronized transfer status bit generation - 
 *               (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CAPS_4__SYNC_STATUS_CPBLTY__SUPPORTED 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CAPS_4__BLOCK_INTERRUPT_CPBLTY__NOTSUPPORTED
 *
 * @BRIEF        Does not support end of block interrupt generation 
 *               capability - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CAPS_4__BLOCK_INTERRUPT_CPBLTY__NOTSUPPORTED 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CAPS_4__BLOCK_INTERRUPT_CPBLTY__SUPPORTED
 *
 * @BRIEF        Supports end of block interrupt generation capability - 
 *               (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CAPS_4__BLOCK_INTERRUPT_CPBLTY__SUPPORTED 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CAPS_4__LAST_FRAME_INTERRUPT_CPBLTY__NOTSUPPORTED
 *
 * @BRIEF        Does not support last frame interrupt generation capability 
 *               - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CAPS_4__LAST_FRAME_INTERRUPT_CPBLTY__NOTSUPPORTED 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CAPS_4__LAST_FRAME_INTERRUPT_CPBLTY__SUPPORTED
 *
 * @BRIEF        Supports last frame interrupt generation capability - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CAPS_4__LAST_FRAME_INTERRUPT_CPBLTY__SUPPORTED 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CAPS_4__FRAME_INTERRUPT_CPBLTY__NOTSUPPORTED
 *
 * @BRIEF        Does not support end of frame interrupt generation 
 *               capability - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CAPS_4__FRAME_INTERRUPT_CPBLTY__NOTSUPPORTED 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CAPS_4__FRAME_INTERRUPT_CPBLTY__SUPPORTED
 *
 * @BRIEF        Supports end of frame interrupt generation capability - 
 *               (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CAPS_4__FRAME_INTERRUPT_CPBLTY__SUPPORTED 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CAPS_4__HALF_FRAME_INTERRUPT_CPBLTY__NOTSUPPORTED
 *
 * @BRIEF        Does not support half of frame interrupt generation 
 *               capability - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CAPS_4__HALF_FRAME_INTERRUPT_CPBLTY__NOTSUPPORTED 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CAPS_4__HALF_FRAME_INTERRUPT_CPBLTY__SUPPORTED
 *
 * @BRIEF        Supports half of frame interrupt generation capability - 
 *               (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CAPS_4__HALF_FRAME_INTERRUPT_CPBLTY__SUPPORTED 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CAPS_4__EVENT_DROP_INTERRUPT_CPBLTY__NOTSUPPORTED
 *
 * @BRIEF        Does not support event drop interrupt generation capability 
 *               - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CAPS_4__EVENT_DROP_INTERRUPT_CPBLTY__NOTSUPPORTED 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CAPS_4__EVENT_DROP_INTERRUPT_CPBLTY__SUPPORTED
 *
 * @BRIEF        Supports event drop interrupt generation capability - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CAPS_4__EVENT_DROP_INTERRUPT_CPBLTY__SUPPORTED 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_GCR__HI_THREAD_RESERVED__NOTHRRSRV
 *
 * @BRIEF        No ThreadID is reserved on the Read Port for high priority 
 *               channels. 
 *               No ThreadID is reserved on the Write Port for high priority 
 *               channels. 
 *                - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_GCR__HI_THREAD_RESERVED__NOTHRRSRV 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_GCR__HI_THREAD_RESERVED__ONETHRRSRV
 *
 * @BRIEF        Read Port ThreadID 0 is reserved for high priority channels. 
 *               Write Port  ThreadID 0 is reserved for high priority 
 *               channels. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_GCR__HI_THREAD_RESERVED__ONETHRRSRV 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_GCR__HI_THREAD_RESERVED__TWOTHRRSRV
 *
 * @BRIEF        Read port ThreadID 0 and ThreadID 1 are reserved for high  
 *               priority channels. 
 *               Write Port ThreadID 0 is reserved for high priority 
 *               channels. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_GCR__HI_THREAD_RESERVED__TWOTHRRSRV 0x2ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_GCR__HI_THREAD_RESERVED__THREETHRRSRV
 *
 * @BRIEF        Read PortThreadID 0, ThreadID 1 and ThreadID 2 are reserved 
 *               for high priority channels. 
 *               Write Port ThreadID 0 is reserved for high priority 
 *               channels. - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_GCR__HI_THREAD_RESERVED__THREETHRRSRV 0x3ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CCR_0_31__WRITE_PRIORITY__LOW
 *
 * @BRIEF        Channel has low priority on the Write side during the 
 *               arbitration process - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CCR_0_31__WRITE_PRIORITY__LOW      0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CCR_0_31__WRITE_PRIORITY__HIGH
 *
 * @BRIEF        Channel has high priority on Write sided during the 
 *               arbitration process - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CCR_0_31__WRITE_PRIORITY__HIGH     0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CCR_0_31__BUFFERING_DISABLE__BUFFERING_ENABLED
 *
 * @BRIEF        buffering is enable across element/packet when source is 
 *               synchronized to element, packet, frame or bolcks - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CCR_0_31__BUFFERING_DISABLE__BUFFERING_ENABLED 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CCR_0_31__BUFFERING_DISABLE__BUFFERING_DISABLED
 *
 * @BRIEF        buffering is disabled across element/packet when source is 
 *               synchronized to element, packet, frame or bolcks  - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CCR_0_31__BUFFERING_DISABLE__BUFFERING_DISABLED 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CCR_0_31__SEL_SRC_DST_SYNC__DESTINATION
 *
 * @BRIEF        Tansfer is triggered by the destination. If synch on packet 
 *               the packet element number is specified in the CDFI register 
 *               - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CCR_0_31__SEL_SRC_DST_SYNC__DESTINATION 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CCR_0_31__SEL_SRC_DST_SYNC__SOURCE
 *
 * @BRIEF        Tansfer is triggered by the source. If synchronized on 
 *               packet the packet element number is specified in the CSFI 
 *               register - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CCR_0_31__SEL_SRC_DST_SYNC__SOURCE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CCR_0_31__PREFETCH__DISABLED
 *
 * @BRIEF        Prefetch mode is disabled. When Sel_Src_Dst_Sync=1 transfers 
 *               are buffred and pipelined between DMA requests  - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CCR_0_31__PREFETCH__DISABLED       0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CCR_0_31__PREFETCH__ENABLED
 *
 * @BRIEF        Prefetch mode is enabled. Prefetch mode is active only when 
 *               destination is synchronised. It is SW user responsibility 
 *               not to have at the same time Prefetch=1 when 
 *               Sel_Src_Dst_Sync=1. This mode is not supported - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CCR_0_31__PREFETCH__ENABLED        0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CCR_0_31__SUPERVISOR__DISABLED
 *
 * @BRIEF        Supervisor mode is disabled - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CCR_0_31__SUPERVISOR__DISABLED     0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CCR_0_31__SUPERVISOR__ENABLED
 *
 * @BRIEF        Supervisor mode is enabled  - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CCR_0_31__SUPERVISOR__ENABLED      0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CCR_0_31__SECURE__DISABLED
 *
 * @BRIEF        Channel secure mode is disabled - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CCR_0_31__SECURE__DISABLED         0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CCR_0_31__SECURE__ENABLED
 *
 * @BRIEF        Channel secure mode is enabled - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CCR_0_31__SECURE__ENABLED          0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CCR_0_31__TRANSPARENT_COPY_ENABLE__DISABLED
 *
 * @BRIEF        Transparent copy mode is disabled  - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CCR_0_31__TRANSPARENT_COPY_ENABLE__DISABLED 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CCR_0_31__TRANSPARENT_COPY_ENABLE__ENABLED
 *
 * @BRIEF        Transparent copy mode is enabled  - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CCR_0_31__TRANSPARENT_COPY_ENABLE__ENABLED 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CCR_0_31__CONST_FILL_ENABLE__DISABLED
 *
 * @BRIEF        Constant fill mode is disabled - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CCR_0_31__CONST_FILL_ENABLE__DISABLED 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CCR_0_31__CONST_FILL_ENABLE__ENABLED
 *
 * @BRIEF        Constant fill mode is enabled  - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CCR_0_31__CONST_FILL_ENABLE__ENABLED 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CCR_0_31__DST_AMODE__CONSTANT
 *
 * @BRIEF        Constant address mode - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CCR_0_31__DST_AMODE__CONSTANT      0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CCR_0_31__DST_AMODE__POSTINCREMENTED
 *
 * @BRIEF         Post-incremented address mode - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CCR_0_31__DST_AMODE__POSTINCREMENTED 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CCR_0_31__DST_AMODE__SINGLEINDEX
 *
 * @BRIEF        Single index address mode  - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CCR_0_31__DST_AMODE__SINGLEINDEX   0x2ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CCR_0_31__DST_AMODE__DOUBLEINDEX
 *
 * @BRIEF        Double index address mode - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CCR_0_31__DST_AMODE__DOUBLEINDEX   0x3ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CCR_0_31__SRC_AMODE__CONSTANT
 *
 * @BRIEF        Constant address mode - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CCR_0_31__SRC_AMODE__CONSTANT      0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CCR_0_31__SRC_AMODE__POSTINCREMENTED
 *
 * @BRIEF         Post-incremented address mode - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CCR_0_31__SRC_AMODE__POSTINCREMENTED 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CCR_0_31__SRC_AMODE__SINGLEINDEX
 *
 * @BRIEF        Single index address mode  - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CCR_0_31__SRC_AMODE__SINGLEINDEX   0x2ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CCR_0_31__SRC_AMODE__DOUBLEINDEX
 *
 * @BRIEF        Double index address mode - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CCR_0_31__SRC_AMODE__DOUBLEINDEX   0x3ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CCR_0_31__WR_ACTIVE__NOTACTIVE
 *
 * @BRIEF        Channel is not active on the write port - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CCR_0_31__WR_ACTIVE__NOTACTIVE     0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CCR_0_31__WR_ACTIVE__ACTIVE
 *
 * @BRIEF        Channel is currenly active on the write port - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CCR_0_31__WR_ACTIVE__ACTIVE        0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CCR_0_31__RD_ACTIVE__NOTACTIVE
 *
 * @BRIEF        Channel is not active on the read port - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CCR_0_31__RD_ACTIVE__NOTACTIVE     0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CCR_0_31__RD_ACTIVE__ACTIVE
 *
 * @BRIEF        Channel is currently active on the read port - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CCR_0_31__RD_ACTIVE__ACTIVE        0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CCR_0_31__SUSPEND_SENSITIVE__IGNORED
 *
 * @BRIEF        The channel ignores the MSuspend even if EMUFree is set to 
 *               0.  - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CCR_0_31__SUSPEND_SENSITIVE__IGNORED 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CCR_0_31__SUSPEND_SENSITIVE__MUSTCOMPLETE
 *
 * @BRIEF        If  EMUFree  is set to 0 and MSuspend comes in then all 
 *               current OCP services (single transaction or burst 
 *               transaction as specified in the corresponding CSDP register) 
 *               have to be completed before stopping processing any more 
 *               trasactions - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CCR_0_31__SUSPEND_SENSITIVE__MUSTCOMPLETE 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CCR_0_31__ENABLE__DISABLED
 *
 * @BRIEF        The logical channel is disabled - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CCR_0_31__ENABLE__DISABLED         0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CCR_0_31__ENABLE__ENABLED
 *
 * @BRIEF        The logical channel is enabled - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CCR_0_31__ENABLE__ENABLED          0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CCR_0_31__READ_PRIORITY__LOW
 *
 * @BRIEF        Channel has low priority on the Read side during the 
 *               arbitration process - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CCR_0_31__READ_PRIORITY__LOW       0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CCR_0_31__READ_PRIORITY__HIGH
 *
 * @BRIEF        Channel has high priority on read sided during the 
 *               arbitration process - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CCR_0_31__READ_PRIORITY__HIGH      0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CLNK_CTRL_0_31__ENABLE_LNK__DISABLED
 *
 * @BRIEF        Channel linking mode is disabled When set on the fly to 0 
 *               the current channel will complete  the transfer and stops 
 *               the chain linking - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CLNK_CTRL_0_31__ENABLE_LNK__DISABLED 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CLNK_CTRL_0_31__ENABLE_LNK__ENABLED
 *
 * @BRIEF        Channel linking mode is enabled. The logical channel defined 
 *               in the NextLCH_ID is enabled at the end of the current 
 *               transfer - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CLNK_CTRL_0_31__ENABLE_LNK__ENABLED 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CICR_0_31__MISALIGNED_ERR_IE__DISABLED
 *
 * @BRIEF        Disables the misaligned address error event interrupt - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CICR_0_31__MISALIGNED_ERR_IE__DISABLED 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CICR_0_31__MISALIGNED_ERR_IE__ENABLED
 *
 * @BRIEF        Enables the misalgned address error event interrupt - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CICR_0_31__MISALIGNED_ERR_IE__ENABLED 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CICR_0_31__SUPERVISOR_ERR_IE__DISABLED
 *
 * @BRIEF        Disables the supervisor transaction error event interrupt - 
 *               (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CICR_0_31__SUPERVISOR_ERR_IE__DISABLED 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CICR_0_31__SUPERVISOR_ERR_IE__ENABLED
 *
 * @BRIEF        Enables the supervisor transaction error event interrupt - 
 *               (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CICR_0_31__SUPERVISOR_ERR_IE__ENABLED 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CICR_0_31__SECURE_ERR_IE__DISABLED
 *
 * @BRIEF        Disables the secure transaction error event interrupt - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CICR_0_31__SECURE_ERR_IE__DISABLED 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CICR_0_31__SECURE_ERR_IE__ENABLED
 *
 * @BRIEF        Enables the secure transaction error event interrupt - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CICR_0_31__SECURE_ERR_IE__ENABLED  0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CICR_0_31__TRANS_ERR_IE__DISABLED
 *
 * @BRIEF        Disables the transaction error event interrupt - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CICR_0_31__TRANS_ERR_IE__DISABLED  0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CICR_0_31__TRANS_ERR_IE__ENABLED
 *
 * @BRIEF        Enables the transaction error event interrupt - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CICR_0_31__TRANS_ERR_IE__ENABLED   0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CICR_0_31__PKT_IE__DISABLED
 *
 * @BRIEF        Disables the end of Packet transfer interrupt - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CICR_0_31__PKT_IE__DISABLED        0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CICR_0_31__PKT_IE__ENABLED
 *
 * @BRIEF        Enables the end of Packet transfer interrupt - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CICR_0_31__PKT_IE__ENABLED         0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CICR_0_31__BLOCK_IE__DISABLED
 *
 * @BRIEF        Disables the end of block interrupt - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CICR_0_31__BLOCK_IE__DISABLED      0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CICR_0_31__BLOCK_IE__ENABLED
 *
 * @BRIEF        Disables the end of block interrupt - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CICR_0_31__BLOCK_IE__ENABLED       0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CICR_0_31__LAST_IE__DISABLED
 *
 * @BRIEF         Disables the last frame interrupt - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CICR_0_31__LAST_IE__DISABLED       0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CICR_0_31__LAST_IE__ENABLED
 *
 * @BRIEF        Enables the last frame interrupt - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CICR_0_31__LAST_IE__ENABLED        0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CICR_0_31__FRAME_IE__DISABLED
 *
 * @BRIEF        Disables the end of frame interrupt - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CICR_0_31__FRAME_IE__DISABLED      0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CICR_0_31__FRAME_IE__ENABLED
 *
 * @BRIEF        Enables the end of frame interrupt - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CICR_0_31__FRAME_IE__ENABLED       0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CICR_0_31__HALF_IE__DISABLED
 *
 * @BRIEF        Disables the half frame interrupt - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CICR_0_31__HALF_IE__DISABLED       0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CICR_0_31__HALF_IE__ENABLED
 *
 * @BRIEF         Enables the half frame interrupt - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CICR_0_31__HALF_IE__ENABLED        0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CICR_0_31__DROP_IE__DISABLED
 *
 * @BRIEF        Disables the event drop interrupt - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CICR_0_31__DROP_IE__DISABLED       0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CICR_0_31__DROP_IE__ENABLED
 *
 * @BRIEF         Enables the event drop interrupt - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CICR_0_31__DROP_IE__ENABLED        0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CSR_0_31__MISALIGNED_ADRS_ERR__READ0X0
 *
 * @BRIEF        No address error  - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CSR_0_31__MISALIGNED_ADRS_ERR__READ0X0 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CSR_0_31__MISALIGNED_ADRS_ERR__WRITE0X0
 *
 * @BRIEF        Status bit unchanged - (Write) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CSR_0_31__MISALIGNED_ADRS_ERR__WRITE0X0 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CSR_0_31__MISALIGNED_ADRS_ERR__WRITE0X1
 *
 * @BRIEF        Status bit is reset - (Write) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CSR_0_31__MISALIGNED_ADRS_ERR__WRITE0X1 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CSR_0_31__MISALIGNED_ADRS_ERR__READ0X1
 *
 * @BRIEF        An address error has been occurred - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CSR_0_31__MISALIGNED_ADRS_ERR__READ0X1 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CSR_0_31__SUPERVISOR_ERR__READ0X0
 *
 * @BRIEF        No supervisor transaction error - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CSR_0_31__SUPERVISOR_ERR__READ0X0  0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CSR_0_31__SUPERVISOR_ERR__WRITE0X0
 *
 * @BRIEF        Status bit unchanged - (Write) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CSR_0_31__SUPERVISOR_ERR__WRITE0X0 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CSR_0_31__SUPERVISOR_ERR__WRITE0X1
 *
 * @BRIEF        Status bit is reset - (Write) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CSR_0_31__SUPERVISOR_ERR__WRITE0X1 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CSR_0_31__SUPERVISOR_ERR__READ0X1
 *
 * @BRIEF        A supervisor  transaction error has been occurred - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CSR_0_31__SUPERVISOR_ERR__READ0X1  0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CSR_0_31__SECURE_ERR__READ0X0
 *
 * @BRIEF        No secure transaction error - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CSR_0_31__SECURE_ERR__READ0X0      0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CSR_0_31__SECURE_ERR__WRITE0X0
 *
 * @BRIEF        Status bit unchanged - (Write) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CSR_0_31__SECURE_ERR__WRITE0X0     0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CSR_0_31__SECURE_ERR__WRITE0X1
 *
 * @BRIEF        Status bit is reset - (Write) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CSR_0_31__SECURE_ERR__WRITE0X1     0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CSR_0_31__SECURE_ERR__READ0X1
 *
 * @BRIEF         A secure transaction error has been occurred - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CSR_0_31__SECURE_ERR__READ0X1      0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CSR_0_31__TRANS_ERR__READ0X0
 *
 * @BRIEF        No transaction error  - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CSR_0_31__TRANS_ERR__READ0X0       0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CSR_0_31__TRANS_ERR__WRITE0X0
 *
 * @BRIEF        Status bit unchanged - (Write) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CSR_0_31__TRANS_ERR__WRITE0X0      0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CSR_0_31__TRANS_ERR__WRITE0X1
 *
 * @BRIEF        Status bit is reset - (Write) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CSR_0_31__TRANS_ERR__WRITE0X1      0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CSR_0_31__TRANS_ERR__READ0X1
 *
 * @BRIEF         A transaction error has been occurred - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CSR_0_31__TRANS_ERR__READ0X1       0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CSR_0_31__PKT__READ0X0
 *
 * @BRIEF        The current packet transfer has not been finished - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CSR_0_31__PKT__READ0X0             0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CSR_0_31__PKT__WRITE0X0
 *
 * @BRIEF        Status bit unchanged - (Write) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CSR_0_31__PKT__WRITE0X0            0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CSR_0_31__PKT__WRITE0X1
 *
 * @BRIEF        Status bit is reset - (Write) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CSR_0_31__PKT__WRITE0X1            0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CSR_0_31__PKT__READ0X1
 *
 * @BRIEF        The current packet has been transferred  - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CSR_0_31__PKT__READ0X1             0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CSR_0_31__SYNC__READ0X0
 *
 * @BRIEF         Logical channel is not scheduled or servicing a non 
 *               synchronized DMA request. - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CSR_0_31__SYNC__READ0X0            0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CSR_0_31__SYNC__WRITE0X0
 *
 * @BRIEF        Status bit unchanged - (Write) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CSR_0_31__SYNC__WRITE0X0           0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CSR_0_31__SYNC__WRITE0X1
 *
 * @BRIEF        Status bit is reset - (Write) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CSR_0_31__SYNC__WRITE0X1           0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CSR_0_31__SYNC__READ0X1
 *
 * @BRIEF         Logical channel is servicing a synchronized DMA request - 
 *               (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CSR_0_31__SYNC__READ0X1            0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CSR_0_31__BLOCK__READ0X0
 *
 * @BRIEF        The current block transfer has not been finished - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CSR_0_31__BLOCK__READ0X0           0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CSR_0_31__BLOCK__WRITE0X0
 *
 * @BRIEF        Status bit unchanged - (Write) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CSR_0_31__BLOCK__WRITE0X0          0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CSR_0_31__BLOCK__WRITE0X1
 *
 * @BRIEF        Status bit is reset - (Write) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CSR_0_31__BLOCK__WRITE0X1          0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CSR_0_31__BLOCK__READ0X1
 *
 * @BRIEF        The current block has been transferred  - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CSR_0_31__BLOCK__READ0X1           0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CSR_0_31__LAST__READ0X0
 *
 * @BRIEF         The start of the last frame to transfer is not reached - 
 *               (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CSR_0_31__LAST__READ0X0            0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CSR_0_31__LAST__WRITE0X0
 *
 * @BRIEF        Status bit unchanged - (Write) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CSR_0_31__LAST__WRITE0X0           0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CSR_0_31__LAST__WRITE0X1
 *
 * @BRIEF        Status bit is reset - (Write) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CSR_0_31__LAST__WRITE0X1           0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CSR_0_31__LAST__READ0X1
 *
 * @BRIEF        The start of the last frame to transfer is reached  - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CSR_0_31__LAST__READ0X1            0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CSR_0_31__FRAME__READ0X0
 *
 * @BRIEF        The end of current transferred frame is not reached - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CSR_0_31__FRAME__READ0X0           0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CSR_0_31__FRAME__WRITE0X0
 *
 * @BRIEF        Status bit unchanged - (Write) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CSR_0_31__FRAME__WRITE0X0          0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CSR_0_31__FRAME__WRITE0X1
 *
 * @BRIEF        Status bit is reset - (Write) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CSR_0_31__FRAME__WRITE0X1          0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CSR_0_31__FRAME__READ0X1
 *
 * @BRIEF        The end of current transferred frame is reached  - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CSR_0_31__FRAME__READ0X1           0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CSR_0_31__HALF__READ0X0
 *
 * @BRIEF        The half of current transferred frame is not reached  - 
 *               (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CSR_0_31__HALF__READ0X0            0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CSR_0_31__HALF__WRITE0X0
 *
 * @BRIEF        Status bit unchanged - (Write) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CSR_0_31__HALF__WRITE0X0           0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CSR_0_31__HALF__WRITE0X1
 *
 * @BRIEF        Status bit is reset - (Write) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CSR_0_31__HALF__WRITE0X1           0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CSR_0_31__HALF__READ0X1
 *
 * @BRIEF         The half of current transferred frame is reached  - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CSR_0_31__HALF__READ0X1            0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CSR_0_31__DROP__READ0X0
 *
 * @BRIEF        No synchronization collision  - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CSR_0_31__DROP__READ0X0            0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CSR_0_31__DROP__WRITE0X0
 *
 * @BRIEF        Status bit unchanged - (Write) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CSR_0_31__DROP__WRITE0X0           0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CSR_0_31__DROP__WRITE0X1
 *
 * @BRIEF        Status bit is reset - (Write) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CSR_0_31__DROP__WRITE0X1           0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CSR_0_31__DROP__READ0X1
 *
 * @BRIEF         A synchronization collision has been occurred - (Read) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CSR_0_31__DROP__READ0X1            0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CSDP_0_31__SRC_ENDIAN__LITTLE
 *
 * @BRIEF        Source has Little Endian type - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CSDP_0_31__SRC_ENDIAN__LITTLE      0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CSDP_0_31__SRC_ENDIAN__BIG
 *
 * @BRIEF        Source has Big Endian type - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CSDP_0_31__SRC_ENDIAN__BIG         0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CSDP_0_31__SRC_ENDIAN_LOCK__ADAPTED
 *
 * @BRIEF        Endianness adapt  - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CSDP_0_31__SRC_ENDIAN_LOCK__ADAPTED 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CSDP_0_31__SRC_ENDIAN_LOCK__LOCKED
 *
 * @BRIEF        Endianness lock - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CSDP_0_31__SRC_ENDIAN_LOCK__LOCKED 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CSDP_0_31__DST_ENDIAN__LITTLE
 *
 * @BRIEF        Destination has Little Endian type - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CSDP_0_31__DST_ENDIAN__LITTLE      0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CSDP_0_31__DST_ENDIAN__BIG
 *
 * @BRIEF        Destination has Big Endian type - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CSDP_0_31__DST_ENDIAN__BIG         0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CSDP_0_31__DST_ENDIAN_LOCK__ADAPTED
 *
 * @BRIEF        Endianness adapt - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CSDP_0_31__DST_ENDIAN_LOCK__ADAPTED 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CSDP_0_31__DST_ENDIAN_LOCK__LOCKED
 *
 * @BRIEF        Endianness lock - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CSDP_0_31__DST_ENDIAN_LOCK__LOCKED 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CSDP_0_31__WRITE_MODE__WRNP
 *
 * @BRIEF        Write None Posted (WRNP) - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CSDP_0_31__WRITE_MODE__WRNP        0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CSDP_0_31__WRITE_MODE__POSTED
 *
 * @BRIEF        Write (Posted)  - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CSDP_0_31__WRITE_MODE__POSTED      0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CSDP_0_31__WRITE_MODE__MAPPED
 *
 * @BRIEF        All transaction are mapped on the Write command as posted 
 *               except for the last transaction in the transfer mapped on a 
 *               Write None Posted  - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CSDP_0_31__WRITE_MODE__MAPPED      0x2ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CSDP_0_31__WRITE_MODE__UNDEFINED
 *
 * @BRIEF        Undefined - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CSDP_0_31__WRITE_MODE__UNDEFINED   0x3ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CSDP_0_31__DST_BURST_EN__SINGLE
 *
 * @BRIEF        single access - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CSDP_0_31__DST_BURST_EN__SINGLE    0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CSDP_0_31__DST_BURST_EN__16B
 *
 * @BRIEF        16 bytes or 4x32-bit / 2x64-bit burst access - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CSDP_0_31__DST_BURST_EN__16B       0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CSDP_0_31__DST_BURST_EN__32B
 *
 * @BRIEF        32 bytes or 8x32-bit / 4x64-bit burst access - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CSDP_0_31__DST_BURST_EN__32B       0x2ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CSDP_0_31__DST_BURST_EN__64B
 *
 * @BRIEF        64 bytes or 16x32-bit / 8x64-bit burst access - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CSDP_0_31__DST_BURST_EN__64B       0x3ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CSDP_0_31__DST_PACKED__NONPACKED
 *
 * @BRIEF        The destination target is non packed   - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CSDP_0_31__DST_PACKED__NONPACKED   0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CSDP_0_31__DST_PACKED__PACKED
 *
 * @BRIEF        The destination target is packed  - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CSDP_0_31__DST_PACKED__PACKED      0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CSDP_0_31__WR_ADD_TRSLT__RESERVED0X0
 *
 * @BRIEF        Undefined - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CSDP_0_31__WR_ADD_TRSLT__RESERVED0X0 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CSDP_0_31__WR_ADD_TRSLT__RESERVED0X1
 *
 * @BRIEF        Undefined - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CSDP_0_31__WR_ADD_TRSLT__RESERVED0X1 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CSDP_0_31__WR_ADD_TRSLT__RESERVED0X2
 *
 * @BRIEF        Undefined - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CSDP_0_31__WR_ADD_TRSLT__RESERVED0X2 0x2ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CSDP_0_31__WR_ADD_TRSLT__TRANSLATE1
 *
 * @BRIEF        Enables MReqAddressTranslate to 1 in the write port side   - 
 *               (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CSDP_0_31__WR_ADD_TRSLT__TRANSLATE1 0x3ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CSDP_0_31__WR_ADD_TRSLT__RESERVED0X4
 *
 * @BRIEF        Undefined - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CSDP_0_31__WR_ADD_TRSLT__RESERVED0X4 0x4ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CSDP_0_31__WR_ADD_TRSLT__RESERVED0X5
 *
 * @BRIEF        Undefined - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CSDP_0_31__WR_ADD_TRSLT__RESERVED0X5 0x5ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CSDP_0_31__WR_ADD_TRSLT__RESERVED0X6
 *
 * @BRIEF        Undefined - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CSDP_0_31__WR_ADD_TRSLT__RESERVED0X6 0x6ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CSDP_0_31__WR_ADD_TRSLT__RESERVED0X7
 *
 * @BRIEF        Undefined - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CSDP_0_31__WR_ADD_TRSLT__RESERVED0X7 0x7ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CSDP_0_31__WR_ADD_TRSLT__RESERVED0X8
 *
 * @BRIEF        Undefined - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CSDP_0_31__WR_ADD_TRSLT__RESERVED0X8 0x8ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CSDP_0_31__WR_ADD_TRSLT__RESERVED0X9
 *
 * @BRIEF        Undefined - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CSDP_0_31__WR_ADD_TRSLT__RESERVED0X9 0x9ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CSDP_0_31__WR_ADD_TRSLT__RESERVED0XA
 *
 * @BRIEF        Undefined - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CSDP_0_31__WR_ADD_TRSLT__RESERVED0XA 0xAul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CSDP_0_31__WR_ADD_TRSLT__RESERVED0XB
 *
 * @BRIEF        Undefined - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CSDP_0_31__WR_ADD_TRSLT__RESERVED0XB 0xBul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CSDP_0_31__WR_ADD_TRSLT__RESERVED0XC
 *
 * @BRIEF        Undefined - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CSDP_0_31__WR_ADD_TRSLT__RESERVED0XC 0xCul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CSDP_0_31__WR_ADD_TRSLT__RESERVED0XD
 *
 * @BRIEF        Undefined - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CSDP_0_31__WR_ADD_TRSLT__RESERVED0XD 0xDul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CSDP_0_31__WR_ADD_TRSLT__RESERVED0XE
 *
 * @BRIEF        Undefined - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CSDP_0_31__WR_ADD_TRSLT__RESERVED0XE 0xEul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CSDP_0_31__WR_ADD_TRSLT__RESERVED0XF
 *
 * @BRIEF        Undefined - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CSDP_0_31__WR_ADD_TRSLT__RESERVED0XF 0xFul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CSDP_0_31__SRC_BURST_EN__SINGLE
 *
 * @BRIEF        single access - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CSDP_0_31__SRC_BURST_EN__SINGLE    0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CSDP_0_31__SRC_BURST_EN__16B
 *
 * @BRIEF        16 bytes or 4x32-bit / 2x64-bit burst access - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CSDP_0_31__SRC_BURST_EN__16B       0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CSDP_0_31__SRC_BURST_EN__32B
 *
 * @BRIEF        32 bytes or 8x32-bit / 4x64-bit burst access - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CSDP_0_31__SRC_BURST_EN__32B       0x2ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CSDP_0_31__SRC_BURST_EN__64B
 *
 * @BRIEF        64 bytes or 16x32-bit / 8x64-bit burst access - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CSDP_0_31__SRC_BURST_EN__64B       0x3ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CSDP_0_31__SRC_PACKED__NONPACKED
 *
 * @BRIEF        The source target is non packed   - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CSDP_0_31__SRC_PACKED__NONPACKED   0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CSDP_0_31__SRC_PACKED__PACKED
 *
 * @BRIEF        The source target is packed - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CSDP_0_31__SRC_PACKED__PACKED      0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CSDP_0_31__RD_ADD_TRSLT__RESERVED0X0
 *
 * @BRIEF        Undefined - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CSDP_0_31__RD_ADD_TRSLT__RESERVED0X0 0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CSDP_0_31__RD_ADD_TRSLT__RESERVED0X1
 *
 * @BRIEF        Undefined - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CSDP_0_31__RD_ADD_TRSLT__RESERVED0X1 0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CSDP_0_31__RD_ADD_TRSLT__RESERVED0X2
 *
 * @BRIEF        Undefined - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CSDP_0_31__RD_ADD_TRSLT__RESERVED0X2 0x2ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CSDP_0_31__RD_ADD_TRSLT__TRANSLATE1
 *
 * @BRIEF        Enables MReqAddressTranslate to 1 in the read port side   - 
 *               (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CSDP_0_31__RD_ADD_TRSLT__TRANSLATE1 0x3ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CSDP_0_31__RD_ADD_TRSLT__RESERVED0X4
 *
 * @BRIEF        Undefined - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CSDP_0_31__RD_ADD_TRSLT__RESERVED0X4 0x4ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CSDP_0_31__RD_ADD_TRSLT__RESERVED0X5
 *
 * @BRIEF        Undefined - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CSDP_0_31__RD_ADD_TRSLT__RESERVED0X5 0x5ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CSDP_0_31__RD_ADD_TRSLT__RESERVED0X6
 *
 * @BRIEF        Undefined - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CSDP_0_31__RD_ADD_TRSLT__RESERVED0X6 0x6ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CSDP_0_31__RD_ADD_TRSLT__RESERVED0X7
 *
 * @BRIEF        Undefined - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CSDP_0_31__RD_ADD_TRSLT__RESERVED0X7 0x7ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CSDP_0_31__RD_ADD_TRSLT__RESERVED0X8
 *
 * @BRIEF        Undefined - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CSDP_0_31__RD_ADD_TRSLT__RESERVED0X8 0x8ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CSDP_0_31__RD_ADD_TRSLT__RESERVED0X9
 *
 * @BRIEF        Undefined - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CSDP_0_31__RD_ADD_TRSLT__RESERVED0X9 0x9ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CSDP_0_31__RD_ADD_TRSLT__RESERVED0XA
 *
 * @BRIEF        Undefined - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CSDP_0_31__RD_ADD_TRSLT__RESERVED0XA 0xAul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CSDP_0_31__RD_ADD_TRSLT__RESERVED0XB
 *
 * @BRIEF        Undefined - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CSDP_0_31__RD_ADD_TRSLT__RESERVED0XB 0xBul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CSDP_0_31__RD_ADD_TRSLT__RESERVED0XC
 *
 * @BRIEF        Undefined - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CSDP_0_31__RD_ADD_TRSLT__RESERVED0XC 0xCul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CSDP_0_31__RD_ADD_TRSLT__RESERVED0XD
 *
 * @BRIEF        Undefined - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CSDP_0_31__RD_ADD_TRSLT__RESERVED0XD 0xDul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CSDP_0_31__RD_ADD_TRSLT__RESERVED0XE
 *
 * @BRIEF        Undefined - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CSDP_0_31__RD_ADD_TRSLT__RESERVED0XE 0xEul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CSDP_0_31__RD_ADD_TRSLT__RESERVED0XF
 *
 * @BRIEF        Undefined - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CSDP_0_31__RD_ADD_TRSLT__RESERVED0XF 0xFul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CSDP_0_31__DATA_TYPE__8B
 *
 * @BRIEF        8 bits scalar - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CSDP_0_31__DATA_TYPE__8B           0x0ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CSDP_0_31__DATA_TYPE__16B
 *
 * @BRIEF        16 bits scalar - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CSDP_0_31__DATA_TYPE__16B          0x1ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CSDP_0_31__DATA_TYPE__32B
 *
 * @BRIEF         32 bits scalar - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CSDP_0_31__DATA_TYPE__32B          0x2ul

                                                                             /*-------------------------------------------------------------------------*//**
 * @DEFINITION   SDMA__DMA4_CSDP_0_31__DATA_TYPE__UNDEFINED
 *
 * @BRIEF        Undefined - (RW) 
 *
    *//*------------------------------------------------------------------------ */
#define SDMA__DMA4_CSDP_0_31__DATA_TYPE__UNDEFINED    0x3ul

#ifdef __cplusplus
}
#endif
#endif                                                     /* __SDMA_CRED_H */

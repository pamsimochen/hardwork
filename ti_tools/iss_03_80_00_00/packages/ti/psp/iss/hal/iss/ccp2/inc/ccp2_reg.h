/** ==================================================================
 *  @file   ccp2_reg.h                                                  
 *                                                                    
 *  @path   /ti/psp/iss/hal/iss/ccp2/inc/                                                  
 *                                                                    
 *  @desc   This  File contains.                                      
 * ===================================================================
 *  Copyright (c) Texas Instruments Inc 2011, 2012                    
 *                                                                    
 *  Use of this software is controlled by the terms and conditions found
 *  in the license agreement under which this software has been supplied
 * ===================================================================*/

/*****************************************************************************/
/* */
/* Copyright 2008-09 by Texas Instruments Incorporated. All rights */
/* reserved. Property of Texas Instruments Incorporated. Restricted */
/* rights to use, duplicate or disclose this code are granted */
/* through contract.  */
/* "Texas Instruments OMAP(tm) Platform Software" */
/* */
/*****************************************************************************/

/*****************************************************************************/
/* File Name :Ccp2_reg.h */
/* */
/* Description :Program file containing the register level values for Ccp2 */
/* */
/* Created : Ducati Team (OMAP4) */
/* */
/* @rev 1.0 */
/*========================================================================
*!
*! Revision History
*! ===================================*/

#ifndef _CSLR_CCP2_REG_H
#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */
#define _CSLR_CCP2_REG_H
/****************************************************************
*  INCLUDE FILES                                                 
*****************************************************************/
#include "../../common/csl_utils/csl_types.h"

// #define CCP2_OFFSET (0x60000000u)

#define  CSL_CCP2_REVISION_OFFSET 0x000
#define     CSL_CCP2_SYSCONFIG_OFFSET 0x004
#define    CSL_CCP2_SYSSTATUS_OFFSET 0x008
#define    CSL_CCP2_LC0_IRQENABLE_OFFSET 00C
#define    CSL_CCP2_LC0_IRQSTATUS_OFFSET 010
#define    CSL_CCP2_LC23_IRQENABLE_OFFSET 0x014
#define    CSL_CCP2_LC23_IRQSTATUS_OFFSET 0x018
#define      CSL_CCP2_LCM_IRQENABLE_OFFSET 0x02C
#define     CSL_CCP2_LCM_IRQSTATUS_OFFSET 0x030
#define     CSL_CCP2_CTRL_OFFSET 0x040
#define     CSL_CCP2_DBG_OFFSET 0x044
#define    CSL_CCP2_GNQ_OFFSET 0x048
#define    CSL_CCP2_CTRL1_OFFSET 0x04C
#define    CSL_CCP2_LC0_CTRL_OFFSET 050
#define     CSL_CCP2_LC0_CODE_OFFSET 054
#define     CSL_CCP2_LC0_STAT_START_OFFSET 058
#define     CSL_CCP2_LC0_STAT_SIZE_OFFSET 05C
#define     CSL_CCP2_LC0_SOF_ADDR_OFFSET 060
#define    CSL_CCP2_LC0_EOF_ADDR_OFFSET 064
#define    CSL_CCP2_LC0_DAT_START_OFFSET 068
#define     CSL_CCP2_LC0_DAT_SIZE_OFFSET 06C
#define    CSL_CCP2_LC0_DAT_PING_ADDR_OFFSET 070
#define     CSL_CCP2_LC0_DAT_PONG_ADDR_OFFSET 074
#define    CSL_CCP2_LC0_DAT_OFST_OFFSET 078
#define     CSL_CCP2_LC1_CTRL_OFFSET 0x080
#define     CSL_CCP2_LC1_CODE_OFFSET 0x084
#define     CSL_CCP2_LC1_STAT_START_OFFSET 0x088
#define     CSL_CCP2_LC1_STAT_SIZE_OFFSET 0x08C
#define     CSL_CCP2_LC1_SOF_ADDR_OFFSET 0x090
#define     CSL_CCP2_LC1_EOF_ADDR_OFFSET 0x094
#define     CSL_CCP2_LC1_DAT_START_OFFSET 0x098
#define    CSL_CCP2_LC1_DAT_SIZE_OFFSET 0x09C
#define     CSL_CCP2_LC1_DAT_PING_ADDR_OFFSET 0x0A0
#define     CSL_CCP2_LC1_DAT_PONG_ADDR_OFFSET 0x0A4
#define    CSL_CCP2_LC1_DAT_OFST_OFFSET 0x0A8
#define     CSL_CCP2_LC2_CTRL_OFFSET 0x0B0
#define    CSL_CCP2_LC2_CODE_OFFSET 0x0B4
#define    CSL_CCP2_LC2_STAT_START_OFFSET 0x0B8
#define    CSL_CCP2_LC2_STAT_SIZE_OFFSET 0x0BC
#define    CSL_CCP2_LC2_SOF_ADDR_OFFSET 0x0C0
#define    CSL_CCP2_LC2_EOF_ADDR_OFFSET 0x0C4
#define     CSL_CCP2_LC2_DAT_START_OFFSET 0x0C8
#define    CSL_CCP2_LC2_DAT_SIZE_OFFSET 0x0CC
#define     CSL_CCP2_LC2_DAT_PING_ADDR_OFFSET 0x0D0
#define     CSL_CCP2_LC2_DAT_PONG_ADDR_OFFSET 0x0D4
#define    CSL_CCP2_LC2_DAT_OFST_OFFSET 0x0D8
#define    CSL_CCP2_LC3_CTRL_OFFSET 0x0E0
#define    CSL_CCP2_LC3_CODE_OFFSET 0x0E4
#define     CSL_CCP2_LC3_STAT_START_OFFSET 0x0E8
#define     CSL_CCP2_LC3_STAT_SIZE_OFFSET 0x0EC
#define    CSL_CCP2_LC3_SOF_ADDR_OFFSET 0x0F0
#define    CSL_CCP2_LC3_EOF_ADDR_OFFSET 0x0F4
#define    CSL_CCP2_LC3_DAT_START_OFFSET 0x0F8
#define    CSL_CCP2_LC3_DAT_SIZE_OFFSET 0x0FC
#define    CSL_CCP2_LC3_DAT_PING_ADDR_OFFSET 10x00
#define    CSL_CCP2_LC3_DAT_PONG_ADDR_OFFSET 10x04
#define     CSL_CCP2_LC3_DAT_OFST_OFFSET 10x08
#define     CSL_CCP2_LCM_CTRL_OFFSET 1D0x0
#define    CSL_CCP2_LCM_VSIZE_OFFSET 1D4
#define    CSL_CCP2_LCM_HSIZE_OFFSET 1D8
#define     CSL_CCP2_LCM_PREFETCH_OFFSET 1DC
#define     CSL_CCP2_LCM_SRC_ADDR_OFFSET 1E0x0
#define     CSL_CCP2_LCM_SRC_OFST_OFFSET 1E4
#define    CSL_CCP2_LCM_DST_ADDR_OFFSET 1E8
#define     CSL_CCP2_LCM_DST_OFST_OFFSET 1EC

#define 	MAP_BASE_OFFSET_TO_LONG_PTR(_base, _offset )    ((volatile Uint32 *)((Uint32)(_base) + (Uint32)(_offset)))

typedef struct {

    volatile uint32 REVISION;
    /* This register contains the IP revision code in binary coded digital */
    volatile uint32 SYSCONFIG;
    /* This register is the OCP-socket system configuration register */
    volatile uint32 SYSSTATUS;
    /* This register provides status information about the module, excluding
     * the interrupt status register */
    volatile uint32 LC01_IRQENABLE;
    /* This register regroups all the events related to logical channel 0 and 
     * logical channel 1. */
    volatile uint32 LC01_IRQSTATUS;
    /* This register regroups all the events related to logical channel 0 and 
     * logical channel 1. */
    volatile uint32 LC23_IRQENABLE;
    /* This register regroups all the events related to logical channel 2 and 
     * logical channel 3 */
    volatile uint32 LC23_IRQSTATUS;
    /* This register regroups all the events related to logical channel 2 and 
     * logical channel 3. */
    volatile uint32 Reserved[4];
    /* This register is reserved to maintain continuity of ccp2 register map */

    volatile uint32 LCM_IRQENABLE;
    /* This register regroups all the events related to the memory channel 2. */

    volatile uint32 LCM_IRQSTATUS;
    /* This register regroups all the events related to memory channel */
    volatile uint32 Reserved1[3];
    /* This register is reserved to maintain continuity of ccp2 register map */

    volatile uint32 CTRL;
    /* This register controls the CCP2 RECEIVER module */
    volatile uint32 DBG;
    /* This register provides a way to debug the CCP2 RECEIVER module with no 
     * image sensor connected to the module */
    volatile uint32 GNQ;
    /* This register provide a way to read the generic parameters used in the 
     * design. */
    volatile uint32 CTRL1;
    /* This register controls the CCP2 RECEIVER module */
    volatile uint32 LC0_CTRL;
    /* This register controls the logical channel 0. */
    volatile uint32 LC0_CODE;
    /* This register sets the codes that are used in the 32-bit
     * synchronization codes to recognize the logical channel, frame start,
     * frame end, line start and line end codes */
    volatile uint32 LC0_STAT_START;
    /* STATUS LINE START REGISTER - LOG CHAN 0 */
    volatile uint32 LC0_STAT_SIZE;
    /* STATUS LINE SIZE REGISTER - LOG CHAN 0 */
    volatile uint32 LC0_SOF_ADDR;
    /* SOF STATUS LINE MEM ADDRESS REGISTER - LOG CHAN 0 */
    volatile uint32 LC0_EOF_ADDR;
    /* EOF STATUS LINE MEM ADDRESS REGISTER - LOG CHAN 0 */
    volatile uint32 LC0_DAT_START;
    /* DATA START REGISTER - LOG CHAN 0 */
    volatile uint32 LC0_DAT_SIZE;
    /* DATA SIZE REGISTER - LOG CHAN 0 */
    volatile uint32 LC0_DAT_PING_ADDR;
    /* DATA MEM PING ADDRESS REGISTER - LOG CHAN 0 */
    volatile uint32 LC0_DAT_PONG_ADDR;
    /* DATA MEM PONG ADDRESS REGISTER - LOG CHAN 0 */
    volatile uint32 LC0_DAT_OFST;
    /* DATA MEM ADDRESS OFFSET REGISTER - LOG CHAN 0 */
    volatile uint32 Reserved2[1];
    /* This register is reserved to maintain continuity of ccp2 register map */

    volatile uint32 LC1_CTRL;
    /* This register controls the logical channel 1 */
    volatile uint32 LC1_CODE;
    /* This register sets the codes that are used in the 32-bit
     * synchronization codes to recognize the logical channel 1, frame start, 
     * frame end, line start and line end codes */
    volatile uint32 LC1_STAT_START;
    /* STATUS LINE START REGISTER - LOG CHAN 1 */
    volatile uint32 LC1_STAT_SIZE;
    /* STATUS LINE SIZE REGISTER - LOG CHAN 1 */
    volatile uint32 LC1_SOF_ADDR;
    /* SOF STATUS LINE MEM ADDRESS REGISTER - LOG CHAN 1 */
    volatile uint32 LC1_EOF_ADDR;
    /* EOF STATUS LINE MEM ADDRESS REGISTER - LOG CHAN 1 */
    volatile uint32 LC1_DAT_START;
    /* DATA START REGISTER - LOG CHAN 1 */
    volatile uint32 LC1_DAT_SIZE;
    /* DATA SIZE REGISTER - LOG CHAN 1 */
    volatile uint32 LC1_DAT_PING_ADDR;
    /* DATA MEM PING ADDRESS REGISTER - LOG CHAN 1 */
    volatile uint32 LC1_DAT_PONG_ADDR;
    /* DATA MEM PONG ADDRESS REGISTER - LOG CHAN 1 */
    volatile uint32 LC1_DAT_OFST;
    /* DATA MEM ADDRESS OFFSET REGISTER - LOG CHAN 1 */
    volatile uint32 Reserved3[1];
    /* This register is reserved to maintain continuity of ccp2 register map */

    volatile uint32 LC2_CTRL;
    /* This register controls the logical channel 2 */
    volatile uint32 LC2_CODE;
    /* This register sets the codes that are used in the 32-bit
     * synchronization codes to recognize the logical channel 2, frame start, 
     * frame end, line start and line end codes */
    volatile uint32 LC2_STAT_START;
    /* STATUS LINE START REGISTER - LOG CHAN 2 */
    volatile uint32 LC2_STAT_SIZE;
    /* STATUS LINE SIZE REGISTER - LOG CHAN 2 */
    volatile uint32 LC2_SOF_ADDR;
    /* SOF STATUS LINE MEM ADDRESS REGISTER - LOG CHAN 2 */
    volatile uint32 LC2_EOF_ADDR;
    /* EOF STATUS LINE MEM ADDRESS REGISTER - LOG CHAN 2 */
    volatile uint32 LC2_DAT_START;
    /* DATA START REGISTER - LOG CHAN 2 */
    volatile uint32 LC2_DAT_SIZE;
    /* DATA SIZE REGISTER - LOG CHAN 2 */
    volatile uint32 LC2_DAT_PING_ADDR;
    /* DATA MEM PING ADDRESS REGISTER - LOG CHAN 2 */
    volatile uint32 LC2_DAT_PONG_ADDR;
    /* DATA MEM PONG ADDRESS REGISTER - LOG CHAN 2 */
    volatile uint32 LC2_DAT_OFST;
    /* DATA MEM ADDRESS OFFSET REGISTER - LOG CHAN 2 */
    volatile uint32 Reserved4[1];
    /* This register is reserved to maintain continuity of ccp2 register map */

    volatile uint32 LC3_CTRL;
    /* This register controls the logical channel 3 */
    volatile uint32 LC3_CODE;
    /* This register sets the codes that are used in the 32-bit
     * synchronization codes to recognize the logical channel 3, frame start, 
     * frame end, line start and line end codes */
    volatile uint32 LC3_STAT_START;
    /* STATUS LINE START REGISTER - LOG CHAN 3 */
    volatile uint32 LC3_STAT_SIZE;
    /* STATUS LINE SIZE REGISTER - LOG CHAN 3 */
    volatile uint32 LC3_SOF_ADDR;
    /* SOF STATUS LINE MEM ADDRESS REGISTER - LOG CHAN 3 */
    volatile uint32 LC3_EOF_ADDR;
    /* EOF STATUS LINE MEM ADDRESS REGISTER - LOG CHAN 3 */
    volatile uint32 LC3_DAT_START;
    /* DATA START REGISTER - LOG CHAN 3 */
    volatile uint32 LC3_DAT_SIZE;
    /* DATA SIZE REGISTER - LOG CHAN 3 */
    volatile uint32 LC3_DAT_PING_ADDR;
    /* DATA MEM PING ADDRESS REGISTER - LOG CHAN 3 */
    volatile uint32 LC3_DAT_PONG_ADDR;
    /* DATA MEM PONG ADDRESS REGISTER - LOG CHAN 3 */
    volatile uint32 LC3_DAT_OFST;
    /* DATA MEM ADDRESS OFFSET REGISTER - LOG CHAN 3 */

    volatile uint32 Reserved5[49];
    /* This register is reserved to maintain continuity of ccp2 register map */

    volatile uint32 LCM_CTRL;
    /* Control register for the memory channel */
    volatile uint32 LCM_VSIZE;
    /* Memory channel vertical framing register */
    volatile uint32 LCM_HSIZE;
    /* Memory read channel horizontal framing register. */
    volatile uint32 LCM_PREFETCH;
    /* This register defines the amount of data to be fetched from memory */
    volatile uint32 LCM_SRC_ADDR;
    /* Memory channel source address register */
    volatile uint32 LCM_SRC_OFST;
    /* Memory channel source offset register */
    volatile uint32 LCM_DST_ADDR;
    /* Memory channel destination address. */
    volatile uint32 LCM_DST_OFST;
    /* Memory channel destination offset register */
} CSL_Ccp2Regs;

/* REVISION */
#define CSL_CCP2_REVISION_REV_MASK (0x000000FFu)
#define CSL_CCP2_REVISION_REV_SHIFT (0x00000000u)
#define CSL_CCP2_REVISION_REV_RESETVAL (0x30u)

/* SYSCONFIG */

/* Auto Idle Tokens */

#define CSL_CCP2_SYSCONFIG_AUTO_IDLE_MASK (0x00000001u)
#define CSL_CCP2_SYSCONFIG_AUTO_IDLE_SHIFT (0x00000000u)
#define CSL_CCP2_SYSCONFIG_AUTO_IDLE_RESETVAL (0x00000001u)

/* Soft Reset Tokens */

#define CSL_CCP2_SYSCONFIG_SOFT_RESET_MASK (0x00000002u)
#define CSL_CCP2_SYSCONFIG_SOFT_RESET_SHIFT (0x00000001u)
#define CSL_CCP2_SYSCONFIG_SOFT_RESET_RESETVAL (0x00000000u)

/* Mstand by mode tokens */

#define CSL_CCP2_SYSCONFIG_MSTANDBY_MODE_MASK  (0x00000003u)
#define CSL_CCP2_SYSCONFIG_MSTANDBY_MODE_SHIFT (0x0000000Cu)
#define CSL_CCP2_SYSCONFIG_MSTANDBY_MODE_RESETVAL (0x00000000u)

/* RESET DONE */
#define CSL_CCP2_SYSSTATUS_RESET_DONE_MASK (0x00000001u)
#define CSL_CCP2_SYSSTATUS_RESET_DONE_SHIFT (0x00000000u)
#define CSL_CCP2_SYSSTATUS_RESET_DONE_RESETVAL (0x00000001u)

/* LCO1 IRQENABLE */

/* Lc0 Ssc tokens */
#define CSL_CCP2_LC01_IRQENABLE_LC0_SSC_IRQ_MASK (0x00000001u)
#define CSL_CCP2_LC01_IRQENABLE_LC0_SSC_IRQ_SHIFT (0x00000000u)
#define CSL_CCP2_LC01_IRQENABLE_LC0_SSC_IRQ_RESETVAL (0x00000000u)

/* Lc0 Fsc tokens */
#define CSL_CCP2_LC01_IRQENABLE_LC0_FSC_IRQ_MASK (0x00000002u)
#define CSL_CCP2_LC01_IRQENABLE_LC0_FSC_IRQ_SHIFT (0x00000001u)
#define CSL_CCP2_LC01_IRQENABLE_LC0_FSC_IRQ_RESETVAL (0x00000000u)

/* Lc0_Fw_Irq tokens */
#define CSL_CCP2_LC01_IRQENABLE_LC0_FW_IRQ_MASK (0x00000004u)
#define CSL_CCP2_LC01_IRQENABLE_LC0_FW_IRQ_SHIFT (0x00000002u)
#define CSL_CCP2_LC01_IRQENABLE_LC0_FW_IRQ_RESETVAL (0x00000000u)

/* Lc0 Fsp tokens */
#define CSL_CCP2_LC01_IRQENABLE_LC0_FSP_IRQ_MASK (0x00000008u)
#define CSL_CCP2_LC01_IRQENABLE_LC0_FSP_IRQ_SHIFT (0x00000003u)
#define CSL_CCP2_LC01_IRQENABLE_LC0_FSP_IRQ_RESETVAL (0x00000000u)

/* Lco Crc tokens */
#define CSL_CCP2_LC01_IRQENABLE_LC0_CRC_IRQ_MASK (0x00000010u)
#define CSL_CCP2_LC01_IRQENABLE_LC0_CRC_IRQ_SHIFT (0x00000004u)
#define CSL_CCP2_LC01_IRQENABLE_LC0_CRC_IRQ_RESETVAL (0x00000000u)

/* Lco fifo Ovf Irq tokens */
#define CSL_CCP2_LC01_IRQENABLE_LC0_FIFO_OVF_IRQ_MASK (0x00000020u)
#define CSL_CCP2_LC01_IRQENABLE_LC0_FIFO_OVF_IRQ_SHIFT (0x00000005u)
#define CSL_CCP2_LC01_IRQENABLE_LC0_FIFO_OVF_IRQ_RESETVAL (0x00000000u)

/* Lc0 count tokens */
#define CSL_CCP2_LC01_IRQENABLE_LC0_COUNT_IRQ_MASK (0x00000080u)
#define CSL_CCP2_LC01_IRQENABLE_LC0_COUNT_IRQ_SHIFT (0x00000007u)
#define CSL_CCP2_LC01_IRQENABLE_LC0_COUNT_IRQ_RESETVAL (0x00000000u)

/* Lco Fe Irq tokens */
#define CSL_CCP2_LC01_IRQENABLE_LC0_FE_IRQ_MASK (0x00000100u)
#define CSL_CCP2_LC01_IRQENABLE_LC0_FE_IRQ_SHIFT (0x00000008u)
#define CSL_CCP2_LC01_IRQENABLE_LC0_FE_IRQ_RESETVAL (0x00000000u)

/* Lc0 Ls Irq tokens */
#define CSL_CCP2_LC01_IRQENABLE_LC0_LS_IRQ_MASK (0x00000200u)
#define CSL_CCP2_LC01_IRQENABLE_LC0_LS_IRQ_SHIFT (0x00000009u)
#define CSL_CCP2_LC01_IRQENABLE_LC0_LS_IRQ_RESETVAL (0x00000000u)

/* Lco Le Irq tokens */
#define CSL_CCP2_LC01_IRQENABLE_LC0_LE_IRQ_MASK (0x00000400u)
#define CSL_CCP2_LC01_IRQENABLE_LC0_LE_IRQ_SHIFT (0x0000000Au)
#define CSL_CCP2_LC01_IRQENABLE_LC0_LE_IRQ_RESETVAL (0x00000000u)

/* Lc0 fs Irq tokens */
#define CSL_CCP2_LC01_IRQENABLE_LC0_FS_IRQ_MASK (0x00000800u)
#define CSL_CCP2_LC01_IRQENABLE_LC0_FS_IRQ_SHIFT (0x0000000Bu)
#define CSL_CCP2_LC01_IRQENABLE_LC0_FS_IRQ_RESETVAL (0x00000000u)

/* Lco ocp error tokens */
#define CSL_CCP2_LC01_IRQENABLE_LC0_OCPERROR_IRQ_MASK (0x00008000u)
#define CSL_CCP2_LC01_IRQENABLE_LC0_OCPERROR_IRQ_SHIFT (0x0000000Fu)
#define CSL_CCP2_LC01_IRQENABLE_LC0_OCPERROR_IRQ_RESETVAL (0x00000000u)

/* Lc1 ssc tokens */
#define CSL_CCP2_LC01_IRQENABLE_LC1_SSC_IRQ_MASK (0x00010000u)
#define CSL_CCP2_LC01_IRQENABLE_LC1_SSC_IRQ_SHIFT (0x00000010u)
#define CSL_CCP2_LC01_IRQENABLE_LC1_SSC_IRQ_RESETVAL (0x00000000u)

/* Lc1 fsc tokens */
#define CSL_CCP2_LC01_IRQENABLE_LC1_FSC_IRQ_MASK (0x00020000u)
#define CSL_CCP2_LC01_IRQENABLE_LC1_FSC_IRQ_SHIFT (0x00000011u)
#define CSL_CCP2_LC01_IRQENABLE_LC1_FSC_IRQ_RESETVAL (0x00000000u)

/* Lc1 fw Irq tokens */
#define CSL_CCP2_LC01_IRQENABLE_LC1_FW_IRQ_MASK (0x00040000u)
#define CSL_CCP2_LC01_IRQENABLE_LC1_FW_IRQ_SHIFT (0x00000012u)
#define CSL_CCP2_LC01_IRQENABLE_LC1_FW_IRQ_RESETVAL (0x00000000u)

/* Lc1 Fsp Irq tokens */
#define CSL_CCP2_LC01_IRQENABLE_LC1_FSP_IRQ_MASK (0x00080000u)
#define CSL_CCP2_LC01_IRQENABLE_LC1_FSP_IRQ_SHIFT (0x00000013u)
#define CSL_CCP2_LC01_IRQENABLE_LC1_FSP_IRQ_RESETVAL (0x00000000u)

/* Lc1 Crc Irq tokens */
#define CSL_CCP2_LC01_IRQENABLE_LC1_CRC_IRQ_MASK (0x00100000u)
#define CSL_CCP2_LC01_IRQENABLE_LC1_CRC_IRQ_SHIFT (0x00000014u)
#define CSL_CCP2_LC01_IRQENABLE_LC1_CRC_IRQ_RESETVAL (0x00000000u)

/* Lc1 fifo Ovf Irq tokens */
#define CSL_CCP2_LC01_IRQENABLE_LC1_FIFO_OVF_IRQ_MASK (0x00200000u)
#define CSL_CCP2_LC01_IRQENABLE_LC1_FIFO_OVF_IRQ_SHIFT (0x00000015u)
#define CSL_CCP2_LC01_IRQENABLE_LC1_FIFO_OVF_IRQ_RESETVAL (0x00000000u)

/* Lc1 count irq tokens */
#define CSL_CCP2_LC01_IRQENABLE_LC1_COUNT_IRQ_MASK (0x00800000u)
#define CSL_CCP2_LC01_IRQENABLE_LC1_COUNT_IRQ_SHIFT (0x00000017u)
#define CSL_CCP2_LC01_IRQENABLE_LC1_COUNT_IRQ_RESETVAL (0x00000000u)

/* Lc1 Fe irq tokens */
#define CSL_CCP2_LC01_IRQENABLE_LC1_FE_IRQ_MASK (0x01000000u)
#define CSL_CCP2_LC01_IRQENABLE_LC1_FE_IRQ_SHIFT (0x00000018u)
#define CSL_CCP2_LC01_IRQENABLE_LC1_FE_IRQ_RESETVAL (0x00000000u)

/* Lc1 ls irq tokens */
#define CSL_CCP2_LC01_IRQENABLE_LC1_LS_IRQ_MASK (0x02000000u)
#define CSL_CCP2_LC01_IRQENABLE_LC1_LS_IRQ_SHIFT (0x00000019u)
#define CSL_CCP2_LC01_IRQENABLE_LC1_LS_IRQ_RESETVAL (0x00000000u)

/* Lc1 Le Irq tokens */
#define CSL_CCP2_LC01_IRQENABLE_LC1_LE_IRQ_MASK (0x04000000u)
#define CSL_CCP2_LC01_IRQENABLE_LC1_LE_IRQ_SHIFT (0x0000001Au)
#define CSL_CCP2_LC01_IRQENABLE_LC1_LE_IRQ_RESETVAL (0x00000000u)

/* Lc1 opp error tokens */
#define CSL_CCP2_LC01_IRQENABLE_LC1_OCPERROR_IRQ_MASK (0x08000000u)
#define CSL_CCP2_LC01_IRQENABLE_LC1_OCPERROR_IRQ_SHIFT (0x0000001Bu)
#define CSL_CCP2_LC01_IRQENABLE_LC1_OCPERROR_IRQ_RESETVAL (0x00000000u)

/* Lc1 fs tokens */
#define CSL_CCP2_LC01_IRQENABLE_LC1_FS_IRQ_MASK (0x80000000u)
#define CSL_CCP2_LC01_IRQENABLE_LC1_FS_IRQ_SHIFT (0x0000001Fu)
#define CSL_CCP2_LC01_IRQENABLE_LC1_FS_IRQ_RESETVAL (0x00000000u)

/* LC01 IRQ STATUS */

/* Lc2 Ssc tokens */

#define CSL_CCP2_LC01_IRQSTATUS_LC2_SSC_IRQ_MASK (0x00000001u)
#define CSL_CCP2_LC01_IRQSTATUS_LC2_SSC_IRQ_SHIFT (0x00000000u)
#define CSL_CCP2_LC01_IRQSTATUS_LC2_SSC_IRQ_RESETVAL (0x00000000u)

/* Lc2 Fsc tokens */
#define CSL_CCP2_LC01_IRQSTATUS_LC2_FSC_IRQ_MASK (0x00000002u)
#define CSL_CCP2_LC01_IRQSTATUS_LC2_FSC_IRQ_SHIFT (0x00000001u)
#define CSL_CCP2_LC01_IRQSTATUS_LC2_FSC_IRQ_RESETVAL (0x00000000u)

/* Lc2_Fw_Irq tokens */
#define CSL_CCP2_LC01_IRQSTATUS_LC2_FW_IRQ_MASK (0x00000004u)
#define CSL_CCP2_LC01_IRQSTATUS_LC2_FW_IRQ_SHIFT (0x00000002u)
#define CSL_CCP2_LC01_IRQSTATUS_LC2_FW_IRQ_RESETVAL (0x00000000u)

/* Lc2 Fsp tokens */
#define CSL_CCP2_LC01_IRQSTATUS_LC2_FSP_IRQ_MASK (0x00000008u)
#define CSL_CCP2_LC01_IRQSTATUS_LC2_FSP_IRQ_SHIFT (0x00000003u)
#define CSL_CCP2_LC01_IRQSTATUS_LC2_FSP_IRQ_RESETVAL (0x00000000u)

/* Lc2 Crc tokens */
#define CSL_CCP2_LC01_IRQSTATUS_LC2_CRC_IRQ_MASK (0x00000010u)
#define CSL_CCP2_LC01_IRQSTATUS_LC2_CRC_IRQ_SHIFT (0x00000004u)
#define CSL_CCP2_LC01_IRQSTATUS_LC2_CRC_IRQ_RESETVAL (0x00000000u)

/* Lc2 fifo Ovf Irq tokens */
#define CSL_CCP2_LC01_IRQSTATUS_LC2_FIFO_OVF_IRQ_MASK (0x00000020u)
#define CSL_CCP2_LC01_IRQSTATUS_LC2_FIFO_OVF_IRQ_SHIFT (0x00000005u)
#define CSL_CCP2_LC01_IRQSTATUS_LC2_FIFO_OVF_IRQ_RESETVAL (0x00000000u)

/* Lc2 count tokens */
#define CSL_CCP2_LC01_IRQSTATUS_LC2_COUNT_IRQ_MASK (0x00000080u)
#define CSL_CCP2_LC01_IRQSTATUS_LC2_COUNT_IRQ_SHIFT (0x00000007u)
#define CSL_CCP2_LC01_IRQSTATUS_LC2_COUNT_IRQ_RESETVAL (0x00000000u)

/* Lc2 Fe Irq tokens */
#define CSL_CCP2_LC01_IRQSTATUS_LC2_FE_IRQ_MASK (0x00000100u)
#define CSL_CCP2_LC01_IRQSTATUS_LC2_FE_IRQ_SHIFT (0x00000008u)
#define CSL_CCP2_LC01_IRQSTATUS_LC2_FE_IRQ_RESETVAL (0x00000000u)

/* Lc2 ls irq tokens */
#define CSL_CCP2_LC01_IRQSTATUS_LC2_LS_IRQ_MASK (0x00000200u)
#define CSL_CCP2_LC01_IRQSTATUS_LC2_LS_IRQ_SHIFT (0x00000009u)
#define CSL_CCP2_LC01_IRQSTATUS_LC2_LS_IRQ_RESETVAL (0x00000000u)

/* Lc2 Le Irq tokens */
#define CSL_CCP2_LC01_IRQSTATUS_LC2_LE_IRQ_MASK (0x00000400u)
#define CSL_CCP2_LC01_IRQSTATUS_LC2_LE_IRQ_SHIFT (0x0000000Au)
#define CSL_CCP2_LC01_IRQSTATUS_LC2_LE_IRQ_RESETVAL (0x00000000u)

/* Lc2 Fs Irq tokens */
#define CSL_CCP2_LC01_IRQSTATUS_LC2_FS_IRQ_MASK (0x00000800u)
#define CSL_CCP2_LC01_IRQSTATUS_LC2_FS_IRQ_SHIFT (0x0000000Bu)
#define CSL_CCP2_LC01_IRQSTATUS_LC2_FS_IRQ_RESETVAL (0x00000000u)

/* Lc2 Ocp error Irq tokens */
#define CSL_CCP2_LC01_IRQSTATUS_LC2_OCPERROR_IRQ_MASK (0x00008000u)
#define CSL_CCP2_LC01_IRQSTATUS_LC2_OCPERROR_IRQ_SHIFT (0x0000000Fu)
#define CSL_CCP2_LC01_IRQSTATUS_LC2_OCPERROR_IRQ_RESETVAL (0x00000000u)

/* Lc3 Ssc Irq tokens */
#define CSL_CCP2_LC01_IRQSTATUS_LC3_SSC_IRQ_MASK (0x00010000u)
#define CSL_CCP2_LC01_IRQSTATUS_LC3_SSC_IRQ_SHIFT (0x00000010u)
#define CSL_CCP2_LC01_IRQSTATUS_LC3_SSC_IRQ_RESETVAL (0x00000000u)

/* Lc3 Fsc Irq tokens */
#define CSL_CCP2_LC01_IRQSTATUS_LC3_FSC_IRQ_MASK (0x00020000u)
#define CSL_CCP2_LC01_IRQSTATUS_LC3_FSC_IRQ_SHIFT (0x00000011u)
#define CSL_CCP2_LC01_IRQSTATUS_LC3_FSC_IRQ_RESETVAL (0x00000000u)

/* Lc3 Fw Irq tokens */
#define CSL_CCP2_LC01_IRQSTATUS_LC3_FW_IRQ_MASK (0x00040000u)
#define CSL_CCP2_LC01_IRQSTATUS_LC3_FW_IRQ_SHIFT (0x00000012u)
#define CSL_CCP2_LC01_IRQSTATUS_LC3_FW_IRQ_RESETVAL (0x00000000u)

/* Lc3 Fsp Irq tokens */
#define CSL_CCP2_LC01_IRQSTATUS_LC3_FSP_IRQ_MASK (0x00080000u)
#define CSL_CCP2_LC01_IRQSTATUS_LC3_FSP_IRQ_SHIFT (0x00000013u)
#define CSL_CCP2_LC01_IRQSTATUS_LC3_FSP_IRQ_RESETVAL (0x00000000u)

/* Lc3 Le Crc tokens */
#define CSL_CCP2_LC01_IRQSTATUS_LC3_CRC_IRQ_MASK (0x00100000u)
#define CSL_CCP2_LC01_IRQSTATUS_LC3_CRC_IRQ_SHIFT (0x00000014u)
#define CSL_CCP2_LC01_IRQSTATUS_LC3_CRC_IRQ_RESETVAL (0x00000000u)

/* Lc3 Fifo Ovf Irq tokens */
#define CSL_CCP2_LC01_IRQSTATUS_LC3_FIFO_OVF_IRQ_MASK (0x00200000u)
#define CSL_CCP2_LC01_IRQSTATUS_LC3_FIFO_OVF_IRQ_SHIFT (0x00000015u)
#define CSL_CCP2_LC01_IRQSTATUS_LC3_FIFO_OVF_IRQ_RESETVAL (0x00000000u)

/* Lc3 Count Irq tokens */
#define CSL_CCP2_LC01_IRQSTATUS_LC3_COUNT_IRQ_MASK (0x00800000u)
#define CSL_CCP2_LC01_IRQSTATUS_LC3_COUNT_IRQ_SHIFT (0x00000017u)
#define CSL_CCP2_LC01_IRQSTATUS_LC3_COUNT_IRQ_RESETVAL (0x00000000u)

/* Lc1 Fe Irq tokens */
#define CSL_CCP2_LC01_IRQSTATUS_LC3_FE_IRQ_MASK (0x01000000u)
#define CSL_CCP2_LC01_IRQSTATUS_LC3_FE_IRQ_SHIFT (0x00000018u)
#define CSL_CCP2_LC01_IRQSTATUS_LC3_FE_IRQ_RESETVAL (0x00000000u)

/* Lc3 LS Irq tokens */
#define CSL_CCP2_LC01_IRQSTATUS_LC3_LS_IRQ_MASK (0x02000000u)
#define CSL_CCP2_LC01_IRQSTATUS_LC3_LS_IRQ_SHIFT (0x00000019u)
#define CSL_CCP2_LC01_IRQSTATUS_LC3_LS_IRQ_RESETVAL (0x00000000u)

/* Lc3 Le Irq tokens */
#define CSL_CCP2_LC01_IRQSTATUS_LC3_LE_IRQ_MASK (0x04000000u)
#define CSL_CCP2_LC01_IRQSTATUS_LC3_LE_IRQ_SHIFT (0x0000001Au)
#define CSL_CCP2_LC01_IRQSTATUS_LC3_LE_IRQ_RESETVAL (0x00000000u)

/* Lc3 Fs Irq tokens */
#define CSL_CCP2_LC01_IRQSTATUS_LC3_FS_IRQ_MASK (0x08000000u)
#define CSL_CCP2_LC01_IRQSTATUS_LC3_FS_IRQ_SHIFT (0x0000001Bu)
#define CSL_CCP2_LC01_IRQSTATUS_LC3_FS_IRQ_RESETVAL (0x00000000u)

/* Lc1 Ocp error Irq tokens */
#define CSL_CCP2_LC01_IRQSTATUS_LC3_OCPERROR_IRQ_MASK (0x80000000u)
#define CSL_CCP2_LC01_IRQSTATUS_LC3_OCPERROR_IRQ_SHIFT (0x0000001Fu)
#define CSL_CCP2_LC01_IRQSTATUS_LC3_OCPERROR_IRQ_RESETVAL (0x00000000u)

/* LC23 IRQENABLE */

/* Lc2 Ssc tokens */
#define CSL_CCP2_LC23_IRQENABLE_LC2_SSC_IRQ_MASK (0x00000001u)
#define CSL_CCP2_LC23_IRQENABLE_LC2_SSC_IRQ_SHIFT (0x00000000u)
#define CSL_CCP2_LC23_IRQENABLE_LC2_SSC_IRQ_RESETVAL (0x00000000u)

/* Lc2 Fsc tokens */
#define CSL_CCP2_LC23_IRQENABLE_LC2_FSC_IRQ_MASK (0x00000002u)
#define CSL_CCP2_LC23_IRQENABLE_LC2_FSC_IRQ_SHIFT (0x00000001u)
#define CSL_CCP2_LC23_IRQENABLE_LC2_FSC_IRQ_RESETVAL (0x00000000u)

/* Lc2_Fw_Irq tokens */
#define CSL_CCP2_LC23_IRQENABLE_LC2_FW_IRQ_MASK (0x00000004u)
#define CSL_CCP2_LC23_IRQENABLE_LC2_FW_IRQ_SHIFT (0x00000002u)
#define CSL_CCP2_LC23_IRQENABLE_LC2_FW_IRQ_RESETVAL (0x00000000u)

/* Lc2 Fsp tokens */
#define CSL_CCP2_LC23_IRQENABLE_LC2_FSP_IRQ_MASK (0x00000008u)
#define CSL_CCP2_LC23_IRQENABLE_LC2_FSP_IRQ_SHIFT (0x00000003u)
#define CSL_CCP2_LC23_IRQENABLE_LC2_FSP_IRQ_RESETVAL (0x00000000u)

/* Lco Crc tokens */
#define CSL_CCP2_LC23_IRQENABLE_LC2_CRC_IRQ_MASK (0x00000010u)
#define CSL_CCP2_LC23_IRQENABLE_LC2_CRC_IRQ_SHIFT (0x00000004u)
#define CSL_CCP2_LC23_IRQENABLE_LC2_CRC_IRQ_RESETVAL (0x00000000u)

/* Lco fifo Ovf Irq tokens */
#define CSL_CCP2_LC23_IRQENABLE_LC2_FIFO_OVF_IRQ_MASK (0x00000020u)
#define CSL_CCP2_LC23_IRQENABLE_LC2_FIFO_OVF_IRQ_SHIFT (0x00000005u)
#define CSL_CCP2_LC23_IRQENABLE_LC2_FIFO_OVF_IRQ_RESETVAL (0x00000000u)

/* Lc2 count tokens */
#define CSL_CCP2_LC23_IRQENABLE_LC2_COUNT_IRQ_MASK (0x00000080u)
#define CSL_CCP2_LC23_IRQENABLE_LC2_COUNT_IRQ_SHIFT (0x00000007u)
#define CSL_CCP2_LC23_IRQENABLE_LC2_COUNT_IRQ_RESETVAL (0x00000000u)

/* Lco Fe Irq tokens */
#define CSL_CCP2_LC23_IRQENABLE_LC2_FE_IRQ_MASK (0x00000100u)
#define CSL_CCP2_LC23_IRQENABLE_LC2_FE_IRQ_SHIFT (0x00000008u)
#define CSL_CCP2_LC23_IRQENABLE_LC2_FE_IRQ_RESETVAL (0x00000000u)

/* Lc2 Ls Irq tokens */
#define CSL_CCP2_LC23_IRQENABLE_LC2_LS_IRQ_MASK (0x00000200u)
#define CSL_CCP2_LC23_IRQENABLE_LC2_LS_IRQ_SHIFT (0x00000009u)
#define CSL_CCP2_LC23_IRQENABLE_LC2_LS_IRQ_RESETVAL (0x00000000u)

/* Lco Le Irq tokens */
#define CSL_CCP2_LC23_IRQENABLE_LC2_LE_IRQ_MASK (0x00000400u)
#define CSL_CCP2_LC23_IRQENABLE_LC2_LE_IRQ_SHIFT (0x0000000Au)
#define CSL_CCP2_LC23_IRQENABLE_LC2_LE_IRQ_RESETVAL (0x00000000u)

/* Lc2 fs Irq tokens */
#define CSL_CCP2_LC23_IRQENABLE_LC2_FS_IRQ_MASK (0x00000800u)
#define CSL_CCP2_LC23_IRQENABLE_LC2_FS_IRQ_SHIFT (0x0000000Bu)
#define CSL_CCP2_LC23_IRQENABLE_LC2_FS_IRQ_RESETVAL (0x00000000u)

/* Lco ocp error tokens */
#define CSL_CCP2_LC23_IRQENABLE_LC2_OCPERROR_IRQ_MASK (0x00008000u)
#define CSL_CCP2_LC23_IRQENABLE_LC2_OCPERROR_IRQ_SHIFT (0x0000000Fu)
#define CSL_CCP2_LC23_IRQENABLE_LC2_OCPERROR_IRQ_RESETVAL (0x00000000u)

/* Lc3 ssc tokens */
#define CSL_CCP2_LC23_IRQENABLE_LC3_SSC_IRQ_MASK (0x00010000u)
#define CSL_CCP2_LC23_IRQENABLE_LC3_SSC_IRQ_SHIFT (0x00000010u)
#define CSL_CCP2_LC23_IRQENABLE_LC3_SSC_IRQ_RESETVAL (0x00000000u)

/* Lc3 fsc tokens */
#define CSL_CCP2_LC23_IRQENABLE_LC3_FSC_IRQ_MASK (0x00020000u)
#define CSL_CCP2_LC23_IRQENABLE_LC3_FSC_IRQ_SHIFT (0x00000011u)
#define CSL_CCP2_LC23_IRQENABLE_LC3_FSC_IRQ_RESETVAL (0x00000000u)

/* Lc3 fw Irq tokens */
#define CSL_CCP2_LC23_IRQENABLE_LC3_FW_IRQ_MASK (0x00040000u)
#define CSL_CCP2_LC23_IRQENABLE_LC3_FW_IRQ_SHIFT (0x00000012u)
#define CSL_CCP2_LC23_IRQENABLE_LC3_FW_IRQ_RESETVAL (0x00000000u)

/* Lc3 Fsp Irq tokens */
#define CSL_CCP2_LC23_IRQENABLE_LC3_FSP_IRQ_MASK (0x00080000u)
#define CSL_CCP2_LC23_IRQENABLE_LC3_FSP_IRQ_SHIFT (0x00000013u)
#define CSL_CCP2_LC23_IRQENABLE_LC3_FSP_IRQ_RESETVAL (0x00000000u)

/* Lc3 Crc Irq tokens */
#define CSL_CCP2_LC23_IRQENABLE_LC3_CRC_IRQ_MASK (0x00100000u)
#define CSL_CCP2_LC23_IRQENABLE_LC3_CRC_IRQ_SHIFT (0x00000014u)
#define CSL_CCP2_LC23_IRQENABLE_LC3_CRC_IRQ_RESETVAL (0x00000000u)

/* Lc3 fifo Ovf Irq tokens */
#define CSL_CCP2_LC23_IRQENABLE_LC3_FIFO_OVF_IRQ_MASK (0x00200000u)
#define CSL_CCP2_LC23_IRQENABLE_LC3_FIFO_OVF_IRQ_SHIFT (0x00000015u)
#define CSL_CCP2_LC23_IRQENABLE_LC3_FIFO_OVF_IRQ_RESETVAL (0x00000000u)

/* Lc3 count irq tokens */
#define CSL_CCP2_LC23_IRQENABLE_LC3_COUNT_IRQ_MASK (0x00800000u)
#define CSL_CCP2_LC23_IRQENABLE_LC3_COUNT_IRQ_SHIFT (0x00000017u)
#define CSL_CCP2_LC23_IRQENABLE_LC3_COUNT_IRQ_RESETVAL (0x00000000u)

/* Lc3 Fe irq tokens */
#define CSL_CCP2_LC23_IRQENABLE_LC3_FE_IRQ_MASK (0x01000000u)
#define CSL_CCP2_LC23_IRQENABLE_LC3_FE_IRQ_SHIFT (0x00000018u)
#define CSL_CCP2_LC23_IRQENABLE_LC3_FE_IRQ_RESETVAL (0x00000000u)

/* Lc3 ls irq tokens */
#define CSL_CCP2_LC23_IRQENABLE_LC3_LS_IRQ_MASK (0x02000000u)
#define CSL_CCP2_LC23_IRQENABLE_LC3_LS_IRQ_SHIFT (0x00000019u)
#define CSL_CCP2_LC23_IRQENABLE_LC3_LS_IRQ_RESETVAL (0x00000000u)

/* Lc3 Le Irq tokens */
#define CSL_CCP2_LC23_IRQENABLE_LC3_LE_IRQ_MASK (0x04000000u)
#define CSL_CCP2_LC23_IRQENABLE_LC3_LE_IRQ_SHIFT (0x0000001Au)
#define CSL_CCP2_LC23_IRQENABLE_LC3_LE_IRQ_RESETVAL (0x00000000u)

/* Lc3 opp error tokens */
#define CSL_CCP2_LC23_IRQENABLE_LC3_OCPERROR_IRQ_MASK (0x08000000u)
#define CSL_CCP2_LC23_IRQENABLE_LC3_OCPERROR_IRQ_SHIFT (0x0000001Bu)
#define CSL_CCP2_LC23_IRQENABLE_LC3_OCPERROR_IRQ_RESETVAL (0x00000000u)

/* Lc3 fs tokens */
#define CSL_CCP2_LC23_IRQENABLE_LC3_FS_IRQ_MASK (0x80000000u)
#define CSL_CCP2_LC23_IRQENABLE_LC3_FS_IRQ_SHIFT (0x0000001Fu)
#define CSL_CCP2_LC23_IRQENABLE_LC3_FS_IRQ_RESETVAL (0x00000000u)

/* LC23 IRQ STATUS */

/* Lc2 Ssc tokens */

#define CSL_CCP2_LC23_IRQSTATUS_LC2_SSC_IRQ_MASK (0x00000001u)
#define CSL_CCP2_LC23_IRQSTATUS_LC2_SSC_IRQ_SHIFT (0x00000000u)
#define CSL_CCP2_LC23_IRQSTATUS_LC2_SSC_IRQ_RESETVAL (0x00000000u)

/* Lc2 Fsc tokens */
#define CSL_CCP2_LC23_IRQSTATUS_LC2_FSC_IRQ_MASK (0x00000002u)
#define CSL_CCP2_LC23_IRQSTATUS_LC2_FSC_IRQ_SHIFT (0x00000001u)
#define CSL_CCP2_LC23_IRQSTATUS_LC2_FSC_IRQ_RESETVAL (0x00000000u)

/* Lc2_Fw_Irq tokens */
#define CSL_CCP2_LC23_IRQSTATUS_LC2_FW_IRQ_MASK (0x00000004u)
#define CSL_CCP2_LC23_IRQSTATUS_LC2_FW_IRQ_SHIFT (0x00000002u)
#define CSL_CCP2_LC23_IRQSTATUS_LC2_FW_IRQ_RESETVAL (0x00000000u)

/* Lc2 Fsp tokens */
#define CSL_CCP2_LC23_IRQSTATUS_LC2_FSP_IRQ_MASK (0x00000008u)
#define CSL_CCP2_LC23_IRQSTATUS_LC2_FSP_IRQ_SHIFT (0x00000003u)
#define CSL_CCP2_LC23_IRQSTATUS_LC2_FSP_IRQ_RESETVAL (0x00000000u)

/* Lc2 Crc tokens */
#define CSL_CCP2_LC23_IRQSTATUS_LC2_CRC_IRQ_MASK (0x00000010u)
#define CSL_CCP2_LC23_IRQSTATUS_LC2_CRC_IRQ_SHIFT (0x00000004u)
#define CSL_CCP2_LC23_IRQSTATUS_LC2_CRC_IRQ_RESETVAL (0x00000000u)

/* Lc2 fifo Ovf Irq tokens */
#define CSL_CCP2_LC23_IRQSTATUS_LC2_FIFO_OVF_IRQ_MASK (0x00000020u)
#define CSL_CCP2_LC23_IRQSTATUS_LC2_FIFO_OVF_IRQ_SHIFT (0x00000005u)
#define CSL_CCP2_LC23_IRQSTATUS_LC2_FIFO_OVF_IRQ_RESETVAL (0x00000000u)

/* Lc2 count tokens */
#define CSL_CCP2_LC23_IRQSTATUS_LC2_COUNT_IRQ_MASK (0x00000080u)
#define CSL_CCP2_LC23_IRQSTATUS_LC2_COUNT_IRQ_SHIFT (0x00000007u)
#define CSL_CCP2_LC23_IRQSTATUS_LC2_COUNT_IRQ_RESETVAL (0x00000000u)

/* Lc2 Fe Irq tokens */
#define CSL_CCP2_LC23_IRQSTATUS_LC2_FE_IRQ_MASK (0x00000100u)
#define CSL_CCP2_LC23_IRQSTATUS_LC2_FE_IRQ_SHIFT (0x00000008u)
#define CSL_CCP2_LC23_IRQSTATUS_LC2_FE_IRQ_RESETVAL (0x00000000u)

/* Lc2 ls irq tokens */
#define CSL_CCP2_LC23_IRQSTATUS_LC2_LS_IRQ_MASK (0x00000200u)
#define CSL_CCP2_LC23_IRQSTATUS_LC2_LS_IRQ_SHIFT (0x00000009u)
#define CSL_CCP2_LC23_IRQSTATUS_LC2_LS_IRQ_RESETVAL (0x00000000u)

/* Lc2 Le Irq tokens */
#define CSL_CCP2_LC23_IRQSTATUS_LC2_LE_IRQ_MASK (0x00000400u)
#define CSL_CCP2_LC23_IRQSTATUS_LC2_LE_IRQ_SHIFT (0x0000000Au)
#define CSL_CCP2_LC23_IRQSTATUS_LC2_LE_IRQ_RESETVAL (0x00000000u)

/* Lc2 Fs Irq tokens */
#define CSL_CCP2_LC23_IRQSTATUS_LC2_FS_IRQ_MASK (0x00000800u)
#define CSL_CCP2_LC23_IRQSTATUS_LC2_FS_IRQ_SHIFT (0x0000000Bu)
#define CSL_CCP2_LC23_IRQSTATUS_LC2_FS_IRQ_RESETVAL (0x00000000u)

/* Lc2 Ocp error Irq tokens */
#define CSL_CCP2_LC23_IRQSTATUS_LC2_OCPERROR_IRQ_MASK (0x00008000u)
#define CSL_CCP2_LC23_IRQSTATUS_LC2_OCPERROR_IRQ_SHIFT (0x0000000Fu)
#define CSL_CCP2_LC23_IRQSTATUS_LC2_OCPERROR_IRQ_RESETVAL (0x00000000u)

/* Lc3 Ssc Irq tokens */
#define CSL_CCP2_LC23_IRQSTATUS_LC3_SSC_IRQ_MASK (0x00010000u)
#define CSL_CCP2_LC23_IRQSTATUS_LC3_SSC_IRQ_SHIFT (0x00000010u)
#define CSL_CCP2_LC23_IRQSTATUS_LC3_SSC_IRQ_RESETVAL (0x00000000u)

/* Lc3 Fsc Irq tokens */
#define CSL_CCP2_LC23_IRQSTATUS_LC3_FSC_IRQ_MASK (0x00020000u)
#define CSL_CCP2_LC23_IRQSTATUS_LC3_FSC_IRQ_SHIFT (0x00000011u)
#define CSL_CCP2_LC23_IRQSTATUS_LC3_FSC_IRQ_RESETVAL (0x00000000u)

/* Lc3 Fw Irq tokens */
#define CSL_CCP2_LC23_IRQSTATUS_LC3_FW_IRQ_MASK (0x00040000u)
#define CSL_CCP2_LC23_IRQSTATUS_LC3_FW_IRQ_SHIFT (0x00000012u)
#define CSL_CCP2_LC23_IRQSTATUS_LC3_FW_IRQ_RESETVAL (0x00000000u)

/* Lc3 Fsp Irq tokens */
#define CSL_CCP2_LC23_IRQSTATUS_LC3_FSP_IRQ_MASK (0x00080000u)
#define CSL_CCP2_LC23_IRQSTATUS_LC3_FSP_IRQ_SHIFT (0x00000013u)
#define CSL_CCP2_LC23_IRQSTATUS_LC3_FSP_IRQ_RESETVAL (0x00000000u)

/* Lc3 Le Crc tokens */
#define CSL_CCP2_LC23_IRQSTATUS_LC3_CRC_IRQ_MASK (0x00100000u)
#define CSL_CCP2_LC23_IRQSTATUS_LC3_CRC_IRQ_SHIFT (0x00000014u)
#define CSL_CCP2_LC23_IRQSTATUS_LC3_CRC_IRQ_RESETVAL (0x00000000u)

/* Lc3 Fifo Ovf Irq tokens */
#define CSL_CCP2_LC23_IRQSTATUS_LC3_FIFO_OVF_IRQ_MASK (0x00200000u)
#define CSL_CCP2_LC23_IRQSTATUS_LC3_FIFO_OVF_IRQ_SHIFT (0x00000015u)
#define CSL_CCP2_LC23_IRQSTATUS_LC3_FIFO_OVF_IRQ_RESETVAL (0x00000000u)

/* Lc3 Count Irq tokens */
#define CSL_CCP2_LC23_IRQSTATUS_LC3_COUNT_IRQ_MASK (0x00800000u)
#define CSL_CCP2_LC23_IRQSTATUS_LC3_COUNT_IRQ_SHIFT (0x00000017u)
#define CSL_CCP2_LC23_IRQSTATUS_LC3_COUNT_IRQ_RESETVAL (0x00000000u)

/* Lc3 Fe Irq tokens */
#define CSL_CCP2_LC23_IRQSTATUS_LC3_FE_IRQ_MASK (0x01000000u)
#define CSL_CCP2_LC23_IRQSTATUS_LC3_FE_IRQ_SHIFT (0x00000018u)
#define CSL_CCP2_LC23_IRQSTATUS_LC3_FE_IRQ_RESETVAL (0x00000000u)

/* Lc3 LS Irq tokens */
#define CSL_CCP2_LC23_IRQSTATUS_LC3_LS_IRQ_MASK (0x02000000u)
#define CSL_CCP2_LC23_IRQSTATUS_LC3_LS_IRQ_SHIFT (0x00000019u)
#define CSL_CCP2_LC23_IRQSTATUS_LC3_LS_IRQ_RESETVAL (0x00000000u)

/* Lc3 Le Irq tokens */
#define CSL_CCP2_LC23_IRQSTATUS_LC3_LE_IRQ_MASK (0x04000000u)
#define CSL_CCP2_LC23_IRQSTATUS_LC3_LE_IRQ_SHIFT (0x0000001Au)
#define CSL_CCP2_LC23_IRQSTATUS_LC3_LE_IRQ_RESETVAL (0x00000000u)

/* Lc3 Fs Irq tokens */
#define CSL_CCP2_LC23_IRQSTATUS_LC3_FS_IRQ_MASK (0x08000000u)
#define CSL_CCP2_LC23_IRQSTATUS_LC3_FS_IRQ_SHIFT (0x0000001Bu)
#define CSL_CCP2_LC23_IRQSTATUS_LC3_FS_IRQ_RESETVAL (0x00000000u)

/* Lc3 Ocp error Irq tokens */
#define CSL_CCP2_LC23_IRQSTATUS_LC3_OCPERROR_IRQ_MASK (0x80000000u)
#define CSL_CCP2_LC23_IRQSTATUS_LC3_OCPERROR_IRQ_SHIFT (0x0000001Fu)
#define CSL_CCP2_LC23_IRQSTATUS_LC3_OCPERROR_IRQ_RESETVAL (0x00000000u)

/* LCM_IRQENABLE */
/* lcm eof tokens */
#define CSL_CCP2_LCM_IRQENABLE_LCM_EOF_MASK (0x00000001u)
#define CSL_CCP2_LCM_IRQENABLE_LCM_EOF_SHIFT (0x00000000u)
#define CSL_CCP2_LCM_IRQENABLE_LCM_EOF_RESETVAL (0x00000000u)

/* lcm Ocp error tokens */
#define CSL_CCP2_LCM_IRQENABLE_LCM_OCPERROR_MASK (0x00000002u)
#define CSL_CCP2_LCM_IRQENABLE_LCM_OCPERROR_SHIFT (0x00000001u)
#define CSL_CCP2_LCM_IRQENABLE_LCM_OCPERROR_RESETVAL (0x00000000u)

/* LCM_IRQSTATUS */
/* Lcm Eof tokens */
#define CSL_CCP2_LCM_IRQSTATUS_LCM_EOF_MASK (0x00000001u)
#define CSL_CCP2_LCM_IRQSTATUS_LCM_EOF_SHIFT (0x00000000u)
#define CSL_CCP2_LCM_IRQSTATUS_LCM_EOF_RESETVAL (0x00000000u)

/* Lcm ocp error tokens */
#define CSL_CCP2_LCM_IRQSTATUS_LCM_OCPERROR_MASK (0x00000002u)
#define CSL_CCP2_LCM_IRQSTATUS_LCM_OCPERROR_SHIFT (0x00000001u)
#define CSL_CCP2_LCM_IRQSTATUS_LCM_OCPERROR_RESETVAL (0x00000000u)

/* CCP2_CTRL */
/* If En tokens */
#define CSL_CCP2_CTRL_IF_EN_MASK (0x00000001u)
#define CSL_CCP2_CTRL_IF_EN_SHIFT (0x00000000u)
#define CSL_CCP2_CTRL_IF_EN_RESETVAL (0x00000000u)

/* phy_sel tokens */
#define CSL_CCP2_CTRL_PHY_SEL_MASK (0x00000002u)
#define CSL_CCP2_CTRL_PHY_SEL_SHIFT (0x00000001u)
#define CSL_CCP2_CTRL_PHY_SEL_RESETVAL (0x00000000u)

/* Io_sel tokens */
#define CSL_CCP2_CTRL_IO_OUT_SEL_MASK (0x00000004u)
#define CSL_CCP2_CTRL_IO_OUT_SEL_SHIFT (0x00000002u)
#define CSL_CCP2_CTRL_IO_OUT_SEL_RESETVAL (0x00000000u)

/* Frame tokens */
#define CSL_CCP2_CTRL_FRAME_MASK (0x00000008u)
#define CSL_CCP2_CTRL_FRAME_SHIFT (0x00000003u)
#define CSL_CCP2_CTRL_FRAME_RESETVAL (0x00000000u)

/* mode tokens */
#define CSL_CCP2_CTRL_MODE_MASK (0x00000010u)
#define CSL_CCP2_CTRL_MODE_SHIFT (0x00000004u)
#define CSL_CCP2_CTRL_MODE_RESETVAL (0x00000000u)

/* Burst tokens */
#define CSL_CCP2_CTRL_BURST_MASK (0x000000E0u)
#define CSL_CCP2_CTRL_BURST_SHIFT (0x00000005u)
#define CSL_CCP2_CTRL_BURST_RESETVAL (0x00000000u)
/* Inv_mask tokens */
#define CSL_CCP2_CTRL_VP_CLK_FORCE_MASK (0x00000200u)
#define CSL_CCP2_CTRL_VP_CLK_FORCE_SHIFT (0x00000009u)
#define CSL_CCP2_CTRL_VP_CLK_FORCE_RESETVAL (0x00000000u)

/* Inv_mask tokens */
#define CSL_CCP2_CTRL_INV_MASK (0x00000400u)
#define CSL_CCP2_CTRL_INV_SHIFT (0x0000000Au)
#define CSL_CCP2_CTRL_INV_RESETVAL (0x00000000u)

/* Vp_only_en tokens */
#define CSL_CCP2_CTRL_VP_ONLY_EN_MASK (0x00000800u)
#define CSL_CCP2_CTRL_VP_ONLY_EN_SHIFT (0x0000000Bu)
#define CSL_CCP2_CTRL_VP_ONLY_EN_RESETVAL (0x00000000u)

/* Vp_clk_pol tokens */
#define CSL_CCP2_CTRL_VP_CLK_POL_MASK (0x00001000u)
#define CSL_CCP2_CTRL_VP_CLK_POL_SHIFT (0x0000000Cu)
#define CSL_CCP2_CTRL_VP_CLK_POL_RESETVAL (0x00000000u)

/* DBG_en tokens */
#define CSL_CCP2_CTRL_DBG_EN_MASK (0x00002000u)
#define CSL_CCP2_CTRL_DBG_EN_SHIFT (0x0000000Du)
#define CSL_CCP2_CTRL_DBG_EN_RESETVAL (0x00000000u)

/* Posted tokens */
#define CSL_CCP2_CTRL_POSTED_MASK (0x00004000u)
#define CSL_CCP2_CTRL_POSTED_SHIFT (0x0000000Eu)
#define CSL_CCP2_CTRL_POSTED_RESETVAL (0x00000000u)

/* Fravdiv tokens */
#define CSL_CCP2_CTRL_FRACDIV_MASK (0xFFFF8000u)
#define CSL_CCP2_CTRL_FRACDIV_SHIFT (0x0000000Fu)
#define CSL_CCP2_CTRL_FRACDIV_RESETVAL (0x10000000u)

/* DBG */
/* dbg tokens */
#define CSL_CCP2_DBG_DBG_MASK (0xFFFFFFFFu)
#define CSL_CCP2_DBG_DBG_SHIFT (0x00000000u)
#define CSL_CCP2_DBG_DBG_RESETVAL (0x00000000u)

/* CCP2_GNQ */
/* Nbchennales tokens */
#define CSL_CCP2_GNQ_NBCHANNELS_MASK (0x00000003u)
#define CSL_CCP2_GNQ_NBCHANNELS_SHIFT (0x00000000u)
#define CSL_CCP2_GNQ_NBCHANNELS_RESETVAL (0x20000000u)

/* Fifo depth tokens */
#define CSL_CCP2_GNQ_FIFODEPTH_MASK (0x0000001Cu)
#define CSL_CCP2_GNQ_FIFODEPTH_SHIFT (0x00000002u)
#define CSL_CCP2_GNQ_FIFODEPTH_RESETVAL (0x10000000u)

/* Ocp Read Port tokens */
#define CSL_CCP2_GNQ_OCPREADPORT_MASK (0x00000020u)
#define CSL_CCP2_GNQ_OCPREADPORT_SHIFT (0x00000005u)
#define CSL_CCP2_GNQ_OCPREADPORT_RESETVAL (0x00000001u)

/* CCP2_CTRL1 */
/* Blanking tokens */
#define CSL_CCP2_CTRL1_BLANKING_MASK (0x00000003u)
#define CSL_CCP2_CTRL1_BLANKING_SHIFT (0x00000000u)
#define CSL_CCP2_CTRL1_BLANKING_RESETVAL (0x00000000u)

/* Levl tokens */
#define CSL_CCP2_CTRL1_LEVL_MASK (0x007F0000u)
#define CSL_CCP2_CTRL1_LEVL_SHIFT (0x00000010u)
#define CSL_CCP2_CTRL1_LEVL_RESETVAL (0x00000000u)

/* Levh tokens */
#define CSL_CCP2_CTRL1_LEVH_MASK (0x7F000000u)
#define CSL_CCP2_CTRL1_LEVH_SHIFT (0x00000018u)
#define CSL_CCP2_CTRL1_LEVH_RESETVAL (0x00000000u)

/* LC0_CTRL */
/* Chan_En tokens */
#define CSL_CCP2_LC0_CTRL_CHAN_EN_MASK (0x00000001u)
#define CSL_CCP2_LC0_CTRL_CHAN_EN_SHIFT (0x00000000u)
#define CSL_CCP2_LC0_CTRL_CHAN_EN_RESETVAL (0x00000001u)

/* Region_En tokens */
#define CSL_CCP2_LC0_CTRL_REGION_EN_MASK (0x00000002u)
#define CSL_CCP2_LC0_CTRL_REGION_EN_SHIFT (0x00000001u)
#define CSL_CCP2_LC0_CTRL_REGION_EN_RESETVAL (0x00000000u)

/* Format tokens */
#define CSL_CCP2_LC0_CTRL_FORMAT_MASK (0x000000FCu)
#define CSL_CCP2_LC0_CTRL_FORMAT_SHIFT (0x00000002u)
#define CSL_CCP2_LC0_CTRL_FORMAT_RESETVAL (0x00000000u)

/* Mask tokens */
#define CSL_CCP2_LC0_CTRL_ALPHA_MASK (0x0000FF00u)
#define CSL_CCP2_LC0_CTRL_ALPHA_SHIFT (0x00000008u)
#define CSL_CCP2_LC0_CTRL_ALPHA_RESETVAL (0x00000000u)

/* Count_Unlock tokens */
#define CSL_CCP2_LC0_CTRL_COUNT_UNLOCK_MASK (0x00010000u)
#define CSL_CCP2_LC0_CTRL_COUNT_UNLOCK_SHIFT (0x00000010u)
#define CSL_CCP2_LC0_CTRL_COUNT_UNLOCK_RESETVAL (0x00000000u)

/* Ping Pomg tokens */
#define CSL_CCP2_LC0_CTRL_PING_PONG_MASK (0x00020000u)
#define CSL_CCP2_LC0_CTRL_PING_PONG_SHIFT (0x00000011u)
#define CSL_CCP2_LC0_CTRL_PING_PONG_RESETVAL (0x00000001u)

/* Dpcm pred tokens */
#define CSL_CCP2_LC0_CTRL_DPCM_PRED_MASK (0x00040000u)
#define CSL_CCP2_LC0_CTRL_DPCM_PRED_SHIFT (0x00000012u)
#define CSL_CCP2_LC0_CTRL_DPCM_PRED_RESETVAL (0x00000000u)

/* Crc En tokens */
#define CSL_CCP2_LC0_CTRL_CRC_EN_MASK (0x00080000u)
#define CSL_CCP2_LC0_CTRL_CRC_EN_SHIFT (0x00000013u)
#define CSL_CCP2_LC0_CTRL_CRC_EN_RESETVAL (0x00000000u)

/* Count tokens */
#define CSL_CCP2_LC0_CTRL_COUNT_MASK (0xFF000000u)
#define CSL_CCP2_LC0_CTRL_COUNT_SHIFT (0x00000018u)
#define CSL_CCP2_LC0_CTRL_COUNT_RESETVAL (0x00000000u)

/* LC0 Code */
/* Lsc tokens */
#define CSL_CCP2_LC0_CODE_LSC_MASK (0x0000000Fu)
#define CSL_CCP2_LC0_CODE_LSC_SHIFT (0x00000000u)
#define CSL_CCP2_LC0_CODE_LSC_RESETVAL (0x00000000u)

/* Lec tokens */
#define CSL_CCP2_LC0_CODE_LEC_MASK (0x000000F0u)
#define CSL_CCP2_LC0_CODE_LEC_SHIFT (0x00000004u)
#define CSL_CCP2_LC0_CODE_LEC_RESETVAL (0x10000000u)

/* Fec tokens */
#define CSL_CCP2_LC0_CODE_FEC_MASK (0x00000F00u)
#define CSL_CCP2_LC0_CODE_FEC_SHIFT (0x00000008u)
#define CSL_CCP2_LC0_CODE_FEC_RESETVAL (0x20000000u)

/* Fsc tokens */
#define CSL_CCP2_LC0_CODE_FSC_MASK (0x0000F000u)
#define CSL_CCP2_LC0_CODE_FSC_SHIFT (0x0000000Cu)
#define CSL_CCP2_LC0_CODE_FSC_RESETVAL (0x30000000u)

/* Chan Id tokens */
#define CSL_CCP2_LC0_CODE_CHAN_ID_MASK (0x000F0000u)
#define CSL_CCP2_LC0_CODE_CHAN_ID_SHIFT (0x00000010u)
#define CSL_CCP2_LC0_CODE_CHAN_ID_RESETVAL (0x00000000u)

/* LC0_ STAT_START */
/* sOF TOKENS */
#define CSL_CCP2_LC0_STAT_START_SOF_MASK (0x00000FFFu)
#define CSL_CCP2_LC0_STAT_START_SOF_SHIFT (0x00000000u)
#define CSL_CCP2_LC0_STAT_START_SOF_RESETVAL (0x00000000u)

/* Eof tokens */
#define CSL_CCP2_LC0_STAT_START_EOF_MASK (0x0FFF0000u)
#define CSL_CCP2_LC0_STAT_START_EOF_SHIFT (0x00000010u)
#define CSL_CCP2_LC0_STAT_START_EOF_RESETVAL (0x00000000u)

/* LCO_STAT_SIZE */
/* Sof tokens */
#define CSL_CCP2_LC0_STAT_SIZE_SOF_MASK (0x00000FFFu)
#define CSL_CCP2_LC0_STAT_SIZE_SOF_SHIFT (0x00000000u)
#define CSL_CCP2_LC0_STAT_SIZE_SOF_RESETVAL (0x00000000u)

/* Eof tokens */
#define CSL_CCP2_LC0_STAT_SIZE_EOF_MASK (0x0FFF0000u)
#define CSL_CCP2_LC0_STAT_SIZE_EOF_SHIFT (0x00000010u)
#define CSL_CCP2_LC0_STAT_SIZE_EOF_RESETVAL (0x00000000u)

/* LC0_SOF_ADDR */
/* Sof Add tokensr */
#define CSL_CCP2_LC0_SOF_ADDR_ADDR_MASK (0xFFFFFF70u)
#define CSL_CCP2_LC0_SOF_ADDR_ADDR_SHIFT (0x00000005u)
#define CSL_CCP2_LC0_SOF_ADDR_ADDR_RESETVAL (0x00000000u)

/* LC0_EOF_ADDR */
/* Eof addr tokens */
#define CSL_CCP2_LC0_EOF_ADDR_ADDR_MASK (0xFFFFFF70u)
#define CSL_CCP2_LC0_EOF_ADDR_ADDR_SHIFT (0x00000005u)
#define CSL_CCP2_LC0_EOF_ADDR_ADDR_RESETVAL (0x00000000u)

/* LC0_DAT_START */
/* Vert tokens */
#define CSL_CCP2_LC0_DAT_START_VERT_MASK (0x0FFF0000u)
#define CSL_CCP2_LC0_DAT_START_VERT_SHIFT (0x00000010u)
#define CSL_CCP2_LC0_DAT_START_VERT_RESETVAL (0x00000000u)

/* LC0_DAT_SIZE */
/* Vert tokens */
#define CSL_CCP2_LC0_DAT_SIZE_VERT_MASK (0x0FFF0000u)
#define CSL_CCP2_LC0_DAT_SIZE_VERT_SHIFT (0x00000010u)
#define CSL_CCP2_LC0_DAT_SIZE_VERT_RESETVAL (0x00000000u)

/* LC0_DAT_PING_ADDR */
/* addr tokens */
#define CSL_CCP2_LC0_DAT_PING_ADDR_ADDR_MASK (0xFFFFFF70u)
#define CSL_CCP2_LC0_DAT_PING_ADDR_ADDR_SHIFT (0x00000005u)
#define CSL_CCP2_LC0_DAT_PING_ADDR_ADDR_RESETVAL (0x00000000u)

/* LC0_DAT_PONG_ADDR */
/* Addr tokens */
#define CSL_CCP2_LC0_DAT_PONG_ADDR_ADDR_MASK (0xFFFFFF70u)
#define CSL_CCP2_LC0_DAT_PONG_ADDR_ADDR_SHIFT (0x00000005u)
#define CSL_CCP2_LC0_DAT_PONG_ADDR_ADDR_RESETVAL (0x00000000u)

 /* LC0_DAT_OFST */
/* Ofst Tokens */
#define CSL_CCP2_LC0_DAT_OFST_OFST_MASK (0xFFFFFF70u)
#define CSL_CCP2_LC0_DAT_OFST_OFST_SHIFT (0x00000005u)
#define CSL_CCP2_LC0_DAT_OFST_OFST_RESETVAL (0x00000000u)

/* LC1_CTRL */
/* Chan_En tokens */
#define CSL_CCP2_LC1_CTRL_CHAN_EN_MASK (0x00000001u)
#define CSL_CCP2_LC1_CTRL_CHAN_EN_SHIFT (0x00000000u)
#define CSL_CCP2_LC1_CTRL_CHAN_EN_RESETVAL (0x00000000u)

/* Region_En tokens */
#define CSL_CCP2_LC1_CTRL_REGION_EN_MASK (0x00000002u)
#define CSL_CCP2_LC1_CTRL_REGION_EN_SHIFT (0x00000001u)
#define CSL_CCP2_LC1_CTRL_REGION_EN_RESETVAL (0x00000000u)

/* Format tokens */
#define CSL_CCP2_LC1_CTRL_FORMAT_MASK (0x000000FCu)
#define CSL_CCP2_LC1_CTRL_FORMAT_SHIFT (0x00000002u)
#define CSL_CCP2_LC1_CTRL_FORMAT_RESETVAL (0x00000000u)

/* Mask tokens */
#define CSL_CCP2_LC1_CTRL_ALPHA_MASK (0x0000FF00u)
#define CSL_CCP2_LC1_CTRL_ALPHA_SHIFT (0x00000008u)
#define CSL_CCP2_LC1_CTRL_ALPHA_RESETVAL (0x00000000u)

/* Count_Unlock tokens */
#define CSL_CCP2_LC1_CTRL_COUNT_UNLOCK_MASK (0x00010000u)
#define CSL_CCP2_LC1_CTRL_COUNT_UNLOCK_SHIFT (0x00000010u)
#define CSL_CCP2_LC1_CTRL_COUNT_UNLOCK_RESETVAL (0x00000000u)

/* Ping Pomg tokens */
#define CSL_CCP2_LC1_CTRL_PING_PONG_MASK (0x00020000u)
#define CSL_CCP2_LC1_CTRL_PING_PONG_SHIFT (0x00000011u)
#define CSL_CCP2_LC1_CTRL_PING_PONG_RESETVAL (0x00000001u)

/* Dpcm pred tokens */
#define CSL_CCP2_LC1_CTRL_DPCM_PRED_MASK (0x00040000u)
#define CSL_CCP2_LC1_CTRL_DPCM_PRED_SHIFT (0x00000012u)
#define CSL_CCP2_LC1_CTRL_DPCM_PRED_RESETVAL (0x00000000u)

/* Crc En tokens */
#define CSL_CCP2_LC1_CTRL_CRC_EN_MASK (0x00080000u)
#define CSL_CCP2_LC1_CTRL_CRC_EN_SHIFT (0x00000013u)
#define CSL_CCP2_LC1_CTRL_CRC_EN_RESETVAL (0x00000000u)

/* Count tokens */
#define CSL_CCP2_LC1_CTRL_COUNT_MASK (0xFF000000u)
#define CSL_CCP2_LC1_CTRL_COUNT_SHIFT (0x00000018u)
#define CSL_CCP2_LC1_CTRL_COUNT_RESETVAL (0x00000000u)

/* LC1 Code */
/* Lsc tokens */
#define CSL_CCP2_LC1_CODE_LSC_MASK (0x0000000Fu)
#define CSL_CCP2_LC1_CODE_LSC_SHIFT (0x00000000u)
#define CSL_CCP2_LC1_CODE_LSC_RESETVAL (0x00000000u)

/* Lec tokens */
#define CSL_CCP2_LC1_CODE_LEC_MASK (0x000000F0u)
#define CSL_CCP2_LC1_CODE_LEC_SHIFT (0x00000004u)
#define CSL_CCP2_LC1_CODE_LEC_RESETVAL (0x10000000u)

/* Fec tokens */
#define CSL_CCP2_LC1_CODE_FEC_MASK (0x00000F00u)
#define CSL_CCP2_LC1_CODE_FEC_SHIFT (0x00000008u)
#define CSL_CCP2_LC1_CODE_FEC_RESETVAL (0x30000000u)

/* Fsc tokens */
#define CSL_CCP2_LC1_CODE_FSC_MASK (0x0000F000u)
#define CSL_CCP2_LC1_CODE_FSC_SHIFT (0x0000000Cu)
#define CSL_CCP2_LC1_CODE_FSC_RESETVAL (0x20000000u)

/* Chan Id tokens */
#define CSL_CCP2_LC1_CODE_CHAN_ID_MASK (0x000F0000u)
#define CSL_CCP2_LC1_CODE_CHAN_ID_SHIFT (0x00000010u)
#define CSL_CCP2_LC1_CODE_CHAN_ID_RESETVAL (0x10000000u)

/* LC1_ STAT_START */
/* sOF TOKENS */
#define CSL_CCP2_LC1_STAT_START_SOF_MASK (0x00000FFFu)
#define CSL_CCP2_LC1_STAT_START_SOF_SHIFT (0x00000000u)
#define CSL_CCP2_LC1_STAT_START_SOF_RESETVAL (0x00000000u)

/* Eof tokens */
#define CSL_CCP2_LC1_STAT_START_EOF_MASK (0x0FFF0000u)
#define CSL_CCP2_LC1_STAT_START_EOF_SHIFT (0x00000010u)
#define CSL_CCP2_LC1_STAT_START_EOF_RESETVAL (0x00000000u)

/* LCO_STAT_SIZE */
/* Sof tokens */
#define CSL_CCP2_LC1_STAT_SIZE_SOF_MASK (0x00000FFFu)
#define CSL_CCP2_LC1_STAT_SIZE_SOF_SHIFT (0x00000000u)
#define CSL_CCP2_LC1_STAT_SIZE_SOF_RESETVAL (0x00000000u)

/* Eof tokens */
#define CSL_CCP2_LC1_STAT_SIZE_EOF_MASK (0x0FFF0000u)
#define CSL_CCP2_LC1_STAT_SIZE_EOF_SHIFT (0x00000010u)
#define CSL_CCP2_LC1_STAT_SIZE_EOF_RESETVAL (0x00000000u)

/* LC1_SOF_ADDR */
/* Sof Add tokensr */
#define CSL_CCP2_LC1_SOF_ADDR_ADDR_MASK (0xFFFFFF70u)
#define CSL_CCP2_LC1_SOF_ADDR_ADDR_SHIFT (0x00000005u)
#define CSL_CCP2_LC1_SOF_ADDR_ADDR_RESETVAL (0x00000000u)

/* LC1_EOF_ADDR */
/* Eof addr tokens */
#define CSL_CCP2_LC1_EOF_ADDR_ADDR_MASK (0xFFFFFF70u)
#define CSL_CCP2_LC1_EOF_ADDR_ADDR_SHIFT (0x00000005u)
#define CSL_CCP2_LC1_EOF_ADDR_ADDR_RESETVAL (0x00000000u)

/* LC1_DAT_START */
/* Vert tokens */
#define CSL_CCP2_LC1_DAT_START_VERT_MASK (0x0FFF0000u)
#define CSL_CCP2_LC1_DAT_START_VERT_SHIFT (0x00000010u)
#define CSL_CCP2_LC1_DAT_START_VERT_RESETVAL (0x00000000u)

/* LC1_DAT_SIZE */
/* Vert tokens */
#define CSL_CCP2_LC1_DAT_SIZE_VERT_MASK (0x0FFF0000u)
#define CSL_CCP2_LC1_DAT_SIZE_VERT_SHIFT (0x00000010u)
#define CSL_CCP2_LC1_DAT_SIZE_VERT_RESETVAL (0x00000000u)

/* LC1_DAT_PING_ADDR */
/* addr tokens */
#define CSL_CCP2_LC1_DAT_PING_ADDR_ADDR_MASK (0xFFFFFF70u)
#define CSL_CCP2_LC1_DAT_PING_ADDR_ADDR_SHIFT (0x00000005u)
#define CSL_CCP2_LC1_DAT_PING_ADDR_ADDR_RESETVAL (0x00000000u)

/* LC1_DAT_PONG_ADDR */
/* Addr tokens */
#define CSL_CCP2_LC1_DAT_PONG_ADDR_ADDR_MASK (0xFFFFFF70u)
#define CSL_CCP2_LC1_DAT_PONG_ADDR_ADDR_SHIFT (0x00000005u)
#define CSL_CCP2_LC1_DAT_PONG_ADDR_ADDR_RESETVAL (0x00000000u)

 /* LC1_DAT_OFST */
/* Ofst Tokens */
#define CSL_CCP2_LC1_DAT_OFST_OFST_MASK (0xFFFFFF70u)
#define CSL_CCP2_LC1_DAT_OFST_OFST_SHIFT (0x00000005u)
#define CSL_CCP2_LC1_DAT_OFST_OFST_RESETVAL (0x00000000u)

/* LC2_CTRL */
/* Chan_En tokens */
#define CSL_CCP2_LC2_CTRL_CHAN_EN_MASK (0x00000001u)
#define CSL_CCP2_LC2_CTRL_CHAN_EN_SHIFT (0x00000000u)
#define CSL_CCP2_LC2_CTRL_CHAN_EN_RESETVAL (0x00000000u)

/* Region_En tokens */
#define CSL_CCP2_LC2_CTRL_REGION_EN_MASK (0x00000002u)
#define CSL_CCP2_LC2_CTRL_REGION_EN_SHIFT (0x00000001u)
#define CSL_CCP2_LC2_CTRL_REGION_EN_RESETVAL (0x00000000u)

/* Format tokens */
#define CSL_CCP2_LC2_CTRL_FORMAT_MASK (0x000000FCu)
#define CSL_CCP2_LC2_CTRL_FORMAT_SHIFT (0x00000002u)
#define CSL_CCP2_LC2_CTRL_FORMAT_RESETVAL (0x00000000u)

/* Mask tokens */
#define CSL_CCP2_LC2_CTRL_ALPHA_MASK (0x0000FF00u)
#define CSL_CCP2_LC2_CTRL_ALPHA_SHIFT (0x00000008u)
#define CSL_CCP2_LC2_CTRL_ALPHA_RESETVAL (0x00000000u)

/* Count_Unlock tokens */
#define CSL_CCP2_LC2_CTRL_COUNT_UNLOCK_MASK (0x00010000u)
#define CSL_CCP2_LC2_CTRL_COUNT_UNLOCK_SHIFT (0x00000010u)
#define CSL_CCP2_LC2_CTRL_COUNT_UNLOCK_RESETVAL (0x00000000u)

/* Ping Pomg tokens */
#define CSL_CCP2_LC2_CTRL_PING_PONG_MASK (0x00020000u)
#define CSL_CCP2_LC2_CTRL_PING_PONG_SHIFT (0x00000011u)
#define CSL_CCP2_LC2_CTRL_PING_PONG_RESETVAL (0x00000001u)

/* Dpcm pred tokens */
#define CSL_CCP2_LC2_CTRL_DPCM_PRED_MASK (0x00040000u)
#define CSL_CCP2_LC2_CTRL_DPCM_PRED_SHIFT (0x00000012u)
#define CSL_CCP2_LC2_CTRL_DPCM_PRED_RESETVAL (0x00000000u)

/* Crc En tokens */
#define CSL_CCP2_LC2_CTRL_CRC_EN_MASK (0x00080000u)
#define CSL_CCP2_LC2_CTRL_CRC_EN_SHIFT (0x00000013u)
#define CSL_CCP2_LC2_CTRL_CRC_EN_RESETVAL (0x00000000u)

/* Count tokens */
#define CSL_CCP2_LC2_CTRL_COUNT_MASK (0xFF000000u)
#define CSL_CCP2_LC2_CTRL_COUNT_SHIFT (0x00000018u)
#define CSL_CCP2_LC2_CTRL_COUNT_RESETVAL (0x00000000u)

/* LC2 Code */
/* Lsc tokens */
#define CSL_CCP2_LC2_CODE_LSC_MASK (0x0000000Fu)
#define CSL_CCP2_LC2_CODE_LSC_SHIFT (0x00000000u)
#define CSL_CCP2_LC2_CODE_LSC_RESETVAL (0x00000000u)

/* Lec tokens */
#define CSL_CCP2_LC2_CODE_LEC_MASK (0x000000F0u)
#define CSL_CCP2_LC2_CODE_LEC_SHIFT (0x00000004u)
#define CSL_CCP2_LC2_CODE_LEC_RESETVAL (0x10000000u)

/* Fec tokens */
#define CSL_CCP2_LC2_CODE_FEC_MASK (0x00000F00u)
#define CSL_CCP2_LC2_CODE_FEC_SHIFT (0x00000008u)
#define CSL_CCP2_LC2_CODE_FEC_RESETVAL (0x30000000u)

/* Fsc tokens */
#define CSL_CCP2_LC2_CODE_FSC_MASK (0x0000F000u)
#define CSL_CCP2_LC2_CODE_FSC_SHIFT (0x0000000Cu)
#define CSL_CCP2_LC2_CODE_FSC_RESETVAL (0x20000000u)

/* Chan Id tokens */
#define CSL_CCP2_LC2_CODE_CHAN_ID_MASK (0x000F0000u)
#define CSL_CCP2_LC2_CODE_CHAN_ID_SHIFT (0x00000010u)
#define CSL_CCP2_LC2_CODE_CHAN_ID_RESETVAL (0x20000000u)

/* LC2_ STAT_START */
/* sOF TOKENS */
#define CSL_CCP2_LC2_STAT_START_SOF_MASK (0x00000FFFu)
#define CSL_CCP2_LC2_STAT_START_SOF_SHIFT (0x00000000u)
#define CSL_CCP2_LC2_STAT_START_SOF_RESETVAL (0x00000000u)

/* Eof tokens */
#define CSL_CCP2_LC2_STAT_START_EOF_MASK (0x0FFF0000u)
#define CSL_CCP2_LC2_STAT_START_EOF_SHIFT (0x00000010u)
#define CSL_CCP2_LC2_STAT_START_EOF_RESETVAL (0x00000000u)

/* LC2_STAT_SIZE */
/* Sof tokens */
#define CSL_CCP2_LC2_STAT_SIZE_SOF_MASK (0x00000FFFu)
#define CSL_CCP2_LC2_STAT_SIZE_SOF_SHIFT (0x00000000u)
#define CSL_CCP2_LC2_STAT_SIZE_SOF_RESETVAL (0x00000000u)

/* Eof tokens */
#define CSL_CCP2_LC2_STAT_SIZE_EOF_MASK (0x0FFF0000u)
#define CSL_CCP2_LC2_STAT_SIZE_EOF_SHIFT (0x00000010u)
#define CSL_CCP2_LC2_STAT_SIZE_EOF_RESETVAL (0x00000000u)

/* LC2_SOF_ADDR */
/* Sof Add tokensr */
#define CSL_CCP2_LC2_SOF_ADDR_ADDR_MASK (0xFFFFFF70u)
#define CSL_CCP2_LC2_SOF_ADDR_ADDR_SHIFT (0x00000005u)
#define CSL_CCP2_LC2_SOF_ADDR_ADDR_RESETVAL (0x00000000u)

/* LC2_EOF_ADDR */
/* Eof addr tokens */
#define CSL_CCP2_LC2_EOF_ADDR_ADDR_MASK (0xFFFFFF70u)
#define CSL_CCP2_LC2_EOF_ADDR_ADDR_SHIFT (0x00000005u)
#define CSL_CCP2_LC2_EOF_ADDR_ADDR_RESETVAL (0x00000000u)

/* LC2_DAT_START */
/* Vert tokens */
#define CSL_CCP2_LC2_DAT_START_VERT_MASK (0x0FFF0000u)
#define CSL_CCP2_LC2_DAT_START_VERT_SHIFT (0x00000010u)
#define CSL_CCP2_LC2_DAT_START_VERT_RESETVAL (0x00000000u)

/* LC2_DAT_SIZE */
/* Vert tokens */
#define CSL_CCP2_LC2_DAT_SIZE_VERT_MASK (0x0FFF0000u)
#define CSL_CCP2_LC2_DAT_SIZE_VERT_SHIFT (0x00000010u)
#define CSL_CCP2_LC2_DAT_SIZE_VERT_RESETVAL (0x00000000u)

/* LC2_DAT_PING_ADDR */
/* addr tokens */
#define CSL_CCP2_LC2_DAT_PING_ADDR_ADDR_MASK (0xFFFFFF70u)
#define CSL_CCP2_LC2_DAT_PING_ADDR_ADDR_SHIFT (0x00000005u)
#define CSL_CCP2_LC2_DAT_PING_ADDR_ADDR_RESETVAL (0x00000000u)

/* LC2_DAT_PONG_ADDR */
/* Addr tokens */
#define CSL_CCP2_LC2_DAT_PONG_ADDR_ADDR_MASK (0xFFFFFF70u)
#define CSL_CCP2_LC2_DAT_PONG_ADDR_ADDR_SHIFT (0x00000005u)
#define CSL_CCP2_LC2_DAT_PONG_ADDR_ADDR_RESETVAL (0x00000000u)

 /* LC2_DAT_OFST */
/* Ofst Tokens */
#define CSL_CCP2_LC2_DAT_OFST_OFST_MASK (0xFFFFFF70u)
#define CSL_CCP2_LC2_DAT_OFST_OFST_SHIFT (0x00000005u)
#define CSL_CCP2_LC2_DAT_OFST_OFST_RESETVAL (0x00000000u)

/* LC3_CTRL */
/* Chan_En tokens */
#define CSL_CCP2_LC3_CTRL_CHAN_EN_MASK (0x00000001u)
#define CSL_CCP2_LC3_CTRL_CHAN_EN_SHIFT (0x00000000u)
#define CSL_CCP2_LC3_CTRL_CHAN_EN_RESETVAL (0x00000000u)

/* Region_En tokens */
#define CSL_CCP2_LC3_CTRL_REGION_EN_MASK (0x00000002u)
#define CSL_CCP2_LC3_CTRL_REGION_EN_SHIFT (0x00000001u)
#define CSL_CCP2_LC3_CTRL_REGION_EN_RESETVAL (0x00000000u)

/* Format tokens */
#define CSL_CCP2_LC3_CTRL_FORMAT_MASK (0x000000FCu)
#define CSL_CCP2_LC3_CTRL_FORMAT_SHIFT (0x00000002u)
#define CSL_CCP2_LC3_CTRL_FORMAT_RESETVAL (0x00000000u)

/* Mask tokens */
#define CSL_CCP2_LC3_CTRL_ALPHA_MASK (0x0000FF00u)
#define CSL_CCP2_LC3_CTRL_ALPHA_SHIFT (0x00000008u)
#define CSL_CCP2_LC3_CTRL_ALPHA_RESETVAL (0x00000000u)

/* Count_Unlock tokens */
#define CSL_CCP2_LC3_CTRL_COUNT_UNLOCK_MASK (0x00010000u)
#define CSL_CCP2_LC3_CTRL_COUNT_UNLOCK_SHIFT (0x00000010u)
#define CSL_CCP2_LC3_CTRL_COUNT_UNLOCK_RESETVAL (0x00000000u)

/* Ping Pomg tokens */
#define CSL_CCP2_LC3_CTRL_PING_PONG_MASK (0x00020000u)
#define CSL_CCP2_LC3_CTRL_PING_PONG_SHIFT (0x00000011u)
#define CSL_CCP2_LC3_CTRL_PING_PONG_RESETVAL (0x00000001u)

/* Dpcm pred tokens */
#define CSL_CCP2_LC3_CTRL_DPCM_PRED_MASK (0x00040000u)
#define CSL_CCP2_LC3_CTRL_DPCM_PRED_SHIFT (0x00000012u)
#define CSL_CCP2_LC3_CTRL_DPCM_PRED_RESETVAL (0x00000000u)

/* Crc En tokens */
#define CSL_CCP2_LC3_CTRL_CRC_EN_MASK (0x00080000u)
#define CSL_CCP2_LC3_CTRL_CRC_EN_SHIFT (0x00000013u)
#define CSL_CCP2_LC3_CTRL_CRC_EN_RESETVAL (0x00000000u)

/* Count tokens */
#define CSL_CCP2_LC3_CTRL_COUNT_MASK (0xFF000000u)
#define CSL_CCP2_LC3_CTRL_COUNT_SHIFT (0x00000018u)
#define CSL_CCP2_LC3_CTRL_COUNT_RESETVAL (0x00000000u)

/* LC3 Code */
/* Lsc tokens */
#define CSL_CCP2_LC3_CODE_LSC_MASK (0x0000000Fu)
#define CSL_CCP2_LC3_CODE_LSC_SHIFT (0x00000000u)
#define CSL_CCP2_LC3_CODE_LSC_RESETVAL (0x00000000u)

/* Lec tokens */
#define CSL_CCP2_LC3_CODE_LEC_MASK (0x000000F0u)
#define CSL_CCP2_LC3_CODE_LEC_SHIFT (0x00000004u)
#define CSL_CCP2_LC3_CODE_LEC_RESETVAL (0x10000000u)

/* Fec tokens */
#define CSL_CCP2_LC3_CODE_FEC_MASK (0x00000F00u)
#define CSL_CCP2_LC3_CODE_FEC_SHIFT (0x00000008u)
#define CSL_CCP2_LC3_CODE_FEC_RESETVAL (0x30000000u)

/* Fsc tokens */
#define CSL_CCP2_LC3_CODE_FSC_MASK (0x0000F000u)
#define CSL_CCP2_LC3_CODE_FSC_SHIFT (0x0000000Cu)
#define CSL_CCP2_LC3_CODE_FSC_RESETVAL (0x20000000u)

/* Chan Id tokens */
#define CSL_CCP2_LC3_CODE_CHAN_ID_MASK (0x000F0000u)
#define CSL_CCP2_LC3_CODE_CHAN_ID_SHIFT (0x00000010u)
#define CSL_CCP2_LC3_CODE_CHAN_ID_RESETVAL (0x30000000u)

/* LC3_ STAT_START */
/* sOF TOKENS */
#define CSL_CCP2_LC3_STAT_START_SOF_MASK (0x00000FFFu)
#define CSL_CCP2_LC3_STAT_START_SOF_SHIFT (0x00000000u)
#define CSL_CCP2_LC3_STAT_START_SOF_RESETVAL (0x00000000u)

/* Eof tokens */
#define CSL_CCP2_LC3_STAT_START_EOF_MASK (0x0FFF0000u)
#define CSL_CCP2_LC3_STAT_START_EOF_SHIFT (0x00000010u)
#define CSL_CCP2_LC3_STAT_START_EOF_RESETVAL (0x00000000u)

/* LC3_STAT_SIZE */
/* Sof tokens */
#define CSL_CCP2_LC3_STAT_SIZE_SOF_MASK (0x00000FFFu)
#define CSL_CCP2_LC3_STAT_SIZE_SOF_SHIFT (0x00000000u)
#define CSL_CCP2_LC3_STAT_SIZE_SOF_RESETVAL (0x00000000u)

/* Eof tokens */
#define CSL_CCP2_LC3_STAT_SIZE_EOF_MASK (0x0FFF0000u)
#define CSL_CCP2_LC3_STAT_SIZE_EOF_SHIFT (0x00000010u)
#define CSL_CCP2_LC3_STAT_SIZE_EOF_RESETVAL (0x00000000u)

/* LC3_SOF_ADDR */
/* Sof Add tokensr */
#define CSL_CCP2_LC3_SOF_ADDR_ADDR_MASK (0xFFFFFF70u)
#define CSL_CCP2_LC3_SOF_ADDR_ADDR_SHIFT (0x00000005u)
#define CSL_CCP2_LC3_SOF_ADDR_ADDR_RESETVAL (0x00000000u)

/* LC3_EOF_ADDR */
/* Eof addr tokens */
#define CSL_CCP2_LC3_EOF_ADDR_ADDR_MASK (0xFFFFFF70u)
#define CSL_CCP2_LC3_EOF_ADDR_ADDR_SHIFT (0x00000005u)
#define CSL_CCP2_LC3_EOF_ADDR_ADDR_RESETVAL (0x00000000u)

/* LC3_DAT_START */
/* Vert tokens */
#define CSL_CCP2_LC3_DAT_START_VERT_MASK (0x0FFF0000u)
#define CSL_CCP2_LC3_DAT_START_VERT_SHIFT (0x00000010u)
#define CSL_CCP2_LC3_DAT_START_VERT_RESETVAL (0x00000000u)

/* LC3_DAT_SIZE */
/* Vert tokens */
#define CSL_CCP2_LC3_DAT_SIZE_VERT_MASK (0x0FFF0000u)
#define CSL_CCP2_LC3_DAT_SIZE_VERT_SHIFT (0x00000010u)
#define CSL_CCP2_LC3_DAT_SIZE_VERT_RESETVAL (0x00000000u)

/* LC3_DAT_PING_ADDR */
/* addr tokens */
#define CSL_CCP2_LC3_DAT_PING_ADDR_ADDR_MASK (0xFFFFFF70u)
#define CSL_CCP2_LC3_DAT_PING_ADDR_ADDR_SHIFT (0x00000005u)
#define CSL_CCP2_LC3_DAT_PING_ADDR_ADDR_RESETVAL (0x00000000u)

/* LC3_DAT_PONG_ADDR */
/* Addr tokens */
#define CSL_CCP2_LC3_DAT_PONG_ADDR_ADDR_MASK (0xFFFFFF70u)
#define CSL_CCP2_LC3_DAT_PONG_ADDR_ADDR_SHIFT (0x00000005u)
#define CSL_CCP2_LC3_DAT_PONG_ADDR_ADDR_RESETVAL (0x00000000u)

 /* LC3_DAT_OFST */
/* Ofst Tokens */
#define CSL_CCP2_LC3_DAT_OFST_OFST_MASK (0xFFFFFF70u)
#define CSL_CCP2_LC3_DAT_OFST_OFST_SHIFT (0x00000005u)
#define CSL_CCP2_LC3_DAT_OFST_OFST_RESETVAL (0x00000000u)

/* LCM_CTRL */
/* Chan_en tokens */
#define CSL_CCP2_LCM_CTRL_CHAN_EN_MASK (0x00000001u)
#define CSL_CCP2_LCM_CTRL_CHAN_EN_SHIFT (0x00000000u)
#define CSL_CCP2_LCM_CTRL_CHAN_EN_RESETVAL (0x00000000u)

/* Dst_port tokens */
#define CSL_CCP2_LCM_CTRL_DST_PORT_MASK (0x00000004u)
#define CSL_CCP2_LCM_CTRL_DST_PORT_SHIFT (0x00000002u)
#define CSL_CCP2_LCM_CTRL_DST_PORT_RESETVAL (0x00000000u)

/* Read_throttle tokens */
#define CSL_CCP2_LCM_CTRL_READ_THROTTLE_MASK (0x00000018u)
#define CSL_CCP2_LCM_CTRL_READ_THROTTLE_SHIFT (0x00000003u)
#define CSL_CCP2_LCM_CTRL_READ_THROTTLE_RESETVAL (0x00000000u)

/* Burst size tokens */
#define CSL_CCP2_LCM_CTRL_BURST_SIZE_MASK (0x000000E0u)
#define CSL_CCP2_LCM_CTRL_BURST_SIZE_SHIFT (0x00000005u)
#define CSL_CCP2_LCM_CTRL_BURST_SIZE_RESETVAL (0x00000000u)

/* Src Format tokens */
#define CSL_CCP2_LCM_CTRL_SRC_FORMAT_MASK (0x00070000u)
#define CSL_CCP2_LCM_CTRL_SRC_FORMAT_SHIFT (0x00000010u)
#define CSL_CCP2_LCM_CTRL_SRC_FORMAT_RESETVAL (0x00000000u)

/* Src decompresser tokens */
#define CSL_CCP2_LCM_CTRL_SRC_DECOMPR_MASK (0x00300000u)
#define CSL_CCP2_LCM_CTRL_SRC_DECOMPR_SHIFT (0x00000014u)
#define CSL_CCP2_LCM_CTRL_SRC_DECOMPR_RESETVAL (0x00000000u)

/* Src Dpcm pred tokens */
#define CSL_CCP2_LCM_CTRL_SRC_DPCM_PRED_MASK (0x00400000u)
#define CSL_CCP2_LCM_CTRL_SRC_DPCM_PRED_SHIFT (0x00000016u)
#define CSL_CCP2_LCM_CTRL_SRC_DPCM_PRED_RESETVAL (0x00000000u)

/* Src pack tokens */
#define CSL_CCP2_LCM_CTRL_SRC_PACK_MASK (0x00800000u)
#define CSL_CCP2_LCM_CTRL_SRC_PACK_SHIFT (0x00000017u)
#define CSL_CCP2_LCM_CTRL_SRC_PACK_RESETVAL (0x00000000u)

/* Dst_ format tokens */
#define CSL_CCP2_LCM_CTRL_DST_FORMAT_MASK (0x07000000u)
#define CSL_CCP2_LCM_CTRL_DST_FORMAT_SHIFT (0x00000018u)
#define CSL_CCP2_LCM_CTRL_DST_FORMAT_RESETVAL (0x00000000u)

/* Dst Compressor tokens */
#define CSL_CCP2_LCM_CTRL_DST_COMPR_MASK (0x30000000u)
#define CSL_CCP2_LCM_CTRL_DST_COMPR_SHIFT (0x0000001Cu)
#define CSL_CCP2_LCM_CTRL_DST_COMPR_RESETVAL (0x00000000u)

/* Dst spcm pred tokens */
#define CSL_CCP2_LCM_CTRL_DST_DPCM_PRED_MASK (0x40000000u)
#define CSL_CCP2_LCM_CTRL_DST_DPCM_PRED_SHIFT (0x0000001Eu)
#define CSL_CCP2_LCM_CTRL_DST_DPCM_PRED_RESETVAL (0x00000000u)

/* Src pack tokens */
#define CSL_CCP2_LCM_CTRL_DST_PACK_MASK (0x80000000u)
#define CSL_CCP2_LCM_CTRL_DST_PACK_SHIFT (0x0000001Fu)
#define CSL_CCP2_LCM_CTRL_DST_PACK_RESETVAL (0x00000000u)

/* LCM_VSIZE */
/* Count tokens */
#define CSL_CCP2_LCM_VSIZE_COUNT_MASK (0x1FFF0000u)
#define CSL_CCP2_LCM_VSIZE_COUNT_SHIFT (0x00000010u)
#define CSL_CCP2_LCM_VSIZE_COUNT_RESETVAL (0x00010000u)

/* LCM_HSIZE */
/* Count tokens */
#define CSL_CCP2_LCM_HSIZE_COUNT_MASK (0x1FFF0000u)
#define CSL_CCP2_LCM_HSIZE_COUNT_SHIFT (0x00000010u)
#define CSL_CCP2_LCM_HSIZE_COUNT_RESETVAL (0x00010000u)

/* Skip tokens */
#define CSL_CCP2_LCM_HSIZE_SKIP_MASK (0x00001FFFu)
#define CSL_CCP2_LCM_HSIZE_SKIP_SHIFT (0x00000000u)
#define CSL_CCP2_LCM_HSIZE_SKIP_RESETVAL (0x00000000u)

/* LCM_PREFETCH */
/* Hwords tokens */
#define CSL_CCP2_LCM_PREFETCH_HWORDS_MASK (0x00007FF8u)
#define CSL_CCP2_LCM_PREFETCH_HWORDS_SHIFT (0x00000003u)
#define CSL_CCP2_LCM_PREFETCH_HWORDS_RESETVAL (0x00100000u)

/* LCM_SRC_ADDR */
/* addr tokens */
#define CSL_CCP2_LCM_SRC_ADDR_ADDR_MASK (0xFFFFFFE0u)
#define CSL_CCP2_LCM_SRC_ADDR_ADDR_SHIFT (0x00000005u)
#define CSL_CCP2_LCM_SRC_ADDR_ADDR_RESETVAL (0x00000000u)

/* LCM_SRC_OFST */
/* Ofst tokens */
#define CSL_CCP2_LCM_SRC_OFST_OFST_MASK (0xFFFFFFE0u)
#define CSL_CCP2_LCM_SRC_OFST_OFST_SHIFT (0x00000005u)
#define CSL_CCP2_LCM_SRC_OFST_OFST_RESETVAL (0x00000000u)

/* LCM_DST_ADDR */
/* Addr tokens */
#define CSL_CCP2_LCM_DST_ADDR_ADDR_MASK (0xFFFFFFE0u)
#define CSL_CCP2_LCM_DST_ADDR_ADDR_SHIFT (0x00000005u)
#define CSL_CCP2_LCM_DST_ADDR_ADDR_RESETVAL (0x00000000u)

/* LCM_DST_OFST */
/* Ofst tokens */
#define CSL_CCP2_LCM_DST_OFST_OFST_MASK (0xFFFFFFE0u)
#define CSL_CCP2_LCM_DST_OFST_OFST_SHIFT (0x00000005u)
#define CSL_CCP2_LCM_DST_OFST_OFST_RESETVAL (0x00000000u)

#ifdef __cplusplus
}
#endif /* __cplusplus */
#endif

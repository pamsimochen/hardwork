;
; ======== que_get.s62 ========
;
;

    .if $isdefed("__TI_ELFABI__")
    .if __TI_ELFABI__
        .asg QUE_get,          _QUE_get
        .asg QUE_put,          _QUE_put
    .endif
    .endif

        .global _QUE_get, _QUE_put

PREV    .set    4               ; prev

;
; ======== QUE_get ========
;
; Void *QUE_get(QUE_Handle queue):
;       a4 <- queue
;       a4 <- elem   (at return)
;

_QUE_get:
        .asmfunc
        b       l1                      ; prevent interrupts
||      ldw     *a4, a1                 ; elem = a1 = queue->next
        mv      a4, b1                  ; b1 = queue
        nop     3

        b       b3                      ; return
||      ldw     *a1, a2                 ; a2 = queue->next->next
||      mv      a1, a4                  ; return elem
l1:     nop     4
        stw     a2, *b1                 ; queue->next = elem->next
||      stw     b1, *+a2(PREV)          ; queue->next->prev = queue
        .endasmfunc


;
; ======== QUE_put ========
;
; Void QUE_put(QUE_Handle queue, Void *elem):
;       a4 <- queue
;       b4  <- elem
;

_QUE_put:
        .asmfunc
        b       b3                      ; return and prevent interrupts
||      ldw     *+a4(PREV), a3          ; a3 = queue->prev
        nop     3
        stw     a4, *b4                 ; elem->next = queue
||      stw     b4, *+a4(PREV)          ; queue->prev = elem
        stw     a3, *+b4(PREV)          ; elem->prev = queue->prev
||      stw     b4, *a3                 ; queue->prev->next = elem
        .endasmfunc

        .end


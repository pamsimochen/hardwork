
var CurrentPlatform = java.lang.System.getenv("PLATFORM");

xdc.print("# !!! Current build platform is [" + CurrentPlatform + "] !!!" );

xdc.loadPackage('ti.sysbios').profile = "release";
xdc.loadCapsule("mcfw/src_bios6/cfg/ti810x/BIOS_common.cfg");
xdc.loadCapsule("mcfw/src_bios6/cfg/ti810x/AMMU_m3.cfg");
xdc.loadCapsule("mcfw/src_bios6/cfg/ti810x/SYSLINK_m3vpss.cfg");
xdc.loadCapsule("mcfw/src_bios6/cfg/ti810x/SYSLINK_common.cfg");
xdc.loadCapsule("mcfw/src_bios6/cfg/ti810x/TILER.cfg");

/* use modules */
var Program     = xdc.useModule("xdc.cfg.Program");
var Core        = xdc.useModule("ti.sysbios.family.arm.ducati.Core");
var HwiM3       = xdc.useModule('ti.sysbios.family.arm.m3.Hwi');
var GateDualCore = xdc.useModule('ti.sysbios.family.arm.ducati.GateDualCore');

var Hwi         = xdc.useModule('ti.sysbios.hal.Hwi');
var Swi         = xdc.useModule('ti.sysbios.knl.Swi');
var fcMemUtils 	= xdc.useModule('ti.sdo.fc.memutils.MEMUTILS');
var MailBox     = xdc.useModule('ti.sysbios.knl.Mailbox');

/* enable print of exception handing info */
HwiM3.enableException = true;
HwiM3.excHookFunc = '&Utils_exceptionHookFxn';

var GateMutexPri = xdc.useModule('ti.sysbios.gates.GateMutexPri');
var params = new GateMutexPri.Params; 
Program.global.gOSALgate = GateMutexPri.create( params ); 


Core.id             = 1; /* HDVPSS M3 is core1 in Ducati subsystem  */

var Memory = xdc.useModule('xdc.runtime.Memory');
Memory.defaultHeapSize  = 0x1c0000;

{
    print("Configuring  iss_interrupt_hwi_1 for iss_common");
    var Program = xdc.useModule('xdc.cfg.Program'); 
    var Hwi = xdc.useModule('ti.sysbios.family.arm.m3.Hwi');
    
    var iss_hwi_param_1 = new Hwi.Params;
    iss_hwi_param_1.arg = 0;
    Hwi.create(33, '&iss_interrupt_hwi_1', iss_hwi_param_1);
    
    var iss_hwi_param_2 = new Hwi.Params;
    iss_hwi_param_2.arg = 0;
    Hwi.create(34, '&iss_interrupt_hwi_2', iss_hwi_param_2);
    
    var iss_hwi_param_3 = new Hwi.Params;
    iss_hwi_param_3.arg = 0;
    Hwi.create(35, '&iss_interrupt_hwi_3', iss_hwi_param_3);
    
    var iss_hwi_param_4 = new Hwi.Params;
    iss_hwi_param_4.arg = 0;
    Hwi.create(36, '&iss_interrupt_hwi_4', iss_hwi_param_4);
    
    var iss_hwi_param_5 = new Hwi.Params;
    iss_hwi_param_5.arg = 0;
    Hwi.create(37, '&iss_interrupt_hwi_5', iss_hwi_param_5);
    
    var fd_hwi_param_0 = new Hwi.Params;
    fd_hwi_param_0.arg = 0;
    Hwi.create(56, '&fd_isr_callback', fd_hwi_param_0);
      
    /*CSI2 Interrupts*/
    
    var swi_param= new Swi.Params;
    Program.global.csi2_context_irq_swi_handle=Swi.create('&csi2_context_irq_swi_interrupt_handler', swi_param); 
    var swi_param2 = new Swi.Params;
    Program.global.simcop_swi_handle = Swi.create('&simcop_swi_interrupt_handler', swi_param2);
    var swi_param3 = new Swi.Params;
    Program.global.isp_swi_handle = Swi.create('&isp_swi_interrupt_handler', swi_param3);
}

Program.sectMap[".bss:extMemNonCache:capture"] = "HDVPSS_DESC_MEM";
Program.sectMap[".bss:extMemNonCache:grpx"]    = "HDVPSS_DESC_MEM";
Program.sectMap[".bss:extMemNonCache:m2m"]     = "HDVPSS_DESC_MEM";
Program.sectMap[".bss:extMemNonCache:display"] = "HDVPSS_DESC_MEM";
Program.sectMap[".bss:extMemNonCache:heap"]    = "HDVPSS_DESC_MEM";

/*this is the memory reserve for notify and it shold not be loadable memory*/
Program.sectMap[".vpss:extMemNonCache:notify"]  = new Program.SectionSpec();
Program.sectMap[".vpss:extMemNonCache:notify"].loadSegment = "HOST_VPSS_NOTIFYMEM";
Program.sectMap[".vpss:extMemNonCache:notify"].type = "NOLOAD";

/* Program.sectMap[".vpss:extMemNonCache:notify"]            = "HOST_VPSS_NOTIFYMEM"; */
Program.sectMap[".bss:extMemNonCache:remoteDebugCoreShm"] = "REMOTE_DEBUG_MEM";

/* Program.sectMap[".bss:tilerBuffer"]           = "TILER_MEM"; */

Program.sectMap[".text"]                      = "DSS_M3_CODE_MEM";
Program.sectMap[".const"]                     = "DSS_M3_CODE_MEM";
Program.sectMap[".plt"]                       = "DSS_M3_CODE_MEM";
Program.sectMap[".bss:exceptionContextNonCached"]   = "VPSS_M3_EXCEPTION_CTX";

